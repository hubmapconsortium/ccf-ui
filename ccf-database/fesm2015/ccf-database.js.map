{"version":3,"file":"ccf-database.js","sources":["../../../projects/ccf-database/src/lib/util/n3-functions.ts","../../../projects/ccf-database/src/lib/util/prefixes.ts","../../../projects/ccf-database/src/lib/queries/spatial-result-n3.ts","../../../projects/ccf-database/src/lib/ccf-spatial-graph.ts","../../../projects/ccf-database/src/lib/ccf-spatial-scene.ts","../../../projects/ccf-database/src/lib/hubmap/hubmap-data.ts","../../../projects/ccf-database/src/lib/hubmap/hubmap-data-import.ts","../../../projects/ccf-database/src/lib/queries/aggregate-results-n3.ts","../../../projects/ccf-database/src/lib/queries/spatial-search-n3.ts","../../../projects/ccf-database/src/lib/queries/find-ids-n3.ts","../../../projects/ccf-database/src/lib/queries/ontology-term-occurences-n3.ts","../../../projects/ccf-database/src/lib/queries/ontology-tree-n3.ts","../../../projects/ccf-database/src/lib/queries/tissue-block-result-n3.ts","../../../projects/ccf-database/src/lib/util/ccf-database-status-tracker.ts","../../../projects/ccf-database/src/lib/util/patch-jsonld.ts","../../../projects/ccf-database/src/lib/util/enrich-rui-locations.ts","../../../projects/ccf-database/src/lib/ccf-database.ts","../../../projects/ccf-database/src/lib/util/probing-sphere-scene.ts","../../../projects/ccf-database/src/lib/util/origin-scene.ts","../../../projects/ccf-database/src/public-api.ts","../../../projects/ccf-database/src/ccf-database.ts"],"sourcesContent":["import { fromRdf } from 'rdf-literal';\nimport { Store, readQuads } from 'triple-store-utils';\n\n\n/**\n * Iterates over the key/value pairs for an IRI, using the specified mapping with quads from the store.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @param mapping Property mappings.\n * @returns an iterator over the key/value pairs\n */\nexport function* getEntries(store: Store, iri: string, mapping: { [iri: string]: string }): Generator<[ string, string|number ]> {\n  for (const [predicate, key] of Object.entries(mapping)) {\n    for (const quad of readQuads(store, iri, predicate, null, null)) {\n      const value = quad.object.termType === 'Literal' ? fromRdf(quad.object) : quad.object.id;\n      yield [key, value];\n    }\n  }\n}\n\n/**\n * Creates an object of the specified type using quads from the store.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @param type Type name.\n * @param mapping Property mappings.\n * @returns A new data object.\n */\nexport function getMappedResult<T = unknown>(store: Store, iri: string, type: string, mapping: { [iri: string]: string }): T {\n  const result = { '@id': iri, '@type': type };\n  for (const [predicate, key] of Object.entries(mapping)) {\n    for (const quad of readQuads(store, result['@id'], predicate, null, null)) {\n      const value = quad.object.termType === 'Literal' ? fromRdf(quad.object) : quad.object.id;\n      result[key] = value;\n    }\n  }\n  return result as unknown as T;\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { DataFactory, Util } from 'triple-store-utils';\n\n/** Constants used to create entity accessors. */\nexport const PREFIXES = {\n  base: 'http://purl.org/ccf/latest/ccf.owl#',\n  ccf: 'http://purl.org/ccf/',\n  fma: 'http://purl.org/sig/ont/fma/fma',\n  obo: 'http://purl.obolibrary.org/obo/',\n  uberon: 'http://purl.obolibrary.org/obo/UBERON_',\n  cl: 'http://purl.obolibrary.org/obo/CL_',\n  lmha: 'http://purl.obolibrary.org/obo/LMHA_',\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n  dc: 'http://purl.org/dc/elements/1.1/',\n  dcterms: 'http://purl.org/dc/terms/'\n};\n\n/** Prefix factory. */\nexport const prefixer = Util.prefixes(PREFIXES, DataFactory);\n\nexport const rdf = {\n  x: prefixer('rdf'),\n  type: prefixer('rdf')('type')\n};\n\nexport const rdfs = {\n  x: prefixer('rdfs'),\n  label: prefixer('rdfs')('label'),\n  comment: prefixer('rdfs')('comment'),\n  isDefinedBy: prefixer('rdfs')('isDefinedBy'),\n  seeAlso: prefixer('rdfs')('seeAlso')\n};\n\n/** CCF id helper. */\nconst ccfx = prefixer('ccf');\n\n/** Common entity ids. */\nexport const entity = {\n  id: prefixer('ccf')('has_registration_location'),\n  label: prefixer('rdfs')('label'),\n  description: prefixer('rdfs')('comment'),\n  link: ccfx('url'),\n\n  sex: ccfx('sex'),\n  age: ccfx('age'),\n  bmi: ccfx('bmi'),\n\n  Male: DataFactory.literal('Male'),\n  Female: DataFactory.literal('Female'),\n\n  consortiumName: ccfx('consortium_name'),\n  providerName: ccfx('tissue_provider_name'),\n  providerUUID: ccfx('tissue_provider_uuid'),\n\n  donor: ccfx('comes_from'),\n\n  sections: ccfx('subdivided_into_sections'),\n  datasets: ccfx('generates_dataset'),\n\n  sampleType: ccfx('sample_type'),\n\n  TissueBlock: DataFactory.literal('Tissue Block'),\n  TissueSection: DataFactory.literal('Tissue Section'),\n  NonStandard: DataFactory.literal('Non-standard'),\n\n  sectionCount: ccfx('section_count'),\n  sectionSize: ccfx('section_size'),\n  sectionUnits: ccfx('section_size_unit'),\n  sectionNumber: ccfx('section_number'),\n\n  spatialEntity: ccfx('has_registration_location'),\n  ontologyTerms: ccfx('has_ontology_term'),\n  cellTypeTerms: ccfx('has_cell_type_term'),\n\n  technology: ccfx('technology'),\n  thumbnail: ccfx('thumbnail')\n};\n\n/** CCF specific ids. */\nexport const ccf = {\n  x: ccfx,\n  base: prefixer('base'),\n  ontologyNode: {\n    label: ccfx('ccf_pref_label'),\n    parent: ccfx('ccf_part_of'),\n    children: ccfx('ccf_part_of'),\n    rui_rank: ccfx('rui_rank'),\n    synonymLabels: DataFactory.namedNode('http://www.geneontology.org/formats/oboInOwl#hasExactSynonym')\n  },\n  asctb: {\n    part_of: ccfx('ccf_part_of'),\n    ct_is_a: ccfx('ccf_ct_isa'),\n    located_in: ccfx('ccf_located_in'),\n    characterizes: ccfx('ccf_characterizes')\n  },\n  spatial: {\n    Female: prefixer('base')('VHFemale'),\n    Male: prefixer('base')('VHMale'),\n    BothSexes: prefixer('base')('VHBothSexes'),\n    FemaleOrgans: prefixer('base')('VHFemaleOrgans'),\n    MaleOrgans: prefixer('base')('VHMaleOrgans')\n  },\n  SpatialObjectReference: ccfx('spatial_object_reference'),\n  SpatialEntity: ccfx('spatial_entity'),\n  SpatialPlacement: ccfx('spatial_placement'),\n  spatialObjectReference: {\n    file: ccfx('file_url'),\n    file_format: ccfx('file_format'),\n    file_subpath: ccfx('file_subpath')\n  },\n  extractionSet: {\n    label: prefixer('rdfs')('label'),\n    rui_rank: ccfx('rui_rank')\n  },\n  spatialEntity: {\n    label: prefixer('rdfs')('label'),\n    description: prefixer('rdfs')('comment'),\n    creator: prefixer('dcterms')('creator'),\n    creator_first_name: ccfx('creator_first_name'),\n    creator_last_name: ccfx('creator_last_name'),\n    creator_orcid: ccfx('creator_orcid'),\n    creation_date: prefixer('dcterms')('created'),\n    updated_date: ccfx('updated_date'),\n    ccf_annotations: ccfx('collides_with'),\n    representation_of: ccfx('representation_of'),\n    reference_organ: ccfx('has_reference_organ'),\n    extraction_set_for: ccfx('extraction_set_for'),\n    extraction_set: ccfx('has_extraction_set'),\n    sex: ccfx('organ_owner_sex'),\n    side: ccfx('organ_side'),\n    rui_rank: ccfx('rui_rank'),\n    slice_thickness: ccfx('slice_thickness'),\n    slice_count: ccfx('slice_count'),\n    x_dimension: ccfx('x_dimension'),\n    y_dimension: ccfx('y_dimension'),\n    z_dimension: ccfx('z_dimension'),\n    dimension_units: ccfx('dimension_unit'),\n    object: ccfx('has_object_reference')\n  },\n  spatialPlacement: {\n    source: ccfx('placement_for'),\n    target: ccfx('placement_relative_to'),\n\n    placement_date: prefixer('dcterms')('created'),\n    x_scaling: ccfx('x_scaling'),\n    y_scaling: ccfx('y_scaling'),\n    z_scaling: ccfx('z_scaling'),\n    scaling_units: ccfx('scaling_unit'),\n\n    x_rotation: ccfx('x_rotation'),\n    y_rotation: ccfx('y_rotation'),\n    z_rotation: ccfx('z_rotation'),\n    w_rotation: ccfx('theta_rotation'),\n    rotation_order: ccfx('rotation_order'),\n    rotation_units: ccfx('rotation_unit'),\n\n    x_translation: ccfx('x_translation'),\n    y_translation: ccfx('y_translation'),\n    z_translation: ccfx('z_translation'),\n    translation_units: ccfx('translation_unit')\n  }\n};\n\n/** Uberon specific ids. */\nexport const uberon = {\n  x: prefixer('uberon'),\n  body: prefixer('uberon')('0013702')\n};\n\n/** CL specific ids. */\nexport const cl = {\n  x: prefixer('cl'),\n  cell: prefixer('cl')('0000000')\n};\n\n/** FMA specific ids. */\nexport const fma = {\n  x: prefixer('fma')\n};\n\n/** LMHA specific ids. */\nexport const lmha = {\n  x: prefixer('lmha')\n};\n\n/** RUI accessors. */\nexport const rui = {\n  body: uberon.body,\n  cell: cl.cell,\n  respiratory_system: uberon.x('0001004'),\n  colon: uberon.x('0001155'),\n  left_lung: uberon.x('0002168'),\n  right_lung: uberon.x('0002167'),\n  left_bronchus: uberon.x('0002178'),\n  right_bronchus: uberon.x('0002177'),\n  kidney: uberon.x('0002113'),\n  ureter: uberon.x('0000056'),\n  eye: uberon.x('0000970'),\n  fallopian_tube: uberon.x('0003889'),\n  knee: uberon.x('0001465'),\n  ovary: uberon.x('0000992'),\n  trachea: uberon.x('0003126'),\n  aorta: uberon.x('0000947'),\n  blood: uberon.x('0000178'),\n  bone_marrow: uberon.x('0002371'),\n  male_reproductive_system: uberon.x('0000079'),\n  lymph_node: uberon.x('0000029'),\n\n  // Derived using console.log(ALL_POSSIBLE_ORGANS.map(o => `  ${o.name.toLowerCase().replace(',', '').replace(/ /g, '_')}: ${o.id.split('/').slice(-1)[0].split('_')[0].toLowerCase()}.x('${o.id.split('_').slice(-1)[0]}'),`).join('\\n'));\n  blood_vasculature: uberon.x('0004537'),\n  brain: uberon.x('0000955'),\n  eye_left: uberon.x('0004548'),\n  eye_right: fma.x('54449'),\n  fallopian_tube_left: uberon.x('0001303'),\n  fallopian_tube_right: uberon.x('0001302'),\n  heart: uberon.x('0000948'),\n  kidney_left: uberon.x('0004538'),\n  kidney_right: uberon.x('0004539'),\n  knee_left: fma.x('24978'),\n  knee_right: fma.x('24977'),\n  large_intestine: uberon.x('0000059'),\n  liver: uberon.x('0002107'),\n  lungs: uberon.x('0002048'),\n  mesenteric_lymph_node: uberon.x('0002509'),\n  ovary_left: fma.x('7214'),\n  ovary_right: fma.x('7213'),\n  pancreas: uberon.x('0001264'),\n  pelvis: uberon.x('0001270'),\n  prostate_gland: uberon.x('0002367'),\n  skin: uberon.x('0002097'),\n  small_intestine: uberon.x('0002108'),\n  spleen: uberon.x('0002106'),\n  thymus: uberon.x('0002370'),\n  ureter_left: uberon.x('0001223'),\n  ureter_right: uberon.x('0001222'),\n  urinary_bladder: uberon.x('0001255'),\n  uterus: uberon.x('0000995')\n};\n","import { sortBy } from 'lodash';\nimport { DataFactory, NamedNode, Store } from 'triple-store-utils';\n\nimport { SpatialEntity, SpatialObjectReference, SpatialPlacement, ExtractionSet } from '../spatial-types';\nimport { getMappedResult } from '../util/n3-functions';\nimport { ccf, entity } from '../util/prefixes';\n\n\n/**\n * Reverses the keys and values in a mapping.\n *\n * @param mapping The mapping to reverse.\n * @returns The reversed mapping.\n */\nfunction reverseMapping(mapping: { [property: string]: NamedNode }): { [iri: string]: string } {\n  const newMapping: { [iri: string]: string } = {};\n  Object.entries(mapping).forEach(([prop, predicate]) => {\n    newMapping[predicate.id] = prop;\n  });\n  return newMapping;\n}\n\n/** A mapping of spatial objects. */\nconst mappings = {\n  spatialObjectReference: reverseMapping(ccf.spatialObjectReference),\n  spatialEntity: reverseMapping(ccf.spatialEntity),\n  spatialPlacement: reverseMapping(ccf.spatialPlacement)\n};\n\n/**\n * Creates a spatial object reference.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new reference.\n */\nexport function getSpatialObjectReference(store: Store, iri: string): SpatialObjectReference {\n  return getMappedResult<SpatialObjectReference>(store, iri, 'SpatialObjectReference', mappings.spatialObjectReference);\n}\n\n/**\n * Creates an extraction set data object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new entity.\n */\nexport function getExtractionSet(store: Store, iri: string): ExtractionSet {\n  const result = getMappedResult<ExtractionSet>(store, iri, 'ExtractionSet', mappings.spatialEntity);\n  result.extractionSites = sortBy(\n    store.getSubjects(ccf.spatialEntity.extraction_set, iri, null)\n      .map((value) => getSpatialEntity(store, value.id)),\n    ['rui_rank']);\n  return result;\n}\n\n/**\n * Gets extraction sets associated with a reference organ\n *\n * @param store The triple store.\n * @param iri The data identifier (the reference organ).\n * @returns A set of extraction sets associated with the reference organ\n */\nexport function getExtractionSets(store: Store, iri: string): ExtractionSet[] {\n  return sortBy(\n    store.getSubjects(ccf.spatialEntity.extraction_set_for, iri, null)\n      .map((value) => getExtractionSet(store, value.id)),\n    ['rui_rank']\n  );\n}\n\n\n/**\n * Gets the anatomical structures associated with a reference organ.\n *\n * @param store The triple store.\n * @param iri The data identifier (reference organ).\n * @returns The new entity.\n */\nexport function getAnatomicalStructures(store: Store, iri: string): SpatialEntity[] {\n  return sortBy(\n    store.getSubjects(ccf.spatialEntity.reference_organ, iri, null)\n      .map((value) => getSpatialEntity(store, value.id))\n      .filter((e) => e['@id'] !== iri),\n    ['rui_rank']\n  );\n}\n\n/**\n * Gets all reference organs in the triple store\n *\n * @param store The triple store.\n * @returns All the reference organs.\n */\nexport function getReferenceOrgans(store: Store): SpatialEntity[] {\n  const results: SpatialEntity[] = [];\n  store.forEach((quad) => {\n    if (quad.subject.id === quad.object.id) {\n      results.push(getSpatialEntity(store, quad.subject.id));\n    }\n  }, null, ccf.spatialEntity.reference_organ, null, null);\n  return sortBy(results, ['rui_rank']);\n}\n\n/**\n * Creates a spatial entity data object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns The new entity.\n */\nexport function getSpatialEntity(store: Store, iri: string): SpatialEntity {\n  const result = getMappedResult<SpatialEntity>(store, iri, 'SpatialEntity', mappings.spatialEntity);\n  // Default mapping will come back as an IRI which we can look up for the full object\n  if (result.object) {\n    result.object = getSpatialObjectReference(store, (result.object as unknown) as string);\n  }\n  if (result.ccf_annotations) {\n    result.ccf_annotations = store.getObjects(iri, ccf.spatialEntity.ccf_annotations, null).map(o => o.id);\n  }\n  store.forSubjects((subject) => (result.entityId = subject.id), entity.spatialEntity, iri, null);\n  return result;\n}\n\n/**\n * Creates a spatial placement object.\n *\n * @param store The triple store.\n * @param iri The data identifier.\n * @returns THe new placement object.\n */\nexport function getSpatialPlacement(store: Store, iri: string): SpatialPlacement {\n  const result = getMappedResult<SpatialPlacement>(store, iri, 'SpatialPlacement', mappings.spatialPlacement);\n  // Default mapping will come back as an IRI for source/target which we can look up for the full object\n  if (result.source) {\n    result.source = getSpatialEntity(store, (result.source as unknown) as string);\n  }\n  if (result.target) {\n    result.target = getSpatialEntity(store, (result.target as unknown) as string);\n  }\n  return result;\n}\n\n/**\n * Creates a spatial entity based on another entity in the store.\n *\n * @param store The triple store.\n * @param entityIRI The indentifier of the store entity.\n * @returns A new entity.\n */\nexport function getSpatialEntityForEntity(store: Store, entityIRI: string): SpatialEntity | undefined {\n  const spatialEntityNodes = store.getObjects(DataFactory.namedNode(entityIRI), entity.spatialEntity, null);\n  if (spatialEntityNodes.length > 0) {\n    return getSpatialEntity(store, spatialEntityNodes[0].id);\n  } else {\n    return undefined;\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { Euler, Matrix4, toDegrees, toRadians } from '@math.gl/core';\nimport { DirectedGraph } from 'graphology';\nimport shortestPath from 'graphology-shortest-path/unweighted';\nimport { get } from 'lodash';\nimport { readQuads } from 'triple-store-utils';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { CCFDatabase } from './ccf-database';\nimport { getSpatialPlacement } from './queries/spatial-result-n3';\nimport { FlatSpatialPlacement, SpatialEntity, SpatialPlacement } from './spatial-types';\nimport { ccf, rdf } from './util/prefixes';\n\n\nexport function applySpatialPlacement(tx: Matrix4, placement: SpatialPlacement): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map<number>(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport class CCFSpatialGraph {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  graph: any;\n\n  constructor(private db: CCFDatabase) {\n    this.createGraph();\n  }\n\n  createGraph(): void {\n    this.graph = new DirectedGraph();\n    const store = this.db.store;\n\n    // Add all Spatial Object References\n    store.forSubjects((subject) => {\n      this.addNode(subject.id, 'SpatialObjectReference');\n    }, rdf.type, ccf.SpatialObjectReference, null);\n\n    // Add all Spatial Entities\n    store.forSubjects((subject) => {\n      this.addNode(subject.id, 'SpatialEntity');\n    }, rdf.type, ccf.SpatialEntity, null);\n\n    // Add all Spatial Placements\n    const edgeSource: Record<string, string> = {};\n    for (const quad of readQuads(store, null, ccf.spatialPlacement.source, null, null)) {\n      edgeSource[quad.subject.id] = quad.object.id;\n    }\n    for (const quad of readQuads(store, null, ccf.spatialPlacement.target, null, null)) {\n      const source = edgeSource[quad.subject.id];\n      if (source) {\n        this.addEdge(quad.subject.id, source, quad.object.id, 'SpatialPlacement');\n      }\n    }\n  }\n\n  addNode(id: string, type: string): void {\n    this.graph.mergeNode(id, { type });\n  }\n\n  addEdge(id: string, source: string, target: string, type: string): void {\n    this.graph.mergeDirectedEdge(source, target, { type, id });\n  }\n\n  getTransformationMatrix(sourceIRI: string, targetIRI: string): Matrix4 | undefined {\n    if (sourceIRI === targetIRI) {\n      return new Matrix4(Matrix4.IDENTITY); // identity\n    }\n    if (!this.graph.hasNode(sourceIRI) || !this.graph.hasNode(targetIRI)) {\n      return undefined;\n    }\n\n    const store = this.db.store;\n    const tx = new Matrix4(Matrix4.IDENTITY);\n    const path = shortestPath(this.graph, sourceIRI, targetIRI);\n    if (path && path.length > 0) {\n      path.reverse();\n      let target: string | number = '';\n      for (const source of path) {\n        if (target) {\n          const placementId = this.graph.getEdgeAttribute(source, target, 'id');\n          const placement = getSpatialPlacement(store, placementId);\n          applySpatialPlacement(tx, placement);\n        }\n        target = source;\n      }\n      return tx;\n    } else {\n      return undefined;\n    }\n  }\n\n  getSpatialPlacement(source: SpatialEntity, targetIri: string): FlatSpatialPlacement | undefined {\n    const sourceIri = this.graph.hasNode(source['@id']) ? source['@id'] : undefined;\n    const placement: SpatialPlacement = get(source, 'placement[0]', get(source, 'placement', undefined));\n\n    let matrix: Matrix4 | undefined;\n    if (placement && this.graph.hasNode(placement.target)) {\n      matrix = this.getTransformationMatrix(placement.target as unknown as string, targetIri);\n      if (matrix) {\n        matrix = applySpatialPlacement(matrix, placement);\n      }\n    } else if (sourceIri) {\n      matrix = this.getTransformationMatrix(sourceIri, targetIri);\n    }\n\n    if (matrix) {\n      const euler = new Euler().fromRotationMatrix(matrix, Euler.XYZ);\n      const T = matrix.getTranslation().map(n => n * 1000) as [number, number, number];\n      const R = euler.toVector3().map<number>(toDegrees) as [number, number, number];\n      const S = matrix.getScale().map(n => n < 1 && n > 0.999999 ? 1 : n) as [number, number, number];\n\n      return {\n        '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${uuidV4()}_placement`,\n        '@type': 'SpatialPlacement',\n        source: source['@id'],\n        target: targetIri,\n        placement_date: new Date().toISOString().split('T')[0],\n        x_scaling: S[0],\n        y_scaling: S[1],\n        z_scaling: S[2],\n        scaling_units: 'ratio',\n        x_rotation: R[0],\n        y_rotation: R[1],\n        z_rotation: R[2],\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n        x_translation: T[0],\n        y_translation: T[1],\n        z_translation: T[2],\n        translation_units: 'millimeter'\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { Matrix4, toRadians } from '@math.gl/core';\n\nimport { CCFDatabase } from './ccf-database';\nimport { Filter } from './interfaces';\nimport {\n  getAnatomicalStructures, getExtractionSet, getExtractionSets, getReferenceOrgans, getSpatialEntity,\n} from './queries/spatial-result-n3';\nimport { ExtractionSet, SpatialEntity } from './spatial-types';\nimport { ccf } from './util/prefixes';\n\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  ccf_annotations?: string[];\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\nexport class CCFSpatialScene {\n\n  constructor(private db: CCFDatabase) {}\n\n  getSpatialEntity(iri: string): SpatialEntity {\n    return getSpatialEntity(this.db.store, iri);\n  }\n  getExtractionSets(iri: string): ExtractionSet[] {\n    return getExtractionSets(this.db.store, iri);\n  }\n  getExtractionSet(iri: string): ExtractionSet {\n    return getExtractionSet(this.db.store, iri);\n  }\n  getAnatomicalStructures(iri: string): SpatialEntity[] {\n    return getAnatomicalStructures(this.db.store, iri);\n  }\n  getReferenceOrgans(): SpatialEntity[] {\n    return getReferenceOrgans(this.db.store);\n  }\n\n  getReferenceBody(filter?: Filter): SpatialEntity {\n    let bodyId: string;\n    switch (filter?.sex) {\n      case 'Male':\n        bodyId = ccf.spatial.Male.id;\n        break;\n      case 'Female':\n        bodyId = ccf.spatial.Female.id;\n        break;\n      case 'Both':\n      default:\n        bodyId = ccf.spatial.BothSexes.id;\n        break;\n    }\n    return this.getSpatialEntity(bodyId);\n  }\n\n  getReferenceOrganSets(filter?: Filter): SpatialEntity[] {\n    let organSet = this.getReferenceOrgans();\n    switch (filter?.sex) {\n      case 'Male':\n        organSet = organSet.filter(s => s.sex === 'Male');\n        break;\n      case 'Female':\n        organSet = organSet.filter(s => s.sex === 'Female');\n        break;\n      case 'Both':\n      default:\n        break;\n    }\n    if (filter?.debug) {\n      organSet = organSet.map(o => [ [o], this.getAnatomicalStructures(o['@id'])])\n        .reduce<SpatialEntity[]>((acc, [organ, structures]) => acc.concat(structures.length > 0 ? structures : organ), []);\n    }\n    return organSet;\n  }\n\n  getReferenceSceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    const skinNodes: SpatialSceneNode[] = [];\n    let nodes: (SpatialSceneNode | undefined)[] = [\n      ...this.getReferenceOrganSets(filter).map((organ) => {\n        const isSkin = organ.representation_of === 'http://purl.obolibrary.org/obo/UBERON_0002097';\n        const sceneNode = this.getSceneNode(organ, body, {\n          color: [255, 255, 255, 255], opacity: isSkin ? 0.5 : 0.2, unpickable: true, _lighting: 'pbr', zoomBasedOpacity: !isSkin\n        });\n        if (isSkin && sceneNode) {\n          skinNodes.push(sceneNode);\n          return undefined;\n        } else {\n          return sceneNode;\n        }\n      })\n    ];\n    if (skinNodes.length > 0) {\n      nodes = [...skinNodes, ...nodes];\n    }\n\n    if (filter?.debug) {\n      // Debug bounding boxes\n      nodes = nodes.concat([\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHRightKidney').id), body, { color: [0, 0, 255, 0.5*255], geometry: 'wireframe' }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHLeftKidney').id), body, { color: [255, 0, 0, 0.5*255], geometry: 'wireframe' }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC1').id), body, { color: [0, 255, 0, 0.5*255], geometry: 'wireframe' }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC2').id), body, { color: [0, 255, 0, 0.5*255], geometry: 'wireframe' }),\n        this.getSceneNode(this.getSpatialEntity(ccf.base('VHSpleenCC3').id), body, { color: [0, 255, 0, 0.5*255], geometry: 'wireframe' })\n      ]);\n    }\n\n    return nodes.filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): SpatialSceneNode[] {\n    const hasSexFilter = filter?.sex !== undefined && filter?.sex?.toLowerCase() !== 'both';\n    const organs = this.getReferenceOrgans().filter((o) => o.representation_of === organIri && (!hasSexFilter || o.sex === filter?.sex));\n    if (organs.length > 0) {\n      const organ = organs[0];\n      const isSkin = organ.representation_of === 'http://purl.obolibrary.org/obo/UBERON_0002097';\n      const organNode = this.getSceneNode(organ, organ, {\n        color: [255, 255, 255, 255], opacity: isSkin ? 0.5 : 0.2, unpickable: true, _lighting: 'pbr'\n      }) as SpatialSceneNode;\n\n      const scene = (this.db.getSpatialEntities(filter) ?? []).map((entity) =>\n        this.getSceneNode(entity, organ, { color: [255, 255, 255, 0.9*255] })\n      ) as SpatialSceneNode[];\n      return [organNode].concat(scene).filter(n => n !== undefined);\n    } else {\n      return [];\n    }\n  }\n\n  getEntitySceneNodes(filter?: Filter): SpatialSceneNode[] {\n    const body = this.getReferenceBody(filter);\n    return this.db.getSpatialEntities(filter).map((entity) =>\n      this.getSceneNode(entity, body, { color: [255, 255, 255, 0.9*255] })\n    ).filter(s => s !== undefined) as SpatialSceneNode[];\n  }\n\n  getSceneNode(source: SpatialEntity, target: SpatialEntity, nodeAttrs: Partial<SpatialSceneNode> = {}): SpatialSceneNode | undefined {\n    const has3dObject = source?.object?.file_format?.startsWith('model/gltf');\n    const sourceID = has3dObject && source.object ? source.object['@id'] : source['@id'];\n    let transform = this.db.graph.getTransformationMatrix(sourceID, target['@id']);\n    if (transform) {\n      if (has3dObject) {\n        transform = new Matrix4(Matrix4.IDENTITY).rotateX(toRadians(90)).multiplyLeft(transform);\n      } else {\n        // Scale visible bounding boxes to the desired dimensions\n        let factor: number;\n        switch (source.dimension_units) {\n          case 'centimeter':\n            factor = 1 / 100;\n            break;\n          case 'millimeter':\n            factor = 1 / 1000;\n            break;\n          case 'meter':\n          default:\n            factor = 1;\n            break;\n        }\n        const scale = [source.x_dimension, source.y_dimension, source.z_dimension].map(dim => dim * factor / 2);\n        transform.scale(scale);\n      }\n      return {\n        '@id': source['@id'], '@type': 'SpatialSceneNode',\n        entityId: source.entityId,\n        ccf_annotations: source.ccf_annotations,\n        representation_of: source.representation_of,\n        reference_organ: source.reference_organ,\n        scenegraph: has3dObject ? source.object?.file : undefined,\n        scenegraphNode: has3dObject ? source.object?.file_subpath : undefined,\n        transformMatrix: transform,\n        tooltip: source.label,\n        ...nodeAttrs\n      };\n    } else {\n      return undefined;\n    }\n  }\n\n  getScene(filter?: Filter): SpatialSceneNode[] {\n    return [\n      ...this.getReferenceSceneNodes(filter),\n      ...this.getEntitySceneNodes(filter)\n    ];\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { JsonLd, JsonLdObj } from 'jsonld/jsonld-spec';\nimport { get, omit, set, toNumber } from 'lodash';\n\n\ntype JsonDict = Record<string, unknown>;\nconst HBM_PREFIX = 'https://entity.api.hubmapconsortium.org/entities/';\n\n// eslint-disable-next-line max-len\nexport const DR1_VU_THUMBS = new Set(['VAN0003-LK-32-21-AF_preIMS_registered_thumbnail.jpg', 'VAN0003-LK-32-21-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0003-LK-32-21-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0003-LK-32-21-PAS_registered_thumbnail.jpg', 'VAN0003-LK-32-22-AF_preMxIF_registered_thumbnail.jpg', 'VAN0003-LK-32-22-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0003-LK-32-22-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0003-LK-32-22-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0005-RK-1-1-AF_preIMS_registered_thumbnail.jpg', 'VAN0005-RK-1-1-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0005-RK-1-1-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0005-RK-1-1-PAS_registered_thumbnail.jpg', 'VAN0005-RK-4-172-AF_preIMS_registered_thumbnail.jpg', 'VAN0005-RK-4-172-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0005-RK-4-172-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0005-RK-4-172-PAS_registered_thumbnail.jpg', 'VAN0006-LK-2-85-AF_preIMS_registered_thumbnail.jpg', 'VAN0006-LK-2-85-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0006-LK-2-85-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0006-LK-2-85-PAS_registered_thumbnail.jpg', 'VAN0006-LK-2-86-AF_preMxIF_registered_thumbnail.jpg', 'VAN0006-LK-2-86-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0006-LK-2-86-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0006-LK-2-86-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0007-LK-203-103-AF_preIMS_registered_thumbnail.jpg', 'VAN0007-LK-203-103-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0007-LK-203-103-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0007-LK-203-103-PAS_registered_thumbnail.jpg', 'VAN0008-RK-403-100-AF_preIMS_registered_thumbnail.jpg', 'VAN0008-RK-403-100-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0008-RK-403-100-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0008-RK-403-100-PAS_registered_thumbnail.jpg', 'VAN0008-RK-403-101-AF_preMxIF_registered_thumbnail.jpg', 'VAN0008-RK-403-101-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0008-RK-403-101-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0008-RK-403-101-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0009-LK-102-7-AF_preIMS_registered_thumbnail.jpg', 'VAN0009-LK-102-7-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0009-LK-102-7-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0009-LK-102-7-PAS_registered_thumbnail.jpg', 'VAN0010-LK-155-40-AF_preIMS_registered_thumbnail.jpg', 'VAN0010-LK-155-40-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0010-LK-155-40-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0010-LK-155-40-PAS_registered_thumbnail.jpg', 'VAN0011-RK-3-10-AF_preIMS_registered_thumbnail.jpg', 'VAN0011-RK-3-10-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0011-RK-3-10-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0011-RK-3-10-PAS_registered_thumbnail.jpg', 'VAN0011-RK-3-11-AF_preMxIF_registered_thumbnail.jpg', 'VAN0011-RK-3-11-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0011-RK-3-11-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0011-RK-3-11-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0012-RK-103-75-AF_preIMS_registered_thumbnail.jpg', 'VAN0012-RK-103-75-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0012-RK-103-75-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0012-RK-103-75-PAS_registered_thumbnail.jpg', 'VAN0012-RK-103-76-AF_preMxIF_registered_thumbnail.jpg', 'VAN0012-RK-103-76-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0012-RK-103-76-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0012-RK-103-76-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0013-LK-202-96-AF_preIMS_registered_thumbnail.jpg', 'VAN0013-LK-202-96-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0013-LK-202-96-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0013-LK-202-96-PAS_registered_thumbnail.jpg', 'VAN0013-LK-202-97-AF_preMxIF_registered_thumbnail.jpg', 'VAN0013-LK-202-97-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0013-LK-202-97-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0013-LK-202-97-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0014-LK-203-108-AF_preIMS_registered_thumbnail.jpg', 'VAN0014-LK-203-108-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0014-LK-203-108-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0014-LK-203-108-PAS_registered_thumbnail.jpg', 'VAN0016-LK-202-89-AF_preIMS_registered_thumbnail.jpg', 'VAN0016-LK-202-89-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0016-LK-202-89-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0016-LK-202-89-PAS_registered_thumbnail.jpg', 'VAN0003-LK-32-21-AF_preIMS_registered_thumbnail.jpg', 'VAN0003-LK-32-21-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0003-LK-32-21-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0003-LK-32-21-PAS_registered_thumbnail.jpg', 'VAN0003-LK-32-22-AF_preMxIF_registered_thumbnail.jpg', 'VAN0003-LK-32-22-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0003-LK-32-22-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0003-LK-32-22-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0005-RK-1-1-AF_preIMS_registered_thumbnail.jpg', 'VAN0005-RK-1-1-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0005-RK-1-1-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0005-RK-1-1-PAS_registered_thumbnail.jpg', 'VAN0005-RK-4-172-AF_preIMS_registered_thumbnail.jpg', 'VAN0005-RK-4-172-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0005-RK-4-172-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0005-RK-4-172-PAS_registered_thumbnail.jpg', 'VAN0006-LK-2-85-AF_preIMS_registered_thumbnail.jpg', 'VAN0006-LK-2-85-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0006-LK-2-85-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0006-LK-2-85-PAS_registered_thumbnail.jpg', 'VAN0006-LK-2-86-AF_preMxIF_registered_thumbnail.jpg', 'VAN0006-LK-2-86-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0006-LK-2-86-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0006-LK-2-86-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0007-LK-203-103-AF_preIMS_registered_thumbnail.jpg', 'VAN0007-LK-203-103-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0007-LK-203-103-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0007-LK-203-103-PAS_registered_thumbnail.jpg', 'VAN0008-RK-403-100-AF_preIMS_registered_thumbnail.jpg', 'VAN0008-RK-403-100-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0008-RK-403-100-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0008-RK-403-100-PAS_registered_thumbnail.jpg', 'VAN0008-RK-403-101-AF_preMxIF_registered_thumbnail.jpg', 'VAN0008-RK-403-101-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0008-RK-403-101-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0008-RK-403-101-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0011-RK-3-10-AF_preIMS_registered_thumbnail.jpg', 'VAN0011-RK-3-10-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0011-RK-3-10-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0011-RK-3-10-PAS_registered_thumbnail.jpg', 'VAN0011-RK-3-11-AF_preMxIF_registered_thumbnail.jpg', 'VAN0011-RK-3-11-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0011-RK-3-11-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0011-RK-3-11-MxIF_cyc3_registered_thumbnail.jpg', 'VAN0012-RK-103-75-AF_preIMS_registered_thumbnail.jpg', 'VAN0012-RK-103-75-IMS_NegMode_multilayer_thumbnail.jpg', 'VAN0012-RK-103-75-IMS_PosMode_multilayer_thumbnail.jpg', 'VAN0012-RK-103-75-PAS_registered_thumbnail.jpg', 'VAN0012-RK-103-76-AF_preMxIF_registered_thumbnail.jpg', 'VAN0012-RK-103-76-MxIF_cyc1_registered_thumbnail.jpg', 'VAN0012-RK-103-76-MxIF_cyc2_registered_thumbnail.jpg', 'VAN0012-RK-103-76-MxIF_cyc3_registered_thumbnail.jpg']);\n// eslint-disable-next-line max-len\nexport const UFL_THUMBS = { 'HBM558.SRZG.629': 'HBM558.SRZG.629_UFL0002-SP-3-4-1.jpg', 'HBM562.NTMH.548': 'HBM562.NTMH.548_UFL0006-SP-1-2-1.jpg', 'HBM685.KHRQ.684': 'HBM685.KHRQ.684_UFL0008-LY07-1-1.jpg', 'HBM278.SFQW.627': 'HBM278.SFQW.627_UFL0008-LY09-1-1.jpg', 'HBM427.SMGB.866': 'HBM427.SMGB.866_UFL0004-SP-1-4-1.jpg', 'HBM432.LLCF.677': 'HBM432.LLCF.677_UFL0001-SP-2-5-1.jpg', 'HBM586.ZSVS.996': 'HBM586.ZSVS.996_UFL0008-SP-1-1-1.jpg', 'HBM285.XMBT.542': 'HBM285.XMBT.542_UFL0006-TH-1-3-1.jpg', 'HBM289.BWJW.663': 'HBM289.BWJW.663_UFL0006-TH-1-2-1.jpg', 'HBM255.SRPR.985': 'HBM255.SRPR.985_UFL0005-TH-2-2-1.jpg', 'HBM799.WXHD.535': 'HBM799.WXHD.535_UFL0009-LY02-1-1.jpg', 'HBM294.RZFN.624': 'HBM294.RZFN.624_UFL0005-TH-1-1-1.jpg', 'HBM383.TRQG.424': 'HBM383.TRQG.424_UFL0006-SP-1-3-1.jpg', 'HBM647.MFQB.496': 'HBM647.MFQB.496_UFL0001-SP-1-2-1.jpg', 'HBM237.GGPR.739': 'HBM237.GGPR.739_UFL0006-LY01-1-1.jpg', 'HBM288.TPBD.654': 'HBM288.TPBD.654_UFL0003-SP-2-2-1.jpg', 'HBM974.NDXT.675': 'HBM974.NDXT.675_UFL0008-TH-2-2-1.jpg', 'HBM589.SLVV.423': 'HBM589.SLVV.423_UFL0008-LY10-1-1.jpg', 'HBM794.RLFN.358': 'HBM794.RLFN.358_UFL0006-LY03-1-1.jpg', 'HBM372.BQSR.778': 'HBM372.BQSR.778_UFL0007-SP-1-1-1.jpg', 'HBM499.TKDW.458': 'HBM499.TKDW.458_UFL0009-LY03-1-1.jpg', 'HBM342.PRQB.739': 'HBM342.PRQB.739_UFL0003-LY06-1-1.jpg', 'HBM633.CLVN.674': 'HBM633.CLVN.674_UFL0003-SP-3-6-1.jpg', 'HBM343.JQKM.578': 'HBM343.JQKM.578_UFL0009-LY01-1-1.jpg', 'HBM987.XGTH.368': 'HBM987.XGTH.368_UFL0002-SP-2-4-1.jpg', 'HBM964.CWCP.788': 'HBM964.CWCP.788_UFL0006-LY02-2-1.jpg', 'HBM244.TJLK.223': 'HBM244.TJLK.223_UFL0003-SP-1-4-1.jpg', 'HBM646.FSBQ.966': 'HBM646.FSBQ.966_UFL0007-SP-2-2-1.jpg', 'HBM572.GXSB.234': 'HBM572.GXSB.234_UFL0003-SP-3-2-1.jpg', 'HBM772.TKGJ.794': 'HBM772.TKGJ.794_UFL0008-SP-2-1-1.jpg', 'HBM239.CBWR.263': 'HBM239.CBWR.263_UFL0008-SP-1-2-1.jpg', 'HBM992.NRTT.383': 'HBM992.NRTT.383_UFL0006-SP-1-1-1.jpg', 'HBM283.DQXD.546': 'HBM283.DQXD.546_UFL0003-SP-1-2-1.jpg', 'HBM795.JHND.856': 'HBM795.JHND.856_UFL0007-SP-1-2-1.jpg', 'HBM267.BZKT.867': 'HBM267.BZKT.867_UFL0003-SP-2-6-1.jpg', 'HBM838.DLMJ.782': 'HBM838.DLMJ.782_UFL0008-TH-1-1-1.jpg', 'HBM337.FSXL.564': 'HBM337.FSXL.564_UFL0001-SP-3-8-2.jpg', 'HBM355.JDLK.244': 'HBM355.JDLK.244_UFL0004-SP-2-4-1.jpg', 'HBM599.PSZG.737': 'HBM599.PSZG.737_UFL0006-LY02-1-1.jpg' };\n\n/** UUID to TMC mapping. */\nconst GROUP_UUID_MAPPING: { [uuid: string]: string } = {\n  '03b3d854-ed44-11e8-8bce-0e368f3075e8': 'TMC-UCSD',\n  '07a29e4c-ed43-11e8-b56a-0e8017bdda58': 'TMC-Florida',\n  '308f5ffc-ed43-11e8-b56a-0e8017bdda58': 'TMC-CalTech',\n  '5bd084c8-edc2-11e8-802f-0e368f3075e8': 'HBM-TestingGroup',\n  '73bb26e4-ed43-11e8-8f19-0a7c1eab007a': 'TMC-Vanderbilt',\n  'def5fd76-ed43-11e8-b56a-0e8017bdda58': 'TMC-Stanford',\n  '5c106f29-ea2d-11e9-85e8-0efb3ba9a670': 'RTI-General Electric',\n  '301615f9-c870-11eb-a8dc-35ce3d8786fe': 'TMC-UConn'\n};\n\nconst ENTITY_CONTEXT = {\n  '@base': 'http://purl.org/ccf/latest/ccf-entity.owl#',\n  '@vocab': 'http://purl.org/ccf/latest/ccf-entity.owl#',\n  ccf: 'http://purl.org/ccf/',\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n\n  label: 'rdfs:label',\n  description: 'rdfs:comment',\n  link: {\n    '@id': 'rdfs:seeAlso',\n    '@type': '@id'\n  },\n  samples: {\n    '@reverse': 'has_donor'\n  },\n  sections: {\n    '@id': 'has_tissue_section',\n    '@type': '@id'\n  },\n  datasets: {\n    '@id': 'has_dataset',\n    '@type': '@id'\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  rui_location: {\n    '@id': 'has_spatial_entity',\n    '@type': '@id'\n  },\n  ontologyTerms: {\n    '@id': 'has_ontology_term',\n    '@type': '@id'\n  },\n  cellTypeTerms: {\n    '@id': 'has_cell_type_term',\n    '@type': '@id'\n  },\n  thumbnail: {\n    '@id': 'has_thumbnail'\n  }\n};\n\n/**\n * Converts a hubmap response object into JsonLd.\n *\n * @param data The hubmap data.\n * @returns The converted data.\n */\nexport function hubmapResponseAsJsonLd(data: unknown, assetsApi = '', portalUrl = '', serviceToken?: string, debug = false): JsonLd {\n  const entries = (get(data, 'hits.hits', []) as JsonDict[])\n    .map(e => get(e, '_source', {}) as JsonDict)\n    .sort((a, b) => (a['uuid'] as string).localeCompare(b['uuid'] as string));\n\n  const donorLookup: Record<string, JsonLdObj> = {};\n  const unflattened: JsonLdObj[] = entries.map(e =>\n    new HuBMAPTissueBlock(e, assetsApi, portalUrl, serviceToken).toJsonLd()\n  );\n  for (const donor of unflattened) {\n    const donorId = donor['@id'] as string;\n    if (!donorLookup[donorId]) {\n      donorLookup[donorId] = donor;\n    } else {\n      const samples = donorLookup[donorId].samples as JsonLdObj[];\n      samples.push((donor.samples as JsonLdObj[])[0]);\n    }\n  }\n  const donors = Object.values(donorLookup);\n\n  if (debug) {\n    debugDonors(donors);\n    console.log(donors.map(d => ({ '@context': ENTITY_CONTEXT, ...d })));\n  }\n\n  return { '@context': ENTITY_CONTEXT, '@graph': donors };\n}\n\nfunction debugDonors(donors: JsonLdObj[]) {\n  let datasets: JsonLdObj[] = [];\n  let deleted = 0;\n  for (const donor of donors.filter(d => (d.samples as []).length > 1)) {\n    const samples = donor.samples as JsonLdObj[];\n    for (let i=0; i < samples.length; i++) {\n      const blockId = samples[i]['@id'] as string;\n      datasets = datasets.concat(samples[i].datasets as JsonLdObj[]);\n      for (const section of samples[i].sections as JsonLdObj[]) {\n        datasets = datasets.concat(section.datasets as JsonLdObj[]);\n      }\n      for (let j=i+1; j < samples.length; j++) {\n        const sections = samples[j].sections as JsonLdObj[];\n        if (sections.find(s => s['@id'] === blockId)) {\n          samples[i].deleteMe = true;\n          deleted++;\n        }\n      }\n    }\n    donor.samples = samples.filter(s => s.deleteMe !== true);\n  }\n  if (deleted > 0) {\n    console.log(`⚠ ${deleted} sections identified as blocks`);\n  }\n}\n\nexport class HuBMAPTissueBlock {\n  bad = false;\n  donor: JsonLdObj;\n\n  '@id': string;\n  '@type' = 'Sample';\n  label: string;\n  description: string;\n  link: string;\n\n  sample_type = 'Tissue Block';\n  section_count: number;\n  section_size: number;\n  section_units: string;\n\n  rui_location: JsonLdObj;\n  sections: JsonLdObj[];\n  datasets: JsonLdObj[];\n\n  constructor(public data: JsonDict, assetsApi = '', portalUrl = '', serviceToken?: string) {\n    const entityType = this.data.entity_type;\n    if (entityType !== 'Sample') {\n      this.bad = true;\n      return;\n    }\n    const ancestors = (this.data.ancestors || []) as JsonDict[];\n    const descendants = (this.data.descendants || []) as JsonDict[];\n\n    const donor = ancestors.find(e => e.entity_type === 'Donor') as JsonDict;\n    this.donor = this.getDonor(donor, portalUrl);\n    const ruiLocation = this.getRuiLocation(data, this.donor);\n    if (!ruiLocation) {\n      this.bad = true;\n    } else {\n      this.rui_location = ruiLocation;\n    }\n\n    if (!GROUP_UUID_MAPPING[data.group_uuid as string]) {\n      GROUP_UUID_MAPPING[data.group_uuid as string] = data.group_name as string;\n    }\n\n    const dateEntered = new Date(data.last_modified_timestamp as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[data.group_uuid as string] || data.group_name as string;\n    const creator = data.created_by_user_displayname;\n\n    this['@id'] = HBM_PREFIX + data.uuid;\n    this.label = `Registered ${dateEntered}, ${creator}, ${groupName}`;\n    this.link = `${portalUrl}browse/sample/${data.uuid}`;\n\n    const sectionLookup: Record<string, JsonLdObj> = {};\n    const sections: JsonLdObj[] = [];\n    this.sections = sections;\n    const datasets: JsonLdObj[] = [];\n    this.datasets = datasets;\n\n    for (const descendant of descendants.filter(d => d.entity_type === 'Sample')) {\n      const section = this.getSection(descendant, data, portalUrl);\n\n      const sectionId = descendant.submission_id as string;\n      sectionLookup[sectionId] = section;\n      sections.push(section);\n      section.section_number = section.section_number ?? sections.length;\n    }\n    for (const descendant of descendants) {\n      if (descendant.entity_type === 'Dataset') {\n        const dataset = this.getDataset(descendant, assetsApi, portalUrl, serviceToken);\n\n        const sectionId = get(descendant, ['ingest_metadata', 'metadata', 'tissue_id']) as string;\n        if (sectionLookup[sectionId]) {\n          (sectionLookup[sectionId].datasets as JsonLd[])?.push(dataset);\n        } else {\n          datasets.push(dataset);\n        }\n      }\n    }\n\n    const loc: JsonDict = ruiLocation ?? {};\n    const dims = `${loc.x_dimension} x ${loc.y_dimension} x ${loc.z_dimension} ${loc.dimension_units}`;\n    this.section_count = loc.slice_count as number || sections.length;\n    const sSize = parseFloat(\n      (loc.slice_thickness as number ||\n        ((loc.z_dimension as number || 0) / Math.max(this.section_count, 1)))\n        .toFixed(1)\n    );\n    this.section_size = sSize;\n    const sUnits = loc.dimension_units as string || 'millimeter';\n    this.section_units = sUnits;\n\n    this.description = `${dims}, ${sSize} ${sUnits}, ${data.specimen_type}, ${this.section_count} Sections`;\n\n    sections.forEach((section, index) => {\n      section.description = `${loc.x_dimension} x ${loc.y_dimension} x ${sSize} ${sUnits}, ${sSize} ${sUnits}, ${section.description}`;\n      section.section_number = index + 1;\n    });\n  }\n\n  getSection(section: JsonDict, data: JsonDict, portalUrl: string): JsonLdObj {\n    const dateEntered = new Date(section.last_modified_timestamp as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[section.group_uuid as string] || section.group_name as string;\n    const creator = section.created_by_user_displayname;\n\n    return {\n      '@id': HBM_PREFIX + section.uuid,\n      '@type': 'Sample',\n      label: `Registered ${dateEntered}, ${creator}, ${groupName}`,\n      description: `${data.specimen_type}`,\n      link: `${portalUrl}browse/sample/${section.uuid}`,\n\n      sample_type: 'Tissue Section',\n      section_number: 1,\n\n      samples: [],\n      datasets: []\n    };\n  }\n\n  getDataset(dataset: JsonDict, assetsApi = '', portalUrl = '', serviceToken?: string): JsonLdObj {\n    const dateEntered = new Date(dataset.last_modified_timestamp as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[dataset.group_uuid as string] || dataset.group_name as string;\n    const creator = dataset.created_by_user_displayname;\n\n    const types = [\n      ...dataset.data_types as string[],\n      get(dataset, ['ingest_metadata', 'metadata', 'assay_type'], '')\n    ];\n    const typesSearch = types.join('|').toLowerCase();\n\n    let technology: string;\n    let thumbnail = 'assets/icons/ico-unknown.svg';\n    if (typesSearch.indexOf('10x') !== -1) {\n      technology = '10x';\n      thumbnail = 'assets/icons/ico-bulk-10x.svg';\n    } else if (typesSearch.indexOf('af') !== -1) {\n      technology = 'AF';\n      thumbnail = 'assets/icons/ico-spatial-af.svg';\n    } else if (typesSearch.indexOf('codex') !== -1) {\n      technology = 'CODEX';\n      thumbnail = 'assets/icons/ico-spatial-codex.svg';\n    } else if (typesSearch.indexOf('imc') !== -1) {\n      technology = 'IMC';\n      thumbnail = 'assets/icons/ico-spatial-imc.svg';\n    } else if ((typesSearch.indexOf('lc') !== -1) && (typesSearch.indexOf('af') === -1)) {\n      technology = 'LC';\n      thumbnail = 'assets/icons/ico-bulk-lc.svg';\n    } else if (typesSearch.indexOf('maldi') !== -1) {\n      technology = 'MALDI';\n    } else if (typesSearch.indexOf('pas') !== -1) {\n      technology = 'PAS';\n    } else {\n      technology = 'OTHER';\n    }\n    thumbnail = this.getDatasetThumbnail(dataset, assetsApi, serviceToken) ?? thumbnail;\n\n    return {\n      '@id': HBM_PREFIX + dataset.uuid,\n      '@type': 'Dataset',\n      label: `Registered ${dateEntered}, ${creator}, ${groupName}`,\n      description: `Data/Assay Types: ${types.join(', ')}`,\n      link: `${portalUrl}browse/dataset/${dataset.uuid}`,\n      technology,\n      thumbnail\n    };\n  }\n\n  getDatasetThumbnail(dataset: JsonDict, assetsApi: string, serviceToken?: string): string | undefined {\n    if (dataset.thumbnail_file) {\n      const thumbnailFile = dataset.thumbnail_file as JsonDict;\n      return `${assetsApi}/${thumbnailFile.file_uuid}/${thumbnailFile.filename}` + (serviceToken ? `?token=${serviceToken}` : '');\n    } else if (dataset.group_uuid === '73bb26e4-ed43-11e8-8f19-0a7c1eab007a') { // TMC-Vanderbilt\n      const tiffs = (get(dataset, 'metadata.files', []) as { rel_path: string }[])\n        .filter(f => /\\.(ome\\.tif|ome\\.tiff)$/.test(f.rel_path))\n        .filter(f => !/(multilayer\\.ome\\.tif|_ac\\.ome\\.tif)/.test(f.rel_path))\n        .filter(f => DR1_VU_THUMBS.has(\n          f.rel_path.split('/').slice(-1)[0].split('?')[0].replace('.ome.tif', '_thumbnail.jpg')\n        ))\n        .map(f => `${assetsApi}/${dataset.uuid}/${f.rel_path}` + (serviceToken ? `?token=${serviceToken}` : ''));\n\n      if (tiffs.length > 0) {\n        const thumb = tiffs[0].split('/').slice(-1)[0].split('?')[0].replace('.ome.tif', '_thumbnail.jpg');\n        if (DR1_VU_THUMBS.has(thumb)) {\n          return `assets/thumbnails/TMC-Vanderbilt/DR1/${thumb}`;\n        }\n      }\n    } else if (dataset.group_uuid === '07a29e4c-ed43-11e8-b56a-0e8017bdda58') { // TMC-Florida\n      const thumb = UFL_THUMBS[dataset.hubmap_id as string];\n      if (thumb) {\n        return `assets/thumbnails/TMC-Florida/${thumb}`;\n      }\n    }\n    return undefined;\n  }\n\n  getDonor(donor: JsonDict, portalUrl: string): JsonLdObj {\n    const donorDescription = (donor.description as string || '').toLowerCase();\n    let sex: 'Male' | 'Female' | undefined;\n    if (donorDescription.includes('female')) {\n      sex = 'Female';\n    } else if (donorDescription.includes('male')) {\n      sex = 'Male';\n    }\n    const ageMatch = donorDescription.match(/age ([0-9]+)/);\n    let age: number | undefined;\n    if (ageMatch) {\n      age = toNumber(ageMatch[1]);\n    }\n    let bmi: number | undefined;\n    for (const md of get(donor, 'metadata.organ_donor_data', get(donor, 'metadata.living_donor_data', [])) as JsonDict[]) {\n      if (md.preferred_term === 'Feminine gender' || md.preferred_term === 'Female') {\n        sex = 'Female';\n      } else if (md.preferred_term === 'Masculine gender' || md.preferred_term === 'Male') {\n        sex = 'Male';\n      } else if (md.preferred_term === 'Current chronological age' || md.preferred_term === 'Age') {\n        age = toNumber(md.data_value);\n      } else if (md.preferred_term === 'Body mass index') {\n        bmi = toNumber(md.data_value);\n      }\n    }\n    let label = '';\n    if (sex && age) {\n      label += `${sex}, Age ${age}`;\n      if (bmi) {\n        label += `, BMI ${bmi.toFixed(1)}`;\n      }\n    }\n\n    const dateEntered = new Date(donor.last_modified_timestamp as number).toLocaleDateString();\n    const groupName = GROUP_UUID_MAPPING[donor.group_uuid as string] || donor.group_name as string;\n    const creator = donor.created_by_user_displayname;\n\n    return {\n      '@id': HBM_PREFIX + donor.uuid,\n      '@type': 'Donor',\n      label,\n      description: `Entered ${dateEntered}, ${creator}, ${groupName}`,\n      link: `${portalUrl}browse/donor/${donor.uuid}`,\n\n      age,\n      sex,\n      bmi,\n\n      consortium_name: 'HuBMAP',\n      provider_name: groupName,\n      provider_uuid: donor.group_uuid as string,\n\n      samples: []\n    };\n  }\n\n  getRuiLocation(data: JsonDict, donor: JsonLdObj): JsonLdObj | undefined {\n    let spatialEntity: JsonLdObj | undefined;\n    let ruiLocation = data.rui_location as JsonDict;\n    if (ruiLocation) {\n      // RUI Location may come in as an unparsed string\n      if (typeof ruiLocation === 'string') {\n        ruiLocation = JSON.parse(ruiLocation as string) as JsonDict;\n      }\n      if (ruiLocation.alignment_id) { // Detect RUI 0.5 generated JSON\n        console.log('Detected a deprecated rui_location', data.uuid);\n      } else if ((ruiLocation as unknown as { '@id': string })['@id']) { // Detect RUI 1.0+ generated JSON-LD\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        spatialEntity = ruiLocation as unknown as JsonLdObj;\n      }\n    }\n    if (spatialEntity) {\n      // Patch to fix RUI 0.5 Kidney and Spleen Placements\n      const target: string = get(spatialEntity, ['placement', 'target']) ?? '';\n      if (target.startsWith('http://purl.org/ccf/latest/ccf.owl#VHSpleenCC')) {\n        if (donor.sex === 'Male') {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VHSpleenCC', '#VHMSpleenCC'));\n        } else {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VHSpleenCC', '#VHFSpleenCC'));\n        }\n      } else if (target === 'http://purl.org/ccf/latest/ccf.owl#VHLeftKidney' || target === 'http://purl.org/ccf/latest/ccf.owl#VHRightKidney') {\n        if (donor.sex === 'Male') {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VH', '#VHM') + '_Patch');\n        } else {\n          set(spatialEntity, ['placement', 'target'], target.replace('#VH', '#VHF') + '_Patch');\n        }\n      }\n    }\n    return spatialEntity;\n  }\n\n  getTissueBlock(): JsonLdObj {\n    return omit({ ...this }, ['data', 'bad', 'donor']) as unknown as JsonLdObj;\n  }\n\n  toJsonLd(): JsonLdObj {\n    return { ...this.donor, samples: [this.getTissueBlock()] };\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { JsonLd } from 'jsonld/jsonld-spec';\nimport { addJsonLdToStore, Store } from 'triple-store-utils';\n\nimport { hubmapResponseAsJsonLd } from './hubmap-data';\n\n\ninterface SearchResultJson {\n  hits: {\n    hits: unknown[];\n    total: {\n      value: number;\n    };\n  };\n}\n\n\n// Reduce this value if including more data fields\nconst PER_API_SEARCH_REQUEST_COUNT = 250;\n\nconst INCLUDED_DATA_FIELDS = [\n  'uuid', 'entity_type',\n  'group_uuid', 'group_name',\n  'last_modified_timestamp', 'created_by_user_displayname',\n  'ancestors.entity_type',\n  'ancestors.description',\n  'ancestors.metadata.organ_donor_data.preferred_term',\n  'ancestors.metadata.organ_donor_data.data_value',\n  'ancestors.metadata.living_donor_data.preferred_term',\n  'ancestors.metadata.living_donor_data.data_value',\n  'ancestors.last_modified_timestamp',\n  'ancestors.group_uuid',\n  'ancestors.group_name',\n  'ancestors.created_by_user_displayname',\n  'ancestors.uuid',\n  'descendants.entity_type',\n  'descendants.ingest_metadata.metadata.tissue_id',\n  'descendants.last_modified_timestamp',\n  'descendants.group_uuid',\n  'descendants.group_name',\n  'descendants.created_by_user_displayname',\n  'descendants.uuid',\n  'descendants.data_types',\n  'descendants.ingest_metadata.metadata.assay_type',\n  'descendants.thumbnail_file',\n  'descendants.metadata.files.rel_path',\n  'rui_location', 'specimen_type'\n];\n\nconst DEFAULT_API_SEARCH_QUERY: unknown = {\n  exists: {\n    field: 'rui_location'\n  }\n};\n\nfunction getApiSearchHeaders(token?: string): Headers {\n  const headers = new Headers();\n\n  headers.append('Content-type', 'application/json');\n  if (token) {\n    headers.append('Authorization', `Bearer ${token}`);\n  }\n\n  return headers;\n}\n\nfunction getApiSearchBody(from: number, size: number, query?: unknown): string {\n  const bodyObj = {\n    version: true,\n    from,\n    size,\n    stored_fields: ['*'],\n    script_fields: {},\n    docvalue_fields: [],\n    query: query ?? DEFAULT_API_SEARCH_QUERY,\n    _source: {\n      includes: INCLUDED_DATA_FIELDS\n    }\n  };\n\n  return JSON.stringify(bodyObj);\n}\n\nasync function doSearchRequest(\n  url: string, init?: RequestInit\n): Promise<SearchResultJson | undefined> {\n  try {\n    const res = await fetch(url, init);\n    return res.ok ? (await res.json()) : undefined;\n  } catch (_error) {\n    return undefined;\n  }\n}\n\nasync function doApiSearch(\n  url: string, token?: string, query?: unknown\n): Promise<SearchResultJson | undefined> {\n  const perReqCount = PER_API_SEARCH_REQUEST_COUNT;\n  const headers = getApiSearchHeaders(token);\n  const body = getApiSearchBody(0, perReqCount, query);\n  const firstResult = await doSearchRequest(url, { method: 'POST', headers, body });\n  if (!firstResult) {\n    return undefined;\n  }\n\n  const totalCount = firstResult.hits.total.value;\n  if (totalCount <= perReqCount) {\n    return firstResult;\n  }\n\n  const requests: Promise<SearchResultJson | undefined>[] = [];\n  for (let from = perReqCount; from < totalCount; from += perReqCount) {\n    requests.push(doSearchRequest(url, {\n      method: 'POST',\n      headers,\n      body: getApiSearchBody(from, perReqCount, query)\n    }));\n  }\n\n  const results = await Promise.all(requests);\n  if (results.some(res => !res)) {\n    return undefined;\n  }\n\n  const items = results.map(res => res!.hits.hits);\n  return {\n    ...firstResult,\n    hits: {\n      ...firstResult.hits,\n      hits: firstResult.hits.hits.concat(...items),\n    }\n  };\n}\n\n/**\n * Search the HuBMAP Search API and return CCF-compatible JSON-LD data\n *\n * @param dataUrl the search API url\n * @param serviceType 'static' if a statically saved response or 'search-api' if querying the search-api live\n * @param query the elastic search query to use\n * @param serviceToken the api key to the search-api\n * @param assetsApi the assets api endpoint\n * @param portalUrl the portal url to point to\n * @returns CCF-compatible JSON-LD data or undefined on error\n */\nexport async function searchHubmap(\n  dataUrl: string, serviceType: 'static' | 'search-api',\n  query?: unknown, serviceToken?: string, assetsApi = '', portalUrl = ''\n): Promise<JsonLd | undefined> {\n  let hubmapData: SearchResultJson | undefined;\n  if (serviceType === 'static') {\n    hubmapData = await doSearchRequest(dataUrl);\n  } else if (serviceType === 'search-api') {\n    hubmapData = await doApiSearch(dataUrl, serviceToken, query);\n  }\n\n  if (hubmapData) {\n    return hubmapResponseAsJsonLd(hubmapData, assetsApi, portalUrl, serviceToken);\n  } else {\n    console.warn(`Unable to load ${dataUrl} as HuBMAP Data`);\n    return undefined;\n  }\n}\n\n/**\n * Adds hubmap data from a url to the triple store.\n *\n * @param store The triple store.\n * @param dataUrl The data url.\n * @param serviceType The service type.\n */\nexport async function addHubmapDataToStore(\n  store: Store, dataUrl: string, serviceType: 'static' | 'search-api', serviceToken?: string, assetsApi = '', portalUrl = ''\n): Promise<void> {\n  const hubmapData = await searchHubmap(dataUrl, serviceType, undefined, serviceToken, assetsApi, portalUrl);\n  if (hubmapData) {\n    await addJsonLdToStore(hubmapData, store);\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { readQuads, Store } from 'triple-store-utils';\n\nimport { AggregateResult } from '../interfaces';\nimport { entity } from '../util/prefixes';\n\n\nfunction getObjects(store: Store, ids: Set<string>, predicate: string): Set<string> {\n  const objects = new Set<string>();\n  for (const id of ids) {\n    for (const quad of readQuads(store, id, predicate, null, null)) {\n      objects.add(quad.object.id);\n    }\n  }\n  return objects;\n}\n\n/**\n * Computes aggregate results.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns The list of aggregate results.\n */\nexport function getAggregateResults(ids: Set<string>, store: Store): AggregateResult[] {\n  const donors = getObjects(store, ids, entity.donor.id);\n  const centers = getObjects(store, donors, entity.providerUUID.id);\n\n  const tissueBlocks = new Set<string>();\n  for (const id of ids) {\n    for (const quad of readQuads(store, id, entity.spatialEntity, null, null)) {\n      tissueBlocks.add(quad.subject.id);\n    }\n  }\n\n  const tissueSections = getObjects(store, tissueBlocks, entity.sections.id);\n  const tissueDatasets = new Set<string>([\n    ...getObjects(store, tissueBlocks, entity.datasets.id),\n    ...getObjects(store, tissueSections, entity.datasets.id)\n  ]);\n\n  const results: { [key: string]: number } = {\n    'Tissue Data Providers': centers.size,\n    Donors: donors.size,\n    'Tissue Blocks': tissueBlocks.size,\n    'Tissue Sections': tissueSections.size,\n    'Tissue Datasets': tissueDatasets.size\n  };\n\n  return Object.entries(results).map(([label, count]) => ({ label, count }));\n}\n\n/**\n * Get a list of technology names used by datasets\n *\n * @param store The triple store.\n * @returns list of unique technology names in the data\n */\nexport function getDatasetTechnologyNames(store: Store): string[] {\n  const names = new Set<string>();\n  for (const quad of readQuads(store, null, entity.technology, null, null)) {\n    names.add(quad.object.value);\n  }\n  return Array.from(names).sort();\n}\n\n/**\n * Get a list of provider names from the database\n *\n * @param store The triple store.\n * @returns list of unique provider names in the data\n */\nexport function getProviderNames(store: Store): string[] {\n  const names = new Set<string>();\n  for (const quad of readQuads(store, null, entity.providerName, null, null)) {\n    names.add(quad.object.value);\n  }\n  return Array.from(names).sort();\n}\n","import { Euler } from '@math.gl/core';\nimport { OrientedBoundingBox } from '@math.gl/culling';\nimport { Store } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from '../ccf-spatial-graph';\nimport { SpatialSearch } from '../interfaces';\nimport { getMappedResult } from '../util/n3-functions';\nimport { ccf } from '../util/prefixes';\n\n\nconst spatialEntityDimensions = {\n  [ccf.spatialEntity.x_dimension.id]: 'x',\n  [ccf.spatialEntity.y_dimension.id]: 'y',\n  [ccf.spatialEntity.z_dimension.id]: 'z'\n};\n\nfunction getSpatialEntityDimensions(store: Store, iri: string): [number, number, number] {\n  const dims = getMappedResult<{ x: number; y: number; z: number }>(store, iri, 'Dimensions', spatialEntityDimensions);\n  return [ dims.x, dims.y, dims.z ];\n}\n\nexport function getOrientedBoundingBox(store: Store, graph: CCFSpatialGraph, sourceIri: string, targetIri: string): OrientedBoundingBox | undefined {\n  const matrix = graph.getTransformationMatrix(sourceIri, targetIri);\n  let result: OrientedBoundingBox | undefined = undefined;\n  if (matrix) {\n    const center = matrix.getTranslation();\n    const halfSize = getSpatialEntityDimensions(store, sourceIri).map(n => n / 1000 / 2);\n    const quaternion = new Euler().fromRotationMatrix(matrix, Euler.XYZ).toQuaternion().normalize().calculateW();\n    result = new OrientedBoundingBox().fromCenterHalfSizeQuaternion(center, halfSize, quaternion);\n  }\n  return result;\n}\n\nexport function filterByProbingSphere(store: Store, graph: CCFSpatialGraph, seen: Set<string>, search: SpatialSearch): Set<string> {\n  const { x, y, z, radius, target } = search;\n  const newSeen = new Set<string>();\n  const radiusSquared = (radius / 1000) * (radius / 1000);\n  for (const sourceIri of seen) {\n    const boundingBox = getOrientedBoundingBox(store, graph, sourceIri, target);\n    if (boundingBox) {\n      const distanceSquared = boundingBox.distanceSquaredTo([x, y, z].map(n => n / 1000));\n      if (distanceSquared <= radiusSquared) {\n        newSeen.add(sourceIri);\n      }\n    }\n  }\n  return newSeen;\n}\n","import { isFinite } from 'lodash';\nimport { fromRdf } from 'rdf-literal';\nimport { DataFactory, Literal, readQuads, Store, Term } from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from '../ccf-spatial-graph';\nimport { Filter, SpatialSearch } from '../interfaces';\nimport { ccf, entity, rui } from '../util/prefixes';\nimport { filterByProbingSphere } from './spatial-search-n3';\n\n\nfunction filterWithDonor(store: Store, seen: Set<string>, callback: (donorsSeen: Set<string>) => Set<string>): Set<string> {\n  const donor2entity = new Map<string, string[]>();\n  const donors = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.donor, null, null)) {\n      donors.add(quad.object.id);\n      if (!donor2entity.has(quad.object.id)) {\n        donor2entity.set(quad.object.id, [subject]);\n      } else {\n        donor2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newDonors = callback(donors);\n  const newSeen = new Set<string>();\n  for (const d of newDonors) {\n    for (const s of donor2entity.get(d) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\nfunction filterWithSpatialEntity(store: Store, seen: Set<string>, callback: (entitiesSeen: Set<string>) => Set<string>): Set<string> {\n  const spatial2entity = new Map<string, string[]>();\n  const entities = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.spatialEntity, null, null)) {\n      entities.add(quad.object.id);\n      if (!spatial2entity.has(quad.object.id)) {\n        spatial2entity.set(quad.object.id, [subject]);\n      } else {\n        spatial2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newSpatialEntities = callback(entities);\n  const newSeen = new Set<string>();\n  for (const e of newSpatialEntities) {\n    for (const s of spatial2entity.get(e) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\nfunction filterWithDataset(store: Store, seen: Set<string>, callback: (datasetsSeen: Set<string>) => Set<string>): Set<string> {\n  const dataset2entity = new Map<string, string[]>();\n  const datasets = new Set<string>();\n\n  const sectionAndBlockSeen = new Set<string>(seen);\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.sections, null, null)) {\n      sectionAndBlockSeen.add(quad.object.id);\n    }\n  }\n\n  for (const subject of sectionAndBlockSeen) {\n    for (const quad of readQuads(store, subject, entity.datasets, null, null)) {\n      datasets.add(quad.object.id);\n      if (!dataset2entity.has(quad.object.id)) {\n        dataset2entity.set(quad.object.id, [subject]);\n      } else {\n        dataset2entity.get(quad.object.id)?.push(subject);\n      }\n    }\n  }\n\n  const newDatasets = callback(datasets);\n  const newSeen = new Set<string>();\n  for (const e of newDatasets) {\n    for (const s of dataset2entity.get(e) ?? []) {\n      newSeen.add(s);\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Finds all ids of object matching a filter.\n *\n * @param store The triple store.\n * @param filter The filter to limit objects.\n * @returns A set of all ids matching the filter.\n */\nexport function findIds(store: Store, graph: CCFSpatialGraph, filter: Filter): Set<string> {\n  let seen = getAllEntities(store);\n  if (seen.size > 0) {\n    seen = filterByHasSpatialEntity(store, seen);\n  }\n  if (seen.size > 0 && (filter.sex === 'Male' || filter.sex === 'Female')) {\n    const sex = filter.sex;\n    seen = filterWithDonor(store, seen, (donors) =>\n      filterBySex(store, donors, sex)\n    );\n  }\n  if (seen.size > 0 && filter.tmc?.length > 0) {\n    seen = filterWithDonor(store, seen, (donors) =>\n      filterByGroupName(store, donors, filter.tmc)\n    );\n  }\n  if (seen.size > 0 && filter.technologies?.length > 0) {\n    seen = filterWithDataset(store, seen, (datasets) =>\n      filterByTechnology(store, datasets, filter.technologies)\n    );\n  }\n  if (seen.size > 0 && filter.spatialSearches?.length > 0) {\n    seen = filterWithSpatialEntity(store, seen, (entities) =>\n      filterBySpatialSearches(store, graph, entities, filter.spatialSearches)\n    );\n  }\n  if (seen.size > 0 && filter.ontologyTerms?.length > 0) {\n    const terms = filter.ontologyTerms;\n    if (terms.indexOf(rui.body.id) === -1) {\n      seen = filterWithSpatialEntity(store, seen, (entities) =>\n        filterByOntologyTerms(store, entities, terms)\n      );\n    }\n  }\n  if (seen.size > 0 && filter.cellTypeTerms?.length > 0) {\n    const terms = filter.cellTypeTerms;\n    if (terms.indexOf(rui.cell.id) === -1) {\n      seen = filterWithSpatialEntity(store, seen, (entities) =>\n        filterByCellTypeTerms(store, entities, terms)\n      );\n    }\n  }\n  if (seen.size > 0 && filter.ageRange?.length === 2 &&\n    isFinite(filter.ageRange[0]) && isFinite(filter.ageRange[1])) {\n    const maxAge = Math.max(...filter.ageRange);\n    const minAge = Math.min(...filter.ageRange);\n\n    // Age filter given by their default range will be ignored\n    if (!(minAge === 1 && maxAge === 110)) {\n      seen = filterWithDonor(store, seen, (donors) =>\n        filterByAge(store, donors, minAge, maxAge)\n      );\n    }\n  }\n  if (seen.size > 0 && filter.bmiRange?.length === 2 &&\n    isFinite(filter.bmiRange[0]) && isFinite(filter.bmiRange[1])) {\n    const maxBMI = Math.max(...filter.bmiRange);\n    const minBMI = Math.min(...filter.bmiRange);\n\n    // BMI filter given by their default range will be ignored\n    if (!(minBMI === 13 && maxBMI === 83)) {\n      seen = filterWithDonor(store, seen, (donors) =>\n        filterByBMI(store, donors, minBMI, maxBMI)\n      );\n    }\n  }\n  return seen;\n}\n\n/**\n * Gets all object ids in a store.\n *\n * @param store The triple store.\n * @returns A set of all ids.\n */\nfunction getAllEntities(store: Store): Set<string> {\n  const seen = new Set<string>();\n  store.forSubjects((s) => seen.add(s.id), entity.spatialEntity, null, null);\n  return seen;\n}\n\n/**\n * Creates a callback function that adds ids to a second set iff it exists in the first set.\n *\n * @param seen The first set of ids.\n * @param newSeen The second set to add ids to.\n * @returns The callback function.\n */\nfunction differenceCallback(seen: Set<string>, newSeen: Set<string>): (term: Term) => void {\n  return function (term: Term) {\n    if (seen.has(term.id)) {\n      newSeen.add(term.id);\n    }\n  };\n}\n\n/**\n * Filters ids by sex.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param sex Sex to filter on.\n * @returns The subset of ids with the specified sex.\n */\nfunction filterBySex(store: Store, seen: Set<string>, sex: 'Male' | 'Female'): Set<string> {\n  const newSeen = new Set<string>();\n  store.forSubjects(differenceCallback(seen, newSeen), entity.sex, entity[sex], null);\n  return newSeen;\n}\n\n/**\n * Filters ids by group names.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param groupNames Group names to filter on.\n * @returns The subset of ids with the specified group names.\n */\nfunction filterByGroupName(store: Store, seen: Set<string>, groupNames: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const groupName of groupNames) {\n    const literal = DataFactory.literal(groupName);\n    store.forSubjects(differenceCallback(seen, newSeen), entity.providerName, literal, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by technology names.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param technologies Technology names to filter on.\n * @returns The subset of ids with the specified technology names.\n */\nfunction filterByTechnology(store: Store, seen: Set<string>, technologies: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const technology of technologies) {\n    const literal = DataFactory.literal(technology);\n    store.forSubjects(differenceCallback(seen, newSeen), entity.technology, literal, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by ontology terms.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param terms Ontology terms to filter on.\n * @returns The subset of ids with the specified ontology terms.\n */\nfunction filterByOntologyTerms(store: Store, seen: Set<string>, terms: string[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const term of terms) {\n    const namedNode = DataFactory.namedNode(term);\n    store.forSubjects(differenceCallback(seen, newSeen), ccf.spatialEntity.ccf_annotations, namedNode, null);\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by cell type terms.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param terms Cell type terms to filter on.\n * @returns The subset of ids with the specified cell type terms.\n */\nfunction filterByCellTypeTerms(store: Store, seen: Set<string>, terms: string[]): Set<string> {\n  const asTerms = new Set<string>();\n  for (const term of terms) {\n    store.forObjects((asTerm) => {\n      asTerms.add(asTerm.id);\n    }, term, ccf.asctb.located_in, null);\n    if (term === rui.cell.id) {\n      asTerms.add(rui.body.id);\n    }\n  }\n  return filterByOntologyTerms(store, seen, [...asTerms]);\n}\n\n/**\n * Filters ids by age.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param minAge Minimum age.\n * @param maxAge Maximum age.\n * @returns The subset of ids with the specified age.\n */\nfunction filterByAge(store: Store, seen: Set<string>, minAge: number, maxAge: number): Set<string> {\n  const newSeen = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.age, null, null)) {\n      const value = fromRdf(quad.object as Literal) as number;\n      if (value >= minAge && value <= maxAge) {\n        newSeen.add(subject);\n      }\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by BMI.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param minBMI Minimum BMI.\n * @param maxBMI Maximum BMI.\n * @returns The subset of ids with the specified BMI.\n */\nfunction filterByBMI(store: Store, seen: Set<string>, minBMI: number, maxBMI: number): Set<string> {\n  const newSeen = new Set<string>();\n  for (const subject of seen) {\n    for (const quad of readQuads(store, subject, entity.bmi, null, null)) {\n      const value = fromRdf(quad.object as Literal) as number;\n      if (value >= minBMI && value <= maxBMI) {\n        newSeen.add(subject);\n      }\n    }\n  }\n  return newSeen;\n}\n\n/**\n * Filters ids by spatial entities.\n *\n * @param store The triple store.\n * @param seen All ids to choose from.\n * @param hasSpatialEntity Whether the filtered objects should have a spatial entity.\n * @returns The subset of ids with/without spatial entities.\n */\nfunction filterByHasSpatialEntity(store: Store, seen: Set<string>, hasSpatialEntity = true): Set<string> {\n  const newSeen = new Set<string>();\n  store.forSubjects(differenceCallback(seen, newSeen), entity.spatialEntity, null, null);\n  if (!hasSpatialEntity) {\n    const notNewSeen = new Set<string>();\n    seen.forEach((s) => !newSeen.has(s) ? notNewSeen.add(s) : undefined);\n    return notNewSeen;\n  }\n  return newSeen;\n}\n\nfunction filterBySpatialSearches(store: Store, graph: CCFSpatialGraph, seen: Set<string>, spatialSearches: SpatialSearch[]): Set<string> {\n  const newSeen = new Set<string>();\n  for (const search of spatialSearches) {\n    const thisSeen = filterByProbingSphere(store, graph, seen, search);\n    thisSeen.forEach((s) => newSeen.add(s));\n  }\n  return newSeen;\n}\n","import { Store, readQuads } from 'triple-store-utils';\n\nimport { ccf, entity, rui } from '../util/prefixes';\n\n\nfunction getSpatialEntityMapping(subjects: Set<string>, store: Store): Map<string, Set<string>> {\n  const spatial2entity = new Map<string, Set<string>>();\n\n  for (const subject of subjects) {\n    for (const quad of readQuads(store, subject, entity.spatialEntity, null, null)) {\n      if (!spatial2entity.has(quad.object.id)) {\n        spatial2entity.set(quad.object.id, new Set<string>([subject]));\n      } else {\n        spatial2entity.get(quad.object.id)!.add(subject);\n      }\n    }\n  }\n  return spatial2entity;\n}\n\nfunction getAnatomicalStructureMapping(ids: Set<string>, store: Store): Map<string, Set<string>> {\n  const spatial2entity = getSpatialEntityMapping(ids, store);\n  const term2entity = new Map<string, Set<string>>();\n\n  for (const subject of spatial2entity.keys()) {\n    const entities = spatial2entity.get(subject)!;\n    for (const quad of readQuads(store, subject, ccf.spatialEntity.ccf_annotations, null, null)) {\n      if (!term2entity.has(quad.object.id)) {\n        term2entity.set(quad.object.id, new Set<string>(entities));\n      } else {\n        const termEntities = term2entity.get(quad.object.id)!;\n        entities.forEach((value) => termEntities.add(value));\n      }\n    }\n  }\n  return term2entity;\n}\n\n/**\n * Get number of occurrences of ontology terms for a set of ids.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns Ontology term counts.\n */\nexport function getOntologyTermOccurences(ids: Set<string>, store: Store): Record<string, number> {\n  const counts: Record<string, number> = {};\n  const term2entities = getAnatomicalStructureMapping(ids, store);\n\n  term2entities.forEach((value, key) => {\n    counts[key] = value.size;\n  });\n\n  return counts;\n}\n\n/**\n * Get number of occurrences of cell type terms for a set of ids.\n *\n * @param ids Ids of objects to calculate aggregate over.\n * @param store The triple store.\n * @returns Ontology term counts.\n */\nexport function getCellTypeTermOccurences(ids: Set<string>, store: Store): Record<string, number> {\n  const asTerm2entities = getAnatomicalStructureMapping(ids, store);\n  const ctTerm2entities = new Map<string, Set<string>>();\n\n  for (const asTerm of asTerm2entities.keys()) {\n    const entities = asTerm2entities.get(asTerm)!;\n    for (const quad of readQuads(store, null, ccf.asctb.located_in, asTerm, null)) {\n      const cellType = quad.subject.id;\n      if (!ctTerm2entities.has(cellType)) {\n        ctTerm2entities.set(cellType, new Set<string>(entities));\n      } else {\n        const termEntities = ctTerm2entities.get(cellType)!;\n        entities.forEach((value) => termEntities.add(value));\n      }\n    }\n  }\n\n  const counts: Record<string, number> = {};\n\n  ctTerm2entities.forEach((value, key) => {\n    counts[key] = value.size;\n  });\n\n  counts[rui.cell.id] = asTerm2entities.get(rui.body.id)?.size ?? 0;\n\n  return counts;\n}\n","import { memoize } from 'lodash';\nimport { readQuads, Store } from 'triple-store-utils';\nimport { OntologyTreeModel, OntologyTreeNode } from '../interfaces';\nimport { getEntries } from '../util/n3-functions';\nimport { ccf, rui } from '../util/prefixes';\n\n\nexport function getOntologyTreeNode(store: Store, iri: string, relationshipIri: string): OntologyTreeNode {\n  const result: OntologyTreeNode = {\n    '@id': iri, '@type': 'OntologyTreeNode', id: iri, parent: '',\n    children: [] as string[], synonymLabels: [] as string[], label: ''\n  };\n\n  const ontologyTreeNodeResult = {\n    [ccf.ontologyNode.label.id]: 'label',\n    [relationshipIri]: 'parent',\n    [ccf.ontologyNode.synonymLabels.id]: 'synonymLabels',\n  };\n\n  for (const [key, value] of getEntries(store, iri, ontologyTreeNodeResult)) {\n    if (key === 'synonymLabels') {\n      result.synonymLabels.push(value as string);\n    } else {\n      result[key] = value;\n    }\n  }\n  result.children = store.getSubjects(relationshipIri, iri, null).map(s => s.id);\n\n  return result;\n}\n\nexport function getOntologyTreeModel(store: Store, rootIri: string, rootLabel: string, relationshipIri: string): OntologyTreeModel {\n  const result: OntologyTreeModel = { root: rootIri, nodes: {} };\n  const seen = new Set<string>();\n  for (const quad of readQuads(store, null, relationshipIri, null, null)) {\n    seen.add(quad.subject.id);\n    seen.add(quad.object.id);\n  }\n\n  for (const iri of seen) {\n    result.nodes[iri] = getOntologyTreeNode(store, iri, relationshipIri);\n  }\n\n  if (!result.nodes[rootIri]) {\n    result.nodes[rootIri] = {\n      '@id': rootIri,\n      '@type': 'OntologyTreeNode',\n      id: rootIri,\n      label: rootLabel,\n      children: [],\n      synonymLabels: []\n    } as unknown as OntologyTreeNode;\n  }\n\n  const rootChildren = store\n    .getSubjects(relationshipIri, rootIri, null).map(o => o.id)\n    .sort((a, b) => result.nodes[a].label.localeCompare(result.nodes[b].label));\n  result.nodes[rootIri].children = rootChildren;\n\n  treeify(result);\n\n  return result;\n}\n\n/**\n * Recursive function to ensure that the given ontology tree model is actually a tree by essentially using a BFS search.\n *\n * @param model the ontology tree model to mutate\n * @param nodeIri the tree node iri to modify. Starts at root in the base case\n * @param seen a set of IRIs that have been 'seen' so far to remove loops in the graph\n */\nfunction treeify(model: OntologyTreeModel, nodeIri: string | undefined = undefined, seen: Set<string> = new Set()) {\n  const node = model.nodes[nodeIri ?? model.root];\n  if (node) {\n    node.children = node.children.filter(n => !seen.has(n));\n    node.children.forEach(n => seen.add(n));\n    for (const childId of node.children) {\n      treeify(model, childId, seen);\n      if (model.nodes[childId]) {\n        model.nodes[childId].parent = node['@id'];\n      }\n    }\n  }\n}\n\nexport function getAnatomicalStructureTreeModelSlowly(store: Store): OntologyTreeModel {\n  const model = getOntologyTreeModel(store, rui.body.id, 'body', ccf.asctb.part_of.id);\n  model.nodes[rui.body.id].children = [\n    'http://purl.obolibrary.org/obo/UBERON_0000955', // Brain\n    'http://purl.obolibrary.org/obo/UBERON_0000029', // Lymph Node\n    // 'http://purl.obolibrary.org/obo/UBERON_0002509', // Mesenteric Lymph Node\n    'http://purl.obolibrary.org/obo/UBERON_0000970', // Eye\n    // 'http://purl.obolibrary.org/obo/UBERON_0004548', // Eye, L\n    // 'http://purl.org/sig/ont/fma/fma54449', // Eye, R\n    'http://purl.obolibrary.org/obo/UBERON_0003889', // Fallopian Tube\n    // 'http://purl.obolibrary.org/obo/UBERON_0001303', // Fallopian Tube, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0001302', // Fallopian Tube, R\n    'http://purl.obolibrary.org/obo/UBERON_0000948', // Heart\n    'http://purl.obolibrary.org/obo/UBERON_0002113', // Kidney\n    // 'http://purl.obolibrary.org/obo/UBERON_0004538', // Kidney, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0004539', // Kidney, R\n    'http://purl.obolibrary.org/obo/UBERON_0001465', // Knee\n    // 'http://purl.org/sig/ont/fma/fma24978', // Knee, L\n    // 'http://purl.org/sig/ont/fma/fma24977', // Knee, R\n    'http://purl.obolibrary.org/obo/UBERON_0002107', // Liver\n    'http://purl.obolibrary.org/obo/UBERON_0002048', // Lungs\n    'http://purl.obolibrary.org/obo/UBERON_0001911', // Mammary Gland\n    // 'http://purl.org/sig/ont/fma/fma57991', // Mammary Gland, L\n    // 'http://purl.org/sig/ont/fma/fma57987', // Mammary Gland, R\n    'http://purl.obolibrary.org/obo/UBERON_0000992', // Ovary\n    // 'http://purl.org/sig/ont/fma/fma7214', // Ovary, L\n    // 'http://purl.org/sig/ont/fma/fma7213', // Ovary, R\n    'http://purl.obolibrary.org/obo/UBERON_0001264', // Pancreas\n    'http://purl.obolibrary.org/obo/UBERON_0001270', // Pelvis\n    'http://purl.obolibrary.org/obo/UBERON_0001987', // Placenta\n    'http://purl.obolibrary.org/obo/UBERON_0002367', // Prostate\n    'http://purl.obolibrary.org/obo/UBERON_0002097', // Skin\n    'http://purl.obolibrary.org/obo/UBERON_0002108', // Small Intestine\n    'http://purl.obolibrary.org/obo/UBERON_0002240', // Spinal Cord\n    'http://purl.obolibrary.org/obo/UBERON_0000059', // Large Intestine\n    'http://purl.obolibrary.org/obo/UBERON_0002106', // Spleen\n    'http://purl.obolibrary.org/obo/UBERON_0002370', // Thymus\n    'http://purl.obolibrary.org/obo/UBERON_0000056', // Ureter\n    // 'http://purl.obolibrary.org/obo/UBERON_0001223', // Ureter, L\n    // 'http://purl.obolibrary.org/obo/UBERON_0001222', // Ureter, R\n    'http://purl.obolibrary.org/obo/UBERON_0001255', // Urinary Bladder\n    'http://purl.obolibrary.org/obo/UBERON_0000995', // Uterus\n    'http://purl.obolibrary.org/obo/UBERON_0004537' // Blood Vasculature\n  ].filter(iri => iri in model.nodes);\n  return model;\n}\n\nexport const getAnatomicalStructureTreeModel = memoize(getAnatomicalStructureTreeModelSlowly, () => '');\n\nexport function getCellTypeTreeModel(store: Store): OntologyTreeModel {\n  return getOntologyTreeModel(store, rui.cell.id, 'cell', ccf.asctb.ct_is_a.id);\n}\n","import { Store } from 'triple-store-utils';\nimport { DatasetResult, DonorResult, TissueBlockResult, TissueSectionResult } from '../interfaces';\nimport { getEntries, getMappedResult } from '../util/n3-functions';\nimport { entity } from '../util/prefixes';\n\n\n/** Entity iri to property path. */\nconst listResultSet: { [iri: string]: string } = {\n  [entity.label.id]: 'label',\n  [entity.description.id]: 'description',\n  [entity.link.id]: 'link'\n};\n\nconst donorResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.providerName.id]: 'providerName'\n};\n\nconst datasetResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.technology.id]: 'technology',\n  [entity.thumbnail.id]: 'thumbnail',\n};\n\nconst tissueSectionResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.sampleType.id]: 'sampleType',\n  [entity.sectionNumber.id]: 'sectionNumber',\n  [entity.datasets.id]: 'datasets',\n};\n\nconst tissueBlockResultSet: { [iri: string]: string } = {\n  ...listResultSet,\n  [entity.sampleType.id]: 'sampleType',\n  [entity.sectionCount.id]: 'sectionCount',\n  [entity.sectionSize.id]: 'sectionSize',\n  [entity.sectionUnits.id]: 'sectionUnits',\n\n  [entity.donor.id]: 'donor',\n  [entity.spatialEntity.id]: 'spatialEntityId',\n  [entity.sections.id]: 'sections',\n  [entity.datasets.id]: 'datasets',\n};\n\n/**\n * Extracts a single donor result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getDonorResult(store: Store, iri: string): DonorResult {\n  return getMappedResult(store, iri, 'Donor', donorResultSet);\n}\n\n/**\n * Extracts a single dataset result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getDatasetResult(store: Store, iri: string): DatasetResult {\n  return getMappedResult(store, iri, 'Dataset', datasetResultSet);\n}\n\n/**\n * Extracts a single tissue section result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getTissueSectionResult(store: Store, iri: string): TissueSectionResult {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const result = { '@id': iri, '@type': 'Sample', datasets: [] as DatasetResult[] } as TissueSectionResult;\n  for (const [key, value] of getEntries(store, iri, tissueSectionResultSet)) {\n    if (key === 'datasets') {\n      const dataset = getDatasetResult(store, value as string);\n      result[key].push(dataset);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Extracts a single tissue block result from the triple store.\n *\n * @param store The triple store.\n * @param iri The entity id.\n * @returns The list data.\n */\nexport function getTissueBlockResult(store: Store, iri: string): TissueBlockResult {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  const result = { '@id': iri, '@type': 'Sample',\n    sections: [] as TissueSectionResult[], datasets: [] as DatasetResult[]\n  } as TissueBlockResult;\n  for (const [key, value] of getEntries(store, iri, tissueBlockResultSet)) {\n    if (key === 'sections') {\n      const section = getTissueSectionResult(store, value as string);\n      result[key].push(section);\n    } else if (key === 'datasets') {\n      const dataset = getDatasetResult(store, value as string);\n      result[key].push(dataset);\n    } else if (key === 'donor') {\n      result[key] = getDonorResult(store, value as string);\n    } else {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n","import { DatabaseStatus } from '../interfaces';\nimport { CCFDatabase } from '../ccf-database';\n\n\nexport class CCFDatabaseStatusTracker {\n  status: 'Ready' | 'Loading' | 'Error';\n  message?: string;\n  loadTime?: number;\n\n  constructor(public database: CCFDatabase) {\n    this.connect();\n  }\n\n  toJson(): DatabaseStatus {\n    return {\n      status: this.status,\n      message: this.message,\n      checkback: this.status === 'Ready' || this.status === 'Error' ? 60 * 60 * 1000 : 2000,\n      loadTime: this.loadTime\n    };\n  }\n\n  private connect(): Promise<void> {\n    this.status = 'Loading';\n    this.message = 'Loading database';\n\n    const startTime = Date.now();\n    return this.database.connect()\n      .then(async (loaded) => {\n        if (loaded) {\n          // Warm up the database\n          this.message = 'Building scene';\n          await this.database.getScene();\n          this.message = 'Building tissue block results';\n          await this.database.getTissueBlockResults();\n          this.message = 'Aggregating results';\n          await this.database.getAggregateResults();\n          this.status = 'Ready';\n          this.message = 'Database successfully loaded';\n        } else {\n          this.status = 'Error';\n          this.message = 'Unknown error while loading database';\n        }\n      })\n      .catch((error: { message?: string }) => {\n        this.status = 'Error';\n        this.message = error?.message ?? 'Unknown error while loading database';\n      })\n      .finally(() => {\n        this.loadTime = Date.now() - startTime;\n      });\n  }\n}\n","\nimport { Context, JsonLd } from 'jsonld/jsonld-spec';\n\n/* eslint-disable @typescript-eslint/naming-convention */\n/** CCF v2.0 JSON-LD Context */\nconst CCF_CONTEXT = {\n  '@context': {\n    '@base': 'http://purl.org/ccf/',\n    '@vocab': 'http://purl.org/ccf/',\n    'ccf': 'http://purl.org/ccf/',\n    'rdfs': 'http://www.w3.org/2000/01/rdf-schema#',\n    'dcterms': 'http://purl.org/dc/terms/',\n    'label': 'rdfs:label',\n    'description': 'rdfs:comment',\n    'link': 'ccf:url',\n    'sex': 'ccf:sex',\n    'age': 'ccf:age',\n    'bmi': 'ccf:bmi',\n    'consortium_name': 'ccf:consortium_name',\n    'provider_name': 'ccf:tissue_provider_name',\n    'provider_uuid': 'ccf:tissue_provider_uuid',\n    'donor': {\n      '@id': 'ccf:comes_from',\n      '@type': '@id'\n    },\n    'samples': {\n      '@reverse': 'donor'\n    },\n    'sections': {\n      '@id': 'ccf:subdivided_into_sections',\n      '@type': '@id'\n    },\n    'datasets': {\n      '@id': 'ccf:generates_dataset',\n      '@type': '@id'\n    },\n    'sample_type': 'ccf:sample_type',\n    'section_count': 'ccf:section_count',\n    'section_size': 'ccf:section_size',\n    'section_units': 'ccf:section_size_unit',\n    'section_number': 'ccf:section_number',\n    'rui_location': {\n      '@id': 'ccf:has_registration_location',\n      '@type': '@id'\n    },\n    'ccf_annotations': {\n      '@id': 'ccf:collides_with',\n      '@type': '@id',\n      '@container': '@set'\n    },\n    'representation_of': {\n      '@id': 'ccf:representation_of',\n      '@type': '@id'\n    },\n    'reference_organ': {\n      '@id': 'ccf:has_reference_organ',\n      '@type': '@id'\n    },\n    'extraction_set_for': {\n      '@id': 'ccf:extraction_set_for',\n      '@type': '@id'\n    },\n    'extraction_set': {\n      '@id': 'ccf:has_extraction_set',\n      '@type': '@id'\n    },\n    'organ_owner_sex': 'ccf:organ_owner_sex',\n    'side': 'ccf:organ_side',\n    'rui_rank': 'ccf:rui_rank',\n    'slice_thickness': 'ccf:slice_thickness',\n    'slice_count': 'ccf:slice_count',\n    'object': {\n      '@id': 'ccf:has_object_reference',\n      '@type': '@id'\n    },\n    'creation_date': 'dcterms:created',\n    'updated_date': 'ccf:updated_date',\n    'creator': 'dcterms:creator',\n    'creator_first_name': 'ccf:creator_first_name',\n    'creator_last_name': 'ccf:creator_last_name',\n    'placement': {\n      '@reverse': 'ccf:placement_for'\n    },\n    'placement_date': 'dcterms:created',\n    'rotation_order': 'ccf:rotation_order',\n    'dimension_units': 'ccf:dimension_unit',\n    'rotation_units': 'ccf:rotation_unit',\n    'scaling_units': 'ccf:scaling_unit',\n    'translation_units': 'ccf:translation_unit',\n    'source': {\n      '@id': 'ccf:placement_for',\n      '@type': '@id'\n    },\n    'target': {\n      '@id': 'ccf:placement_relative_to',\n      '@type': '@id'\n    },\n    'x_rotation': 'ccf:x_rotation',\n    'y_rotation': 'ccf:y_rotation',\n    'z_rotation': 'ccf:z_rotation',\n    'x_scaling': 'ccf:x_scaling',\n    'y_scaling': 'ccf:y_scaling',\n    'z_scaling': 'ccf:z_scaling',\n    'x_translation': 'ccf:x_translation',\n    'y_translation': 'ccf:y_translation',\n    'z_translation': 'ccf:z_translation',\n    'x_dimension': 'ccf:x_dimension',\n    'y_dimension': 'ccf:y_dimension',\n    'z_dimension': 'ccf:z_dimension',\n    'ontology_terms': {\n      '@id': 'ccf:has_ontology_term',\n      '@type': '@id'\n    },\n    'technology': 'ccf:technology',\n    'thumbnail': 'ccf:thumbnail',\n    'file': 'ccf:file_url',\n    'file_format': 'ccf:file_format',\n    'file_subpath': 'ccf:file_subpath'\n  }\n};\n/* eslint-enable @typescript-eslint/naming-convention */\n\n/**\n * Function which takes JSON-LD data and makes patches to update from CCF v1.x to v2.0 automatically\n *\n * @param jsonLdString the input JSON-LD as a string\n * @returns A JSON-LD object derived from the given string with updated data to be compatible with CCF v2.0\n */\nexport function patchJsonLd(jsonLdString: string): JsonLd {\n  return JSON.parse(jsonLdString, (key, value) => {\n    if (key === 'ccf_annotations' && Array.isArray(value)) {\n      return value.map((iri: string) => {\n        if (iri?.startsWith('http://purl.obolibrary.org/obo/FMA_')) {\n          return iri.replace(\n            'http://purl.obolibrary.org/obo/FMA_',\n            'http://purl.org/sig/ont/fma/fma'\n          );\n        } else {\n          return iri;\n        }\n      });\n    } else if (key === '@context' && value && (\n      value === 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-entity-context.jsonld'\n        || value === 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld'\n        || value === 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld'\n        || (value as Context)['@base'] === 'http://purl.org/ccf/latest/ccf-entity.owl#'\n    )) {\n      return CCF_CONTEXT;\n    }\n    return value;\n  });\n}\n","import { Store, readQuads, DataFactory, NamedNode } from 'triple-store-utils';\nimport { getAnatomicalStructureTreeModel } from '../queries/ontology-tree-n3';\nimport { ccf, entity } from './prefixes';\n\n\n/**\n * Function to add additional ccf_annotations to rui locations based on the\n * reference organ it was placed relative to.\n *\n * @param store the triple store holding the CCF.OWL data\n */\nexport function enrichRuiLocations(store: Store): void {\n  const tree = getAnatomicalStructureTreeModel(store);\n  const refOrganMap: Map<string, NamedNode[]> = new Map();\n\n  // Build a map from reference organ to ccf annotations via representation_of and the AS partonomy\n  for (const { subject: organ, object: term } of readQuads(store, null, ccf.spatialEntity.representation_of, null, null)) {\n    const annotations = new Set([term.id]);\n    let parent = tree.nodes[term.id]?.parent;\n    while (parent) {\n      if (annotations.has(parent)) {\n        break;\n      } else {\n        annotations.add(parent);\n        parent = tree.nodes[parent]?.parent;\n      }\n    }\n    refOrganMap.set(organ.id, [ ...annotations].map(s => DataFactory.namedNode(s)));\n  }\n\n  // Add AS terms for rui locations based on the reference organs they are placed relative to\n  for (const { object: ruiLocation } of readQuads(store, null, entity.spatialEntity, null, null)) {\n    for (const { subject: placement } of readQuads(store, null, ccf.spatialPlacement.source, ruiLocation, null)) {\n      for (const { object: organ } of readQuads(store, placement, ccf.spatialPlacement.target, null, null)) {\n        for (const term of refOrganMap.get(organ.id) ?? []) {\n          store.addQuad(DataFactory.namedNode(ruiLocation.id), ccf.spatialEntity.ccf_annotations, term);\n        }\n      }\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/member-ordering */\nimport { delMany, get, setMany } from 'idb-keyval';\nimport { JsonLd } from 'jsonld/jsonld-spec';\nimport {\n  addJsonLdToStore, addN3ToStore, addRdfXmlToStore, DataFactory, deserializeN3Store, Quad, serializeN3Store, Store\n} from 'triple-store-utils';\n\nimport { CCFSpatialGraph } from './ccf-spatial-graph';\nimport { CCFSpatialScene, SpatialSceneNode } from './ccf-spatial-scene';\nimport { searchHubmap } from './hubmap/hubmap-data-import';\nimport { AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, TissueBlockResult } from './interfaces';\nimport { getAggregateResults, getDatasetTechnologyNames, getProviderNames } from './queries/aggregate-results-n3';\nimport { findIds } from './queries/find-ids-n3';\nimport { getCellTypeTermOccurences, getOntologyTermOccurences } from './queries/ontology-term-occurences-n3';\nimport { getAnatomicalStructureTreeModel, getCellTypeTreeModel } from './queries/ontology-tree-n3';\nimport { getSpatialEntityForEntity } from './queries/spatial-result-n3';\nimport { getTissueBlockResult } from './queries/tissue-block-result-n3';\nimport { FlatSpatialPlacement, SpatialEntity } from './spatial-types';\nimport { CCFDatabaseStatusTracker } from './util/ccf-database-status-tracker';\nimport { patchJsonLd } from './util/patch-jsonld';\nimport { enrichRuiLocations } from './util/enrich-rui-locations';\n\n\n/** Database initialization options. */\nexport interface CCFDatabaseOptions {\n  /** A url to load data from. */\n  ccfOwlUrl: string;\n  /** Context. */\n  ccfContextUrl: string;\n  /** A list of data sources (in n3, rdf, xml, owl, or jsonld format) */\n  dataSources: (string|JsonLd)[];\n  /** Data service type. */\n  hubmapDataService: 'static' | 'search-api';\n  /** HuBMAP Elastic Search Query */\n  hubmapQuery?: unknown;\n  /** Hubmap Portal url. */\n  hubmapPortalUrl: string;\n  /** Hubmap data url. */\n  hubmapDataUrl: string;\n  /** Hubmap assets api url. */\n  hubmapAssetsUrl: string;\n  /** HuBMAP Service Token. */\n  hubmapToken?: string;\n}\n\n/** Default initialization options. */\nexport const DEFAULT_CCF_DB_OPTIONS: CCFDatabaseOptions = {\n  ccfOwlUrl: 'https://purl.org/ccf/latest/ccf.owl',\n  ccfContextUrl: 'https://purl.org/ccf/latest/ccf-context.jsonld',\n  dataSources: [],\n  hubmapDataService: 'static',\n  hubmapPortalUrl: 'https://portal.hubmapconsortium.org/',\n  hubmapDataUrl: '',\n  hubmapAssetsUrl: 'https://assets.hubmapconsortium.org'\n};\n\n/** Database provider. */\nexport class CCFDatabase {\n  /** The triple store. */\n  store: Store;\n  /** The spatial graph */\n  graph: CCFSpatialGraph;\n  /** Creates SpatialEntity Scenes */\n  scene: CCFSpatialScene;\n  /** If the database is initialized */\n  private initializing?: Promise<void>;\n\n  private status: CCFDatabaseStatusTracker;\n\n  /**\n   * Creates an instance of ccfdatabase.\n   *\n   * @param [options] Initialization options.\n   */\n  constructor(public options: CCFDatabaseOptions = DEFAULT_CCF_DB_OPTIONS) {\n    this.store = new Store(undefined, { factory: DataFactory });\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n  }\n\n  /**\n   * Connects the database.\n   *\n   * @param [options] Options used to initialize.\n   * @returns A promise resolving to true if data has been loaded into the database.\n   */\n  async connect(options?: CCFDatabaseOptions, cached = false): Promise<boolean> {\n    if (options) {\n      this.options = options;\n    }\n    if (!this.initializing) {\n      if (cached) {\n        this.initializing = this.cachedConnect();\n      } else {\n        this.initializing = this.doConnect();\n      }\n    }\n    await this.initializing;\n    return this.store.size > 0;\n  }\n\n  private async cachedConnect(): Promise<void> {\n    const start = new Date().getTime();\n    const lastModifiedKey = 'ccf-database.last_modified';\n    const ccfDatabaseKey = 'ccf-database';\n\n    const lastModified = await get(lastModifiedKey).catch(() => undefined);\n    let serializedDb: string | undefined;\n\n    if (lastModified && start - new Date(+lastModified).getTime() > 60*60*1000) {\n      await delMany([ccfDatabaseKey, lastModifiedKey]).catch(() => undefined);\n    } else {\n      serializedDb = await get(ccfDatabaseKey).catch(() => undefined);\n    }\n\n    if (serializedDb) {\n      await this.deserialize(serializedDb);\n    } else {\n      await this.doConnect();\n\n      setMany([\n        [ccfDatabaseKey, this.serialize()],\n        [lastModifiedKey, '' + start]\n      ]).catch(() => undefined);\n    }\n  }\n\n  /**\n   * Actually connects to the database.\n   *\n   * @returns A promise resolving to void when connected.\n   */\n  private async doConnect(): Promise<void> {\n    const ops: Promise<unknown>[] = [];\n    const sources: (string|JsonLd)[] = this.options.dataSources?.concat() ?? [];\n\n    const ccfOwlUrl = this.options.ccfOwlUrl;\n    if (ccfOwlUrl.startsWith('{')) {\n      // serialized n3 store was provided as the ccfOwlUrl\n      this.store = deserializeN3Store(ccfOwlUrl, DataFactory);\n    } else if (ccfOwlUrl.endsWith('.n3store.json')) {\n      const storeString = await fetch(ccfOwlUrl).then(r => r.text())\n        .catch(() => console.log('Couldn\\'t locate serialized store.'));\n      if (storeString) {\n        this.store = deserializeN3Store(storeString, DataFactory);\n      }\n    } else if (ccfOwlUrl?.length > 0) {\n      sources.push(ccfOwlUrl);\n    }\n    if (this.options.hubmapDataUrl) {\n      if (this.options.hubmapDataUrl.endsWith('jsonld')) {\n        sources.push(this.options.hubmapDataUrl);\n      } else {\n        ops.push(searchHubmap(\n          this.options.hubmapDataUrl,\n          this.options.hubmapDataService,\n          this.options.hubmapQuery,\n          this.options.hubmapToken,\n          this.options.hubmapAssetsUrl,\n          this.options.hubmapPortalUrl\n        ).then((jsonld) => {\n          if (jsonld) {\n            return this.addDataSources([jsonld]);\n          } else {\n            return undefined;\n          }\n        }));\n      }\n    }\n    ops.push(this.addDataSources(sources));\n    await Promise.all(ops);\n    await this.synchronize();\n  }\n\n  async addDataSources(sources: (string|JsonLd)[], inputStore?: Store): Promise<this> {\n    const store: Store = inputStore ?? this.store;\n    await Promise.all(\n      sources.map(async (source) => {\n        if (typeof source === 'string') {\n          if ((source.startsWith('http') || source.startsWith('assets/')) && source.includes('jsonld')) {\n            source = await fetch(source).then(r => r.text());\n            source = patchJsonLd(source as string);\n            await addJsonLdToStore(source, store);\n          } else if (source.endsWith('n3')) {\n            await addN3ToStore(source, store);\n          } else if (source.endsWith('rdf') || source.endsWith('owl') || source.endsWith('xml')) {\n            await addRdfXmlToStore(source, store);\n          } else {\n            // Passthrough assumes a JSON-LD response\n            source = patchJsonLd(source);\n            await addJsonLdToStore(source, store);\n          }\n        } else {\n          source = patchJsonLd(JSON.stringify(source));\n          await addJsonLdToStore(source, store);\n        }\n      })\n    );\n    return this;\n  }\n\n  async synchronize(): Promise<this> {\n    // Add a small delay to allow the triple store to settle\n    await new Promise(r => {\n      setTimeout(r, 500);\n    });\n    this.graph.createGraph();\n    enrichRuiLocations(this.store);\n    return this;\n  }\n\n  serialize(): string {\n    return serializeN3Store(this.store);\n  }\n\n  async deserialize(value: string): Promise<void> {\n    this.store = deserializeN3Store(value, DataFactory);\n    this.graph = new CCFSpatialGraph(this);\n    this.scene = new CCFSpatialScene(this);\n    await new Promise(r => {\n      setTimeout(r, 10);\n    });\n  }\n\n  /**\n   * Gets all ids matching the filter.\n   *\n   * @param [filter] The filter.\n   * @returns A set of all matching ids.\n   */\n  getIds(filter: Filter = {} as Filter): Set<string> {\n    return findIds(this.store, this.graph, filter);\n  }\n\n  /**\n   * Gets the data for an object.\n   *\n   * @param id The id of the requested object.\n   * @returns The object data.\n   */\n  get(id: string): Quad[] {\n    return this.store.getQuads(DataFactory.namedNode(id), null, null, null);\n  }\n\n  /**\n   * Gets the data for objects matching a filter.\n   *\n   * @param [filter] The filter.\n   * @returns An array of data.\n   */\n  search(filter: Filter = {} as Filter): Quad[][] {\n    return [...this.getIds(filter)].map((s) => this.get(s));\n  }\n\n  /**\n   * Gets all spatial entities for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of spatial entities.\n   */\n  getSpatialEntities(filter?: Filter): SpatialEntity[] {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    filter = { ...filter, hasSpatialEntity: true } as Filter;\n    return [...this.getIds(filter)].map((s) => getSpatialEntityForEntity(this.store, s) as SpatialEntity);\n  }\n\n  async getDatabaseStatus(): Promise<DatabaseStatus> {\n    if (!this.status) {\n      this.status = new CCFDatabaseStatusTracker(this);\n    }\n    return this.status.toJson();\n  }\n\n  /**\n   * Get a list of technology names used by datasets\n   *\n   * @returns list of unique technology names in the data\n   */\n  async getDatasetTechnologyNames(): Promise<string[]> {\n    return getDatasetTechnologyNames(this.store);\n  }\n\n  /**\n   * Get a list of provider names from the database\n   *\n   * @returns list of unique provider names in the data\n   */\n  async getProviderNames(): Promise<string[]> {\n    return getProviderNames(this.store);\n  }\n\n  /**\n   * Gets all tissue block results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of results.\n   */\n  async getTissueBlockResults(filter?: Filter): Promise<TissueBlockResult[]> {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    filter = { ...filter, hasSpatialEntity: true } as Filter;\n    return [...this.getIds(filter)].map((s) => getTissueBlockResult(this.store, s));\n  }\n\n  /**\n   * Gets all aggregate results for a filter.\n   *\n   * @param [filter] The filter.\n   * @returns A list of aggregate data.\n   */\n  async getAggregateResults(filter?: Filter): Promise<AggregateResult[]> {\n    return getAggregateResults(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of ontology terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Ontology term counts.\n   */\n  async getOntologyTermOccurences(filter?: Filter): Promise<Record<string, number>> {\n    return getOntologyTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get number of occurrences of cell type terms for a set of ids.\n   *\n   * @param [filter] The filter.\n   * @returns Cell type term counts.\n   */\n  async getCellTypeTermOccurences(filter?: Filter): Promise<Record<string, number>> {\n    return getCellTypeTermOccurences(this.getIds(filter), this.store);\n  }\n\n  /**\n   * Get ontology term tree nodes\n   *\n   * @returns Ontology term counts.\n   */\n  async getOntologyTreeModel(): Promise<OntologyTreeModel> {\n    return getAnatomicalStructureTreeModel(this.store);\n  }\n\n  /**\n   * Get cell type term tree nodes\n   *\n   * @returns Ontology term counts.\n   */\n  async getCellTypeTreeModel(): Promise<OntologyTreeModel> {\n    return getCellTypeTreeModel(this.store);\n  }\n\n  /**\n   * Get reference organs\n   *\n   * @returns Ontology term counts.\n   */\n  async getReferenceOrgans(): Promise<SpatialEntity[]> {\n    return this.scene.getReferenceOrgans();\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference body, organs, and tissues\n   *\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getScene(filter?: Filter): Promise<SpatialSceneNode[]> {\n    this.graph.createGraph();\n    return this.scene.getScene(filter);\n  }\n\n  /**\n   * Get all nodes to form the 3D scene of reference organ and tissues\n   *\n   * @param [organIri] The Reference Organ IRI\n   * @param [filter] The filter.\n   * @returns A list of Spatial Scene Nodes for the 3D Scene\n   */\n  async getReferenceOrganScene(organIri: string, filter?: Filter): Promise<SpatialSceneNode[]> {\n    this.graph.createGraph();\n    return this.scene.getReferenceOrganScene(organIri, filter);\n  }\n\n  async getSpatialPlacement(source: SpatialEntity, targetIri: string): Promise<FlatSpatialPlacement | undefined> {\n    return this.graph.getSpatialPlacement(source, targetIri);\n  }\n}\n","import { Matrix4, toRadians } from '@math.gl/core';\nimport { SpatialSceneNode } from '../ccf-spatial-scene';\nimport { SpatialSearch } from '../interfaces';\nimport { SpatialEntity } from '../spatial-types';\n\ntype Color = [number, number, number, number];\nconst gold: Color = [240, 183, 98, 255];\nconst red: Color = [213, 0, 0, 255];\nconst green: Color = [29, 204, 101, 255];\nconst blue: Color = [41, 121, 255, 255];\n\n/**\n * Create a set of scene nodes for the body-ui to show the probing sphere and lines around it\n * for a given spatial search.\n * @param node the Spatial Entity (usually a reference organ) that the sphere is probing into\n * @param sphere the Spatial Search that defines where and how big the probing sphere is\n * @returns a set of scene nodes for the body-ui\n */\nexport function getProbingSphereScene(node: SpatialEntity, sphere?: SpatialSearch): SpatialSceneNode[] {\n  const sceneWidth = node.x_dimension / 1000;\n  const sceneHeight = node.y_dimension / 1000;\n  const sceneDepth = node.z_dimension / 1000;\n  const defaultSphereRadius = Math.max(sceneWidth, sceneHeight, sceneDepth) * 0.07;\n  const sphereLineRadius = defaultSphereRadius * 0.05;\n  const sphereLineLength = defaultSphereRadius * 2;\n  const sphereConeRadius = sphereLineRadius * 4;\n\n  if (!sphere) {\n    sphere = {\n      target: node.representation_of ?? node['@id'],\n      radius: defaultSphereRadius,\n      x: sceneWidth / 2,\n      y: sceneHeight / 2,\n      z: sceneDepth / 2\n    };\n  } else {\n    sphere = {\n      ...sphere,\n      radius: sphere.radius / 1000,\n      x: sphere.x / 1000,\n      y: sphere.y / 1000,\n      z: sphere.z / 1000\n    };\n  }\n\n  return [\n    // Probing Sphere\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingSphere',\n      '@type': 'SpatialSceneNode',\n      unpickable: false,\n      geometry: 'sphere',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([sphere.x, sphere.y, sphere.z]).scale(sphere.radius),\n      color: gold\n    },\n    // Probing Sphere Positive X Axis (D)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXD',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength / 2, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXDCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([ sphereConeRadius, sphereConeRadius * 3, sphereConeRadius ]),\n      color: red\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXDLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'D',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x + sphere.radius + sphereLineLength + sphereConeRadius * 3, sphere.y, sphere.z])\n        .scale(sphereConeRadius),\n      color: red\n    },\n    // Probing Sphere Negative X Axis (A)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXA',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength / 2, sphere.y, sphere.z])\n        .rotateZ(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: red\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXACone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength, sphere.y, sphere.z])\n        .rotateZ(toRadians(90))\n        .scale([ sphereConeRadius, sphereConeRadius * 3, sphereConeRadius ]),\n      color: red\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereXALabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'A',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x - sphere.radius - sphereLineLength - sphereConeRadius * 3.5, sphere.y, sphere.z])\n        .scale(sphereConeRadius),\n      color: red\n    },\n    // Probing Sphere Positive Y Axis (W)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYW',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength / 2, sphere.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYWCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength, sphere.z])\n        .scale([ sphereConeRadius, sphereConeRadius * 3, sphereConeRadius ]),\n      color: green\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYWLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'W',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y + sphere.radius + sphereLineLength + sphereConeRadius * 3, sphere.z])\n        .scale(sphereConeRadius),\n      color: green\n    },\n    // Probing Sphere Negative Y Axis (S)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYS',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength / 2, sphere.z])\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: green\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYSCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength, sphere.z])\n        .rotateZ(toRadians(180))\n        .scale([ sphereConeRadius, sphereConeRadius * 3, sphereConeRadius ]),\n      color: green\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereYSLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'S',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y - sphere.radius - sphereLineLength - sphereConeRadius * 3.5, sphere.z])\n        .scale(sphereConeRadius),\n      color: green\n    },\n    // Probing Sphere Positive Z Axis (E)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZE',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength / 2])\n        .rotateX(toRadians(90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZECone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength])\n        .rotateX(toRadians(90))\n        .scale([ sphereConeRadius, sphereConeRadius * 3, sphereConeRadius ]),\n      color: blue\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZELabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'E',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z + sphere.radius + sphereLineLength + sphereConeRadius * 3])\n        .scale(sphereConeRadius),\n      color: blue\n    },\n    // Probing Sphere Negative Z Axis (Q)\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength / 2])\n        .rotateX(toRadians(-90))\n        .scale([sphereLineRadius, sphereLineLength, sphereLineRadius]),\n      color: blue\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength])\n        .rotateX(toRadians(-90))\n        .scale([ sphereConeRadius, sphereConeRadius * 3, sphereConeRadius ]),\n      color: blue\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#ProbingsphereZQLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'Q',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sphere.x, sphere.y, sphere.z - sphere.radius - sphereLineLength - sphereConeRadius * 3.5])\n        .scale(sphereConeRadius),\n      color: blue\n    }\n  ];\n}\n","import { Matrix4, toRadians } from '@math.gl/core';\nimport { SpatialSceneNode } from '../ccf-spatial-scene';\nimport { SpatialEntity } from '../spatial-types';\n\n\ntype Color = [number, number, number, number];\nconst gray: Color = [204, 204, 204, 255];\nconst red: Color = [213, 0, 0, 255];\nconst green: Color = [29, 204, 101, 255];\nconst blue: Color = [41, 121, 255, 255];\n\n/**\n * Create a set of scene nodes for the body-ui to show the origin and lines extending to it's dimensions.\n * @param node the Spatial Entity (usually a reference organ) that the origin is defined by\n * @param includeLetters whether to show the keyboard letters associated with the origin points\n * @returns a set of scene nodes for the body-ui\n */\nexport function getOriginScene(node: SpatialEntity, includeLetters = false): SpatialSceneNode[] {\n  const sceneWidth = node.x_dimension / 1000;\n  const sceneHeight = node.y_dimension / 1000;\n  const sceneDepth = node.z_dimension / 1000;\n  const originRadius = Math.max(sceneWidth, sceneHeight, sceneDepth) * 0.05;\n  const lineRadius = originRadius * 0.1;\n\n  return [\n    // Origin Sphere\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginSphere',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'sphere',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale(originRadius),\n      color: gray\n    },\n    // Origin X Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginX',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sceneWidth / 2, 0, 0])\n        .rotateZ(toRadians(-90))\n        .scale([lineRadius, sceneWidth, lineRadius]),\n      color: red\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([sceneWidth, 0, 0])\n        .rotateZ(toRadians(-90))\n        .scale([ originRadius, originRadius * 3, originRadius ]),\n      color: red\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXALabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'A',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([-originRadius * 2, 0, 0]).scale(originRadius),\n      color: red\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginXDLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'D',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([sceneWidth + originRadius * 2, 0, 0]).scale(originRadius),\n      color: red\n    },\n    // Origin Y Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginY',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([0, sceneHeight / 2, 0])\n        .scale([lineRadius, sceneHeight, lineRadius]),\n      color: green\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([0, sceneHeight, 0])\n        .scale([ originRadius, originRadius * 3, originRadius ]),\n      color: green\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYSLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'S',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([originRadius * 1.5, originRadius * 1.5, 0]).scale(originRadius),\n      color: green\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginYWLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'W',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([0, sceneHeight + originRadius * 2, 0]).scale(originRadius),\n      color: green\n    },\n    // Origin Z Axis\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZ',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cylinder',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([0, 0, sceneDepth / 2])\n        .rotateX(toRadians(90))\n        .scale([lineRadius, sceneDepth, lineRadius]),\n      color: blue\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZCone',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'cone',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([0, 0, sceneDepth])\n        .rotateX(toRadians(90))\n        .scale([ originRadius, originRadius * 3, originRadius ]),\n      color: blue\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZQLabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'Q',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([originRadius * 1.5, - originRadius * 1.5, 0]).scale(originRadius),\n      color: blue\n    },\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#OriginZELabel',\n      '@type': 'SpatialSceneNode',\n      unpickable: true,\n      geometry: 'text',\n      text: 'E',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).translate([0, 0, sceneDepth + originRadius * 2]).scale(originRadius),\n      color: blue\n    }\n  ].filter(n => (includeLetters && n.geometry === 'text' && n.text) || !n.text) as SpatialSceneNode[];\n}\n","/*\n * Public API Surface of ccf\n */\nexport * from './lib/ccf-database';\nexport * from './lib/ccf-spatial-scene';\nexport * from './lib/interfaces';\nexport * from './lib/spatial-types';\nexport * from './lib/hubmap/hubmap-data-import';\nexport * from './lib/util/ccf-database-status-tracker';\nexport * from './lib/util/probing-sphere-scene';\nexport * from './lib/util/origin-scene';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["uuidV4","get","red","green","blue"],"mappings":"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"}