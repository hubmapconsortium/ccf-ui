var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.801,1,1.056]],["body/components/AppComponent.html",[0,1.072,1,1.545,2,1.584,3,0.548,4,0.728,5,1.483,6,1.77,7,1.77,8,1.269,9,0.471,10,0.893,11,0.618,12,0.618,13,1.483,14,1.483,15,1.831,16,1.483,17,2.147,18,1.076,19,1.412,20,2.552,21,2.993,22,2.552,23,2.552,24,0.548,25,0.914,26,1.906,27,3.276,28,1.173,29,2.157,30,1.858,31,1.831,32,2.596,33,2.509,34,2.35,35,2.552,36,2.147,37,2.147,38,2.147,39,1.379,40,1.77,41,1.348,42,2.993,43,2.034,44,2.147,45,2.35,46,2.102,47,2.204,48,1.099,49,0.055,50,1.858,51,0.924,52,0.835,53,2.139,54,2.676,55,2.204,56,2.204,57,2.204,58,2.204,59,1.099,60,2.509,61,2.993,62,2.204,63,2.552,64,2.552,65,2.552,66,2.204,67,1.858,68,2.147,69,2.139,70,2.204,71,2.552,72,2.204,73,2.552,74,2.552,75,2.552,76,2.204,77,1.489,78,1.77,79,1.269,80,1.77,81,2.35,82,1.77,83,1.269,84,0.634,85,0.548,86,1.269,87,1.77,88,1.269,89,1.379,90,1.099,91,0.957,92,1.77,93,1.77,94,1.05,95,0.634,96,0.835,97,1.099,98,1.204,99,1.099,100,1.77,101,0.728,102,1.348,103,1.771,104,1.269,105,1.269,106,1.099,107,1.269,108,1.77,109,0.957,110,2.139,111,1.77,112,1.77,113,1.77,114,1.77,115,2.552,116,1.77,117,1.77,118,1.483,119,1.77,120,2.492,121,1.77,122,1.483,123,1.269,124,1.77,125,3.474,126,1.77,127,3.474,128,1.77,129,3.474,130,1.77,131,2.552,132,2.993,133,3.033,134,2.552,135,2.35,136,1.77,137,1.77,138,1.77,139,2.204,140,2.552,141,1.77,142,1.269,143,2.552,144,1.831,145,1.77,146,3.276,147,1.77,148,1.77,149,0.835,150,1.269,151,1.77,152,1.77,153,0.031,154,0.031]],["title/modules/AppModule.html",[155,1.39,156,1.606]],["body/modules/AppModule.html",[1,1.924,3,0.82,4,1.089,9,0.704,10,0.758,11,0.569,12,0.569,18,0.82,26,1.248,31,1.899,34,1.899,46,1.431,49,0.054,59,1.643,77,1.705,84,0.948,85,0.82,94,1.089,101,1.089,103,1.431,142,1.899,149,1.924,150,1.899,153,0.041,154,0.041,155,1.643,156,3.059,157,1.643,158,1.643,159,3.681,160,2.647,161,2.811,162,2.647,163,2.647,164,2.647,165,2.647,166,2.533,167,2.811,168,2.219,169,3.297,170,3.353,171,4.585,172,3.297,173,3.353,174,4.177,175,4.821,176,3.353,177,3.297,178,2.647,179,4.177,180,2.647,181,1.899,182,2.647,183,2.219,184,1.431,185,3.297,186,3.297,187,4.177,188,2.647,189,3.297,190,4.177,191,3.297,192,3.297,193,3.297]],["title/components/AppWebComponent.html",[0,0.801,149,1.056]],["body/components/AppWebComponent.html",[0,1.166,1,0.975,2,2.022,3,0.64,4,0.85,5,2.386,7,2.066,8,1.482,9,0.55,10,0.911,11,0.623,12,0.623,14,1.732,15,2.042,16,2.386,17,2.517,18,1.179,19,1.536,24,0.64,25,1.019,26,1.536,28,1.362,35,2.847,36,2.336,37,2.336,38,2.336,39,1.539,41,1.444,44,2.517,45,2.517,46,2.147,48,1.283,49,0.054,50,2.022,51,1.073,52,0.975,54,2.797,77,1.515,81,2.517,83,1.482,84,0.74,85,0.64,89,1.897,90,1.283,91,1.117,94,1.171,95,0.74,97,2.022,98,1.795,99,2.022,101,0.85,102,1.34,109,1.117,142,1.482,143,2.847,144,2.042,145,2.066,146,3.509,147,2.066,148,2.066,149,1.655,150,2.336,151,2.066,152,2.066,153,0.035,154,0.035,184,2.179,194,2.892,195,1.482,196,2.847,197,3.257,198,3.257,199,3.546,200,2.574,201,3.546,202,2.847,203,2.517,204,2.574,205,2.574,206,2.574,207,2.574,208,2.574,209,2.574,210,2.042,211,3.509,212,2.066,213,2.066,214,1.482,215,1.482,216,2.042,217,2.066,218,1.482,219,1.732,220,2.066,221,2.066,222,2.066,223,2.066,224,2.386,225,2.066,226,1.732,227,2.066,228,1.732,229,2.066,230,2.066,231,1.732,232,2.066,233,2.066,234,2.066,235,2.066,236,1.482]],["title/injectables/DataSourceService.html",[237,1.39,238,1.606]],["body/injectables/DataSourceService.html",[3,0.363,4,1.459,8,1.902,9,0.312,10,0.883,11,0.604,12,0.604,18,0.822,19,0.553,24,0.363,25,0.668,26,1.365,28,1.036,29,1.159,30,1.159,31,1.339,32,2.597,33,1.949,39,1.009,41,1.091,46,2.093,48,2.084,49,0.055,50,2.084,51,1.02,52,1.583,59,2.464,60,1.565,67,0.728,68,0.841,77,1.423,84,0.42,85,0.363,86,0.841,88,0.841,94,0.482,96,1.097,98,1.097,101,0.482,102,1.191,103,1.257,104,1.668,105,1.668,106,1.159,107,1.339,109,1.991,110,0.983,118,0.983,120,0.841,133,0.983,153,0.048,154,0.023,173,2.325,188,1.172,210,0.841,214,0.841,215,0.841,218,0.841,228,1.565,237,1.159,238,1.339,239,0.983,240,2.803,241,2.426,242,0.841,243,3.841,244,1.867,245,3.088,246,3.459,247,2.897,248,2.897,249,2.325,250,3.303,251,2.325,252,2.325,253,3.303,254,2.325,255,3.303,256,2.325,257,3.303,258,2.325,259,2.325,260,3.303,261,1.461,262,3.303,263,2.325,264,2.325,265,2.325,266,2.325,267,2.325,268,2.325,269,2.895,270,3.459,271,1.461,272,1.461,273,2.325,274,3.597,275,1.461,276,2.325,277,3.303,278,3.083,279,3.546,280,3.546,281,3.556,282,4.824,283,2.325,284,1.461,285,2.651,286,3.303,287,3.303,288,1.461,289,2.651,290,2.325,291,1.461,292,2.651,293,1.461,294,2.325,295,1.461,296,0.841,297,1.461,298,1.565,299,2.325,300,1.461,301,1.867,302,1.867,303,2.325,304,1.461,305,1.867,306,1.565,307,1.461,308,1.461,309,2.325,310,2.711,311,1.461,312,2.325,313,1.867,314,2.897,315,2.325,316,1.461,317,0.841,318,1.172,319,1.461,320,1.172,321,2.325,322,1.461,323,2.325,324,1.461,325,1.172,326,0.983,327,1.461,328,1.867,329,1.172,330,2.325,331,1.867,332,0.983,333,1.461,334,1.172,335,1.172,336,1.172,337,1.172,338,1.867,339,0.983,340,1.172,341,1.461,342,1.461,343,1.172,344,1.461,345,1.461,346,1.461,347,1.461,348,1.461,349,1.461,350,1.461,351,1.461,352,1.461,353,1.172,354,1.461,355,1.461,356,3.606,357,4.309,358,4.309,359,1.461,360,4.309,361,1.461,362,1.461,363,1.461,364,1.461,365,1.461,366,1.461,367,1.461,368,1.461,369,2.325,370,1.172,371,2.325,372,1.461,373,1.461,374,1.172,375,2.325,376,1.461,377,1.461,378,1.461,379,1.461]],["title/injectables/FilteredSceneService.html",[43,1.39,237,1.39]],["body/injectables/FilteredSceneService.html",[3,0.428,4,1.192,9,0.367,10,0.896,11,0.613,12,0.613,18,0.657,19,0.651,24,0.428,25,0.759,26,1.981,28,1.231,29,2.57,30,1.603,31,1.521,32,2.888,39,1.146,40,1.38,41,1.192,43,1.316,46,2.122,48,2.049,49,0.055,50,2.049,51,0.878,52,1.557,53,1.777,59,1.941,67,2.203,68,2.545,69,1.777,77,1.578,79,2.843,84,0.494,85,0.428,88,0.99,89,1.566,90,0.857,91,0.746,94,0.568,96,0.651,97,1.603,98,1.367,99,1.603,101,0.568,102,1.192,103,2.043,104,1.521,105,1.521,106,1.316,107,1.521,109,1.967,122,1.157,123,1.521,153,0.026,154,0.026,167,1.157,182,1.38,237,1.316,238,2.079,239,1.157,241,0.857,274,1.777,278,2.12,281,2.164,296,1.521,301,1.38,306,1.157,310,1.157,317,1.521,318,2.12,325,3.963,326,2.767,332,1.157,334,1.38,335,1.38,336,1.38,340,1.38,343,2.12,353,3.301,370,2.582,380,3.963,381,1.38,382,3.216,383,3.216,384,5.016,385,2.641,386,2.641,387,2.641,388,2.641,389,2.641,390,1.719,391,2.641,392,1.719,393,2.641,394,3.639,395,1.719,396,2.641,397,1.719,398,2.641,399,1.719,400,2.641,401,1.719,402,1.719,403,2.641,404,3.609,405,2.641,406,3.216,407,1.719,408,2.641,409,2.641,410,2.641,411,2.641,412,2.641,413,2.164,414,2.641,415,1.719,416,2.641,417,3.609,418,3.609,419,1.719,420,2.641,421,2.641,422,1.719,423,2.641,424,1.719,425,2.641,426,2.641,427,2.641,428,2.641,429,2.641,430,2.641,431,1.719,432,2.641,433,1.719,434,1.719,435,1.719,436,0.857,437,1.719,438,1.157,439,1.157,440,1.157,441,1.719,442,1.157,443,1.719,444,1.157,445,1.719,446,1.719,447,1.719,448,1.719,449,2.641,450,2.641,451,2.641,452,1.719,453,1.719,454,1.719,455,1.719,456,1.719,457,1.719,458,1.719,459,1.719,460,1.719,461,1.719,462,1.719,463,1.38,464,3.216,465,1.719,466,1.38,467,1.719,468,1.719,469,1.719,470,1.719,471,2.641,472,1.719,473,1.719,474,1.719,475,2.641,476,1.719,477,1.719,478,1.719,479,1.719,480,1.719,481,2.641,482,1.719,483,1.719,484,1.719,485,1.719,486,1.719]],["title/interfaces/GlobalConfig.html",[95,0.801,96,1.056]],["body/interfaces/GlobalConfig.html",[0,1.045,1,1.011,3,0.664,4,0.882,9,0.571,10,0.485,11,0.332,12,0.332,13,1.797,15,1.538,18,0.905,19,1.011,20,2.144,21,2.144,22,2.144,23,2.144,24,0.664,25,1.045,26,1.89,27,2.92,28,1.335,29,2.061,30,1.331,32,2.557,33,1.797,34,1.538,36,1.538,37,1.538,38,1.538,39,1.159,41,1.201,42,2.144,43,1.813,44,1.538,45,2.094,49,0.055,51,0.884,52,1.815,53,1.797,54,2.557,60,2.447,61,2.92,63,2.144,64,2.144,65,2.144,69,1.797,71,2.144,73,2.144,74,2.144,75,2.144,77,1.583,78,2.144,79,1.538,80,2.144,81,2.557,82,2.144,83,1.538,84,0.768,85,0.664,86,1.538,87,2.144,88,1.538,89,1.927,90,1.331,91,1.159,92,2.144,93,2.144,94,1.201,95,0.768,96,1.377,97,2.213,98,1.815,99,2.213,100,2.144,101,0.882,102,1.467,103,1.927,104,1.538,105,1.538,106,1.331,107,1.538,108,2.144,109,1.159,110,2.447,111,2.144,112,2.144,113,2.144,114,2.144,115,2.92,116,2.144,117,2.144,118,1.797,119,2.144,120,2.675,121,2.144,122,1.797,123,1.538,124,2.144,125,3.729,126,2.144,127,3.729,128,2.144,129,3.729,130,2.144,131,2.92,132,3.32,133,3.225,134,2.92,135,2.557,136,2.144,137,2.144,138,2.144,153,0.036,154,0.036,487,1.331]],["title/interfaces/InputDataFormat.html",[95,0.801,203,1.606]],["body/interfaces/InputDataFormat.html",[0,1.165,2,1.568,3,0.782,4,1.039,5,2.116,9,0.672,10,0.571,11,0.391,12,0.391,15,1.811,16,2.116,17,1.811,18,1.116,19,1.191,24,0.782,25,1.165,26,1.698,28,1.361,36,1.811,37,1.811,38,1.811,39,1.365,41,1.339,44,2.334,45,2.334,49,0.055,51,0.958,54,2.728,77,1.62,81,2.728,83,1.811,84,0.904,85,0.782,89,2.178,90,1.568,91,1.365,94,1.339,95,0.904,97,1.568,98,1.901,99,1.568,101,1.039,102,1.482,109,1.365,149,1.191,150,1.811,153,0.04,154,0.04,184,1.365,194,1.811,195,1.811,196,2.525,197,3.254,198,2.525,202,2.525,203,2.728,210,1.811,211,3.803,212,2.525,213,2.525,214,1.811,215,1.811,216,2.823,217,3.803,218,1.811,219,2.116,220,2.525,221,2.525,222,2.525,223,2.525,224,2.728,225,2.525,226,2.116,227,2.525,228,2.116,229,2.525,230,2.525,231,2.116,232,2.525,233,2.525,234,2.525,235,2.525,236,1.811,487,1.568]],["title/modules/StoreModule.html",[155,1.39,166,1.39]],["body/modules/StoreModule.html",[3,0.888,4,1.179,9,0.763,10,0.648,11,0.443,12,0.443,18,0.888,28,1.026,41,1.45,49,0.055,77,1.712,84,1.026,85,1.092,94,1.45,101,1.179,103,1.549,153,0.043,154,0.043,155,1.779,157,1.779,166,2.188,170,2.866,176,3.524,183,2.402,214,2.056,215,2.056,374,3.524,436,1.779,488,2.402,489,3.57,490,2.866,491,3.57,492,2.866,493,3.816,494,3.57,495,2.866,496,2.866,497,2.866,498,2.402,499,3.57,500,3.57,501,3.57,502,2.866,503,3.57,504,3.57,505,3.57,506,3.57,507,3.57,508,3.57,509,3.57,510,3.57,511,3.57,512,3.57,513,3.57,514,3.57,515,3.57,516,3.57]],["title/changelog.html",[517,1.588,518,1.359,519,1.588]],["body/changelog.html",[0,0.693,2,0.762,3,0.797,6,0.708,8,0.508,9,0.189,11,0.44,12,0.486,14,1.622,17,0.88,18,1.226,19,0.334,25,0.254,28,1.334,29,2.082,30,1.768,46,0.383,49,0.037,51,0.189,52,0.334,67,0.44,85,0.22,86,0.508,91,1.389,95,0.974,96,0.334,102,1.258,106,1.596,123,0.88,135,1.388,141,0.708,144,0.508,153,0.036,154,0.015,158,1.358,161,0.594,181,0.88,184,1.295,216,0.508,231,2.155,244,0.708,245,0.594,269,0.708,274,1.622,279,1.623,280,0.708,285,1.935,292,3.058,296,2.712,298,2.903,302,2.187,305,3.292,306,1.36,310,1.833,313,1.227,317,0.88,331,1.935,339,1.028,394,1.935,436,1.487,463,1.227,466,0.708,487,0.44,502,0.708,518,1.164,519,1.028,520,1.623,521,1.623,522,2.187,523,2.848,524,1.227,525,2.41,526,2.725,527,2.725,528,5.369,529,2.725,530,1.528,531,0.882,532,4.06,533,1.528,534,3.85,535,2.41,536,2.41,537,3.388,538,2.187,539,1.528,540,0.882,541,0.882,542,0.882,543,3.388,544,3.917,545,4.1,546,1.528,547,0.882,548,4.643,549,2.396,550,2.41,551,1.227,552,2.984,553,2.72,554,0.708,555,1.528,556,0.708,557,2.396,558,0.882,559,2.725,560,2.41,561,0.882,562,1.528,563,2.41,564,1.528,565,2.021,566,0.882,567,1.528,568,0.882,569,4.014,570,0.882,571,1.36,572,1.528,573,3.292,574,0.708,575,0.882,576,1.227,577,1.227,578,1.528,579,3.388,580,0.882,581,0.882,582,0.882,583,2.021,584,1.528,585,2.021,586,0.882,587,1.227,588,0.882,589,0.882,590,2.848,591,1.528,592,2.725,593,2.021,594,0.882,595,1.528,596,1.528,597,1.528,598,0.882,599,2.481,600,0.882,601,4.249,602,0.882,603,1.528,604,0.882,605,2.021,606,1.528,607,2.021,608,2.021,609,2.41,610,1.528,611,2.021,612,0.882,613,1.528,614,1.528,615,0.882,616,3.202,617,2.984,618,1.528,619,0.882,620,0.882,621,4.249,622,2.41,623,0.882,624,1.528,625,0.882,626,0.882,627,1.528,628,2.021,629,2.187,630,0.882,631,1.528,632,0.882,633,0.882,634,0.882,635,1.528,636,0.882,637,2.984,638,0.882,639,0.882,640,0.882,641,2.021,642,0.882,643,0.882,644,1.227,645,0.882,646,2.984,647,1.528,648,2.725,649,0.882,650,1.528,651,1.528,652,0.882,653,2.41,654,0.882,655,0.882,656,1.528,657,0.882,658,3.202,659,0.882,660,0.882,661,1.528,662,0.882,663,0.882,664,1.528,665,2.021,666,0.882,667,0.882,668,0.882,669,0.882,670,1.528,671,0.882,672,0.882,673,0.882,674,0.708,675,4.1,676,0.882,677,0.708,678,0.882,679,1.528,680,0.594,681,0.882,682,1.528,683,2.41,684,0.882,685,1.528,686,2.021,687,0.882,688,0.882,689,1.528,690,0.882,691,0.882,692,2.984,693,1.718,694,2.187,695,1.623,696,0.882,697,2.187,698,0.882,699,2.021,700,2.72,701,4.014,702,0.882,703,0.882,704,1.528,705,1.623,706,0.882,707,0.882,708,0.882,709,2.725,710,0.882,711,0.882,712,0.882,713,0.882,714,2.021,715,0.882,716,1.528,717,1.227,718,0.882,719,2.279,720,0.882,721,0.882,722,0.882,723,0.882,724,0.882,725,2.187,726,1.528,727,0.882,728,0.882,729,1.528,730,1.528,731,0.882,732,1.528,733,1.528,734,0.882,735,2.021,736,0.882,737,0.882,738,0.708,739,0.882,740,1.623,741,0.708,742,1.528,743,1.528,744,0.882,745,0.882,746,1.528,747,1.528,748,1.528,749,1.528,750,0.882,751,0.882,752,0.882,753,0.882,754,2.021,755,0.882,756,1.528,757,0.882,758,0.882,759,1.528,760,2.984,761,1.528,762,0.882,763,0.708,764,0.882,765,0.882,766,0.882,767,2.021,768,1.528,769,2.984,770,1.528,771,1.528,772,2.41,773,0.882,774,0.882,775,0.882,776,0.882,777,0.882,778,1.528,779,1.528,780,0.882,781,1.528,782,0.882,783,1.528,784,0.882,785,1.528,786,0.882,787,0.882,788,0.882,789,0.882,790,0.882,791,0.882,792,1.528,793,0.882,794,0.882,795,0.882,796,0.882,797,0.882,798,0.882,799,1.528,800,0.882,801,0.882,802,0.882,803,0.882,804,0.882,805,1.528,806,0.882,807,2.984,808,0.882,809,0.882,810,2.021,811,2.021,812,0.708,813,0.882,814,0.708,815,0.708,816,0.882,817,1.528,818,0.882,819,0.882,820,0.882,821,0.882,822,1.528,823,1.528,824,0.882,825,1.528,826,1.528,827,0.882,828,1.528,829,2.41,830,2.021,831,0.882,832,0.882,833,0.882,834,0.882,835,0.708,836,0.882,837,1.528,838,0.882,839,0.882,840,1.528,841,2.41,842,0.882,843,0.882,844,0.882,845,0.882,846,2.984,847,2.021,848,1.528,849,0.882,850,0.882,851,2.021,852,1.528,853,1.528,854,1.528,855,2.41,856,0.882,857,1.388,858,0.882,859,0.882,860,1.528,861,0.882,862,0.882,863,0.882,864,0.882,865,0.882,866,2.41,867,0.882,868,2.021,869,2.41,870,0.882,871,2.021,872,2.725,873,1.528,874,1.528,875,1.528,876,1.528,877,2.021,878,2.41,879,2.725,880,1.528,881,2.021,882,0.882,883,0.882,884,3.202,885,2.021,886,0.882,887,2.41,888,2.41,889,3.547,890,0.882,891,0.882,892,0.882,893,0.882,894,0.882,895,0.882,896,1.528,897,0.882,898,1.528,899,0.882,900,0.882,901,0.882,902,0.882,903,1.528,904,0.882,905,2.021,906,0.882,907,0.882,908,1.528,909,1.623,910,1.528,911,0.882,912,0.882,913,0.882,914,1.528,915,0.882,916,0.882,917,0.882,918,0.882,919,0.882,920,0.882,921,0.882,922,1.528,923,0.882,924,0.882,925,2.41,926,2.984,927,1.528,928,2.021,929,1.528,930,0.882,931,0.882,932,0.882,933,0.882,934,2.021,935,0.882,936,0.882,937,0.882,938,1.528,939,1.528,940,1.528,941,2.021,942,0.882,943,0.882,944,0.882,945,0.882,946,0.882,947,0.708,948,0.882,949,0.882,950,0.882,951,1.528,952,0.882,953,0.882,954,1.528,955,0.882,956,0.882,957,0.882,958,0.882,959,0.882,960,0.882,961,0.882,962,0.882,963,0.882,964,0.882,965,3.388,966,0.882,967,2.021,968,3.388,969,2.021,970,2.41,971,1.528,972,2.021,973,0.882,974,1.528,975,0.882,976,0.882,977,1.528,978,1.528,979,1.528,980,0.882,981,0.882,982,0.882,983,0.882,984,1.528,985,0.882,986,1.623,987,0.882,988,0.882,989,0.882,990,0.882,991,0.708,992,0.882,993,0.882,994,0.882,995,0.882,996,0.882,997,0.882,998,0.882,999,0.882,1000,0.882,1001,0.882,1002,0.882,1003,2.725,1004,0.882,1005,0.882,1006,0.882,1007,0.882,1008,0.882,1009,0.882,1010,0.882,1011,0.882,1012,0.882,1013,0.882,1014,0.882,1015,0.882,1016,0.882,1017,0.882,1018,0.882,1019,1.528,1020,0.882,1021,1.528,1022,0.882,1023,1.528,1024,1.528,1025,2.41,1026,2.41,1027,1.528,1028,1.528,1029,0.882,1030,0.882,1031,0.882,1032,2.021,1033,0.882,1034,0.708,1035,0.882,1036,0.882,1037,0.882,1038,0.882,1039,0.882,1040,0.882,1041,1.528,1042,3.687,1043,2.021,1044,0.882,1045,1.528,1046,0.882,1047,0.882,1048,0.882,1049,0.882,1050,0.882,1051,0.882,1052,0.882,1053,0.882,1054,0.882,1055,1.528,1056,2.571,1057,1.528,1058,0.882,1059,0.882,1060,0.882,1061,0.882,1062,0.882,1063,1.528,1064,0.882,1065,0.882,1066,0.882,1067,1.622,1068,0.882,1069,1.528,1070,0.882,1071,0.882,1072,0.882,1073,1.528,1074,1.528,1075,0.882,1076,0.882,1077,0.882,1078,0.882,1079,1.528,1080,2.021,1081,1.528,1082,0.882,1083,1.227,1084,0.882,1085,0.882,1086,0.882,1087,0.882,1088,0.882,1089,0.882,1090,0.882,1091,0.882,1092,0.708,1093,0.882,1094,0.882,1095,1.528,1096,0.882,1097,0.882,1098,0.882,1099,0.882,1100,0.882,1101,1.528,1102,0.882,1103,0.708,1104,0.882,1105,0.882,1106,0.708,1107,0.882,1108,0.882,1109,1.528,1110,0.882,1111,0.882,1112,0.882,1113,0.882,1114,0.882,1115,0.882,1116,0.882,1117,0.882,1118,0.882,1119,0.882,1120,0.882,1121,1.528,1122,0.882,1123,0.882,1124,0.882,1125,0.882,1126,1.528,1127,0.708,1128,0.708,1129,0.882,1130,0.882,1131,0.882,1132,0.882,1133,0.882,1134,0.882,1135,0.882]],["title/coverage.html",[1067,2.52]],["body/coverage.html",[0,1.16,1,1.184,9,0.668,10,0.986,11,0.675,12,0.675,13,2.716,43,1.558,49,0.053,51,0.668,79,1.8,95,1.16,96,1.184,102,1.032,120,3.111,140,2.509,149,1.184,153,0.039,154,0.039,184,1.94,194,2.575,195,2.575,203,1.8,218,2.886,236,1.8,237,2.012,238,1.8,240,2.325,241,2.012,242,2.325,380,2.509,381,2.509,413,2.103,438,2.103,439,2.103,440,2.103,442,2.103,444,2.103,488,2.103,498,2.103,693,1.8,1067,2.103,1136,3.126,1137,3.126,1138,3.126,1139,3.126,1140,5.265,1141,3.126,1142,3.126,1143,3.794,1144,4.893,1145,2.716,1146,2.509,1147,3.126,1148,3.126,1149,2.509,1150,3.126,1151,3.126,1152,3.241,1153,3.241,1154,2.509,1155,3.126,1156,3.126]],["title/dependencies.html",[158,1.663,680,1.588]],["body/dependencies.html",[9,0.593,11,0.345,49,0.055,84,0.798,144,2.15,153,0.036,154,0.036,158,1.383,178,2.228,180,2.997,181,2.15,245,1.868,289,2.228,320,2.228,329,2.228,332,1.868,436,2.248,490,2.228,492,2.228,493,2.997,495,2.228,524,3.386,556,2.228,587,2.228,697,2.997,814,2.228,815,2.228,909,2.228,1157,2.775,1158,2.775,1159,2.775,1160,2.775,1161,2.775,1162,2.775,1163,3.733,1164,2.775,1165,2.775,1166,5.156,1167,2.775,1168,2.775,1169,3.733,1170,2.775,1171,2.775,1172,2.775,1173,2.775,1174,2.775,1175,2.775,1176,2.775,1177,2.775,1178,2.775,1179,2.775,1180,4.511,1181,2.775,1182,3.733,1183,2.775,1184,2.775,1185,2.775,1186,4.218,1187,2.775,1188,2.775,1189,2.775,1190,2.775,1191,2.775,1192,2.775,1193,2.775,1194,2.775,1195,2.775,1196,2.775,1197,3.733,1198,3.733,1199,2.775,1200,2.775,1201,2.775,1202,2.775,1203,2.775,1204,2.775,1205,2.775,1206,3.733,1207,2.775,1208,2.775,1209,2.775,1210,3.733,1211,2.775,1212,2.775,1213,2.775,1214,2.775,1215,2.775,1216,2.775,1217,2.775,1218,2.775,1219,2.775,1220,2.775,1221,2.775,1222,2.775,1223,2.228,1224,2.775,1225,2.775,1226,2.775,1227,2.775,1228,2.775,1229,2.775,1230,3.733,1231,2.775,1232,2.775,1233,2.775,1234,2.775,1235,2.775,1236,2.775,1237,2.775,1238,2.775,1239,2.775,1240,2.775,1241,2.775,1242,2.775,1243,2.775,1244,2.775,1245,2.775,1246,2.775,1247,2.775,1248,2.775,1249,4.218,1250,2.775,1251,2.775,1252,2.775,1253,2.775,1254,2.775,1255,2.775,1256,2.775,1257,2.775,1258,2.775,1259,2.775,1260,2.775,1261,2.775,1262,2.775,1263,2.775,1264,2.775,1265,2.775,1266,2.775,1267,2.775,1268,3.733,1269,2.775,1270,2.775,1271,2.775,1272,2.775,1273,2.775,1274,2.775,1275,2.775,1276,2.775,1277,2.775,1278,2.775,1279,2.775,1280,2.775,1281,2.775,1282,2.775]],["title/miscellaneous/functions.html",[1283,1.024,1284,2.679]],["body/miscellaneous/functions.html",[10,0.881,11,0.603,12,0.603,24,0.835,28,0.965,48,2.545,49,0.053,50,2.545,51,1.069,52,1.933,59,2.545,89,1.457,153,0.041,154,0.041,184,1.834,194,1.934,195,2.434,210,1.934,216,2.94,219,2.26,236,2.434,240,1.934,241,1.674,242,2.434,270,3.896,281,3.266,326,3.436,337,2.696,338,3.393,339,2.26,442,2.844,444,2.844,857,3.019,1145,2.26,1146,3.393,1149,3.393,1152,2.696,1153,3.713,1154,3.393,1283,1.457,1284,2.696,1285,2.696,1286,3.393,1287,4.226,1288,3.359,1289,3.359,1290,4.226,1291,3.359,1292,4.226,1293,3.359,1294,3.359]],["title/index.html",[24,0.587,517,1.588,518,1.359]],["body/index.html",[0,0.879,3,1.209,12,0.38,18,1.335,49,0.039,95,1.144,153,0.039,154,0.039,296,2.548,298,2.678,317,1.761,436,1.524,487,1.524,519,2.058,520,3.195,521,3.195,522,4.174,523,3.552,532,3.195,534,3.552,538,3.195,553,2.455,554,3.763,557,3.195,571,2.678,573,4.211,574,3.195,576,3.195,577,3.763,599,3.154,629,2.455,644,3.195,677,2.455,693,1.761,694,3.901,695,3.901,700,3.195,705,2.455,717,3.195,719,2.058,725,2.455,740,2.455,741,2.455,812,3.195,835,2.455,991,2.455,1083,2.455,1092,2.455,1103,2.455,1127,2.455,1295,3.98,1296,3.058,1297,3.058,1298,3.058,1299,3.058,1300,3.195,1301,3.058,1302,3.058,1303,3.058,1304,3.98,1305,3.98,1306,3.98,1307,4.425,1308,3.058,1309,3.058,1310,4.425,1311,4.425,1312,3.058,1313,3.058,1314,3.98,1315,3.058,1316,3.058,1317,3.058,1318,3.98,1319,3.058,1320,3.058,1321,3.058,1322,3.058,1323,3.058,1324,3.98,1325,3.058,1326,3.058,1327,3.98,1328,3.98,1329,3.058,1330,3.98,1331,3.98,1332,3.058,1333,3.058,1334,3.058,1335,3.058,1336,3.058,1337,3.058,1338,3.058,1339,3.058,1340,3.058,1341,3.058,1342,3.058,1343,3.058,1344,3.058,1345,3.058,1346,3.058,1347,3.058,1348,3.058]],["title/license.html",[517,1.588,518,1.359,1349,1.894]],["body/license.html",[49,0.043,153,0.043,154,0.043,168,2.42,549,3.54,571,2.967,599,2.42,693,2.071,738,3.829,763,2.887,947,3.54,1034,2.887,1056,2.887,1106,2.887,1128,2.887,1223,2.887,1300,4.296,1349,2.887,1350,3.596,1351,4.769,1352,3.596,1353,3.596,1354,4.41,1355,3.596,1356,3.596,1357,3.596,1358,3.596,1359,3.596,1360,3.596,1361,4.41,1362,3.596,1363,3.596,1364,3.596,1365,3.596,1366,3.596,1367,3.596,1368,3.596,1369,3.596,1370,3.596,1371,3.596,1372,3.596,1373,3.596,1374,4.41,1375,3.596,1376,3.596,1377,3.596,1378,3.596,1379,3.596,1380,3.596,1381,4.41,1382,3.596,1383,3.596,1384,3.596,1385,3.596,1386,3.596,1387,3.596,1388,3.596,1389,3.596,1390,3.596,1391,3.596,1392,3.596,1393,3.596,1394,3.596,1395,3.596,1396,3.596,1397,3.596,1398,3.596,1399,3.596,1400,3.596,1401,3.596,1402,3.596,1403,3.596,1404,3.596,1405,3.596,1406,3.596,1407,3.596,1408,3.596]],["title/modules.html",[157,1.866]],["body/modules.html",[49,0.047,153,0.047,154,0.047,156,2.438,157,2.11,166,2.11,181,2.438,590,3.399,986,3.399,1409,4.234,1410,4.858,1411,4.234]],["title/overview.html",[1412,3.006]],["body/overview.html",[1,1.881,2,1.971,34,2.278,49,0.051,135,2.956,142,2.278,149,1.881,153,0.046,154,0.046,155,1.971,156,3.11,157,1.971,158,1.971,159,3.175,160,3.175,161,2.661,162,3.175,163,3.175,164,3.175,165,3.175,166,2.476,167,3.142,168,2.661,239,2.661,487,1.971,1412,3.175]],["title/properties.html",[25,0.959,680,1.588]],["body/properties.html",[25,1.233,49,0.05,153,0.048,154,0.048,551,3.443,719,2.886]],["title/miscellaneous/typealiases.html",[1283,1.024,1413,3.337]],["body/miscellaneous/typealiases.html",[10,0.862,11,0.59,12,0.59,24,1.014,49,0.049,51,0.871,153,0.046,154,0.046,240,2.348,241,2.032,242,2.737,246,3.816,323,3.273,328,3.273,674,4.161,857,2.737,1145,2.743,1283,1.769,1285,3.273,1286,3.273,1414,4.077]],["title/miscellaneous/variables.html",[1283,1.024,1415,2.679]],["body/miscellaneous/variables.html",[10,0.82,11,0.561,12,0.561,24,0.932,41,1.237,49,0.054,51,1.102,67,2.572,68,2.972,85,0.932,98,1.838,153,0.044,154,0.044,183,2.52,224,2.52,226,2.52,413,3.042,438,3.042,439,3.042,440,3.042,488,2.52,496,3.007,497,3.007,498,3.042,857,2.157,1143,3.007,1283,1.625,1415,3.007,1416,5.041,1417,3.746,1418,3.746,1419,3.746,1420,3.746,1421,3.746,1422,3.746,1423,3.746]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["0.13.1",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["0.5.0",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1083,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0/1",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["1.0",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["1.14.10",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["1.3.1",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":909,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":231,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["10.0.0",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["1000",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["10x",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":553,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12/17",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["15.313.0",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["173",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"overview.html":{}}}],["2.0",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["2.2",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["2.2.0",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["2.6.1",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["2019",{"_index":1056,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["229.5",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":697,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1324,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":551,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3.8.0",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["3.8.1",{"_index":524,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["30",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1305,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["47",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4th",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["5th",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["6.11.2",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":429,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ability",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1106,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["access",{"_index":451,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["accurate",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1402,"title":{},"body":{"license.html":{}}}],["actions",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["added",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["aggregate",{"_index":276,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["aggregateresult",{"_index":322,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["ala",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1309,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":815,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1372,"title":{},"body":{"license.html":{}}}],["angular",{"_index":436,"title":{},"body":{"injectables/FilteredSceneService.html":{},"modules/StoreModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":320,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":573,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilteredSceneService.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["appelement",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":280,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["appmodule",{"_index":156,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":149,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1406,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":763,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["atlas",{"_index":521,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempts",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1395,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":986,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["award",{"_index":1347,"title":{},"body":{"index.html":{}}}],["backend",{"_index":244,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["background",{"_index":1103,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["basewebcomponent",{"_index":197,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["basic",{"_index":812,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["before",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":502,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["beta",{"_index":700,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":306,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["block?.placement.target",{"_index":452,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["blocks",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.bounds",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.rotation",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.rotationx",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.scene?.find((node",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.target",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyuicomponent",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyuimodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["boolean",{"_index":210,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["both",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1410,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1301,"title":{},"body":{"index.html":{}}}],["builds",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1352,"title":{},"body":{"license.html":{}}}],["cache",{"_index":556,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cacheable",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["cancelregistration",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":1327,"title":{},"body":{"index.html":{}}}],["cases",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["ccf",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":323,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["ccfdatabaseoptions",{"_index":270,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["cdr",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["cell",{"_index":285,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["center",{"_index":1342,"title":{},"body":{"index.html":{}}}],["change",{"_index":835,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["changedetection",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy.onpush",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy.onpush,selector",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["changedetectorref",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changelog",{"_index":519,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1358,"title":{},"body":{"license.html":{}}}],["choose",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["choosescene",{"_index":385,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["choosescene(data",{"_index":391,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ci/cd",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1398,"title":{},"body":{"license.html":{}}}],["class",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["clean",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":554,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":857,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["colorizing",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":434,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.data",{"_index":425,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.organs",{"_index":403,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.scene",{"_index":408,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["come",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":329,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["common",{"_index":741,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compareconfig",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["compareconfig(previous",{"_index":337,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["compatibility",{"_index":510,"title":{},"body":{"modules/StoreModule.html":{}}}],["complexity",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":195,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component.component.ts:34",{"_index":204,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":205,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":206,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:38",{"_index":208,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":209,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":207,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":201,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"overview.html":{}}}],["comunica/query",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1380,"title":{},"body":{"license.html":{}}}],["config",{"_index":269,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["configstate",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["configstore",{"_index":202,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["configuration",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["connectdatasource",{"_index":249,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connectdatasource(source",{"_index":268,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":1407,"title":{},"body":{"license.html":{}}}],["consider",{"_index":508,"title":{},"body":{"modules/StoreModule.html":{}}}],["console",{"_index":375,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["console.info(`loaded",{"_index":376,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["console.log(source",{"_index":379,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["consortium",{"_index":1353,"title":{},"body":{"license.html":{}}}],["const",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"modules/StoreModule.html":{}}}],["constants",{"_index":441,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["constructor(configstate",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{}}}],["constructor(configstore",{"_index":200,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(locator",{"_index":261,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["constructor(private",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["container",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1299,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1403,"title":{},"body":{"license.html":{}}}],["control",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["controls",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["coordinate",{"_index":1333,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1374,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1361,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1351,"title":{},"body":{"license.html":{}}}],["cord",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["core/services/filtered",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["core/store/store.module",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["cors",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["counts",{"_index":287,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["coverage",{"_index":1067,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createcustomelement",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["createdatasource",{"_index":250,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["creates",{"_index":264,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["credits",{"_index":1337,"title":{},"body":{"index.html":{}}}],["css",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["cuboid",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":338,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["currently",{"_index":279,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["customelements.define('ccf",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["cyberinfrastructure",{"_index":1339,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["d.rui_location",{"_index":227,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["damages",{"_index":1399,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.map(d",{"_index":222,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["data?.map(obj",{"_index":447,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["database",{"_index":310,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["database/src/lib/ccf",{"_index":316,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["datasets",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":246,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasources",{"_index":344,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["datasourceservice",{"_index":238,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["date()).gettime",{"_index":377,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["date().gettime",{"_index":372,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getaggregateresults(filter",{"_index":361,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getcelltypetermoccurences(filter",{"_index":363,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getcelltypetreemodel",{"_index":365,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":362,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytreemodel",{"_index":364,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getreferenceorgans",{"_index":366,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getreferenceorganscene(organ",{"_index":368,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getscene(filter",{"_index":367,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.gettissueblockresults(filter",{"_index":359,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dboptions",{"_index":247,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":1363,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1408,"title":{},"body":{"license.html":{}}}],["december",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["deck.gl/core",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorator",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["decorators",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["deeply",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_ccf_db_options",{"_index":315,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["demo",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":158,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["descrepancies",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":243,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["details",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1338,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":507,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":1092,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["directives",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["directly",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["disabled",{"_index":516,"title":{},"body":{"modules/StoreModule.html":{}}}],["display",{"_index":302,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["displayed",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["distinctuntilchanged",{"_index":333,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["distinctuntilchanged(compareconfig",{"_index":348,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["distribute",{"_index":1370,"title":{},"body":{"license.html":{}}}],["dobootstrap",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":693,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["done",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["emitting",{"_index":282,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["entire",{"_index":497,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":1290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.owl#has_spatial_entity",{"_index":226,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["entity.owl#sample",{"_index":225,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["environment",{"_index":214,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":233,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["environment.production",{"_index":374,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":215,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["es",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["eslint/no",{"_index":318,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["etc",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":534,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1394,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["executionstrategy",{"_index":511,"title":{},"body":{"modules/StoreModule.html":{}}}],["executor",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["expanded",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["exploration",{"_index":1303,"title":{},"body":{"index.html":{}}}],["export",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":1223,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":196,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["external",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["favor",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":483,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["female_skin_url",{"_index":438,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1362,"title":{},"body":{"license.html":{}}}],["filter",{"_index":274,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["filter(config",{"_index":345,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["filterednodes",{"_index":475,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredorgans",{"_index":382,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredscene",{"_index":383,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredsceneservice",{"_index":43,"title":{"injectables/FilteredSceneService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["filters",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["filterscenenodes",{"_index":386,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filterscenenodes(nodes",{"_index":393,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["final",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["finishing",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1390,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["fly",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1379,"title":{},"body":{"license.html":{}}}],["form",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1334,"title":{},"body":{"index.html":{}}}],["free",{"_index":1357,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":218,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{}}}],["functions",{"_index":1284,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1345,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1377,"title":{},"body":{"license.html":{}}}],["further",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["genericglobalconfig",{"_index":212,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["getaggregateresults",{"_index":251,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":273,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetermoccurences",{"_index":252,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":283,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":253,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getneededreferenceorgans",{"_index":387,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededreferenceorgans(referenceorgans",{"_index":396,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededskins",{"_index":388,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededskins(organs",{"_index":398,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getontologytermoccurences",{"_index":254,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":290,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getontologytreemodel",{"_index":255,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getorganscene",{"_index":256,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getorganscene(organ",{"_index":294,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getreferenceorgans",{"_index":257,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getscene",{"_index":258,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getscene(filter",{"_index":299,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getting",{"_index":517,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":259,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":303,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["github",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":96,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["globalconfig.getoption('data').pipe",{"_index":342,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalconfigstate",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["globalthis['dboptions",{"_index":234,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["good",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":814,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["granted",{"_index":1356,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1411,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["hand",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":501,"title":{},"body":{"modules/StoreModule.html":{}}}],["hash",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["haszoomingnode",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["height",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["helmet",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1355,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["highlight.operator",{"_index":443,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["highlight_yellow",{"_index":413,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlighted",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["highlightid",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["highlightifmatching",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["highlightifmatching(entity",{"_index":1289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["highlights",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["hightlight",{"_index":442,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hightlight(id",{"_index":1291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hightlight(this.highlightid",{"_index":412,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["holders",{"_index":1396,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":522,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["html",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["http://purl.org/ccf/1.5/entity/${d.id",{"_index":223,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["http://purl.org/ccf/1.5/entity/${id",{"_index":418,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["http://purl.org/ccf/latest/ccf",{"_index":224,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhfskin",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmskin",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":1318,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":1306,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1311,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":1310,"title":{},"body":{"index.html":{}}}],["https://humanatlas.io",{"_index":1335,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":1330,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1313,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1308,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":512,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":599,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":520,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":216,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataSourceService.html":{}}}],["implied",{"_index":1387,"title":{},"body":{"license.html":{}}}],["import",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["improve",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1382,"title":{},"body":{"license.html":{}}}],["includes",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":549,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1343,"title":{},"body":{"index.html":{}}}],["individual",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"index.html":{}}}],["information",{"_index":644,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["initialconfig",{"_index":232,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["initialdelay",{"_index":230,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["initialization",{"_index":312,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["initialized",{"_index":198,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["injectable",{"_index":237,"title":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["injectables",{"_index":239,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"overview.html":{}}}],["injector",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["input",{"_index":211,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["inputdataformat",{"_index":203,"title":{"interfaces/InputDataFormat.html":{}},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{}}}],["inputs",{"_index":199,"title":{},"body":{"components/AppWebComponent.html":{}}}],["instance",{"_index":265,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["instead",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":95,"title":{"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":487,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["issue",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":466,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["item[spatial_entity_url].placement.target",{"_index":467,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["iu",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":1331,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":577,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["json.parse(data",{"_index":221,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["jsonld",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["jsonld/jsonld",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["jsonldobj",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["july",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["keyboard",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1386,"title":{},"body":{"license.html":{}}}],["known",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["labs/dispatch",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":514,"title":{},"body":{"modules/StoreModule.html":{}}}],["lastvaluefrom",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["lastvaluefrom(this.organs$.pipe(take(1",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["latest",{"_index":629,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layers",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["left/right",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"overview.html":{}}}],["level",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1400,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1397,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":677,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1349,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1365,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1034,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["link",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":705,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["loaded",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["locationstrategy",{"_index":262,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["locator",{"_index":267,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["lodash",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1336,"title":{},"body":{"index.html":{}}}],["logger",{"_index":513,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["lru",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["made",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":485,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["male_skin_url",{"_index":439,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managers",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":334,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["map(([nodes",{"_index":410,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map(([organs",{"_index":405,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map((config",{"_index":347,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["map(data",{"_index":343,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["map(id",{"_index":417,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map(selectorgan",{"_index":468,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["march",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["mc",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":450,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["memory",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1389,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1368,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"changelog.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["milestone",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1283,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1350,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":289,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["modify",{"_index":1367,"title":{},"body":{"license.html":{}}}],["module",{"_index":155,"title":{"modules/AppModule.html":{},"modules/StoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"overview.html":{}}}],["modules",{"_index":157,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepo",{"_index":1296,"title":{},"body":{"index.html":{}}}],["monotypeoperatorfunction",{"_index":1292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["more",{"_index":557,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["moved",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1297,"title":{},"body":{"index.html":{}}}],["n3",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["neededorgans",{"_index":473,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededorgans.has(node.reference_organ",{"_index":478,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededreferenceorgans",{"_index":470,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededskins",{"_index":471,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["needs",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1340,"title":{},"body":{"index.html":{}}}],["new",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["ngdobootstrap",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["ngondestroy",{"_index":260,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["ngx",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":492,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":495,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxsdatapluginmodule",{"_index":489,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":505,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule",{"_index":491,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":515,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":494,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":506,"title":{},"body":{"modules/StoreModule.html":{}}}],["nih",{"_index":1346,"title":{},"body":{"index.html":{}}}],["node",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["node.reference_organ",{"_index":477,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["node.zoomtoonload",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["nodes",{"_index":301,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["nodes.filter(node",{"_index":476,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["noninfringement",{"_index":1393,"title":{},"body":{"license.html":{}}}],["note",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":1325,"title":{},"body":{"index.html":{}}}],["notice",{"_index":947,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":674,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["obj[spatial_entity_url",{"_index":448,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["object",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["object.keys(config).length",{"_index":346,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["observable",{"_index":281,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["obtaining",{"_index":1360,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1312,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["ondestroy",{"_index":321,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["one",{"_index":991,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["online",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["onmouseenter",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["onmouseleave",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["ontological",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":292,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["ontologyterms",{"_index":461,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ontologytreemodel",{"_index":324,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["opacities",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":717,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1321,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1323,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1322,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":313,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["organ",{"_index":296,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"index.html":{}}}],["organ.reference_organ",{"_index":462,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organ.sex",{"_index":464,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["organs.find(temporgan",{"_index":457,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.foreach(organ",{"_index":482,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.has(organ.reference_organ",{"_index":480,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.length",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["organs/anatomical",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["organs[0",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["organurls",{"_index":446,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organurls[0",{"_index":459,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["orthographic",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":1348,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1405,"title":{},"body":{"license.html":{}}}],["out",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["outputs",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["over",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1412,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":680,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":356,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["parse",{"_index":235,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["parser",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1391,"title":{},"body":{"license.html":{}}}],["partly",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["performance",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1354,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1375,"title":{},"body":{"license.html":{}}}],["person",{"_index":1359,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1376,"title":{},"body":{"license.html":{}}}],["pick",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["placed",{"_index":503,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["placenta",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":493,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["plus",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["popup",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":725,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1384,"title":{},"body":{"license.html":{}}}],["position",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["preferences",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":339,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["previously",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["process",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":694,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1298,"title":{},"body":{"index.html":{}}}],["projects/.../app",{"_index":1288,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../constants.ts",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data",{"_index":1285,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../highlight.operator.ts",{"_index":1286,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../zoom",{"_index":1287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ccf",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["promise((resolve",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1128,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providedin",{"_index":340,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["providers",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"overview.html":{}}}],["public",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1369,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1392,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":576,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":245,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["real",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":500,"title":{},"body":{"modules/StoreModule.html":{}}}],["rectify",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":298,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["referenceorgans",{"_index":384,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["referenceorgans.filter(organ",{"_index":479,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["refernced",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":740,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["registrations#1",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":328,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["removed",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":1295,"title":{},"body":{"index.html":{}}}],["required",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/GlobalConfig.html":{},"overview.html":{}}}],["resets",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":351,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["respond",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1364,"title":{},"body":{"license.html":{}}}],["results",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["returns",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1366,"title":{},"body":{"license.html":{}}}],["root",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["root_states",{"_index":498,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["ru/cdk",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":437,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ru/ngxs",{"_index":490,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["rui",{"_index":532,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_location",{"_index":217,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["rui_locations.jsonld",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":332,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"dependencies.html":{}}}],["rxjs/internal/lastvaluefrom",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["rxjs/operators",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["s",{"_index":378,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["sample",{"_index":1127,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["scene.service",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["scene.service.ts",{"_index":381,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["scene.service.ts:18",{"_index":402,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:19",{"_index":433,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:22",{"_index":419,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:26",{"_index":424,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:28",{"_index":431,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:32",{"_index":422,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:37",{"_index":407,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:42",{"_index":415,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:47",{"_index":390,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:54",{"_index":392,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:73",{"_index":401,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:82",{"_index":395,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:91",{"_index":397,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:95",{"_index":399,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene/filtered",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["scenesource",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["scheduled",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1341,"title":{},"body":{"index.html":{}}}],["search",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":538,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["selectorgan",{"_index":465,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selectorgans",{"_index":389,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selectorgans(data",{"_index":400,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selects",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1373,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":266,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["set",{"_index":394,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["set([...organs",{"_index":474,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["set(organs",{"_index":469,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["set(organurls",{"_index":454,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["settimeout(resolve",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["setting",{"_index":509,"title":{},"body":{"modules/StoreModule.html":{}}}],["setup",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["setzoomtoifmatching",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setzoomtoifmatching(entity",{"_index":1293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sex",{"_index":463,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["sexes",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["shadow",{"_index":319,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["shall",{"_index":1381,"title":{},"body":{"license.html":{}}}],["shared",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/web",{"_index":213,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["sharereplay",{"_index":335,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["sharereplay(1",{"_index":353,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["shortest",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["sides",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["simplifies",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["sites",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["skins",{"_index":481,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["skins.add(female_skin_url",{"_index":484,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["skins.add(male_skin_url",{"_index":486,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["slider",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["slider/ngx",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1300,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["source.connect(config",{"_index":373,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service",{"_index":435,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["source.service.ts",{"_index":242,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["source.service.ts:103",{"_index":291,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:116",{"_index":284,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:128",{"_index":293,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:140",{"_index":288,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:153",{"_index":297,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:166",{"_index":300,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:173",{"_index":295,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:180",{"_index":272,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:187",{"_index":271,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:39",{"_index":308,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:41",{"_index":311,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:43",{"_index":263,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":307,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":304,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:90",{"_index":275,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source/data",{"_index":241,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["sources",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["sparc",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":587,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["spatial_entity_url",{"_index":440,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialentity",{"_index":325,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["spatialscenenode",{"_index":326,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1320,"title":{},"body":{"index.html":{}}}],["specific",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1319,"title":{},"body":{"index.html":{}}}],["speed",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["stage",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":695,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1304,"title":{},"body":{"index.html":{}}}],["start",{"_index":371,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["started",{"_index":518,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":496,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["stay",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["store",{"_index":504,"title":{},"body":{"modules/StoreModule.html":{}}}],["storemodule",{"_index":166,"title":{"modules/StoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":499,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["styling",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1378,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1371,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":314,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["subscriptions",{"_index":248,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["substantial",{"_index":1383,"title":{},"body":{"license.html":{}}}],["such",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["super(configstore",{"_index":229,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["support",{"_index":590,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1409,"title":{},"body":{"modules.html":{}}}],["swiper",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":336,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["switchmap(([data",{"_index":428,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["switchmap(config",{"_index":349,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["switchmap(db",{"_index":358,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["sync",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["take(1",{"_index":360,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["tap",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["tap((_",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["technologies",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["temporgan['@id",{"_index":458,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["term",{"_index":286,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["terms",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["this.cdr.detectchanges",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.choosescene(data",{"_index":430,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('data",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["this.configstate.getoption('data').pipe",{"_index":420,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('highlightid').pipe",{"_index":416,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('zoomtoid').pipe",{"_index":432,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.connectdatasource((resource",{"_index":352,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.createdatasource",{"_index":350,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource",{"_index":341,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.pipe",{"_index":357,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.filterscenenodes(nodes",{"_index":411,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.getneededreferenceorgans(referenceorgans",{"_index":406,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.getneededskins(neededreferenceorgans",{"_index":472,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.injector",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["this.organs",{"_index":409,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.referenceorgans",{"_index":426,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.referenceorgans$]).pipe",{"_index":404,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.reset",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.scenesource.filteredorgans",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.scenesource.filteredscene$.pipe",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.selectorgans(data",{"_index":421,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.datasource]).pipe",{"_index":427,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getorganscene(organ.representation_of",{"_index":460,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getreferenceorgans",{"_index":423,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getscene",{"_index":456,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.subscriptions.add(this.datasource.subscribe",{"_index":354,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.subscriptions.unsubscribe",{"_index":355,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["through",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":305,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["tissueblockresult",{"_index":327,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["tissues",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["to.operator",{"_index":445,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["to.operator.ts",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["tojsonld",{"_index":236,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tojsonld(data",{"_index":219,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["tool",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1404,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["transparency",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"changelog.html":{}}}],["true",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["try",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1413,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":220,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["types",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":317,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui.netlify.app",{"_index":1307,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1317,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1314,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":1316,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1315,"title":{},"body":{"index.html":{}}}],["uis",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":370,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["underlying",{"_index":309,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["uniqueorganurls",{"_index":453,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["uniqueorganurls.size",{"_index":455,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["university",{"_index":1344,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":228,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{}}}],["unnecessary",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":449,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["unselect",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["unsubscribable",{"_index":330,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["unsubscribe",{"_index":369,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["until",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["updates",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":574,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":1326,"title":{},"body":{"index.html":{}}}],["use",{"_index":571,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usecase",{"_index":1332,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":1329,"title":{},"body":{"index.html":{}}}],["used",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":523,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":331,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["utilities",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["v2",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["v2.1.0",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":277,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["var",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["variable",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1415,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":719,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["viewchild('bodyui",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["viewer",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataSourceService.html":{}}}],["vs",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["walkthrough",{"_index":1328,"title":{},"body":{"index.html":{}}}],["warming",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1388,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1385,"title":{},"body":{"license.html":{}}}],["wc",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["wc/src/app/app",{"_index":194,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["wc/src/app/app.component.ts",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["wc/src/app/app.component.ts:22",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:24",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:25",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:26",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:28",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:29",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:30",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:32",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:40",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["wc/src/app/app.module.ts:22",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["wc/src/app/core/constants.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wc/src/app/core/highlight.operator.ts",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["wc/src/app/core/services/data",{"_index":240,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["wc/src/app/core/services/filtered",{"_index":380,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["wc/src/app/core/store/store.module.ts",{"_index":488,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wc/src/app/core/zoom",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["webcomponent",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1302,"title":{},"body":{"index.html":{}}}],["week",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1401,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["within",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":738,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["x",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["x_dimension",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["y",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["y_dimension",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["yes",{"_index":278,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["youtube",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["z_dimension",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["zone.js",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilteredSceneService.html":{},"overview.html":{}}}],["zoomto",{"_index":444,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zoomto(id",{"_index":1294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zoomto(this.zoomtoid",{"_index":414,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["zoomtoid",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-body-ui-wc/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                bodyUI\n                            \n                            \n                                    Readonly\n                                data$\n                            \n                            \n                                organs$\n                            \n                            \n                                scene$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                reset\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configState: GlobalConfigState, sceneSource: FilteredSceneService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configState\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sceneSource\n                                                  \n                                                        \n                                                                        FilteredSceneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseEnter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseLeave\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        bodyUI\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BodyUiComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('bodyUI', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sceneSource.filteredOrgans$\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { FilteredSceneService } from './core/services/filtered-scene/filtered-scene.service';\nimport { Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BodyUiComponent, GlobalConfigState } from 'ccf-shared';\nimport { take, tap } from 'rxjs/operators';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\n\n\nexport interface GlobalConfig {\n  highlightID?: string;\n  zoomToID?: string;\n  data?: JsonLdObj[];\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('bodyUI', { static: true }) readonly bodyUI!: BodyUiComponent;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  readonly data$ = this.configState.getOption('data');\n  organs$ = this.sceneSource.filteredOrgans$;\n  scene$ = this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly sceneSource: FilteredSceneService,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  private async reset(): Promise {\n    const { bodyUI } = this;\n\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise((resolve) => setTimeout(resolve, 200));\n    const organs = await lastValueFrom(this.organs$.pipe(take(1)));\n    const hasZoomingNode = !!bodyUI.scene?.find((node) => node.zoomToOnLoad) ?? false;\n\n    bodyUI.rotation = 0;\n    bodyUI.rotationX = 0;\n\n    if (!hasZoomingNode) {\n      if (organs && organs.length === 1) {\n        const { x_dimension: x, y_dimension: y, z_dimension: z } = organs[0];\n        bodyUI.bounds = { x: 1.25 * x / 1000, y: 1.25 * y / 1000, z: 1.25 * z / 1000 };\n        bodyUI.target = [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n      } else {\n        bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n        bodyUI.target = [0, 0, 0];\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .body-ui {\n  height: 100%;\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StoreModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/app.module.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppWebComponent } from './app-web-component.component';\nimport { StoreModule } from './core/store/store.module';\nimport { BodyUiModule } from 'ccf-shared';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    StoreModule,\n    BodyUiModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: []\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-body-ui-wc', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                highlightID\n                            \n                            \n                                zoomToID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         InputDataFormat[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomToID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseEnter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseLeave\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\nimport { environment } from '../environments/environment';\n\n\nexport interface InputDataFormat {\n  id: string;\n  rui_location: JsonLdObj;\n}\n\n\nfunction toJsonLd(data: InputDataFormat[]): JsonLdObj[] {\n  if (typeof data === 'string') {\n    data = JSON.parse(data);\n  }\n  return data.map(d => ({\n    '@id': `http://purl.org/ccf/1.5/entity/${d.id}`,\n    '@type': 'http://purl.org/ccf/latest/ccf-entity.owl#Sample',\n    'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity': d.rui_location\n  })) as unknown as JsonLdObj[];\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() data: InputDataFormat[];\n  @Input() highlightID: string;\n  @Input() zoomToID: string;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions']\n      },\n      parse: {\n        data: toJsonLd\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDataSource\n                            \n                            \n                                    Private\n                                createDataSource\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getOrganScene\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locator: LocationStrategy, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locator\n                                                  \n                                                        \n                                                                    LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        connectDataSource\n                        \n                    \n                \n            \n            \n                \n                        \n                    connectDataSource(source: DataSource, config: CCFDatabaseOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                            DataSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                config\n                                            \n                                                        CCFDatabaseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDataSource\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDataSource()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:180\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:90\n                        \n                    \n\n\n            \n                \n                        Queries for aggregate values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        Filter\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Currently applied filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable emitting the results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Queries for cell type term counts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        Filter\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Currently applied filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                An observable emitting the results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Get the cell type tree model.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable emitting the results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Queries for ontology term counts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        Filter\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Currently applied filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                An observable emitting the results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Get the ontology tree model.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable emitting the results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganScene\n                        \n                    \n                \n            \n            \n                \ngetOrganScene(organ: string, filter?: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filter\n                                            \n                                                        Filter\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Get the reference organs.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable emitting the results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Queries for scene nodes to display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        Filter\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Currently applied filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable emitting the results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Queries for tissue block values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        Filter\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Currently applied filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable emitting the results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:39\n                        \n                    \n\n            \n                \n                    The underlying database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CCFDatabaseOptions\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:41\n                        \n                    \n\n            \n                \n                    Database initialization options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DEFAULT_CCF_DB_OPTIONS } from './../../../../../../ccf-database/src/lib/ccf-database';\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { LocationStrategy } from '@angular/common';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport {\n  AggregateResult,\n  CCFDatabase,\n  CCFDatabaseOptions,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult\n} from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { Remote } from 'comlink';\nimport { Observable, Subscription, Unsubscribable, using } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n\ntype DataSource = Remote | CCFDatabase;\n\n\nfunction compareConfig(previous: CCFDatabaseOptions, current: CCFDatabaseOptions): boolean {\n  return previous === current;\n}\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService implements OnDestroy {\n  /** The underlying database. */\n  dataSource: Observable;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor(\n    private readonly locator: LocationStrategy,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    this.dataSource = globalConfig.getOption('data').pipe(\n      map(data => ({ ...DEFAULT_CCF_DB_OPTIONS, dataSources: data })),\n      filter(config => Object.keys(config).length > 0),\n      map((config) => config as unknown as CCFDatabaseOptions),\n      distinctUntilChanged(compareConfig),\n      switchMap(config => using(\n        () => this.createDataSource(),\n        (resource) => this.connectDataSource((resource as unknown as { source: DataSource }).source, config)\n      )),\n      shareReplay(1)\n    );\n\n    this.subscriptions.add(this.dataSource.subscribe());\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Queries for tissue block values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getTissueBlockResults(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getAggregateResults(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.dataSource.pipe(\n      switchMap(db => db.getOntologyTermOccurences(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for cell type term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.dataSource.pipe(\n      switchMap(db => db.getCellTypeTermOccurences(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Get the ontology tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  getOntologyTreeModel(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getOntologyTreeModel()),\n      take(1)\n    );\n  }\n\n  /**\n   * Get the cell type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  getCellTypeTreeModel(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getCellTypeTreeModel()),\n      take(1)\n    );\n  }\n\n\n  /**\n   * Get the reference organs.\n   *\n   * @returns An observable emitting the results.\n   */\n  getReferenceOrgans(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getReferenceOrgans()),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for scene nodes to display.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getScene(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getScene(filter)),\n      take(1)\n    );\n  }\n\n  getOrganScene(organ: string, filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getReferenceOrganScene(organ, filter)),\n      take(1)\n    );\n  }\n\n  private createDataSource(): { source: DataSource } & Unsubscribable {\n    const unsubscribe: () => void = () => undefined;\n    const source = new CCFDatabase();\n\n    return { source, unsubscribe };\n  }\n\n  private async connectDataSource(source: DataSource, config: CCFDatabaseOptions): Promise {\n    const start = new Date().getTime();\n\n    await source.connect(config, false);\n\n    if (!environment.production) {\n      // eslint-disable-next-line no-console\n      console.info(`Loaded CCF database in ${ ((new Date()).getTime() - start) / 1000 }s`);\n      // eslint-disable-next-line no-console\n      console.log(source);\n    }\n    return source;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilteredSceneService.html":{"url":"injectables/FilteredSceneService.html","title":"injectable - FilteredSceneService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilteredSceneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data$\n                            \n                            \n                                    Readonly\n                                filteredOrgans$\n                            \n                            \n                                    Readonly\n                                filteredScene$\n                            \n                            \n                                    Readonly\n                                highlightID$\n                            \n                            \n                                    Readonly\n                                organs$\n                            \n                            \n                                    Readonly\n                                referenceOrgans$\n                            \n                            \n                                    Readonly\n                                scene$\n                            \n                            \n                                    Readonly\n                                zoomToID$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chooseScene\n                            \n                            \n                                    Private\n                                filterSceneNodes\n                            \n                            \n                                    Private\n                                getNeededReferenceOrgans\n                            \n                            \n                                    Private\n                                getNeededSkins\n                            \n                            \n                                    Private\n                                selectOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configState: GlobalConfigState, source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configState\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chooseScene\n                        \n                    \n                \n            \n            \n                \n                        \n                    chooseScene(data?: JsonLdObj[], organs?: SpatialEntity[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        JsonLdObj[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                organs\n                                            \n                                                        SpatialEntity[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterSceneNodes\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterSceneNodes(nodes: SpatialSceneNode[], organs: Set, referenceOrgans: SpatialEntity[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nodes\n                                            \n                                                        SpatialSceneNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                organs\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                referenceOrgans\n                                            \n                                                        SpatialEntity[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialSceneNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNeededReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNeededReferenceOrgans(referenceOrgans: SpatialEntity[], organs: Set)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                referenceOrgans\n                                            \n                                                        SpatialEntity[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                organs\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialEntity[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNeededSkins\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNeededSkins(organs: SpatialEntity[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organs\n                                            \n                                                        SpatialEntity[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectOrgans\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectOrgans(data: Any[] | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Any[] | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.organs$, this.referenceOrgans$]).pipe(\n    map(([organs, referenceOrgans]) => this.getNeededReferenceOrgans(referenceOrgans, organs)),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredScene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.scene$, this.organs$, this.referenceOrgans$]).pipe(\n    map(([nodes, organs, referenceOrgans]) => this.filterSceneNodes(nodes, organs, referenceOrgans)),\n    hightlight(this.highlightID$, HIGHLIGHT_YELLOW),\n    zoomTo(this.zoomToID$),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightID$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('highlightID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data').pipe(\n    map(data => this.selectOrgans(data)),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        referenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.source.getReferenceOrgans()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.data$, this.referenceOrgans$, this.source.dataSource]).pipe(\n    switchMap(([data, referenceOrgans, _]) => this.chooseScene(data, referenceOrgans))\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        zoomToID$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('zoomToID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { SpatialSceneNode, SpatialEntity, Filter } from 'ccf-database';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { DataSourceService } from '../data-source/data-source.service';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { Any } from '@angular-ru/common/typings';\nimport { FEMALE_SKIN_URL, HIGHLIGHT_YELLOW, MALE_SKIN_URL, SPATIAL_ENTITY_URL } from '../../constants';\nimport { hightlight } from '../../highlight.operator';\nimport { GlobalConfig } from '../../../app.component';\nimport { zoomTo } from '../../zoom-to.operator';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilteredSceneService {\n  readonly data$ = this.configState.getOption('data');\n  readonly zoomToID$ = this.configState.getOption('zoomToID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  );\n  readonly highlightID$ = this.configState.getOption('highlightID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  );\n\n  readonly referenceOrgans$ = this.source.getReferenceOrgans();\n\n  readonly scene$ = combineLatest([this.data$, this.referenceOrgans$, this.source.dataSource]).pipe(\n    switchMap(([data, referenceOrgans, _]) => this.chooseScene(data, referenceOrgans))\n  );\n\n  readonly organs$ = this.configState.getOption('data').pipe(\n    map(data => this.selectOrgans(data)),\n    shareReplay(1)\n  );\n\n  readonly filteredOrgans$ = combineLatest([this.organs$, this.referenceOrgans$]).pipe(\n    map(([organs, referenceOrgans]) => this.getNeededReferenceOrgans(referenceOrgans, organs)),\n    shareReplay(1)\n  );\n\n  readonly filteredScene$ = combineLatest([this.scene$, this.organs$, this.referenceOrgans$]).pipe(\n    map(([nodes, organs, referenceOrgans]) => this.filterSceneNodes(nodes, organs, referenceOrgans)),\n    hightlight(this.highlightID$, HIGHLIGHT_YELLOW),\n    zoomTo(this.zoomToID$),\n    shareReplay(1)\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly source: DataSourceService\n  ) { }\n\n  private chooseScene(data?: JsonLdObj[], organs?: SpatialEntity[]): Observable {\n    const organUrls = data?.map(obj => {\n      const block: Any = obj[SPATIAL_ENTITY_URL];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return block?.placement.target;\n    }) ?? [];\n    const uniqueOrganUrls = new Set(organUrls);\n\n    if (uniqueOrganUrls.size > 1) {\n      return this.source.getScene();\n    } else if (organs) {\n      const organ = organs.find(tempOrgan => tempOrgan['@id'] === organUrls[0]);\n      if (organ) {\n        return this.source.getOrganScene(organ.representation_of as string, { ontologyTerms: [organ.reference_organ as string], sex: organ.sex } as Filter);\n      }\n    }\n    return of([]);\n  }\n\n  private selectOrgans(data: Any[] | undefined): Set {\n    const selectOrgan = (item: Any) =>\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      item[SPATIAL_ENTITY_URL].placement.target;\n\n    const organs = (data ?? []).map(selectOrgan);\n    return new Set(organs);\n  }\n\n  private filterSceneNodes(nodes: SpatialSceneNode[], organs: Set, referenceOrgans: SpatialEntity[]): SpatialSceneNode[] {\n    const neededReferenceOrgans = this.getNeededReferenceOrgans(referenceOrgans, organs);\n    const neededSkins = this.getNeededSkins(neededReferenceOrgans);\n    const neededOrgans = new Set([...organs, ...neededSkins]);\n    const filteredNodes = nodes.filter(node => !node.reference_organ || neededOrgans.has(node.reference_organ));\n\n    return filteredNodes;\n  }\n\n  private getNeededReferenceOrgans(referenceOrgans: SpatialEntity[], organs: Set): SpatialEntity[] {\n    return referenceOrgans.filter(organ => organs.has(organ.reference_organ ?? ''));\n  }\n\n  private getNeededSkins(organs: SpatialEntity[]): string[] {\n    if (organs.length === 1) {\n      return [];\n    }\n\n    const skins = new Set();\n    organs.forEach(organ => {\n      if (organ.sex === 'Female') {\n        skins.add(FEMALE_SKIN_URL);\n      } else if (organ.sex === 'Male') {\n        skins.add(MALE_SKIN_URL);\n      }\n    });\n\n    return [...skins];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            highlightID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     JsonLdObj[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JsonLdObj[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilteredSceneService } from './core/services/filtered-scene/filtered-scene.service';\nimport { Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BodyUiComponent, GlobalConfigState } from 'ccf-shared';\nimport { take, tap } from 'rxjs/operators';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\n\n\nexport interface GlobalConfig {\n  highlightID?: string;\n  zoomToID?: string;\n  data?: JsonLdObj[];\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('bodyUI', { static: true }) readonly bodyUI!: BodyUiComponent;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  readonly data$ = this.configState.getOption('data');\n  organs$ = this.sceneSource.filteredOrgans$;\n  scene$ = this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly sceneSource: FilteredSceneService,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  private async reset(): Promise {\n    const { bodyUI } = this;\n\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise((resolve) => setTimeout(resolve, 200));\n    const organs = await lastValueFrom(this.organs$.pipe(take(1)));\n    const hasZoomingNode = !!bodyUI.scene?.find((node) => node.zoomToOnLoad) ?? false;\n\n    bodyUI.rotation = 0;\n    bodyUI.rotationX = 0;\n\n    if (!hasZoomingNode) {\n      if (organs && organs.length === 1) {\n        const { x_dimension: x, y_dimension: y, z_dimension: z } = organs[0];\n        bodyUI.bounds = { x: 1.25 * x / 1000, y: 1.25 * y / 1000, z: 1.25 * z / 1000 };\n        bodyUI.target = [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n      } else {\n        bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n        bodyUI.target = [0, 0, 0];\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputDataFormat.html":{"url":"interfaces/InputDataFormat.html","title":"interface - InputDataFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputDataFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rui_location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_location:     JsonLdObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JsonLdObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\nimport { environment } from '../environments/environment';\n\n\nexport interface InputDataFormat {\n  id: string;\n  rui_location: JsonLdObj;\n}\n\n\nfunction toJsonLd(data: InputDataFormat[]): JsonLdObj[] {\n  if (typeof data === 'string') {\n    data = JSON.parse(data);\n  }\n  return data.map(d => ({\n    '@id': `http://purl.org/ccf/1.5/entity/${d.id}`,\n    '@type': 'http://purl.org/ccf/latest/ccf-entity.owl#Sample',\n    'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity': d.rui_location\n  })) as unknown as JsonLdObj[];\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() data: InputDataFormat[];\n  @Input() highlightID: string;\n  @Input() zoomToID: string;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions']\n      },\n      parse: {\n        data: toJsonLd\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.8.1 - 2023-11-16\nAdded in 3.8.1\n\nImproved keyboard controls in the RUI\n\n3.8.0 - 2023-11-16\nAdded in 3.8.0\n\nEUI Quality of Life Improvements. See milestone 6\nRUI Quality of Life Improvements. See milestone 5\nA lot of minor UI and bug fixes in preparation for HRA 2.0\nUpdated dependencies including, update to Angular 16\n\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            interface\n            InputDataFormat\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            function\n            toJsonLd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app.component.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            FEMALE_SKIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            HIGHLIGHT_YELLOW\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            MALE_SKIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            SPATIAL_ENTITY_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n            \n            function\n            highlightIfMatching\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n            \n            function\n            hightlight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                70 %\n                (12/17)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n            \n            function\n            compareConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts\n            \n            injectable\n            FilteredSceneService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n            \n            function\n            setZoomToIfMatching\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n            \n            function\n            zoomTo\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : 14.10.1\n        \n            @angular-ru/common : 15.313.0\n        \n            @angular-ru/ngxs : 14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^16.1.5\n        \n            @angular/cdk : ^16.1.5\n        \n            @angular/common : ^16.1.5\n        \n            @angular/compiler : ^16.1.5\n        \n            @angular/core : ^16.1.6\n        \n            @angular/elements : ^16.1.6\n        \n            @angular/forms : ^16.1.5\n        \n            @angular/material : ^16.1.5\n        \n            @angular/platform-browser : ^16.1.5\n        \n            @angular/platform-browser-dynamic : ^16.1.5\n        \n            @angular/router : ^16.1.5\n        \n            @angular/youtube-player : ^16.1.5\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : ~8.8.20\n        \n            @deck.gl/geo-layers : ~8.8.20\n        \n            @deck.gl/layers : ~8.8.20\n        \n            @deck.gl/mesh-layers : ~8.8.20\n        \n            @loaders.gl/core : ~3.2.10\n        \n            @loaders.gl/draco : ~3.2.10\n        \n            @loaders.gl/gltf : ~3.2.10\n        \n            @luma.gl/core : ~8.5.16\n        \n            @math.gl/core : ~3.6.3\n        \n            @math.gl/culling : ~3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/storage-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^16.0.0\n        \n            ngx-slider-v2 : ^16.0.2\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareConfig   (projects/.../data-source.service.ts)\n                        \n                        \n                            highlightIfMatching   (projects/.../highlight.operator.ts)\n                        \n                        \n                            hightlight   (projects/.../highlight.operator.ts)\n                        \n                        \n                            setZoomToIfMatching   (projects/.../zoom-to.operator.ts)\n                        \n                        \n                            toJsonLd   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            zoomTo   (projects/.../zoom-to.operator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareConfig\n                        \n                    \n                \n            \n            \n                \ncompareConfig(previous: CCFDatabaseOptions, current: CCFDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                previous\n                                            \n                                                        CCFDatabaseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                        CCFDatabaseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightIfMatching\n                        \n                    \n                \n            \n            \n                \nhighlightIfMatching(entity: SpatialSceneNode, id, color: Color)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            Color\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialSceneNode\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hightlight\n                        \n                    \n                \n            \n            \n                \nhightlight(id: Observable, color: Color)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                color\n                                            \n                                                            Color\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MonoTypeOperatorFunction\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setZoomToIfMatching\n                        \n                    \n                \n            \n            \n                \nsetZoomToIfMatching(entity: SpatialSceneNode, id)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialSceneNode\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomTo\n                        \n                    \n                \n            \n            \n                \nzoomTo(id: Observable)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MonoTypeOperatorFunction\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toJsonLd\n                        \n                    \n                \n            \n            \n                \ntoJsonLd(data)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     JsonLdObj[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the EUI, RUI, and Organ-Info.\nWebsite Links\n\nHRA Exploration User Interface (EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nHRA Registration User Interface (RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nHRA Organ Info Component (Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nHRA API\nProduction: https://apps.humanatlas.io/hra-api/\nStaging: https://apps.humanatlas.io/hra-api--staging/\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nHRA API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nHRA API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.7.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Color   (projects/.../highlight.operator.ts)\n                        \n                        \n                            DataSource   (projects/.../data-source.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n    \n    \n        \n            \n                \n                    \n                    Color\n                \n            \n            \n                \n                        [number, number, number, number]\n\n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataSource\n                \n            \n            \n                \n                        Remote | CCFDatabase\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FEMALE_SKIN_URL   (projects/.../constants.ts)\n                        \n                        \n                            HIGHLIGHT_YELLOW   (projects/.../constants.ts)\n                        \n                        \n                            MALE_SKIN_URL   (projects/.../constants.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                        \n                            SPATIAL_ENTITY_URL   (projects/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FEMALE_SKIN_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HIGHLIGHT_YELLOW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color\n\n                    \n                \n                \n                    \n                        Default value : [173, 255, 47, 229.5]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MALE_SKIN_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf.owl#VHMSkin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPATIAL_ENTITY_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
