var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.743,1,0.996]],["body/components/AppComponent.html",[0,1.009,1,1.479,2,1.544,3,0.515,4,0.699,5,1.47,6,1.762,7,1.762,8,1.252,9,0.436,10,0.799,11,0.522,12,0.522,13,1.47,14,1.47,15,1.794,16,1.47,17,2.098,18,0.999,19,1.354,20,2.527,21,2.954,22,2.527,23,2.527,24,0.515,25,1.158,26,1.813,27,3.226,28,1.103,29,1.972,30,1.805,31,1.794,32,2.524,33,2.464,34,2.291,35,2.527,36,2.098,37,2.098,38,2.098,39,1.336,40,1.762,41,1.28,42,2.954,43,1.972,44,2.098,45,2.291,46,2.017,47,2.206,48,1.077,49,0.058,50,1.805,51,0.999,52,0.808,53,2.107,54,2.6,55,2.206,56,2.206,57,2.206,58,2.206,59,1.077,60,2.464,61,2.954,62,2.206,63,2.527,64,2.527,65,2.527,66,2.206,67,1.805,68,2.098,69,2.107,70,2.206,71,2.527,72,2.206,73,2.527,74,2.527,75,2.527,76,2.206,77,1.355,78,1.762,79,1.252,80,1.762,81,2.291,82,1.762,83,1.252,84,0.602,85,0.515,86,1.252,87,1.762,88,1.252,89,1.336,90,1.077,91,0.932,92,1.002,93,0.602,94,0.808,95,1.077,96,1.158,97,1.077,98,1.762,99,0.699,100,1.28,101,1.706,102,0.932,103,0.932,104,0.808,105,0.932,106,1.762,107,0.932,108,2.107,109,1.762,110,1.762,111,1.762,112,1.762,113,2.527,114,1.762,115,1.762,116,1.47,117,1.762,118,2.426,119,1.762,120,1.47,121,1.252,122,1.762,123,3.415,124,1.762,125,3.415,126,1.762,127,3.415,128,1.762,129,2.527,130,2.954,131,2.965,132,2.527,133,2.291,134,1.762,135,1.762,136,1.762,137,2.206,138,2.527,139,1.762,140,1.762,141,2.527,142,1.794,143,1.762,144,3.226,145,1.762,146,1.762,147,0.808,148,1.252,149,1.762,150,1.762,151,0.023,152,0.033,153,0.023]],["title/modules/AppModule.html",[154,1.812,155,1.543]],["body/modules/AppModule.html",[1,1.877,3,0.761,4,1.032,9,0.644,10,0.679,11,0.48,12,0.48,18,0.761,26,1.193,31,1.848,34,1.848,46,1.376,49,0.057,59,1.591,77,1.606,84,0.889,85,0.761,92,1.032,99,1.032,101,1.376,147,1.827,148,1.848,151,0.034,152,0.043,153,0.034,155,2.958,156,1.591,157,2.01,158,2.603,159,2.603,160,2.603,161,2.437,162,2.742,163,2.171,164,3.258,165,4.116,166,4.116,167,3.288,168,4.511,169,3.258,170,3.288,171,4.116,172,4.739,173,3.288,174,3.258,175,2.603,176,4.116,177,2.603,178,1.848,179,2.603,180,2.171,181,1.376,182,3.258,183,3.258,184,4.116,185,2.603,186,2.603,187,3.258,188,4.116,189,3.258,190,3.258,191,3.258]],["title/components/AppWebComponent.html",[0,0.743,147,0.996]],["body/components/AppWebComponent.html",[0,1.087,1,0.925,2,1.943,3,0.59,4,0.801,5,2.319,7,2.019,8,1.434,9,0.5,10,0.812,11,0.524,12,0.524,14,1.684,15,1.974,16,2.319,17,2.433,18,1.086,19,1.457,24,0.59,25,1.274,26,1.457,28,1.171,35,2.78,36,2.258,37,2.258,38,2.258,39,1.47,41,1.359,44,2.433,45,2.433,46,2.05,48,1.234,49,0.057,50,1.943,51,1.15,52,0.925,54,2.702,77,1.425,81,2.433,83,1.434,84,0.69,85,0.59,89,1.812,90,1.234,91,1.068,92,1.103,93,0.69,95,1.943,96,1.647,97,1.943,99,0.801,100,1.261,102,1.47,103,1.47,104,1.274,105,1.47,107,1.068,140,2.019,141,2.78,142,1.974,143,2.019,144,3.426,145,2.019,146,2.019,147,1.57,148,2.258,149,2.019,150,2.019,151,0.027,152,0.037,153,0.027,181,2.08,192,2.793,193,1.434,194,2.78,195,3.18,196,3.18,197,3.48,198,2.528,199,3.48,200,2.78,201,2.433,202,2.528,203,2.528,204,2.528,205,2.528,206,2.528,207,2.528,208,1.974,209,3.426,210,2.019,211,2.019,212,1.434,213,1.434,214,1.974,215,1.47,216,2.78,217,2.78,218,2.019,219,1.434,220,1.684,221,2.019,222,2.019,223,2.319,224,2.019,225,1.684,226,2.019,227,1.684,228,2.019,229,2.019,230,1.684,231,2.019,232,2.019,233,2.019,234,2.019,235,1.434]],["title/injectables/DataSourceService.html",[236,1.328,237,1.543]],["body/injectables/DataSourceService.html",[3,0.34,4,1.379,8,1.855,9,0.288,10,0.79,11,0.51,12,0.51,18,0.764,19,0.533,24,0.34,25,0.846,26,1.305,28,0.973,29,1.128,30,1.128,31,1.311,32,2.52,33,1.914,39,0.976,41,1.036,46,2.005,48,2.014,49,0.058,50,2.014,51,1.097,52,1.51,59,2.373,60,1.54,67,0.711,68,0.827,77,1.346,84,0.398,85,0.34,86,0.827,88,0.827,92,0.462,94,1.052,96,1.052,99,0.462,100,1.129,101,1.213,102,1.213,103,1.213,104,0.846,105,0.976,107,1.909,108,0.971,116,0.971,118,0.827,131,0.971,151,0.015,152,0.024,153,0.05,170,2.294,186,1.164,208,0.827,212,0.827,213,0.827,215,0.616,219,0.827,227,1.54,236,1.128,237,1.311,238,0.971,239,2.716,240,2.338,241,0.827,242,3.794,243,1.846,244,3.011,245,3.393,246,2.872,247,2.872,248,2.311,249,3.269,250,2.311,251,2.311,252,3.269,253,2.311,254,3.269,255,2.311,256,3.269,257,2.311,258,2.311,259,3.269,260,1.457,261,3.269,262,2.311,263,2.311,264,2.311,265,2.311,266,2.311,267,2.311,268,2.848,269,4.248,270,1.457,271,1.457,272,2.311,273,3.496,274,1.457,275,2.311,276,3.269,277,3.031,278,3.477,279,3.477,280,4.144,281,4.745,282,2.311,283,1.457,284,2.612,285,3.269,286,3.269,287,1.457,288,2.612,289,2.311,290,1.457,291,2.612,292,1.457,293,2.311,294,1.457,295,0.827,296,1.457,297,1.54,298,2.311,299,1.457,300,1.846,301,1.846,302,2.311,303,1.457,304,1.846,305,1.54,306,1.457,307,1.457,308,2.311,309,2.649,310,1.457,311,2.311,312,1.846,313,2.872,314,2.311,315,1.457,316,1.164,317,1.457,318,1.164,319,2.311,320,1.457,321,2.294,322,1.457,323,1.164,324,0.971,325,1.457,326,1.846,327,1.164,328,2.311,329,1.846,330,0.971,331,1.457,332,1.164,333,1.164,334,1.164,335,1.164,336,1.846,337,0.971,338,1.164,339,1.457,340,1.457,341,1.164,342,1.457,343,1.457,344,1.457,345,1.457,346,1.457,347,1.457,348,1.457,349,1.457,350,1.457,351,1.164,352,1.457,353,1.457,354,3.565,355,4.248,356,4.248,357,1.457,358,4.248,359,1.457,360,1.457,361,1.457,362,1.457,363,1.457,364,1.457,365,1.457,366,1.457,367,2.311,368,1.164,369,2.311,370,1.457,371,1.457,372,1.164,373,2.311,374,1.457,375,1.457,376,1.457,377,1.457]],["title/injectables/FilteredSceneService.html",[43,1.328,236,1.328]],["body/injectables/FilteredSceneService.html",[3,0.4,4,1.13,9,0.339,10,0.8,11,0.517,12,0.517,18,0.612,19,0.627,24,0.4,25,0.959,26,1.881,28,1.152,29,2.473,30,1.555,31,1.487,32,2.797,39,1.107,40,1.368,41,1.13,43,1.28,46,2.031,48,1.98,49,0.058,50,1.98,51,0.947,52,1.485,53,1.746,59,1.878,67,2.126,68,2.47,69,1.746,77,1.489,79,2.753,84,0.467,85,0.4,88,0.971,89,1.507,90,0.836,91,0.723,92,0.542,94,0.627,95,1.555,96,1.306,97,1.555,99,0.542,100,1.13,101,1.957,102,1.107,103,1.107,104,0.959,105,1.107,107,1.886,120,1.141,121,1.487,151,0.018,152,0.028,153,0.018,162,1.141,179,1.368,215,1.107,236,1.28,237,2.024,238,1.141,240,0.836,273,1.746,277,2.093,280,2.544,295,1.487,300,1.368,305,1.141,309,1.141,316,2.093,323,3.877,324,2.703,330,1.141,332,1.368,333,1.368,334,1.368,338,1.368,341,2.093,351,3.24,368,2.544,378,3.877,379,1.368,380,3.184,381,3.184,382,4.93,383,2.621,384,2.621,385,2.621,386,2.621,387,2.621,388,1.712,389,2.621,390,1.712,391,2.621,392,3.566,393,1.712,394,2.621,395,1.712,396,2.621,397,1.712,398,2.621,399,1.712,400,1.712,401,2.621,402,3.568,403,2.621,404,3.184,405,1.712,406,2.621,407,2.621,408,2.621,409,2.621,410,2.621,411,2.122,412,2.621,413,1.712,414,2.621,415,3.568,416,3.568,417,1.712,418,2.621,419,2.621,420,1.712,421,2.621,422,1.712,423,2.621,424,2.621,425,2.621,426,2.621,427,2.621,428,2.621,429,1.712,430,2.621,431,1.712,432,1.712,433,1.712,434,0.971,435,1.712,436,1.141,437,1.141,438,1.141,439,1.712,440,1.141,441,1.712,442,1.141,443,1.712,444,1.712,445,1.712,446,1.712,447,2.621,448,2.621,449,2.621,450,1.712,451,1.712,452,1.712,453,1.712,454,1.712,455,1.712,456,1.712,457,1.712,458,1.712,459,1.712,460,1.712,461,1.368,462,3.184,463,1.712,464,1.368,465,1.712,466,1.712,467,1.712,468,1.712,469,2.621,470,1.712,471,1.712,472,1.712,473,2.621,474,1.712,475,1.712,476,1.712,477,1.712,478,1.712,479,2.621,480,1.712,481,1.712,482,1.712,483,1.712,484,1.712]],["title/interfaces/GlobalConfig.html",[93,0.743,94,0.996]],["body/interfaces/GlobalConfig.html",[0,0.986,1,0.977,3,0.624,4,0.846,9,0.528,10,0.44,11,0.284,12,0.284,13,1.779,15,1.514,18,0.844,19,0.977,20,2.132,21,2.132,22,2.132,23,2.132,24,0.624,25,1.323,26,1.799,27,2.886,28,1.252,29,1.764,30,1.303,32,2.489,33,1.779,34,1.514,36,1.514,37,1.514,38,1.514,39,1.128,41,1.145,42,2.132,43,1.764,44,1.514,45,2.049,49,0.058,51,0.956,52,1.73,53,1.779,54,2.489,60,2.407,61,2.886,63,2.132,64,2.132,65,2.132,69,1.779,71,2.132,73,2.132,74,2.132,75,2.132,77,1.452,78,2.132,79,1.514,80,2.132,81,2.489,82,2.132,83,1.514,84,0.729,85,0.624,86,1.514,87,2.132,88,1.514,89,1.854,90,1.303,91,1.128,92,1.145,93,0.729,94,1.323,95,2.142,96,1.73,97,2.142,98,2.132,99,0.846,100,1.39,101,1.854,102,1.128,103,1.128,104,0.977,105,1.128,106,2.132,107,1.128,108,2.407,109,2.132,110,2.132,111,2.132,112,2.132,113,2.886,114,2.132,115,2.132,116,1.779,117,2.132,118,2.601,119,2.132,120,1.779,121,1.514,122,2.132,123,3.662,124,2.132,125,3.662,126,2.132,127,3.662,128,2.132,129,2.886,130,3.271,131,3.148,132,2.886,133,2.489,134,2.132,135,2.132,136,2.132,151,0.028,152,0.038,153,0.028,485,1.303]],["title/interfaces/InputDataFormat.html",[93,0.743,201,1.543]],["body/interfaces/InputDataFormat.html",[0,1.082,2,1.5,3,0.718,4,0.973,5,2.047,9,0.608,10,0.507,11,0.327,12,0.327,15,1.743,16,2.047,17,1.743,18,1.025,19,1.125,24,0.718,25,1.451,26,1.607,28,1.082,36,1.743,37,1.743,38,1.743,39,1.298,41,1.256,44,2.249,45,2.249,49,0.057,51,1.025,54,2.631,77,1.521,81,2.631,83,1.743,84,0.839,85,0.718,89,2.077,90,1.5,91,1.298,92,1.256,93,0.839,95,1.5,96,1.757,97,1.5,99,0.973,100,1.39,102,1.675,103,1.675,104,1.451,105,1.675,107,1.298,147,1.125,148,1.743,151,0.032,152,0.042,153,0.032,181,1.298,192,1.743,193,1.743,194,2.454,195,3.167,196,2.454,200,2.454,201,2.631,208,1.743,209,3.704,210,2.454,211,2.454,212,1.743,213,1.743,214,2.723,215,1.675,216,3.167,217,3.167,218,3.704,219,1.743,220,2.047,221,2.454,222,2.454,223,2.641,224,2.454,225,2.047,226,2.454,227,2.047,228,2.454,229,2.454,230,2.047,231,2.454,232,2.454,233,2.454,234,2.454,235,1.743,485,1.5]],["title/modules/StoreModule.html",[154,1.812,161,1.328]],["body/modules/StoreModule.html",[3,0.821,4,1.114,9,0.695,10,0.58,11,0.374,12,0.374,18,0.821,28,0.96,41,1.367,49,0.058,77,1.612,84,0.96,85,1.008,92,1.367,99,1.114,101,1.486,151,0.037,152,0.045,153,0.037,154,2.343,156,1.717,161,2.107,167,2.809,173,3.448,180,2.343,212,1.995,213,1.995,372,3.448,486,2.343,487,3.517,488,2.809,489,2.809,490,3.517,491,2.809,492,3.73,493,3.517,494,2.809,495,2.809,496,2.809,497,2.343,498,3.517,499,3.517,500,3.517,501,2.809,502,3.517,503,3.517,504,3.517,505,3.517,506,3.517,507,3.517,508,3.517,509,3.517,510,3.517,511,3.517,512,3.517,513,3.517,514,3.517,515,3.517]],["title/changelog.html",[516,1.531,517,1.304,518,1.531]],["body/changelog.html",[0,0.672,2,0.771,3,0.757,6,0.735,8,0.522,9,0.182,11,0.38,12,0.407,14,1.641,17,0.896,18,1.126,19,0.337,25,0.337,28,1.259,29,2.038,30,1.744,46,0.389,49,0.04,51,0.215,52,0.337,67,0.449,85,0.215,86,0.522,91,1.368,93,0.933,94,0.337,100,1.211,104,1.186,121,0.896,133,1.397,139,0.735,142,0.522,151,0.01,152,0.017,153,0.038,157,1.203,178,0.896,181,1.279,185,0.735,214,0.522,215,0.667,230,2.158,243,0.735,244,0.613,268,0.735,273,1.641,278,1.659,279,0.735,284,1.968,291,3.054,295,2.652,297,2.826,301,2.215,304,3.276,305,1.383,309,1.848,312,1.262,329,1.968,337,1.053,392,1.968,434,1.573,461,1.262,464,0.735,485,0.449,501,0.735,517,1.178,518,1.053,519,1.262,520,1.262,521,1.262,522,2.854,523,1.262,524,3.419,525,0.92,526,5.268,527,4.499,528,1.58,529,0.92,530,0.92,531,0.92,532,3.926,533,0.92,534,1.262,535,0.92,536,3.137,537,2.076,538,1.58,539,2.076,540,0.92,541,1.262,542,0.92,543,0.92,544,2.854,545,1.58,546,2.773,547,2.076,548,2.076,549,0.92,550,1.58,551,1.58,552,3.971,553,1.58,554,0.92,555,2.469,556,0.92,557,4.241,558,0.92,559,1.58,560,0.92,561,2.076,562,2.773,563,1.58,564,2.076,565,2.076,566,2.463,567,1.58,568,2.076,569,0.92,570,1.58,571,1.58,572,0.92,573,3.239,574,3.027,575,3.239,576,1.58,577,0.92,578,0.92,579,4.241,580,2.463,581,0.92,582,1.58,583,0.92,584,0.92,585,1.58,586,2.076,587,2.076,588,2.215,589,0.92,590,1.58,591,0.92,592,0.92,593,0.92,594,1.58,595,0.92,596,3.027,597,0.92,598,0.92,599,0.92,600,2.076,601,1.659,602,0.92,603,0.92,604,2.215,605,1.262,606,0.92,607,3.027,608,3.823,609,3.926,610,1.58,611,2.773,612,0.92,613,1.58,614,3.027,615,1.58,616,0.92,617,2.463,618,0.92,619,0.92,620,1.58,621,2.587,622,0.92,623,3.239,624,3.778,625,0.92,626,0.92,627,1.58,628,0.92,629,0.92,630,1.58,631,2.076,632,0.92,633,0.92,634,0.92,635,2.076,636,0.92,637,1.58,638,0.92,639,0.92,640,0.92,641,0.735,642,4.1,643,0.92,644,0.735,645,0.735,646,0.735,647,0.92,648,1.58,649,0.735,650,0.92,651,1.58,652,2.463,653,2.463,654,0.92,655,1.58,656,2.076,657,0.92,658,0.92,659,1.58,660,0.92,661,0.92,662,3.027,663,2.017,664,2.215,665,1.659,666,0.92,667,2.215,668,0.92,669,2.076,670,2.731,671,4.018,672,0.92,673,0.92,674,1.58,675,1.659,676,0.92,677,0.92,678,0.92,679,2.773,680,0.92,681,0.92,682,0.92,683,0.92,684,2.076,685,0.92,686,1.262,687,1.262,688,0.92,689,2.731,690,0.92,691,0.92,692,0.92,693,0.92,694,0.92,695,2.215,696,2.215,697,1.58,698,0.92,699,0.92,700,1.58,701,1.58,702,0.92,703,1.58,704,1.58,705,1.58,706,1.58,707,0.92,708,2.076,709,0.92,710,0.92,711,0.735,712,0.92,713,1.659,714,0.735,715,1.58,716,1.58,717,0.92,718,0.92,719,1.58,720,1.58,721,1.58,722,1.58,723,0.92,724,0.92,725,0.92,726,0.92,727,2.076,728,0.92,729,1.58,730,0.92,731,0.92,732,1.58,733,3.027,734,1.262,735,0.92,736,0.735,737,0.92,738,0.92,739,0.92,740,2.076,741,1.58,742,3.027,743,1.262,744,1.58,745,2.463,746,0.92,747,0.92,748,2.463,749,0.92,750,0.92,751,0.92,752,1.58,753,1.58,754,0.92,755,1.58,756,0.92,757,1.58,758,0.92,759,1.58,760,0.92,761,0.92,762,0.92,763,0.92,764,0.92,765,0.92,766,1.58,767,0.92,768,0.92,769,0.92,770,0.92,771,0.92,772,0.92,773,1.58,774,0.92,775,0.92,776,0.92,777,0.92,778,0.92,779,1.58,780,0.92,781,3.027,782,0.92,783,0.92,784,2.076,785,2.076,786,1.58,787,0.92,788,0.92,789,0.735,790,0.735,791,0.92,792,1.58,793,0.92,794,0.92,795,0.92,796,0.92,797,1.58,798,1.58,799,0.92,800,1.58,801,1.58,802,0.92,803,1.58,804,2.463,805,2.076,806,0.92,807,0.92,808,0.92,809,0.92,810,0.735,811,0.92,812,1.58,813,0.92,814,0.92,815,1.58,816,2.463,817,0.92,818,0.92,819,0.92,820,0.92,821,3.027,822,2.076,823,1.58,824,0.92,825,0.92,826,2.076,827,1.58,828,1.58,829,1.58,830,2.463,831,0.92,832,1.397,833,0.92,834,0.92,835,1.58,836,0.92,837,0.92,838,0.92,839,0.92,840,0.92,841,2.463,842,0.92,843,2.076,844,2.463,845,0.92,846,2.076,847,2.773,848,1.58,849,1.58,850,1.58,851,1.58,852,2.076,853,2.463,854,2.773,855,1.58,856,2.076,857,0.92,858,0.92,859,3.239,860,2.076,861,0.92,862,2.463,863,2.463,864,3.573,865,0.92,866,0.92,867,0.92,868,0.92,869,0.92,870,0.92,871,1.58,872,0.92,873,1.58,874,0.92,875,0.92,876,0.92,877,0.92,878,1.58,879,0.92,880,2.076,881,0.92,882,0.92,883,1.58,884,1.659,885,1.58,886,2.076,887,0.92,888,0.92,889,0.92,890,1.58,891,0.92,892,0.92,893,0.92,894,0.92,895,0.92,896,0.92,897,0.92,898,1.58,899,0.92,900,0.92,901,2.463,902,3.027,903,1.58,904,2.076,905,1.58,906,0.92,907,0.92,908,0.92,909,0.92,910,2.076,911,0.92,912,0.92,913,0.92,914,1.58,915,1.58,916,1.58,917,2.076,918,0.92,919,0.92,920,0.92,921,0.92,922,0.92,923,0.735,924,0.92,925,0.92,926,0.92,927,1.58,928,0.92,929,0.92,930,1.58,931,0.92,932,0.92,933,0.92,934,0.92,935,0.92,936,0.92,937,0.92,938,0.92,939,0.92,940,0.92,941,3.419,942,0.92,943,1.659,944,3.419,945,2.076,946,2.463,947,1.58,948,2.076,949,0.92,950,1.58,951,0.92,952,0.92,953,1.58,954,1.58,955,1.58,956,0.92,957,0.92,958,0.92,959,0.92,960,1.58,961,0.92,962,1.659,963,0.92,964,0.92,965,0.92,966,0.92,967,0.735,968,0.92,969,0.92,970,0.92,971,0.92,972,0.92,973,0.92,974,0.92,975,0.92,976,0.92,977,0.92,978,0.92,979,2.773,980,0.92,981,0.92,982,0.92,983,0.92,984,0.92,985,0.92,986,0.92,987,0.92,988,0.92,989,0.92,990,0.92,991,0.92,992,0.92,993,0.92,994,0.92,995,0.92,996,1.58,997,0.92,998,1.58,999,0.92,1000,1.58,1001,1.58,1002,2.463,1003,2.463,1004,1.58,1005,1.58,1006,0.92,1007,0.92,1008,0.92,1009,2.076,1010,0.92,1011,0.735,1012,0.92,1013,0.92,1014,0.92,1015,0.92,1016,0.92,1017,0.92,1018,1.58,1019,3.706,1020,2.076,1021,0.92,1022,1.58,1023,0.92,1024,0.92,1025,0.92,1026,0.92,1027,0.92,1028,0.92,1029,0.92,1030,0.92,1031,0.92,1032,1.58,1033,2.587,1034,1.58,1035,0.92,1036,0.92,1037,0.92,1038,0.92,1039,0.92,1040,1.58,1041,0.92,1042,0.92,1043,0.92,1044,1.641,1045,0.92,1046,1.58,1047,0.92,1048,0.92,1049,0.92,1050,1.58,1051,1.58,1052,0.92,1053,0.92,1054,0.92,1055,0.92,1056,1.58,1057,2.076,1058,1.58,1059,0.92,1060,1.262,1061,0.92,1062,0.92,1063,0.92,1064,0.92,1065,0.92,1066,0.92,1067,0.92,1068,0.92,1069,0.92,1070,0.735,1071,0.92,1072,0.92,1073,1.58,1074,0.92,1075,0.92,1076,0.92,1077,0.92,1078,0.92,1079,0.92,1080,1.58,1081,0.92,1082,0.735,1083,0.92,1084,0.92,1085,0.735,1086,0.92,1087,0.92,1088,1.58,1089,0.92,1090,0.92,1091,0.92,1092,0.92,1093,0.92,1094,0.92,1095,0.92,1096,0.92,1097,0.92,1098,0.92,1099,0.92,1100,1.58,1101,0.92,1102,0.92,1103,0.92,1104,0.92,1105,1.58,1106,0.92,1107,0.735,1108,0.92,1109,0.92,1110,0.92,1111,0.92,1112,0.92,1113,0.92,1114,0.92]],["title/coverage.html",[1044,2.438]],["body/coverage.html",[0,1.086,1,1.13,9,0.61,10,0.879,11,0.568,12,0.568,13,2.649,43,1.507,49,0.056,51,0.721,79,1.751,93,1.086,94,1.13,100,0.978,118,3.007,138,2.466,147,1.13,151,0.032,152,0.042,153,0.032,181,1.858,192,2.495,193,2.495,201,1.751,219,2.792,235,1.751,236,1.941,237,1.751,239,2.256,240,1.941,241,2.256,378,2.466,379,2.466,411,2.057,436,2.057,437,2.057,438,2.057,440,2.057,442,2.057,486,2.057,497,2.057,663,2.057,1044,2.057,1115,3.087,1116,3.087,1117,3.087,1118,3.087,1119,5.167,1120,3.087,1121,3.087,1122,3.711,1123,4.807,1124,2.649,1125,2.466,1126,3.087,1127,3.087,1128,2.466,1129,3.087,1130,3.087,1131,3.176,1132,3.176,1133,2.466,1134,3.087,1135,3.087]],["title/dependencies.html",[157,1.59,649,1.836]],["body/dependencies.html",[9,0.552,11,0.297,49,0.058,84,0.762,142,2.113,151,0.029,152,0.039,153,0.029,157,1.364,175,2.231,177,2.975,178,2.113,244,1.861,288,2.231,318,2.231,327,2.231,330,1.861,434,1.584,488,2.975,489,2.231,491,2.231,492,2.975,494,2.231,523,2.231,541,2.231,667,2.231,686,2.231,734,2.231,743,2.231,789,2.231,790,2.231,884,2.231,943,2.975,1136,2.793,1137,2.793,1138,2.793,1139,5.12,1140,2.793,1141,2.793,1142,2.793,1143,2.793,1144,2.793,1145,2.793,1146,2.793,1147,2.793,1148,2.793,1149,2.793,1150,2.793,1151,2.793,1152,4.189,1153,2.793,1154,3.724,1155,2.793,1156,2.793,1157,2.793,1158,2.793,1159,4.189,1160,2.793,1161,2.793,1162,2.793,1163,2.793,1164,2.793,1165,2.793,1166,2.793,1167,2.793,1168,2.793,1169,2.793,1170,3.724,1171,2.793,1172,3.724,1173,2.793,1174,2.793,1175,2.793,1176,2.793,1177,3.724,1178,2.793,1179,2.793,1180,2.793,1181,3.724,1182,2.793,1183,2.793,1184,2.793,1185,2.793,1186,2.793,1187,2.793,1188,2.793,1189,2.793,1190,2.793,1191,2.793,1192,2.793,1193,2.793,1194,2.793,1195,2.793,1196,2.793,1197,2.793,1198,2.231,1199,2.793,1200,2.793,1201,2.793,1202,2.793,1203,2.793,1204,2.793,1205,3.724,1206,2.793,1207,2.793,1208,2.793,1209,2.793,1210,2.793,1211,2.793,1212,2.793,1213,2.793,1214,2.793,1215,2.793,1216,2.793,1217,2.793,1218,2.793,1219,2.793,1220,2.793,1221,2.793,1222,2.793,1223,2.793,1224,2.793,1225,2.793,1226,2.793,1227,2.793,1228,3.724,1229,2.793,1230,2.793,1231,2.793,1232,2.793,1233,2.793,1234,2.793,1235,2.793,1236,2.793,1237,2.793,1238,2.793,1239,2.793,1240,2.793,1241,2.793,1242,3.724,1243,2.793,1244,2.793,1245,2.793,1246,2.793,1247,2.793,1248,2.793,1249,2.793,1250,2.793,1251,2.793,1252,2.793,1253,2.793,1254,2.793]],["title/miscellaneous/functions.html",[1255,0.971,1256,2.602]],["body/miscellaneous/functions.html",[10,0.796,11,0.514,12,0.514,24,0.802,28,0.937,48,2.469,49,0.056,50,2.469,52,1.851,59,2.469,89,1.45,151,0.036,152,0.045,153,0.036,181,1.796,192,1.947,193,2.412,208,1.947,214,2.869,220,2.287,235,2.412,239,1.947,240,1.676,241,2.412,324,2.833,335,2.741,336,3.396,337,2.287,440,2.833,442,2.833,832,2.739,1124,2.287,1125,3.396,1128,3.396,1131,2.741,1132,3.69,1133,3.396,1255,1.45,1256,2.741,1257,2.741,1258,3.396,1259,4.252,1260,3.432,1261,3.432,1262,4.252,1263,3.432,1264,4.252,1265,3.432,1266,3.432]],["title/index.html",[24,0.537,516,1.531,517,1.304]],["body/index.html",[0,0.855,3,1.128,12,0.333,18,1.263,49,0.042,93,1.095,151,0.033,152,0.042,153,0.033,215,1.322,295,2.512,297,2.673,434,1.776,485,1.528,518,2.086,519,3.205,520,3.205,521,3.537,522,3.537,536,3.537,552,3.205,555,3.112,588,2.501,601,3.205,604,3.205,605,3.205,621,2.501,624,3.537,644,2.501,645,2.501,646,2.501,664,3.857,665,3.73,670,3.205,675,2.501,687,3.205,689,2.501,696,2.501,713,2.501,714,3.205,810,2.501,967,2.501,1060,2.501,1070,2.501,1082,2.501,1267,4.012,1268,4.012,1269,4.012,1270,3.13,1271,3.13,1272,3.13,1273,3.13,1274,3.205,1275,3.13,1276,3.13,1277,3.13,1278,4.012,1279,4.012,1280,4.012,1281,4.428,1282,3.13,1283,3.13,1284,4.428,1285,4.428,1286,3.13,1287,3.13,1288,4.012,1289,3.13,1290,3.13,1291,3.13,1292,3.13,1293,3.13,1294,3.13,1295,3.13,1296,3.13,1297,3.13,1298,3.13,1299,4.67,1300,3.13,1301,3.13,1302,3.13,1303,3.13,1304,3.13,1305,3.13,1306,3.13,1307,3.13,1308,3.13,1309,3.13,1310,3.13,1311,3.13,1312,3.13,1313,3.13,1314,3.13,1315,3.13,1316,3.13,1317,3.13]],["title/license.html",[516,1.531,517,1.304,1318,1.836]],["body/license.html",[49,0.046,151,0.037,152,0.046,153,0.037,163,2.36,534,3.463,555,2.36,663,2.36,695,3.463,711,3.742,736,2.829,923,3.463,1011,2.829,1033,2.829,1085,2.829,1107,2.829,1198,2.829,1274,4.193,1318,2.829,1319,3.542,1320,4.684,1321,3.542,1322,3.542,1323,4.335,1324,3.542,1325,3.542,1326,3.542,1327,3.542,1328,3.542,1329,3.542,1330,4.335,1331,3.542,1332,3.542,1333,3.542,1334,3.542,1335,3.542,1336,3.542,1337,3.542,1338,3.542,1339,3.542,1340,3.542,1341,3.542,1342,3.542,1343,4.335,1344,3.542,1345,3.542,1346,3.542,1347,3.542,1348,3.542,1349,3.542,1350,4.335,1351,3.542,1352,3.542,1353,3.542,1354,3.542,1355,3.542,1356,3.542,1357,3.542,1358,3.542,1359,3.542,1360,3.542,1361,3.542,1362,3.542,1363,3.542,1364,3.542,1365,3.542,1366,3.542,1367,3.542,1368,3.542,1369,3.542,1370,3.542,1371,3.542,1372,3.542,1373,3.542,1374,3.542,1375,3.542,1376,3.542,1377,3.542]],["title/modules.html",[156,1.786]],["body/modules.html",[49,0.05,151,0.044,152,0.05,153,0.044,155,2.356,156,2.028,161,2.028,178,2.356,544,3.318,962,3.318,1378,4.154,1379,4.764,1380,4.154]],["title/overview.html",[1381,2.923]],["body/overview.html",[1,1.792,2,1.916,34,2.227,49,0.054,133,2.866,147,1.792,151,0.041,152,0.048,153,0.041,155,3.01,156,1.916,157,2.251,158,3.135,159,3.135,160,3.135,161,2.39,162,3.072,163,2.615,238,2.615,485,1.916,1381,3.135]],["title/miscellaneous/typealiases.html",[1255,0.971,1382,3.257]],["body/miscellaneous/typealiases.html",[10,0.769,11,0.497,12,0.497,24,0.935,49,0.052,51,0.935,151,0.042,152,0.049,153,0.042,239,2.271,240,1.955,241,2.646,245,3.726,321,3.198,326,3.198,641,4.061,832,2.646,1124,2.668,1255,1.691,1257,3.198,1258,3.198,1383,4.004]],["title/miscellaneous/variables.html",[1255,0.971,1384,2.602]],["body/miscellaneous/variables.html",[10,0.732,11,0.473,12,0.473,24,0.861,41,1.168,49,0.057,51,1.183,67,2.472,68,2.873,85,0.861,96,1.745,151,0.039,152,0.047,153,0.039,180,2.456,223,2.456,225,2.456,411,2.959,436,2.959,437,2.959,438,2.959,486,2.456,495,2.944,496,2.944,497,2.959,832,2.091,1122,2.944,1255,1.557,1384,2.944,1385,4.948,1386,3.686,1387,3.686,1388,3.686,1389,3.686,1390,3.686,1391,3.686,1392,3.686]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["0.5.0",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1060,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0/1",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["1.0",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":943,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["1.3.5",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":884,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":230,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["10.0.0",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["1000",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["10x",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":621,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["12/17",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["15.126.1",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["173",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":743,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["2.2.0",{"_index":734,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":686,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["2.awsapprunner.com",{"_index":1296,"title":{},"body":{"index.html":{}}}],["200",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["2019",{"_index":1033,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["229.5",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":667,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["3.3.0",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["3.4.0",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1303,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":523,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.7.1",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1279,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["47",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4th",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":427,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ability",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1085,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["access",{"_index":449,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["accurate",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1371,"title":{},"body":{"license.html":{}}}],["actions",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["added",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["aggregate",{"_index":275,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["aggregateresult",{"_index":320,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["ala",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1383,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1283,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":790,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1341,"title":{},"body":{"license.html":{}}}],["angular",{"_index":434,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":318,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":536,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":1293,"title":{},"body":{"index.html":{}}}],["app",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilteredSceneService.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["appelement",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":279,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["appmodule",{"_index":155,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":147,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1375,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":736,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["atlas",{"_index":520,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempts",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1364,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":962,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["award",{"_index":1316,"title":{},"body":{"index.html":{}}}],["backend",{"_index":243,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["background",{"_index":1082,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["basewebcomponent",{"_index":195,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["basic",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":501,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["beta",{"_index":670,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":305,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["block?.placement.target",{"_index":450,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["blocks",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.bounds",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.rotation",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.rotationx",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.scene?.find((node",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.target",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyuicomponent",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyuimodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["boolean",{"_index":208,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1379,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1275,"title":{},"body":{"index.html":{}}}],["builds",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1321,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["cacheable",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["cancelregistration",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["ccf",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":321,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["ccfdatabaseoptions",{"_index":269,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["cdr",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["cell",{"_index":284,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["center",{"_index":1311,"title":{},"body":{"index.html":{}}}],["change",{"_index":810,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["changedetection",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy.onpush",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy.onpush,selector",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["changedetectorref",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changelog",{"_index":518,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1327,"title":{},"body":{"license.html":{}}}],["choose",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["choosescene",{"_index":383,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["choosescene(data",{"_index":389,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ci/cd",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1367,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["clean",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":1299,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":832,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["colorizing",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":432,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.data",{"_index":423,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.organs",{"_index":401,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.scene",{"_index":406,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["come",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":327,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["common",{"_index":714,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compareconfig",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["compareconfig(previous",{"_index":335,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["compatibility",{"_index":509,"title":{},"body":{"modules/StoreModule.html":{}}}],["complexity",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":193,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component.component.ts:32",{"_index":202,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":203,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:34",{"_index":204,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":206,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":207,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:38",{"_index":205,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":199,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"overview.html":{}}}],["comunica/query",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1349,"title":{},"body":{"license.html":{}}}],["config",{"_index":268,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["configstate",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["configstore",{"_index":200,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["configuration",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["connectdatasource",{"_index":248,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connectdatasource(source",{"_index":267,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":1376,"title":{},"body":{"license.html":{}}}],["consider",{"_index":507,"title":{},"body":{"modules/StoreModule.html":{}}}],["console",{"_index":373,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["console.info(`loaded",{"_index":374,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["console.log(source",{"_index":377,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["consortium",{"_index":1322,"title":{},"body":{"license.html":{}}}],["const",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"modules/StoreModule.html":{}}}],["constants",{"_index":439,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["constructor(configstate",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{}}}],["constructor(configstore",{"_index":198,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(locator",{"_index":260,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["constructor(private",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["container",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1273,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1372,"title":{},"body":{"license.html":{}}}],["control",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["convention",{"_index":217,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["coordinate",{"_index":1267,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1343,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1330,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1320,"title":{},"body":{"license.html":{}}}],["cord",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["core/services/filtered",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["core/store/store.module",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["cors",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["counts",{"_index":286,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["coverage",{"_index":1044,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createcustomelement",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["createdatasource",{"_index":249,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["creates",{"_index":263,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["credits",{"_index":1306,"title":{},"body":{"index.html":{}}}],["css",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["cuboid",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":336,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["currently",{"_index":278,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["customelements.define('ccf",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["cyberinfrastructure",{"_index":1308,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["d.rui_location",{"_index":226,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["damages",{"_index":1368,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.map(d",{"_index":221,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["data?.map(obj",{"_index":445,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["database",{"_index":309,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["database/src/lib/ccf",{"_index":315,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["datasets",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":245,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasources",{"_index":342,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["datasourceservice",{"_index":237,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["date()).gettime",{"_index":375,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["date().gettime",{"_index":370,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getaggregateresults(filter",{"_index":359,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getcelltypetermoccurences(filter",{"_index":361,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getcelltypetreemodel",{"_index":363,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":360,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytreemodel",{"_index":362,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getreferenceorgans",{"_index":364,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getreferenceorganscene(organ",{"_index":366,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getscene(filter",{"_index":365,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.gettissueblockresults(filter",{"_index":357,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dboptions",{"_index":246,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":1332,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1377,"title":{},"body":{"license.html":{}}}],["december",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["deck.gl/core",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["decorator",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["decorators",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["deeply",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_ccf_db_options",{"_index":314,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["demo",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":157,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["descrepancies",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":242,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["details",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1307,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":506,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":1070,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["directives",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["directly",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["disabled",{"_index":515,"title":{},"body":{"modules/StoreModule.html":{}}}],["display",{"_index":301,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["displayed",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["distinctuntilchanged",{"_index":331,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["distinctuntilchanged(compareconfig",{"_index":346,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["distribute",{"_index":1339,"title":{},"body":{"license.html":{}}}],["dobootstrap",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":663,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["done",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":1295,"title":{},"body":{"index.html":{}}}],["effect",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["emitting",{"_index":281,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["entire",{"_index":496,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":1262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.owl#has_spatial_entity",{"_index":225,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["entity.owl#sample",{"_index":224,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["entrycomponents",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":212,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":232,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["environment.production",{"_index":372,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":213,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["es",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["eslint/naming",{"_index":216,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["eslint/no",{"_index":316,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["etc",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":624,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1363,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["executionstrategy",{"_index":510,"title":{},"body":{"modules/StoreModule.html":{}}}],["executor",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["expanded",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["exploration",{"_index":1277,"title":{},"body":{"index.html":{}}}],["export",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["express",{"_index":1198,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":194,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["external",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["favor",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":481,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["female_skin_url",{"_index":436,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1331,"title":{},"body":{"license.html":{}}}],["filter",{"_index":273,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["filter(config",{"_index":343,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["filterednodes",{"_index":473,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredorgans",{"_index":380,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredscene",{"_index":381,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredsceneservice",{"_index":43,"title":{"injectables/FilteredSceneService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["filters",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["filterscenenodes",{"_index":384,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filterscenenodes(nodes",{"_index":391,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["final",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["finishing",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1359,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["fly",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1348,"title":{},"body":{"license.html":{}}}],["form",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1268,"title":{},"body":{"index.html":{}}}],["free",{"_index":1326,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":219,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{}}}],["functions",{"_index":1256,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1314,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1346,"title":{},"body":{"license.html":{}}}],["further",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["genericglobalconfig",{"_index":210,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["getaggregateresults",{"_index":250,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":272,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetermoccurences",{"_index":251,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":282,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":252,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getneededreferenceorgans",{"_index":385,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededreferenceorgans(referenceorgans",{"_index":394,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededskins",{"_index":386,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededskins(organs",{"_index":396,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getontologytermoccurences",{"_index":253,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":289,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getontologytreemodel",{"_index":254,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getorganscene",{"_index":255,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getorganscene(organ",{"_index":293,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getreferenceorgans",{"_index":256,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getscene",{"_index":257,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getscene(filter",{"_index":298,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getting",{"_index":516,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":258,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":302,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["github",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":94,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["globalconfig.getoption('data').pipe",{"_index":340,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalconfigstate",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["globalthis['dboptions",{"_index":233,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["good",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":789,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["granted",{"_index":1325,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1380,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["hand",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":500,"title":{},"body":{"modules/StoreModule.html":{}}}],["haszoomingnode",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["height",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["helmet",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1324,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["highlight.operator",{"_index":441,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["highlight_yellow",{"_index":411,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlighted",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["highlightid",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["highlightifmatching",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["highlightifmatching(entity",{"_index":1261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["highlights",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["hightlight",{"_index":440,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hightlight(id",{"_index":1263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hightlight(this.highlightid",{"_index":410,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["holders",{"_index":1365,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":521,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["html",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["http://purl.org/ccf/1.5/entity/${d.id",{"_index":222,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["http://purl.org/ccf/1.5/entity/${id",{"_index":416,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["http://purl.org/ccf/latest/ccf",{"_index":223,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhfskin",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmskin",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://beta",{"_index":1280,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":1292,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1285,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":1284,"title":{},"body":{"index.html":{}}}],["https://humanatlas.io",{"_index":1304,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1287,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1282,"title":{},"body":{"index.html":{}}}],["https://r5i95k35v5.us",{"_index":1294,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":511,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":555,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":519,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":214,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataSourceService.html":{}}}],["implied",{"_index":1356,"title":{},"body":{"license.html":{}}}],["import",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["imports",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["improve",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1351,"title":{},"body":{"license.html":{}}}],["includes",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":695,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1312,"title":{},"body":{"index.html":{}}}],["individual",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"index.html":{}}}],["information",{"_index":605,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["initialconfig",{"_index":231,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["initialdelay",{"_index":229,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["initialization",{"_index":311,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["initialized",{"_index":196,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["injectable",{"_index":236,"title":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"overview.html":{}}}],["injector",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["input",{"_index":209,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["inputdataformat",{"_index":201,"title":{"interfaces/InputDataFormat.html":{}},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{}}}],["inputs",{"_index":197,"title":{},"body":{"components/AppWebComponent.html":{}}}],["instance",{"_index":264,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["instead",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":93,"title":{"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":485,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["issue",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":464,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["item[spatial_entity_url].placement.target",{"_index":465,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["iu",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":646,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["jsonld/jsonld",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["jsonldobj",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["july",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["keyboard",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1355,"title":{},"body":{"license.html":{}}}],["known",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["labs/data",{"_index":489,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/dispatch",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":513,"title":{},"body":{"modules/StoreModule.html":{}}}],["latest",{"_index":588,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layers",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["left/right",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["level",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1369,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1366,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":644,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1318,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1334,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1011,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["link",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":675,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["loaded",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["locationstrategy",{"_index":261,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["locator",{"_index":266,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["lodash",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1305,"title":{},"body":{"index.html":{}}}],["logger",{"_index":512,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["lru",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["made",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":483,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["male_skin_url",{"_index":437,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managers",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":332,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["map(([nodes",{"_index":408,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map(([organs",{"_index":403,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map((config",{"_index":345,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["map(data",{"_index":341,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["map(id",{"_index":415,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map(selectorgan",{"_index":466,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["march",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["mc",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":448,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["memory",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1358,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1337,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"changelog.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["minor",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1255,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1319,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":288,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["modify",{"_index":1336,"title":{},"body":{"license.html":{}}}],["module",{"_index":154,"title":{"modules/AppModule.html":{},"modules/StoreModule.html":{}},"body":{"modules/StoreModule.html":{}}}],["modules",{"_index":156,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepo",{"_index":1270,"title":{},"body":{"index.html":{}}}],["monotypeoperatorfunction",{"_index":1264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["more",{"_index":604,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["moved",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1271,"title":{},"body":{"index.html":{}}}],["n3",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["neededorgans",{"_index":471,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededorgans.has(node.reference_organ",{"_index":476,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededreferenceorgans",{"_index":468,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededskins",{"_index":469,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["needs",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1309,"title":{},"body":{"index.html":{}}}],["new",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["ng5",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["ngdobootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["ngondestroy",{"_index":259,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["ngx",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":488,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":491,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":494,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxsdatapluginmodule",{"_index":487,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":504,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule",{"_index":490,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":514,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":493,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":505,"title":{},"body":{"modules/StoreModule.html":{}}}],["nih",{"_index":1315,"title":{},"body":{"index.html":{}}}],["node",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["node.reference_organ",{"_index":475,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["node.zoomtoonload",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["nodes",{"_index":300,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["nodes.filter(node",{"_index":474,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["noninfringement",{"_index":1362,"title":{},"body":{"license.html":{}}}],["note",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":923,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":641,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["obj[spatial_entity_url",{"_index":446,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["object.keys(config).length",{"_index":344,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["observable",{"_index":280,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["obtaining",{"_index":1329,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1286,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["ondestroy",{"_index":319,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["one",{"_index":967,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["online",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["onmouseenter",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["onmouseleave",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["ontological",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":291,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["ontologyterms",{"_index":459,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ontologytreemodel",{"_index":322,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["opacities",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":687,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1300,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1302,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1301,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":312,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["organ",{"_index":295,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"index.html":{}}}],["organ.reference_organ",{"_index":460,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organ.sex",{"_index":462,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["organs.find(temporgan",{"_index":455,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.foreach(organ",{"_index":480,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.has(organ.reference_organ",{"_index":478,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.length",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["organs/anatomical",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["organs[0",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["organurls",{"_index":444,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organurls[0",{"_index":457,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["orthographic",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":1317,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1374,"title":{},"body":{"license.html":{}}}],["out",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["outputs",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["over",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1381,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":649,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":354,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["parse",{"_index":234,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["parser",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1360,"title":{},"body":{"license.html":{}}}],["partly",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["performance",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1323,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1344,"title":{},"body":{"license.html":{}}}],["person",{"_index":1328,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1345,"title":{},"body":{"license.html":{}}}],["pick",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["placed",{"_index":502,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["placenta",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":492,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["plus",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["popup",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":696,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1353,"title":{},"body":{"license.html":{}}}],["position",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["preferences",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":337,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["previously",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["process",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":664,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1272,"title":{},"body":{"index.html":{}}}],["projects/.../app",{"_index":1260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../constants.ts",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data",{"_index":1257,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../highlight.operator.ts",{"_index":1258,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../zoom",{"_index":1259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ccf",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["promise((resolve",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["properties",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["provided",{"_index":1107,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providedin",{"_index":338,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["providers",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["public",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1338,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1361,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":645,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":244,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["real",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":499,"title":{},"body":{"modules/StoreModule.html":{}}}],["rectify",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":297,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["referenceorgans",{"_index":382,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["referenceorgans.filter(organ",{"_index":477,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["refernced",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":713,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":326,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["removed",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":1269,"title":{},"body":{"index.html":{}}}],["required",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/GlobalConfig.html":{},"overview.html":{}}}],["resets",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":349,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["respond",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1333,"title":{},"body":{"license.html":{}}}],["result",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["returns",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1335,"title":{},"body":{"license.html":{}}}],["root",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["root_states",{"_index":497,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":435,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["rui",{"_index":552,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_location",{"_index":218,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["rui_locations.jsonld",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":330,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["s",{"_index":376,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["sample",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["scene.service",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["scene.service.ts",{"_index":379,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["scene.service.ts:18",{"_index":400,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:19",{"_index":431,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:22",{"_index":417,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:26",{"_index":422,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:28",{"_index":429,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:32",{"_index":420,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:37",{"_index":405,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:42",{"_index":413,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:47",{"_index":388,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:54",{"_index":390,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:73",{"_index":399,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:82",{"_index":393,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:91",{"_index":395,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:95",{"_index":397,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene/filtered",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["scenesource",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["scheduled",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1310,"title":{},"body":{"index.html":{}}}],["search",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":601,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["selectorgan",{"_index":463,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selectorgans",{"_index":387,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selectorgans(data",{"_index":398,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selects",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1342,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":265,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["set",{"_index":392,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["set([...organs",{"_index":472,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["set(organs",{"_index":467,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["set(organurls",{"_index":452,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["settimeout(resolve",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["setting",{"_index":508,"title":{},"body":{"modules/StoreModule.html":{}}}],["setup",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["setzoomtoifmatching",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setzoomtoifmatching(entity",{"_index":1265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sex",{"_index":461,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["sexes",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["shadow",{"_index":317,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["shall",{"_index":1350,"title":{},"body":{"license.html":{}}}],["shared",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/web",{"_index":211,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["sharereplay",{"_index":333,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["sharereplay(1",{"_index":351,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["shortest",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["sides",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["simplifies",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["sites",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["skins",{"_index":479,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["skins.add(female_skin_url",{"_index":482,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["skins.add(male_skin_url",{"_index":484,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["slider",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1274,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["source.connect(config",{"_index":371,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service",{"_index":433,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["source.service.ts",{"_index":241,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["source.service.ts:103",{"_index":290,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:116",{"_index":283,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:128",{"_index":292,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:140",{"_index":287,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:153",{"_index":296,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:166",{"_index":299,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:173",{"_index":294,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:180",{"_index":271,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:187",{"_index":270,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:39",{"_index":307,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:41",{"_index":310,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:43",{"_index":262,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":306,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":303,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:90",{"_index":274,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source/data",{"_index":240,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["sources",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["sparc",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":541,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["spatial_entity_url",{"_index":438,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialentity",{"_index":323,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["spatialscenenode",{"_index":324,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1298,"title":{},"body":{"index.html":{}}}],["specific",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1297,"title":{},"body":{"index.html":{}}}],["speed",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["stage",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":665,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1278,"title":{},"body":{"index.html":{}}}],["start",{"_index":369,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["started",{"_index":517,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":495,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["stay",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["store",{"_index":503,"title":{},"body":{"modules/StoreModule.html":{}}}],["storemodule",{"_index":161,"title":{"modules/StoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":498,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["styling",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1347,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1340,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":313,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["subscriptions",{"_index":247,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["substantial",{"_index":1352,"title":{},"body":{"license.html":{}}}],["such",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["super(configstore",{"_index":228,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["support",{"_index":544,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1378,"title":{},"body":{"modules.html":{}}}],["swiper",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":334,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["switchmap(([data",{"_index":426,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["switchmap(config",{"_index":347,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["switchmap(db",{"_index":356,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["sync",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["take(1",{"_index":358,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["tap",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["tap((_",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["technologies",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["temporgan['@id",{"_index":456,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["term",{"_index":285,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["terms",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["this.cdr.detectchanges",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.choosescene(data",{"_index":428,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('data",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["this.configstate.getoption('data').pipe",{"_index":418,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('highlightid').pipe",{"_index":414,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('zoomtoid').pipe",{"_index":430,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.connectdatasource((resource",{"_index":350,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.createdatasource",{"_index":348,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource",{"_index":339,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.pipe",{"_index":355,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.filterscenenodes(nodes",{"_index":409,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.getneededreferenceorgans(referenceorgans",{"_index":404,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.getneededskins(neededreferenceorgans",{"_index":470,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.injector",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["this.organs",{"_index":407,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.organs$.pipe(take(1)).topromise",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.referenceorgans",{"_index":424,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.referenceorgans$]).pipe",{"_index":402,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.reset",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.scenesource.filteredorgans",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.scenesource.filteredscene$.pipe",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.selectorgans(data",{"_index":419,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.datasource]).pipe",{"_index":425,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getorganscene(organ.representation_of",{"_index":458,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getreferenceorgans",{"_index":421,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getscene",{"_index":454,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.subscriptions.add(this.datasource.subscribe",{"_index":352,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.subscriptions.unsubscribe",{"_index":353,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["through",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":304,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["tissueblockresult",{"_index":325,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["tissues",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["to.operator",{"_index":443,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["to.operator.ts",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["tojsonld",{"_index":235,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tojsonld(data",{"_index":220,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["tool",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1373,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["transparency",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"changelog.html":{}}}],["true",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["try",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1382,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":215,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui.netlify.app",{"_index":1281,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1291,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1288,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":1290,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1289,"title":{},"body":{"index.html":{}}}],["uis",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":368,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["underlying",{"_index":308,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["uniqueorganurls",{"_index":451,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["uniqueorganurls.size",{"_index":453,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["university",{"_index":1313,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":227,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{}}}],["unnecessary",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":447,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["unselect",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["unsubscribable",{"_index":328,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["unsubscribe",{"_index":367,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["until",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["updates",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":534,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":522,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":329,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["utilities",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["v2.1.0",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":276,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["var",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["variable",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1384,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":689,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["viewchild('bodyui",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["viewer",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataSourceService.html":{}}}],["vs",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1357,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1354,"title":{},"body":{"license.html":{}}}],["wc",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["wc/src/app/app",{"_index":192,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["wc/src/app/app.component.ts",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["wc/src/app/app.component.ts:21",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:23",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:24",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:25",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:27",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:28",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:29",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:31",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:39",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.module.ts",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["wc/src/app/app.module.ts:23",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["wc/src/app/core/constants.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wc/src/app/core/highlight.operator.ts",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["wc/src/app/core/services/data",{"_index":239,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["wc/src/app/core/services/filtered",{"_index":378,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["wc/src/app/core/store/store.module.ts",{"_index":486,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wc/src/app/core/zoom",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["webcomponent",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1276,"title":{},"body":{"index.html":{}}}],["week",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1370,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["within",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":711,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["x",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["x_dimension",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["y",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["y_dimension",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["yes",{"_index":277,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["youtube",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["z_dimension",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["zone.js",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilteredSceneService.html":{},"overview.html":{}}}],["zoomto",{"_index":442,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zoomto(id",{"_index":1266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zoomto(this.zoomtoid",{"_index":412,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["zoomtoid",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-body-ui-wc/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bodyUI\n                            \n                            \n                                    Readonly\n                                data$\n                            \n                            \n                                organs$\n                            \n                            \n                                scene$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                reset\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configState: GlobalConfigState, sceneSource: FilteredSceneService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configState\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sceneSource\n                                                  \n                                                        \n                                                                        FilteredSceneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseLeave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bodyUI\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BodyUiComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('bodyUI', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sceneSource.filteredOrgans$\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { FilteredSceneService } from './core/services/filtered-scene/filtered-scene.service';\nimport { Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BodyUiComponent, GlobalConfigState } from 'ccf-shared';\nimport { take, tap } from 'rxjs/operators';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface GlobalConfig {\n  highlightID?: string;\n  zoomToID?: string;\n  data?: JsonLdObj[];\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('bodyUI', { static: true }) readonly bodyUI!: BodyUiComponent;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  readonly data$ = this.configState.getOption('data');\n  organs$ = this.sceneSource.filteredOrgans$;\n  scene$ = this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly sceneSource: FilteredSceneService,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  private async reset(): Promise {\n    const { bodyUI } = this;\n\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise((resolve) => setTimeout(resolve, 200));\n    const organs = await this.organs$.pipe(take(1)).toPromise();\n    const hasZoomingNode = !!bodyUI.scene?.find((node) => node.zoomToOnLoad) ?? false;\n\n    bodyUI.rotation = 0;\n    bodyUI.rotationX = 0;\n\n    if (!hasZoomingNode) {\n      if (organs.length === 1) {\n        const { x_dimension: x, y_dimension: y, z_dimension: z } = organs[0];\n        bodyUI.bounds = { x: 1.25 * x / 1000, y: 1.25 * y / 1000, z: 1.25 * z / 1000 };\n        bodyUI.target = [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n      } else {\n        bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n        bodyUI.target = [0, 0, 0];\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .body-ui {\n  height: 100%;\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StoreModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/app.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppWebComponent } from './app-web-component.component';\nimport { StoreModule } from './core/store/store.module';\nimport { BodyUiModule } from 'ccf-shared';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    StoreModule,\n    BodyUiModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [],\n  entryComponents: [AppComponent]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-body-ui-wc', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                highlightID\n                            \n                            \n                                zoomToID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         InputDataFormat[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomToID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseLeave\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\nimport { environment } from '../environments/environment';\n\n\nexport interface InputDataFormat {\n  id: string;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  rui_location: JsonLdObj;\n}\n\n\nfunction toJsonLd(data: InputDataFormat[]): JsonLdObj[] {\n  return data.map(d => ({\n    '@id': `http://purl.org/ccf/1.5/entity/${d.id}`,\n    '@type': 'http://purl.org/ccf/latest/ccf-entity.owl#Sample',\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity': d.rui_location\n  })) as unknown as JsonLdObj[];\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() data: InputDataFormat[];\n  @Input() highlightID: string;\n  @Input() zoomToID: string;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions']\n      },\n      parse: {\n        data: toJsonLd\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDataSource\n                            \n                            \n                                    Private\n                                createDataSource\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getOrganScene\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locator: LocationStrategy, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locator\n                                                  \n                                                        \n                                                                        LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDataSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDataSource(source: DataSource, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                DataSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createDataSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDataSource()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:180\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:90\n                \n            \n\n\n            \n                \n                    Queries for aggregate values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:116\n                \n            \n\n\n            \n                \n                    Queries for cell type term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:140\n                \n            \n\n\n            \n                \n                    Get the cell type tree model.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:103\n                \n            \n\n\n            \n                \n                    Queries for ontology term counts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:128\n                \n            \n\n\n            \n                \n                    Get the ontology tree model.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganScene\n                        \n                    \n                \n            \n            \n                \ngetOrganScene(organ: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:153\n                \n            \n\n\n            \n                \n                    Get the reference organs.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:166\n                \n            \n\n\n            \n                \n                    Queries for scene nodes to display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:77\n                \n            \n\n\n            \n                \n                    Queries for tissue block values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:39\n                        \n                    \n\n            \n                \n                    The underlying database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CCFDatabaseOptions\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:41\n                        \n                    \n\n            \n                \n                    Database initialization options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DEFAULT_CCF_DB_OPTIONS } from './../../../../../../ccf-database/src/lib/ccf-database';\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { LocationStrategy } from '@angular/common';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport {\n  AggregateResult,\n  CCFDatabase,\n  CCFDatabaseOptions,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult\n} from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { Remote } from 'comlink';\nimport { Observable, Subscription, Unsubscribable, using } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n\ntype DataSource = Remote | CCFDatabase;\n\n\nfunction compareConfig(previous: CCFDatabaseOptions, current: CCFDatabaseOptions): boolean {\n  return previous === current;\n}\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService implements OnDestroy {\n  /** The underlying database. */\n  dataSource: Observable;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor(\n    private readonly locator: LocationStrategy,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    this.dataSource = globalConfig.getOption('data').pipe(\n      map(data => ({ ...DEFAULT_CCF_DB_OPTIONS, dataSources: data })),\n      filter(config => Object.keys(config).length > 0),\n      map((config) => config as unknown as CCFDatabaseOptions),\n      distinctUntilChanged(compareConfig),\n      switchMap(config => using(\n        () => this.createDataSource(),\n        (resource) => this.connectDataSource((resource as unknown as { source: DataSource }).source, config)\n      )),\n      shareReplay(1)\n    );\n\n    this.subscriptions.add(this.dataSource.subscribe());\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Queries for tissue block values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getTissueBlockResults(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getAggregateResults(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.dataSource.pipe(\n      switchMap(db => db.getOntologyTermOccurences(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for cell type term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.dataSource.pipe(\n      switchMap(db => db.getCellTypeTermOccurences(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Get the ontology tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  getOntologyTreeModel(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getOntologyTreeModel()),\n      take(1)\n    );\n  }\n\n  /**\n   * Get the cell type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  getCellTypeTreeModel(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getCellTypeTreeModel()),\n      take(1)\n    );\n  }\n\n\n  /**\n   * Get the reference organs.\n   *\n   * @returns An observable emitting the results.\n   */\n  getReferenceOrgans(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getReferenceOrgans()),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for scene nodes to display.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getScene(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getScene(filter)),\n      take(1)\n    );\n  }\n\n  getOrganScene(organ: string, filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getReferenceOrganScene(organ, filter)),\n      take(1)\n    );\n  }\n\n  private createDataSource(): { source: DataSource } & Unsubscribable {\n    const unsubscribe: () => void = () => undefined;\n    const source = new CCFDatabase();\n\n    return { source, unsubscribe };\n  }\n\n  private async connectDataSource(source: DataSource, config: CCFDatabaseOptions): Promise {\n    const start = new Date().getTime();\n\n    await source.connect(config, false);\n\n    if (!environment.production) {\n      // eslint-disable-next-line no-console\n      console.info(`Loaded CCF database in ${ ((new Date()).getTime() - start) / 1000 }s`);\n      // eslint-disable-next-line no-console\n      console.log(source);\n    }\n    return source;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilteredSceneService.html":{"url":"injectables/FilteredSceneService.html","title":"injectable - FilteredSceneService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilteredSceneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data$\n                            \n                            \n                                    Readonly\n                                filteredOrgans$\n                            \n                            \n                                    Readonly\n                                filteredScene$\n                            \n                            \n                                    Readonly\n                                highlightID$\n                            \n                            \n                                    Readonly\n                                organs$\n                            \n                            \n                                    Readonly\n                                referenceOrgans$\n                            \n                            \n                                    Readonly\n                                scene$\n                            \n                            \n                                    Readonly\n                                zoomToID$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chooseScene\n                            \n                            \n                                    Private\n                                filterSceneNodes\n                            \n                            \n                                    Private\n                                getNeededReferenceOrgans\n                            \n                            \n                                    Private\n                                getNeededSkins\n                            \n                            \n                                    Private\n                                selectOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configState: GlobalConfigState, source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configState\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        chooseScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    chooseScene(data?: JsonLdObj[], organs?: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            JsonLdObj[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterSceneNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterSceneNodes(nodes: SpatialSceneNode[], organs: Set, referenceOrgans: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    referenceOrgans\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNeededReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNeededReferenceOrgans(referenceOrgans: SpatialEntity[], organs: Set)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referenceOrgans\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNeededSkins\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNeededSkins(organs: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organs\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        selectOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectOrgans(data: Any[] | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Any[] | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.organs$, this.referenceOrgans$]).pipe(\n    map(([organs, referenceOrgans]) => this.getNeededReferenceOrgans(referenceOrgans, organs)),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredScene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.scene$, this.organs$, this.referenceOrgans$]).pipe(\n    map(([nodes, organs, referenceOrgans]) => this.filterSceneNodes(nodes, organs, referenceOrgans)),\n    hightlight(this.highlightID$, HIGHLIGHT_YELLOW),\n    zoomTo(this.zoomToID$),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightID$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('highlightID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data').pipe(\n    map(data => this.selectOrgans(data)),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        referenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.source.getReferenceOrgans()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.data$, this.referenceOrgans$, this.source.dataSource]).pipe(\n    switchMap(([data, referenceOrgans, _]) => this.chooseScene(data, referenceOrgans))\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        zoomToID$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('zoomToID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { SpatialSceneNode, SpatialEntity, Filter } from 'ccf-database';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { DataSourceService } from '../data-source/data-source.service';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { Any } from '@angular-ru/common/typings';\nimport { FEMALE_SKIN_URL, HIGHLIGHT_YELLOW, MALE_SKIN_URL, SPATIAL_ENTITY_URL } from '../../constants';\nimport { hightlight } from '../../highlight.operator';\nimport { GlobalConfig } from '../../../app.component';\nimport { zoomTo } from '../../zoom-to.operator';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilteredSceneService {\n  readonly data$ = this.configState.getOption('data');\n  readonly zoomToID$ = this.configState.getOption('zoomToID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  );\n  readonly highlightID$ = this.configState.getOption('highlightID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  );\n\n  readonly referenceOrgans$ = this.source.getReferenceOrgans();\n\n  readonly scene$ = combineLatest([this.data$, this.referenceOrgans$, this.source.dataSource]).pipe(\n    switchMap(([data, referenceOrgans, _]) => this.chooseScene(data, referenceOrgans))\n  );\n\n  readonly organs$ = this.configState.getOption('data').pipe(\n    map(data => this.selectOrgans(data)),\n    shareReplay(1)\n  );\n\n  readonly filteredOrgans$ = combineLatest([this.organs$, this.referenceOrgans$]).pipe(\n    map(([organs, referenceOrgans]) => this.getNeededReferenceOrgans(referenceOrgans, organs)),\n    shareReplay(1)\n  );\n\n  readonly filteredScene$ = combineLatest([this.scene$, this.organs$, this.referenceOrgans$]).pipe(\n    map(([nodes, organs, referenceOrgans]) => this.filterSceneNodes(nodes, organs, referenceOrgans)),\n    hightlight(this.highlightID$, HIGHLIGHT_YELLOW),\n    zoomTo(this.zoomToID$),\n    shareReplay(1)\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly source: DataSourceService\n  ) { }\n\n  private chooseScene(data?: JsonLdObj[], organs?: SpatialEntity[]): Observable {\n    const organUrls = data?.map(obj => {\n      const block: Any = obj[SPATIAL_ENTITY_URL];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return block?.placement.target;\n    }) ?? [];\n    const uniqueOrganUrls = new Set(organUrls);\n\n    if (uniqueOrganUrls.size > 1) {\n      return this.source.getScene();\n    } else if (organs) {\n      const organ = organs.find(tempOrgan => tempOrgan['@id'] === organUrls[0]);\n      if (organ) {\n        return this.source.getOrganScene(organ.representation_of as string, { ontologyTerms: [organ.reference_organ as string], sex: organ.sex } as Filter);\n      }\n    }\n    return of([]);\n  }\n\n  private selectOrgans(data: Any[] | undefined): Set {\n    const selectOrgan = (item: Any) =>\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      item[SPATIAL_ENTITY_URL].placement.target;\n\n    const organs = (data ?? []).map(selectOrgan);\n    return new Set(organs);\n  }\n\n  private filterSceneNodes(nodes: SpatialSceneNode[], organs: Set, referenceOrgans: SpatialEntity[]): SpatialSceneNode[] {\n    const neededReferenceOrgans = this.getNeededReferenceOrgans(referenceOrgans, organs);\n    const neededSkins = this.getNeededSkins(neededReferenceOrgans);\n    const neededOrgans = new Set([...organs, ...neededSkins]);\n    const filteredNodes = nodes.filter(node => !node.reference_organ || neededOrgans.has(node.reference_organ));\n\n    return filteredNodes;\n  }\n\n  private getNeededReferenceOrgans(referenceOrgans: SpatialEntity[], organs: Set): SpatialEntity[] {\n    return referenceOrgans.filter(organ => organs.has(organ.reference_organ ?? ''));\n  }\n\n  private getNeededSkins(organs: SpatialEntity[]): string[] {\n    if (organs.length === 1) {\n      return [];\n    }\n\n    const skins = new Set();\n    organs.forEach(organ => {\n      if (organ.sex === 'Female') {\n        skins.add(FEMALE_SKIN_URL);\n      } else if (organ.sex === 'Male') {\n        skins.add(MALE_SKIN_URL);\n      }\n    });\n\n    return [...skins];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            highlightID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     JsonLdObj[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JsonLdObj[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilteredSceneService } from './core/services/filtered-scene/filtered-scene.service';\nimport { Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BodyUiComponent, GlobalConfigState } from 'ccf-shared';\nimport { take, tap } from 'rxjs/operators';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface GlobalConfig {\n  highlightID?: string;\n  zoomToID?: string;\n  data?: JsonLdObj[];\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('bodyUI', { static: true }) readonly bodyUI!: BodyUiComponent;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  readonly data$ = this.configState.getOption('data');\n  organs$ = this.sceneSource.filteredOrgans$;\n  scene$ = this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly sceneSource: FilteredSceneService,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  private async reset(): Promise {\n    const { bodyUI } = this;\n\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise((resolve) => setTimeout(resolve, 200));\n    const organs = await this.organs$.pipe(take(1)).toPromise();\n    const hasZoomingNode = !!bodyUI.scene?.find((node) => node.zoomToOnLoad) ?? false;\n\n    bodyUI.rotation = 0;\n    bodyUI.rotationX = 0;\n\n    if (!hasZoomingNode) {\n      if (organs.length === 1) {\n        const { x_dimension: x, y_dimension: y, z_dimension: z } = organs[0];\n        bodyUI.bounds = { x: 1.25 * x / 1000, y: 1.25 * y / 1000, z: 1.25 * z / 1000 };\n        bodyUI.target = [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n      } else {\n        bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n        bodyUI.target = [0, 0, 0];\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputDataFormat.html":{"url":"interfaces/InputDataFormat.html","title":"interface - InputDataFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputDataFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rui_location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_location:     JsonLdObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JsonLdObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\nimport { environment } from '../environments/environment';\n\n\nexport interface InputDataFormat {\n  id: string;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  rui_location: JsonLdObj;\n}\n\n\nfunction toJsonLd(data: InputDataFormat[]): JsonLdObj[] {\n  return data.map(d => ({\n    '@id': `http://purl.org/ccf/1.5/entity/${d.id}`,\n    '@type': 'http://purl.org/ccf/latest/ccf-entity.owl#Sample',\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity': d.rui_location\n  })) as unknown as JsonLdObj[];\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() data: InputDataFormat[];\n  @Input() highlightID: string;\n  @Input() zoomToID: string;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions']\n      },\n      parse: {\n        data: toJsonLd\n      }\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            interface\n            InputDataFormat\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            function\n            toJsonLd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app.component.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            FEMALE_SKIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            HIGHLIGHT_YELLOW\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            MALE_SKIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            SPATIAL_ENTITY_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n            \n            function\n            highlightIfMatching\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n            \n            function\n            hightlight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                70 %\n                (12/17)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n            \n            function\n            compareConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts\n            \n            injectable\n            FilteredSceneService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n            \n            function\n            setZoomToIfMatching\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n            \n            function\n            zoomTo\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareConfig   (projects/.../data-source.service.ts)\n                        \n                        \n                            highlightIfMatching   (projects/.../highlight.operator.ts)\n                        \n                        \n                            hightlight   (projects/.../highlight.operator.ts)\n                        \n                        \n                            setZoomToIfMatching   (projects/.../zoom-to.operator.ts)\n                        \n                        \n                            toJsonLd   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            zoomTo   (projects/.../zoom-to.operator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareConfig\n                        \n                    \n                \n            \n            \n                \ncompareConfig(previous, current)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previous\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    current\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightIfMatching\n                        \n                    \n                \n            \n            \n                \nhighlightIfMatching(entity, id, color)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hightlight\n                        \n                    \n                \n            \n            \n                \nhightlight(id, color)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setZoomToIfMatching\n                        \n                    \n                \n            \n            \n                \nsetZoomToIfMatching(entity, id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomTo\n                        \n                    \n                \n            \n            \n                \nzoomTo(id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toJsonLd\n                        \n                    \n                \n            \n            \n                \ntoJsonLd(data)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     JsonLdObj[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) and Common Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://r5i95k35v5.us-east-2.awsapprunner.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Color   (projects/.../highlight.operator.ts)\n                        \n                        \n                            DataSource   (projects/.../data-source.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n    \n    \n        \n            \n                \n                    \n                    Color\n                \n            \n            \n                \n                        [number, number, number, number]\n\n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataSource\n                \n            \n            \n                \n                        Remote | CCFDatabase\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FEMALE_SKIN_URL   (projects/.../constants.ts)\n                        \n                        \n                            HIGHLIGHT_YELLOW   (projects/.../constants.ts)\n                        \n                        \n                            MALE_SKIN_URL   (projects/.../constants.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                        \n                            SPATIAL_ENTITY_URL   (projects/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FEMALE_SKIN_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HIGHLIGHT_YELLOW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color\n\n                    \n                \n                \n                    \n                        Default value : [173, 255, 47, 229.5]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MALE_SKIN_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf.owl#VHMSkin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPATIAL_ENTITY_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
