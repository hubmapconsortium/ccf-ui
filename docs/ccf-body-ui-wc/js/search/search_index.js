var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.801,1,1.056]],["body/components/AppComponent.html",[0,1.069,1,1.542,2,1.579,3,0.546,4,0.725,5,1.477,6,1.762,7,1.762,8,1.264,9,0.469,10,0.892,11,0.618,12,0.618,13,1.477,14,1.477,15,1.825,16,1.477,17,2.142,18,1.075,19,1.408,20,2.544,21,2.986,22,2.544,23,2.544,24,0.546,25,0.911,26,1.904,27,3.27,28,1.171,29,2.153,30,1.854,31,1.825,32,2.592,33,2.503,34,2.346,35,2.544,36,2.142,37,2.142,38,2.142,39,1.375,40,1.762,41,1.345,42,2.986,43,2.03,44,2.142,45,2.346,46,2.1,47,2.195,48,1.094,49,0.055,50,1.854,51,0.923,52,0.831,53,2.132,54,2.672,55,2.195,56,2.195,57,2.195,58,2.195,59,1.094,60,2.503,61,2.986,62,2.195,63,2.544,64,2.544,65,2.544,66,2.195,67,1.854,68,2.142,69,2.132,70,2.195,71,2.544,72,2.195,73,2.544,74,2.544,75,2.544,76,2.195,77,1.487,78,1.762,79,1.264,80,1.762,81,2.346,82,1.762,83,1.264,84,0.631,85,0.546,86,1.264,87,1.762,88,1.264,89,1.375,90,1.094,91,0.952,92,1.762,93,1.762,94,1.047,95,0.631,96,0.831,97,1.094,98,1.2,99,1.094,100,1.762,101,0.725,102,1.345,103,1.767,104,1.264,105,1.264,106,1.094,107,1.264,108,1.762,109,0.952,110,2.132,111,1.762,112,1.762,113,1.762,114,1.762,115,2.544,116,1.762,117,1.762,118,1.477,119,1.762,120,2.487,121,1.762,122,1.477,123,1.264,124,1.762,125,3.468,126,1.762,127,3.468,128,1.762,129,3.468,130,1.762,131,2.544,132,2.986,133,3.029,134,2.544,135,2.346,136,1.762,137,1.762,138,1.762,139,2.195,140,2.544,141,1.762,142,1.264,143,2.544,144,1.825,145,1.762,146,3.27,147,1.762,148,1.762,149,0.831,150,1.264,151,1.762,152,1.762,153,0.031,154,0.031]],["title/modules/AppModule.html",[155,1.39,156,1.606]],["body/modules/AppModule.html",[1,1.923,3,0.818,4,1.087,9,0.703,10,0.757,11,0.569,12,0.569,18,0.818,26,1.246,31,1.895,34,1.895,46,1.428,49,0.054,59,1.64,77,1.704,84,0.946,85,0.818,94,1.087,101,1.087,103,1.428,142,1.895,149,1.923,150,1.895,153,0.041,154,0.041,155,1.64,156,3.058,157,1.64,158,1.64,159,3.677,160,2.641,161,2.807,162,2.641,163,2.641,164,2.641,165,2.641,166,2.531,167,2.807,168,2.214,169,3.29,170,3.349,171,4.581,172,3.29,173,3.349,174,4.172,175,4.817,176,3.349,177,3.29,178,2.641,179,4.172,180,2.641,181,1.895,182,2.641,183,2.214,184,1.428,185,3.29,186,3.29,187,4.172,188,2.641,189,3.29,190,4.172,191,3.29,192,3.29,193,3.29]],["title/components/AppWebComponent.html",[0,0.801,149,1.056]],["body/components/AppWebComponent.html",[0,1.171,1,0.983,2,2.031,3,0.645,4,0.857,5,2.399,7,2.083,8,1.494,9,0.554,10,0.913,11,0.624,12,0.624,14,1.746,15,2.053,16,2.399,17,2.526,18,1.182,19,1.543,24,0.645,25,1.025,26,1.543,28,1.261,35,2.863,36,2.346,37,2.346,38,2.346,39,1.547,41,1.449,44,2.526,45,2.526,46,2.151,48,1.293,49,0.054,50,2.031,51,1.075,52,0.983,54,2.803,77,1.519,81,2.526,83,1.494,84,0.746,85,0.645,89,1.903,90,1.293,91,1.126,94,1.178,95,0.746,97,2.031,98,1.741,99,2.031,101,0.857,102,1.346,109,1.126,142,1.494,143,2.863,144,2.053,145,2.083,146,3.522,147,2.083,148,2.083,149,1.661,150,2.346,151,2.083,152,2.083,153,0.035,154,0.035,184,2.183,194,2.897,195,1.494,196,2.863,197,3.271,198,3.271,199,3.566,200,2.595,201,3.566,202,2.863,203,2.526,204,2.595,205,2.595,206,2.595,207,2.595,208,2.595,209,2.595,210,2.053,211,3.522,212,2.083,213,2.083,214,1.494,215,1.494,216,2.053,217,2.083,218,1.494,219,1.746,220,2.083,221,2.083,222,2.399,223,2.083,224,1.746,225,2.083,226,1.746,227,2.083,228,2.083,229,1.746,230,2.083,231,2.083,232,2.083,233,2.083,234,1.494]],["title/injectables/DataSourceService.html",[235,1.39,236,1.606]],["body/injectables/DataSourceService.html",[3,0.361,4,1.456,8,1.896,9,0.31,10,0.882,11,0.604,12,0.604,18,0.819,19,0.55,24,0.361,25,0.665,26,1.361,28,1.033,29,1.153,30,1.153,31,1.333,32,2.592,33,1.942,39,1.004,41,1.087,46,2.091,48,2.08,49,0.055,50,2.08,51,1.019,52,1.58,59,2.461,60,1.557,67,0.724,68,0.836,77,1.421,84,0.417,85,0.361,86,0.836,88,0.836,94,0.48,96,1.093,98,1.093,101,0.48,102,1.188,103,1.252,104,1.662,105,1.662,106,1.153,107,1.333,109,1.988,110,0.977,118,0.977,120,0.836,133,0.977,153,0.048,154,0.023,173,2.316,188,1.166,210,0.836,214,0.836,215,0.836,218,0.836,226,1.557,235,1.153,236,1.333,237,0.977,238,2.8,239,2.423,240,0.836,241,3.831,242,1.858,243,3.083,244,3.453,245,2.885,246,2.885,247,2.314,248,3.292,249,2.314,250,2.314,251,3.292,252,2.314,253,3.292,254,2.314,255,3.292,256,2.314,257,2.314,258,3.292,259,1.452,260,3.292,261,2.314,262,2.314,263,2.314,264,2.314,265,2.314,266,2.314,267,2.886,268,3.453,269,1.452,270,1.452,271,2.314,272,3.596,273,1.452,274,2.314,275,3.292,276,3.076,277,3.54,278,3.54,279,3.554,280,4.818,281,2.314,282,1.452,283,2.643,284,3.292,285,3.292,286,1.452,287,2.643,288,2.314,289,1.452,290,2.643,291,1.452,292,2.314,293,1.452,294,0.836,295,1.452,296,1.557,297,2.314,298,1.452,299,1.858,300,1.858,301,2.314,302,1.452,303,1.858,304,1.557,305,1.452,306,1.452,307,2.314,308,2.705,309,1.452,310,2.314,311,1.858,312,2.885,313,2.314,314,1.452,315,0.836,316,1.166,317,1.452,318,1.166,319,2.314,320,1.452,321,2.316,322,1.452,323,1.166,324,0.977,325,1.452,326,1.858,327,1.166,328,2.314,329,1.858,330,0.977,331,1.452,332,1.166,333,1.166,334,1.166,335,1.166,336,1.858,337,0.977,338,1.166,339,1.452,340,1.452,341,1.166,342,1.452,343,1.452,344,1.452,345,1.452,346,1.452,347,1.452,348,1.452,349,1.452,350,1.452,351,1.166,352,1.452,353,1.452,354,3.595,355,4.301,356,4.301,357,1.452,358,4.301,359,1.452,360,1.452,361,1.452,362,1.452,363,1.452,364,1.452,365,1.452,366,1.452,367,2.314,368,1.166,369,2.314,370,1.452,371,1.452,372,1.166,373,2.314,374,1.452,375,1.452,376,1.452,377,1.452]],["title/injectables/FilteredSceneService.html",[43,1.39,235,1.39]],["body/injectables/FilteredSceneService.html",[3,0.425,4,1.189,9,0.365,10,0.895,11,0.612,12,0.612,18,0.654,19,0.647,24,0.425,25,0.756,26,1.98,28,1.228,29,2.568,30,1.598,31,1.515,32,2.886,39,1.141,40,1.373,41,1.189,43,1.311,46,2.119,48,2.045,49,0.055,50,2.045,51,0.877,52,1.554,53,1.77,59,1.937,67,2.199,68,2.541,69,1.77,77,1.576,79,2.84,84,0.491,85,0.425,88,0.985,89,1.562,90,0.852,91,0.742,94,0.565,96,0.647,97,1.598,98,1.363,99,1.598,101,0.565,102,1.189,103,2.04,104,1.515,105,1.515,106,1.311,107,1.515,109,1.964,122,1.15,123,1.515,153,0.026,154,0.026,167,1.15,182,1.373,235,1.311,236,2.073,237,1.15,239,0.852,272,1.77,276,2.112,279,2.157,294,1.515,299,1.373,304,1.15,308,1.15,315,1.515,316,2.112,323,3.959,324,2.761,330,1.15,332,1.373,333,1.373,334,1.373,338,1.373,341,2.112,351,3.294,368,2.573,378,3.959,379,1.373,380,3.206,381,3.206,382,5.011,383,2.63,384,2.63,385,2.63,386,2.63,387,2.63,388,1.71,389,2.63,390,1.71,391,2.63,392,3.633,393,1.71,394,2.63,395,1.71,396,2.63,397,1.71,398,2.63,399,1.71,400,1.71,401,2.63,402,3.599,403,2.63,404,3.206,405,1.71,406,2.63,407,2.63,408,2.63,409,2.63,410,2.63,411,2.157,412,2.63,413,1.71,414,2.63,415,3.599,416,3.599,417,1.71,418,2.63,419,2.63,420,1.71,421,2.63,422,1.71,423,2.63,424,2.63,425,2.63,426,2.63,427,2.63,428,2.63,429,1.71,430,2.63,431,1.71,432,1.71,433,1.71,434,0.852,435,1.71,436,1.15,437,1.15,438,1.15,439,1.71,440,1.15,441,1.71,442,1.15,443,1.71,444,1.71,445,1.71,446,1.71,447,2.63,448,2.63,449,2.63,450,1.71,451,1.71,452,1.71,453,1.71,454,1.71,455,1.71,456,1.71,457,1.71,458,1.71,459,1.71,460,1.71,461,1.373,462,3.206,463,1.71,464,1.373,465,1.71,466,1.71,467,1.71,468,1.71,469,2.63,470,1.71,471,1.71,472,1.71,473,2.63,474,1.71,475,1.71,476,1.71,477,1.71,478,1.71,479,2.63,480,1.71,481,1.71,482,1.71,483,1.71,484,1.71]],["title/interfaces/GlobalConfig.html",[95,0.801,96,1.056]],["body/interfaces/GlobalConfig.html",[0,1.043,1,1.008,3,0.662,4,0.879,9,0.569,10,0.483,11,0.33,12,0.33,13,1.791,15,1.533,18,0.903,19,1.008,20,2.137,21,2.137,22,2.137,23,2.137,24,0.662,25,1.043,26,1.888,27,2.913,28,1.333,29,2.058,30,1.327,32,2.553,33,1.791,34,1.533,36,1.533,37,1.533,38,1.533,39,1.155,41,1.199,42,2.137,43,1.808,44,1.533,45,2.089,49,0.055,51,0.882,52,1.813,53,1.791,54,2.553,60,2.442,61,2.913,63,2.137,64,2.137,65,2.137,69,1.791,71,2.137,73,2.137,74,2.137,75,2.137,77,1.582,78,2.137,79,1.533,80,2.137,81,2.553,82,2.137,83,1.533,84,0.765,85,0.662,86,1.533,87,2.137,88,1.533,89,1.924,90,1.327,91,1.155,92,2.137,93,2.137,94,1.199,95,0.765,96,1.374,97,2.21,98,1.813,99,2.21,100,2.137,101,0.879,102,1.465,103,1.924,104,1.533,105,1.533,106,1.327,107,1.533,108,2.137,109,1.155,110,2.442,111,2.137,112,2.137,113,2.137,114,2.137,115,2.913,116,2.137,117,2.137,118,1.791,119,2.137,120,2.672,121,2.137,122,1.791,123,1.533,124,2.137,125,3.725,126,2.137,127,3.725,128,2.137,129,3.725,130,2.137,131,2.913,132,3.314,133,3.222,134,2.913,135,2.553,136,2.137,137,2.137,138,2.137,153,0.035,154,0.035,485,1.327]],["title/interfaces/InputDataFormat.html",[95,0.801,203,1.606]],["body/interfaces/InputDataFormat.html",[0,1.174,2,1.587,3,0.792,4,1.052,5,2.142,9,0.68,10,0.578,11,0.395,12,0.395,15,1.833,16,2.142,17,1.833,18,1.122,19,1.205,24,0.792,25,1.174,26,1.708,28,1.174,36,1.833,37,1.833,38,1.833,39,1.381,41,1.349,44,2.352,45,2.352,49,0.055,51,0.964,54,2.74,77,1.626,81,2.74,83,1.833,84,0.915,85,0.792,89,2.185,90,1.587,91,1.381,94,1.349,95,0.915,97,1.587,98,1.863,99,1.587,101,1.052,102,1.49,109,1.381,149,1.205,150,1.833,153,0.04,154,0.04,184,1.381,194,1.833,195,1.833,196,2.556,197,3.279,198,2.556,202,2.556,203,2.74,210,1.833,211,3.82,212,2.556,213,2.556,214,1.833,215,1.833,216,2.834,217,3.82,218,1.833,219,2.142,220,2.556,221,2.556,222,2.749,223,2.556,224,2.142,225,2.556,226,2.142,227,2.556,228,2.556,229,2.142,230,2.556,231,2.556,232,2.556,233,2.556,234,1.833,485,1.587]],["title/modules/StoreModule.html",[155,1.39,166,1.39]],["body/modules/StoreModule.html",[3,0.887,4,1.177,9,0.762,10,0.647,11,0.443,12,0.443,18,0.887,28,1.024,41,1.449,49,0.055,77,1.712,84,1.024,85,1.091,94,1.449,101,1.177,103,1.547,153,0.043,154,0.043,155,1.777,157,1.777,166,2.186,170,2.862,176,3.521,183,2.398,214,2.053,215,2.053,372,3.521,434,1.777,486,2.398,487,3.564,488,2.862,489,3.564,490,2.862,491,3.814,492,3.564,493,2.862,494,2.862,495,2.862,496,2.398,497,3.564,498,3.564,499,3.564,500,2.862,501,3.564,502,3.564,503,3.564,504,3.564,505,3.564,506,3.564,507,3.564,508,3.564,509,3.564,510,3.564,511,3.564,512,3.564,513,3.564,514,3.564]],["title/changelog.html",[515,1.588,516,1.359,517,1.588]],["body/changelog.html",[0,0.699,2,0.77,3,0.802,6,0.718,8,0.515,9,0.191,11,0.443,12,0.475,14,1.636,17,0.89,18,1.229,19,0.338,25,0.257,28,1.338,29,2.091,30,1.778,46,0.388,49,0.037,51,0.191,52,0.338,67,0.445,85,0.222,86,0.515,91,1.399,95,0.98,96,0.338,102,1.265,106,1.606,123,0.89,135,1.4,141,0.718,144,0.515,153,0.036,154,0.015,158,1.212,161,0.601,181,0.89,184,1.304,216,0.515,229,2.169,242,0.718,243,0.601,267,0.718,272,1.636,277,1.639,278,0.718,283,1.952,290,3.073,294,2.719,296,2.913,300,2.205,303,3.306,304,1.373,308,1.848,311,1.241,315,0.89,329,1.952,337,1.04,392,1.952,434,1.369,461,1.241,464,0.718,485,0.445,500,0.718,516,1.175,517,1.04,518,1.639,519,1.639,520,1.952,521,2.864,522,1.241,523,1.545,524,3.006,525,2.736,526,5.367,527,0.718,528,1.545,529,0.718,530,4.619,531,2.413,532,0.894,533,2.746,534,2.431,535,4.032,536,0.894,537,1.545,538,2.431,539,1.545,540,2.041,541,0.894,542,1.545,543,0.894,544,4.032,545,0.894,546,1.373,547,1.545,548,3.306,549,0.718,550,0.894,551,1.241,552,1.241,553,1.545,554,3.408,555,0.894,556,0.894,557,0.894,558,2.041,559,1.545,560,2.041,561,0.894,562,1.241,563,0.894,564,0.894,565,2.864,566,1.545,567,2.746,568,2.041,569,2.041,570,0.894,571,1.545,572,1.545,573,4.045,574,1.545,575,0.894,576,2.494,577,0.894,578,4.266,579,0.894,580,1.545,581,0.894,582,2.041,583,1.545,584,2.041,585,2.041,586,2.431,587,1.545,588,2.041,589,0.894,590,1.545,591,1.545,592,0.894,593,3.223,594,3.006,595,3.223,596,1.545,597,0.894,598,0.894,599,4.266,600,2.431,601,0.894,602,1.545,603,0.894,604,0.894,605,1.545,606,2.041,607,2.205,608,0.894,609,1.545,610,0.894,611,0.894,612,0.894,613,1.545,614,0.894,615,3.006,616,0.894,617,0.894,618,0.894,619,2.041,620,1.639,621,0.894,622,0.894,623,1.241,624,0.894,625,3.006,626,3.828,627,1.545,628,2.746,629,0.894,630,1.545,631,3.006,632,1.545,633,0.894,634,2.431,635,0.894,636,0.894,637,1.545,638,0.894,639,3.223,640,3.838,641,0.894,642,0.894,643,1.545,644,0.894,645,0.894,646,1.545,647,2.041,648,0.894,649,0.894,650,0.894,651,0.894,652,1.545,653,0.894,654,0.894,655,0.894,656,0.718,657,4.118,658,0.894,659,0.718,660,0.894,661,1.545,662,0.601,663,0.894,664,1.545,665,2.431,666,2.431,667,0.894,668,1.545,669,2.041,670,0.894,671,0.894,672,1.545,673,0.894,674,0.894,675,3.006,676,1.731,677,2.205,678,1.639,679,0.894,680,2.205,681,0.894,682,2.041,683,2.736,684,4.032,685,0.894,686,0.894,687,1.545,688,1.639,689,0.894,690,0.894,691,0.894,692,2.746,693,0.894,694,0.894,695,0.894,696,0.894,697,2.041,698,0.894,699,1.545,700,1.241,701,0.894,702,2.293,703,0.894,704,0.894,705,0.894,706,0.894,707,0.894,708,2.205,709,2.205,710,1.545,711,0.894,712,0.894,713,1.545,714,1.545,715,0.894,716,1.545,717,1.545,718,1.545,719,1.545,720,0.894,721,2.041,722,0.894,723,0.894,724,0.718,725,0.894,726,1.639,727,0.718,728,1.545,729,1.545,730,0.894,731,0.894,732,1.545,733,1.545,734,1.545,735,1.545,736,0.894,737,0.894,738,0.894,739,0.894,740,2.041,741,0.894,742,1.545,743,0.894,744,0.894,745,1.545,746,3.006,747,1.545,748,0.894,749,0.718,750,0.894,751,0.894,752,0.894,753,2.041,754,1.545,755,3.006,756,1.545,757,1.545,758,2.431,759,0.894,760,0.894,761,0.894,762,0.894,763,0.894,764,1.545,765,1.545,766,0.894,767,1.545,768,0.894,769,1.545,770,0.894,771,1.545,772,0.894,773,0.894,774,0.894,775,0.894,776,0.894,777,0.894,778,1.545,779,0.894,780,0.894,781,0.894,782,0.894,783,0.894,784,0.894,785,1.545,786,0.894,787,0.894,788,0.894,789,0.894,790,0.894,791,1.545,792,0.894,793,3.006,794,0.894,795,0.894,796,2.041,797,2.041,798,1.545,799,0.718,800,0.894,801,0.718,802,0.718,803,0.894,804,1.545,805,0.894,806,0.894,807,0.894,808,0.894,809,1.545,810,1.545,811,0.894,812,1.545,813,1.545,814,0.894,815,1.545,816,2.431,817,2.041,818,0.894,819,0.894,820,0.894,821,0.894,822,0.718,823,0.894,824,1.545,825,0.894,826,0.894,827,1.545,828,2.431,829,0.894,830,0.894,831,0.894,832,0.894,833,3.006,834,2.041,835,1.545,836,0.894,837,0.894,838,2.041,839,1.545,840,1.545,841,1.545,842,2.431,843,0.894,844,1.4,845,0.894,846,0.894,847,1.545,848,0.894,849,0.894,850,0.894,851,0.894,852,0.894,853,2.431,854,0.894,855,2.041,856,2.431,857,0.894,858,2.041,859,2.746,860,1.545,861,1.545,862,1.545,863,1.545,864,2.041,865,2.431,866,2.746,867,1.545,868,2.041,869,0.894,870,0.894,871,3.223,872,2.041,873,0.894,874,2.431,875,2.431,876,3.568,877,0.894,878,0.894,879,0.894,880,0.894,881,0.894,882,0.894,883,1.545,884,0.894,885,1.545,886,0.894,887,0.894,888,0.894,889,0.894,890,1.545,891,0.894,892,2.041,893,0.894,894,0.894,895,1.545,896,1.639,897,1.545,898,2.041,899,0.894,900,0.894,901,0.894,902,1.545,903,0.894,904,0.894,905,0.894,906,0.894,907,0.894,908,0.894,909,0.894,910,1.545,911,0.894,912,0.894,913,2.431,914,3.006,915,1.545,916,2.041,917,1.545,918,0.894,919,0.894,920,0.894,921,0.894,922,2.041,923,0.894,924,0.894,925,0.894,926,1.545,927,1.545,928,1.545,929,2.041,930,0.894,931,0.894,932,0.894,933,0.894,934,0.894,935,0.718,936,0.894,937,0.894,938,0.894,939,1.545,940,0.894,941,0.894,942,1.545,943,0.894,944,0.894,945,0.894,946,0.894,947,0.894,948,0.894,949,0.894,950,0.894,951,0.894,952,0.894,953,3.408,954,0.894,955,2.041,956,3.408,957,2.041,958,2.431,959,1.545,960,2.041,961,0.894,962,1.545,963,0.894,964,0.894,965,1.545,966,1.545,967,1.545,968,0.894,969,0.894,970,0.894,971,0.894,972,1.545,973,0.894,974,1.639,975,0.894,976,0.894,977,0.894,978,0.894,979,0.718,980,0.894,981,0.894,982,0.894,983,0.894,984,0.894,985,0.894,986,0.894,987,0.894,988,0.894,989,0.894,990,0.894,991,2.746,992,0.894,993,0.894,994,0.894,995,0.894,996,0.894,997,0.894,998,0.894,999,0.894,1000,0.894,1001,0.894,1002,0.894,1003,0.894,1004,0.894,1005,0.894,1006,0.894,1007,1.545,1008,0.894,1009,1.545,1010,0.894,1011,1.545,1012,1.545,1013,2.431,1014,2.431,1015,1.545,1016,1.545,1017,0.894,1018,0.894,1019,0.894,1020,2.041,1021,0.894,1022,0.718,1023,0.894,1024,0.894,1025,0.894,1026,0.894,1027,0.894,1028,0.894,1029,1.545,1030,3.706,1031,2.041,1032,0.894,1033,1.545,1034,0.894,1035,0.894,1036,0.894,1037,0.894,1038,0.894,1039,0.894,1040,0.894,1041,0.894,1042,0.894,1043,1.545,1044,2.588,1045,1.545,1046,0.894,1047,0.894,1048,0.894,1049,0.894,1050,0.894,1051,1.545,1052,0.894,1053,0.894,1054,0.894,1055,1.636,1056,0.894,1057,1.545,1058,0.894,1059,0.894,1060,0.894,1061,1.545,1062,1.545,1063,0.894,1064,0.894,1065,0.894,1066,0.894,1067,1.545,1068,2.041,1069,1.545,1070,0.894,1071,1.241,1072,0.894,1073,0.894,1074,0.894,1075,0.894,1076,0.894,1077,0.894,1078,0.894,1079,0.894,1080,0.894,1081,0.718,1082,0.894,1083,0.894,1084,1.545,1085,0.894,1086,0.894,1087,0.894,1088,0.894,1089,0.894,1090,0.894,1091,1.545,1092,0.894,1093,0.718,1094,0.894,1095,0.894,1096,0.718,1097,0.894,1098,0.894,1099,1.545,1100,0.894,1101,0.894,1102,0.894,1103,0.894,1104,0.894,1105,0.894,1106,0.894,1107,0.894,1108,0.894,1109,0.894,1110,0.894,1111,1.545,1112,0.894,1113,0.894,1114,0.894,1115,0.894,1116,1.545,1117,0.718,1118,0.718,1119,0.894,1120,0.894,1121,0.894,1122,0.894,1123,0.894,1124,0.894,1125,0.894]],["title/coverage.html",[1055,2.52]],["body/coverage.html",[0,1.158,1,1.181,9,0.666,10,0.986,11,0.675,12,0.675,13,2.712,43,1.554,49,0.053,51,0.666,79,1.795,95,1.158,96,1.181,102,1.03,120,3.11,140,2.503,149,1.181,153,0.039,154,0.039,184,1.938,194,2.572,195,2.572,203,1.795,218,2.884,234,1.795,235,2.009,236,1.795,238,2.321,239,2.009,240,2.321,378,2.503,379,2.503,411,2.098,436,2.098,437,2.098,438,2.098,440,2.098,442,2.098,486,2.098,496,2.098,676,1.795,1055,2.098,1126,3.118,1127,3.118,1128,3.118,1129,3.118,1130,5.263,1131,3.118,1132,3.118,1133,3.79,1134,4.889,1135,2.712,1136,2.503,1137,3.118,1138,3.118,1139,2.503,1140,3.118,1141,3.118,1142,3.236,1143,3.236,1144,2.503,1145,3.118,1146,3.118]],["title/dependencies.html",[158,1.663,662,1.588]],["body/dependencies.html",[9,0.591,11,0.343,49,0.055,84,0.795,144,2.145,153,0.036,154,0.036,158,1.379,178,2.221,180,2.99,181,2.145,243,1.862,287,2.221,318,2.221,327,2.221,330,1.862,434,2.245,488,2.221,490,2.221,491,2.99,493,2.221,529,2.221,562,2.221,680,2.99,801,2.221,802,2.221,896,2.221,1147,2.766,1148,2.766,1149,2.766,1150,2.766,1151,2.766,1152,2.766,1153,3.725,1154,2.766,1155,2.766,1156,5.152,1157,2.766,1158,2.766,1159,3.725,1160,2.766,1161,2.766,1162,2.766,1163,2.766,1164,2.766,1165,2.766,1166,2.766,1167,2.766,1168,2.766,1169,2.766,1170,4.505,1171,2.766,1172,3.725,1173,2.766,1174,2.766,1175,2.766,1176,4.211,1177,2.766,1178,2.766,1179,2.766,1180,2.766,1181,2.766,1182,2.766,1183,2.766,1184,2.766,1185,2.766,1186,2.766,1187,3.725,1188,3.725,1189,4.211,1190,2.766,1191,2.766,1192,2.766,1193,2.766,1194,2.766,1195,2.766,1196,2.766,1197,3.725,1198,2.766,1199,2.766,1200,2.766,1201,3.725,1202,2.766,1203,2.766,1204,2.766,1205,2.766,1206,2.766,1207,2.766,1208,2.766,1209,2.766,1210,2.766,1211,2.766,1212,2.766,1213,2.766,1214,2.221,1215,2.766,1216,2.766,1217,2.766,1218,2.766,1219,2.766,1220,2.766,1221,3.725,1222,2.766,1223,2.766,1224,2.766,1225,2.766,1226,2.766,1227,2.766,1228,2.766,1229,2.766,1230,2.766,1231,2.766,1232,2.766,1233,2.766,1234,2.766,1235,2.766,1236,2.766,1237,2.766,1238,2.766,1239,2.766,1240,4.211,1241,2.766,1242,2.766,1243,2.766,1244,2.766,1245,2.766,1246,2.766,1247,2.766,1248,2.766,1249,2.766,1250,2.766,1251,2.766,1252,2.766,1253,2.766,1254,2.766,1255,2.766,1256,2.766,1257,2.766,1258,2.766,1259,3.725,1260,2.766,1261,2.766,1262,2.766,1263,2.766,1264,2.766,1265,2.766,1266,2.766,1267,2.766,1268,2.766,1269,2.766,1270,2.766,1271,2.766,1272,2.766,1273,2.766]],["title/miscellaneous/functions.html",[1274,1.024,1275,2.679]],["body/miscellaneous/functions.html",[10,0.88,11,0.602,12,0.602,24,0.834,28,0.963,48,2.543,49,0.053,50,2.543,51,1.068,52,1.932,59,2.543,89,1.454,153,0.041,154,0.041,184,1.831,194,1.93,195,2.431,210,1.93,216,2.939,219,2.255,234,2.431,238,1.93,239,1.67,240,2.431,268,3.893,279,3.263,324,3.434,335,2.691,336,3.388,337,2.255,440,2.84,442,2.84,844,3.018,1135,2.255,1136,3.388,1139,3.388,1142,2.691,1143,3.709,1144,3.388,1274,1.454,1275,2.691,1276,2.691,1277,3.388,1278,4.221,1279,3.352,1280,3.352,1281,4.221,1282,3.352,1283,4.221,1284,3.352,1285,3.352]],["title/index.html",[24,0.587,515,1.588,516,1.359]],["body/index.html",[0,0.863,3,1.202,12,0.373,18,1.372,49,0.038,95,1.13,153,0.038,154,0.038,294,2.526,296,2.647,315,1.729,434,1.497,485,1.497,517,2.021,518,3.158,519,3.158,520,3.521,521,3.521,525,2.411,527,3.736,531,3.158,546,2.647,548,4.198,549,3.158,551,3.158,552,3.736,573,3.158,576,3.132,607,2.411,620,3.158,623,3.158,640,3.521,659,2.411,676,1.729,677,3.879,678,3.879,683,3.158,688,2.411,700,3.158,702,2.021,709,2.411,726,2.411,727,3.158,799,3.158,822,2.411,979,2.411,1071,2.411,1081,2.411,1093,2.411,1117,2.411,1286,3.934,1287,3.934,1288,3.934,1289,3.003,1290,3.003,1291,3.003,1292,3.003,1293,3.158,1294,3.003,1295,3.003,1296,3.003,1297,3.934,1298,3.934,1299,3.934,1300,4.386,1301,3.003,1302,3.003,1303,4.386,1304,4.386,1305,3.003,1306,3.003,1307,3.934,1308,3.003,1309,3.003,1310,3.003,1311,3.934,1312,3.003,1313,3.003,1314,3.003,1315,3.003,1316,3.003,1317,3.934,1318,3.003,1319,3.003,1320,3.934,1321,3.934,1322,3.003,1323,3.934,1324,3.934,1325,3.003,1326,3.003,1327,3.003,1328,3.003,1329,3.003,1330,3.003,1331,3.003,1332,3.003,1333,3.003,1334,3.003,1335,3.003,1336,3.003,1337,3.003,1338,3.003,1339,3.003]],["title/license.html",[515,1.588,516,1.359,1340,1.894]],["body/license.html",[49,0.043,153,0.043,154,0.043,168,2.416,546,2.964,576,2.416,676,2.068,708,3.537,724,3.826,749,2.882,935,3.537,1022,2.882,1044,2.882,1096,2.882,1118,2.882,1214,2.882,1293,4.295,1340,2.882,1341,3.591,1342,4.766,1343,3.591,1344,3.591,1345,4.405,1346,3.591,1347,3.591,1348,3.591,1349,3.591,1350,3.591,1351,3.591,1352,4.405,1353,3.591,1354,3.591,1355,3.591,1356,3.591,1357,3.591,1358,3.591,1359,3.591,1360,3.591,1361,3.591,1362,3.591,1363,3.591,1364,3.591,1365,4.405,1366,3.591,1367,3.591,1368,3.591,1369,3.591,1370,3.591,1371,3.591,1372,4.405,1373,3.591,1374,3.591,1375,3.591,1376,3.591,1377,3.591,1378,3.591,1379,3.591,1380,3.591,1381,3.591,1382,3.591,1383,3.591,1384,3.591,1385,3.591,1386,3.591,1387,3.591,1388,3.591,1389,3.591,1390,3.591,1391,3.591,1392,3.591,1393,3.591,1394,3.591,1395,3.591,1396,3.591,1397,3.591,1398,3.591,1399,3.591]],["title/modules.html",[157,1.866]],["body/modules.html",[49,0.047,153,0.047,154,0.047,156,2.437,157,2.109,166,2.109,181,2.437,565,3.398,974,3.398,1400,4.232,1401,4.857,1402,4.232]],["title/overview.html",[1403,3.006]],["body/overview.html",[1,1.881,2,1.969,34,2.276,49,0.051,135,2.955,142,2.276,149,1.881,153,0.046,154,0.046,155,1.969,156,3.11,157,1.969,158,1.969,159,3.172,160,3.172,161,2.659,162,3.172,163,3.172,164,3.172,165,3.172,166,2.475,167,3.14,168,2.659,237,2.659,485,1.969,1403,3.172]],["title/properties.html",[25,0.959,662,1.588]],["body/properties.html",[25,1.232,49,0.05,153,0.048,154,0.048,522,3.442,702,2.885]],["title/miscellaneous/typealiases.html",[1274,1.024,1404,3.337]],["body/miscellaneous/typealiases.html",[10,0.862,11,0.59,12,0.59,24,1.014,49,0.049,51,0.87,153,0.046,154,0.046,238,2.346,239,2.031,240,2.736,244,3.815,321,3.271,326,3.271,656,4.16,844,2.736,1135,2.742,1274,1.768,1276,3.271,1277,3.271,1405,4.074]],["title/miscellaneous/variables.html",[1274,1.024,1406,2.679]],["body/miscellaneous/variables.html",[10,0.82,11,0.561,12,0.561,24,0.931,41,1.236,49,0.054,51,1.102,67,2.571,68,2.971,85,0.931,98,1.837,153,0.044,154,0.044,183,2.517,222,2.517,224,2.517,411,3.039,436,3.039,437,3.039,438,3.039,486,2.517,494,3.003,495,3.003,496,3.039,844,2.154,1133,3.003,1274,1.623,1406,3.003,1407,5.039,1408,3.741,1409,3.741,1410,3.741,1411,3.741,1412,3.741,1413,3.741,1414,3.741]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["0.13.1",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["0.5.0",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1071,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0/1",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["1.0",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["1.14.10",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["1.3.1",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":896,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":229,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["10.0.0",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["1000",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["10x",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":525,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12/17",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["15.313.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["173",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["2.2",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["2.2.0",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["2.6.1",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["2019",{"_index":1044,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["229.5",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":680,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1317,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":522,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3.8.1",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1298,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["47",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4th",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["5th",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["6.11.2",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":427,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ability",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1096,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["access",{"_index":449,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["accurate",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1393,"title":{},"body":{"license.html":{}}}],["actions",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["added",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["aggregate",{"_index":274,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["aggregateresult",{"_index":320,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["ala",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1302,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":802,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1363,"title":{},"body":{"license.html":{}}}],["angular",{"_index":434,"title":{},"body":{"injectables/FilteredSceneService.html":{},"modules/StoreModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":318,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":548,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilteredSceneService.html":{}}}],["app.component.html",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["appelement",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":278,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["appmodule",{"_index":156,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":149,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1397,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":749,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["atlas",{"_index":519,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempts",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1386,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":974,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["award",{"_index":1338,"title":{},"body":{"index.html":{}}}],["backend",{"_index":242,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["background",{"_index":1093,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["basewebcomponent",{"_index":197,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["basic",{"_index":799,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["before",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":500,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["beta",{"_index":683,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":304,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["block?.placement.target",{"_index":450,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["blocks",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.bounds",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.rotation",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.rotationx",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.scene?.find((node",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyui.target",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyuicomponent",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["bodyuimodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["boolean",{"_index":210,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["both",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1401,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["browsing",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1294,"title":{},"body":{"index.html":{}}}],["builds",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1343,"title":{},"body":{"license.html":{}}}],["cache",{"_index":529,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cacheable",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["cancelregistration",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":1320,"title":{},"body":{"index.html":{}}}],["cases",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["ccf",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":321,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["ccfdatabaseoptions",{"_index":268,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["cdr",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["cell",{"_index":283,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["center",{"_index":1333,"title":{},"body":{"index.html":{}}}],["change",{"_index":822,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["changedetection",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy.onpush",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["changedetectionstrategy.onpush,selector",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["changedetectorref",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["changelog",{"_index":517,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1349,"title":{},"body":{"license.html":{}}}],["choose",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["choosescene",{"_index":383,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["choosescene(data",{"_index":389,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ci/cd",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1389,"title":{},"body":{"license.html":{}}}],["class",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["clean",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":527,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":844,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["colorizing",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":432,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.data",{"_index":423,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.organs",{"_index":401,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["combinelatest([this.scene",{"_index":406,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["come",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":327,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["common",{"_index":727,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compareconfig",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["compareconfig(previous",{"_index":335,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["compatibility",{"_index":508,"title":{},"body":{"modules/StoreModule.html":{}}}],["complexity",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":195,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component.component.ts:31",{"_index":204,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:32",{"_index":205,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":206,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":208,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":209,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":207,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":201,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"overview.html":{}}}],["comunica/query",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1371,"title":{},"body":{"license.html":{}}}],["config",{"_index":267,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["configstate",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["configstore",{"_index":202,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["configuration",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["connectdatasource",{"_index":247,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connectdatasource(source",{"_index":266,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["connection",{"_index":1398,"title":{},"body":{"license.html":{}}}],["consider",{"_index":506,"title":{},"body":{"modules/StoreModule.html":{}}}],["console",{"_index":373,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["console.info(`loaded",{"_index":374,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["console.log(source",{"_index":377,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["consortium",{"_index":1344,"title":{},"body":{"license.html":{}}}],["const",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"modules/StoreModule.html":{}}}],["constants",{"_index":439,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["constructor(configstate",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{}}}],["constructor(configstore",{"_index":200,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(locator",{"_index":259,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["constructor(private",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["container",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1292,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1394,"title":{},"body":{"license.html":{}}}],["control",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["coordinate",{"_index":1286,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1365,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1352,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1342,"title":{},"body":{"license.html":{}}}],["cord",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["core/services/filtered",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["core/store/store.module",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["cors",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["counts",{"_index":285,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["coverage",{"_index":1055,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createcustomelement",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["createdatasource",{"_index":248,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["creates",{"_index":262,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["credits",{"_index":1328,"title":{},"body":{"index.html":{}}}],["css",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["cuboid",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":336,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/functions.html":{}}}],["currently",{"_index":277,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["customelements.define('ccf",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["cyberinfrastructure",{"_index":1330,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["d.rui_location",{"_index":225,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["damages",{"_index":1390,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.map(d",{"_index":220,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["data?.map(obj",{"_index":445,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["database",{"_index":308,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["database/src/lib/ccf",{"_index":314,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["datasets",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":244,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasources",{"_index":342,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["datasourceservice",{"_index":236,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["date()).gettime",{"_index":375,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["date().gettime",{"_index":370,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getaggregateresults(filter",{"_index":359,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getcelltypetermoccurences(filter",{"_index":361,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getcelltypetreemodel",{"_index":363,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytermoccurences(filter",{"_index":360,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getontologytreemodel",{"_index":362,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getreferenceorgans",{"_index":364,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getreferenceorganscene(organ",{"_index":366,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.getscene(filter",{"_index":365,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["db.gettissueblockresults(filter",{"_index":357,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["dboptions",{"_index":245,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["deal",{"_index":1354,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1399,"title":{},"body":{"license.html":{}}}],["december",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["deck.gl/core",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorator",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["decorators",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["deeply",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_ccf_db_options",{"_index":313,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["demo",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":158,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["descrepancies",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":241,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["details",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1329,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":505,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":1081,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["directive",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["directives",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["directly",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["disabled",{"_index":514,"title":{},"body":{"modules/StoreModule.html":{}}}],["display",{"_index":300,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["displayed",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["distinctuntilchanged",{"_index":331,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["distinctuntilchanged(compareconfig",{"_index":346,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["distribute",{"_index":1361,"title":{},"body":{"license.html":{}}}],["dobootstrap",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":676,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["done",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["emitting",{"_index":280,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["entire",{"_index":495,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":1281,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entity.owl#has_spatial_entity",{"_index":224,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["entity.owl#sample",{"_index":223,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["environment",{"_index":214,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["environment.dboptions",{"_index":231,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["environment.production",{"_index":372,"title":{},"body":{"injectables/DataSourceService.html":{},"modules/StoreModule.html":{}}}],["environments/environment",{"_index":215,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["es",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["eslint/no",{"_index":316,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["etc",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":640,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1385,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["executionstrategy",{"_index":509,"title":{},"body":{"modules/StoreModule.html":{}}}],["executor",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["expanded",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["exploration",{"_index":1296,"title":{},"body":{"index.html":{}}}],["export",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["exports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":1214,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":196,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["external",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["favor",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":481,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["female_skin_url",{"_index":436,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1353,"title":{},"body":{"license.html":{}}}],["filter",{"_index":272,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["filter(config",{"_index":343,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["filterednodes",{"_index":473,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredorgans",{"_index":380,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredscene",{"_index":381,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filteredsceneservice",{"_index":43,"title":{"injectables/FilteredSceneService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["filters",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["filterscenenodes",{"_index":384,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["filterscenenodes(nodes",{"_index":391,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["final",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["finishing",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1381,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["fly",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1370,"title":{},"body":{"license.html":{}}}],["form",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1287,"title":{},"body":{"index.html":{}}}],["free",{"_index":1348,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":218,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{}}}],["functions",{"_index":1275,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1336,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1368,"title":{},"body":{"license.html":{}}}],["further",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["genericglobalconfig",{"_index":212,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["getaggregateresults",{"_index":249,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":271,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetermoccurences",{"_index":250,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":281,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":251,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getneededreferenceorgans",{"_index":385,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededreferenceorgans(referenceorgans",{"_index":394,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededskins",{"_index":386,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getneededskins(organs",{"_index":396,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["getontologytermoccurences",{"_index":252,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":288,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getontologytreemodel",{"_index":253,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getorganscene",{"_index":254,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getorganscene(organ",{"_index":292,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getreferenceorgans",{"_index":255,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getscene",{"_index":256,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getscene(filter",{"_index":297,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["getting",{"_index":515,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":257,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":301,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["github",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":96,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["globalconfig.getoption('data').pipe",{"_index":340,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["globalconfigstate",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["globalthis['dboptions",{"_index":232,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["good",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":801,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["granted",{"_index":1347,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1402,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["hand",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":499,"title":{},"body":{"modules/StoreModule.html":{}}}],["hash",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["haszoomingnode",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["height",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["helmet",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1346,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["highlight.operator",{"_index":441,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["highlight_yellow",{"_index":411,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlighted",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["highlightid",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["highlightifmatching",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["highlightifmatching(entity",{"_index":1280,"title":{},"body":{"miscellaneous/functions.html":{}}}],["highlights",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["hightlight",{"_index":440,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hightlight(id",{"_index":1282,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hightlight(this.highlightid",{"_index":410,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["holders",{"_index":1387,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":520,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["html",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["http://purl.org/ccf/1.5/entity/${d.id",{"_index":221,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["http://purl.org/ccf/1.5/entity/${id",{"_index":416,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["http://purl.org/ccf/latest/ccf",{"_index":222,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhfskin",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmskin",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":1311,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":1299,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1304,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":1303,"title":{},"body":{"index.html":{}}}],["https://humanatlas.io",{"_index":1326,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":1323,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1306,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1301,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":510,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":576,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":518,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":216,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataSourceService.html":{}}}],["implied",{"_index":1378,"title":{},"body":{"license.html":{}}}],["import",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["imports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["improve",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1373,"title":{},"body":{"license.html":{}}}],["includes",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":708,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1334,"title":{},"body":{"index.html":{}}}],["individual",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"index.html":{}}}],["information",{"_index":623,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["initialconfig",{"_index":230,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["initialdelay",{"_index":228,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["initialization",{"_index":310,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["initialized",{"_index":198,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["injectable",{"_index":235,"title":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["injectables",{"_index":237,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"overview.html":{}}}],["injector",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["input",{"_index":211,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["inputdataformat",{"_index":203,"title":{"interfaces/InputDataFormat.html":{}},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{}}}],["inputs",{"_index":199,"title":{},"body":{"components/AppWebComponent.html":{}}}],["instance",{"_index":263,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["instead",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":95,"title":{"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":485,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["issue",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":464,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["item[spatial_entity_url].placement.target",{"_index":465,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["iu",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":1324,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":552,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["jsonld/jsonld",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["jsonldobj",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["july",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["keyboard",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1377,"title":{},"body":{"license.html":{}}}],["known",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["labs/dispatch",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":512,"title":{},"body":{"modules/StoreModule.html":{}}}],["lastvaluefrom",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["lastvaluefrom(this.organs$.pipe(take(1",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["latest",{"_index":607,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layers",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["left/right",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"overview.html":{}}}],["level",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1391,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1388,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":659,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1340,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1356,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1022,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["link",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":688,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["loaded",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["locationstrategy",{"_index":260,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["locator",{"_index":265,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["lodash",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1327,"title":{},"body":{"index.html":{}}}],["logger",{"_index":511,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["lru",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["made",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":483,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["male_skin_url",{"_index":437,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managers",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":332,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["map(([nodes",{"_index":408,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map(([organs",{"_index":403,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map((config",{"_index":345,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["map(data",{"_index":341,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["map(id",{"_index":415,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["map(selectorgan",{"_index":466,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["march",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["mc",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":448,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["memory",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1380,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1359,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"changelog.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["minor",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1274,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1341,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":287,"title":{},"body":{"injectables/DataSourceService.html":{},"dependencies.html":{}}}],["modify",{"_index":1358,"title":{},"body":{"license.html":{}}}],["module",{"_index":155,"title":{"modules/AppModule.html":{},"modules/StoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"overview.html":{}}}],["modules",{"_index":157,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["monorepo",{"_index":1289,"title":{},"body":{"index.html":{}}}],["monotypeoperatorfunction",{"_index":1283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["more",{"_index":531,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["moved",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1290,"title":{},"body":{"index.html":{}}}],["n3",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["neededorgans",{"_index":471,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededorgans.has(node.reference_organ",{"_index":476,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededreferenceorgans",{"_index":468,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["neededskins",{"_index":469,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["needs",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1331,"title":{},"body":{"index.html":{}}}],["new",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["ngdobootstrap",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{}}}],["ngondestroy",{"_index":258,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["ngx",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":490,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":493,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxsdatapluginmodule",{"_index":487,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":503,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule",{"_index":489,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":513,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":492,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":504,"title":{},"body":{"modules/StoreModule.html":{}}}],["nih",{"_index":1337,"title":{},"body":{"index.html":{}}}],["node",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["node.reference_organ",{"_index":475,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["node.zoomtoonload",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["nodes",{"_index":299,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["nodes.filter(node",{"_index":474,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["noninfringement",{"_index":1384,"title":{},"body":{"license.html":{}}}],["note",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":1318,"title":{},"body":{"index.html":{}}}],["notice",{"_index":935,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":656,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["obj[spatial_entity_url",{"_index":446,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["object",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["object.keys(config).length",{"_index":344,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["observable",{"_index":279,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["obtaining",{"_index":1351,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1305,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["ondestroy",{"_index":319,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["one",{"_index":979,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["online",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["onmouseenter",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["onmouseleave",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["ontological",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":290,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["ontologyterms",{"_index":459,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ontologytreemodel",{"_index":322,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["opacities",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":700,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1314,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1316,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1315,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":311,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["organ",{"_index":294,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"index.html":{}}}],["organ.reference_organ",{"_index":460,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organ.sex",{"_index":462,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["organs.find(temporgan",{"_index":455,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.foreach(organ",{"_index":480,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.has(organ.reference_organ",{"_index":478,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organs.length",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["organs/anatomical",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["organs[0",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["organurls",{"_index":444,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["organurls[0",{"_index":457,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["orthographic",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":1339,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1396,"title":{},"body":{"license.html":{}}}],["out",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["outputs",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["over",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1403,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":662,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":354,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["parse",{"_index":233,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["parser",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1382,"title":{},"body":{"license.html":{}}}],["partly",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["performance",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1345,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1366,"title":{},"body":{"license.html":{}}}],["person",{"_index":1350,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1367,"title":{},"body":{"license.html":{}}}],["pick",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["placed",{"_index":501,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["placenta",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":491,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["plus",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["popup",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":709,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1375,"title":{},"body":{"license.html":{}}}],["position",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["preferences",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":337,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["previously",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["process",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":677,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1291,"title":{},"body":{"index.html":{}}}],["projects/.../app",{"_index":1279,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../constants.ts",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data",{"_index":1276,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../highlight.operator.ts",{"_index":1277,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../zoom",{"_index":1278,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ccf",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{}}}],["promise((resolve",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1118,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providedin",{"_index":338,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["providers",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"overview.html":{}}}],["public",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1360,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1383,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":551,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":243,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["real",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":498,"title":{},"body":{"modules/StoreModule.html":{}}}],["rectify",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":296,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["referenceorgans",{"_index":382,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["referenceorgans.filter(organ",{"_index":477,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["refernced",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":726,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["registrations#1",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":326,"title":{},"body":{"injectables/DataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["removed",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":1288,"title":{},"body":{"index.html":{}}}],["required",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/GlobalConfig.html":{},"overview.html":{}}}],["resets",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":349,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["respond",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1355,"title":{},"body":{"license.html":{}}}],["results",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}],["returns",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1357,"title":{},"body":{"license.html":{}}}],["root",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["root'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["root_states",{"_index":496,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["ru/cdk",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":435,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["ru/ngxs",{"_index":488,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["rui",{"_index":573,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_location",{"_index":217,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["rui_locations.jsonld",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":330,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"dependencies.html":{}}}],["rxjs/internal/lastvaluefrom",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["rxjs/operators",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["s",{"_index":376,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["sample",{"_index":1117,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["scene.service",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["scene.service.ts",{"_index":379,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["scene.service.ts:18",{"_index":400,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:19",{"_index":431,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:22",{"_index":417,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:26",{"_index":422,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:28",{"_index":429,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:32",{"_index":420,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:37",{"_index":405,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:42",{"_index":413,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:47",{"_index":388,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:54",{"_index":390,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:73",{"_index":399,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:82",{"_index":393,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:91",{"_index":395,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene.service.ts:95",{"_index":397,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["scene/filtered",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["scenesource",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["scheduled",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1332,"title":{},"body":{"index.html":{}}}],["search",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":620,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["selectorgan",{"_index":463,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selectorgans",{"_index":387,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selectorgans(data",{"_index":398,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["selects",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1364,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":264,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["set",{"_index":392,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["set([...organs",{"_index":472,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["set(organs",{"_index":467,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["set(organurls",{"_index":452,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["settimeout(resolve",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["setting",{"_index":507,"title":{},"body":{"modules/StoreModule.html":{}}}],["setup",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["setzoomtoifmatching",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setzoomtoifmatching(entity",{"_index":1284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sex",{"_index":461,"title":{},"body":{"injectables/FilteredSceneService.html":{},"changelog.html":{}}}],["sexes",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["shadow",{"_index":317,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["shall",{"_index":1372,"title":{},"body":{"license.html":{}}}],["shared",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/web",{"_index":213,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["sharereplay",{"_index":333,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["sharereplay(1",{"_index":351,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["shortest",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["sides",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["simplifies",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["sites",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["skins",{"_index":479,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["skins.add(female_skin_url",{"_index":482,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["skins.add(male_skin_url",{"_index":484,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["slider",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["slider/ngx",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1293,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{}}}],["source.connect(config",{"_index":371,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service",{"_index":433,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["source.service.ts",{"_index":240,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["source.service.ts:103",{"_index":289,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:116",{"_index":282,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:128",{"_index":291,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:140",{"_index":286,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:153",{"_index":295,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:166",{"_index":298,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:173",{"_index":293,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:180",{"_index":270,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:187",{"_index":269,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:39",{"_index":306,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:41",{"_index":309,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:43",{"_index":261,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:67",{"_index":305,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:77",{"_index":302,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:90",{"_index":273,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source/data",{"_index":239,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["sources",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["sparc",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":562,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["spatial_entity_url",{"_index":438,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialentity",{"_index":323,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["spatialscenenode",{"_index":324,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1313,"title":{},"body":{"index.html":{}}}],["specific",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1312,"title":{},"body":{"index.html":{}}}],["speed",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["stage",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":678,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1297,"title":{},"body":{"index.html":{}}}],["start",{"_index":369,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["started",{"_index":516,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":494,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["stay",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["store",{"_index":502,"title":{},"body":{"modules/StoreModule.html":{}}}],["storemodule",{"_index":166,"title":{"modules/StoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":497,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["styling",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1369,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1362,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":312,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["subscriptions",{"_index":246,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["substantial",{"_index":1374,"title":{},"body":{"license.html":{}}}],["such",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["super(configstore",{"_index":227,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["support",{"_index":565,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1400,"title":{},"body":{"modules.html":{}}}],["swiper",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":334,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["switchmap(([data",{"_index":426,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["switchmap(config",{"_index":347,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["switchmap(db",{"_index":356,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["sync",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/GlobalConfig.html":{},"changelog.html":{}}}],["take(1",{"_index":358,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["tap",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["tap((_",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["technologies",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["temporgan['@id",{"_index":456,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["term",{"_index":284,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["terms",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["this.cdr.detectchanges",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.choosescene(data",{"_index":428,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('data",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{}}}],["this.configstate.getoption('data').pipe",{"_index":418,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('highlightid').pipe",{"_index":414,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.configstate.getoption('zoomtoid').pipe",{"_index":430,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.connectdatasource((resource",{"_index":350,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.createdatasource",{"_index":348,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource",{"_index":339,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.datasource.pipe",{"_index":355,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.filterscenenodes(nodes",{"_index":409,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.getneededreferenceorgans(referenceorgans",{"_index":404,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.getneededskins(neededreferenceorgans",{"_index":470,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.injector",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["this.organs",{"_index":407,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.referenceorgans",{"_index":424,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.referenceorgans$]).pipe",{"_index":402,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.reset",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.scenesource.filteredorgans",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.scenesource.filteredscene$.pipe",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["this.selectorgans(data",{"_index":419,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.datasource]).pipe",{"_index":425,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getorganscene(organ.representation_of",{"_index":458,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getreferenceorgans",{"_index":421,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.source.getscene",{"_index":454,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["this.subscriptions.add(this.datasource.subscribe",{"_index":352,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["this.subscriptions.unsubscribe",{"_index":353,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["through",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":303,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["tissueblockresult",{"_index":325,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["tissues",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["to.operator",{"_index":443,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["to.operator.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["tojsonld",{"_index":234,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tojsonld(data",{"_index":219,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"miscellaneous/functions.html":{}}}],["tool",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1395,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["transparency",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"changelog.html":{}}}],["true",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["try",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1404,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":315,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{},"modules/StoreModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ui.netlify.app",{"_index":1300,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1310,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1307,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":1309,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1308,"title":{},"body":{"index.html":{}}}],["uis",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":368,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["underlying",{"_index":307,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["uniqueorganurls",{"_index":451,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["uniqueorganurls.size",{"_index":453,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["university",{"_index":1335,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":226,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/DataSourceService.html":{},"interfaces/InputDataFormat.html":{}}}],["unnecessary",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":447,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["unselect",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["unsubscribable",{"_index":328,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["unsubscribe",{"_index":367,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["until",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["updates",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":549,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":1319,"title":{},"body":{"index.html":{}}}],["use",{"_index":546,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usecase",{"_index":1325,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":1322,"title":{},"body":{"index.html":{}}}],["used",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":521,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":329,"title":{},"body":{"injectables/DataSourceService.html":{},"changelog.html":{}}}],["utilities",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["v2",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["v2.1.0",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":275,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["var",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{}}}],["variable",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1406,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":702,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["viewchild('bodyui",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["viewer",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataSourceService.html":{}}}],["vs",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["walkthrough",{"_index":1321,"title":{},"body":{"index.html":{}}}],["warming",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1379,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1376,"title":{},"body":{"license.html":{}}}],["wc",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{}}}],["wc/src/app/app",{"_index":194,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["wc/src/app/app.component.ts",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{}}}],["wc/src/app/app.component.ts:22",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:24",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:25",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:26",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:28",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:29",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:30",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:32",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.component.ts:40",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["wc/src/app/app.module.ts",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["wc/src/app/app.module.ts:22",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["wc/src/app/core/constants.ts",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wc/src/app/core/highlight.operator.ts",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["wc/src/app/core/services/data",{"_index":238,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["wc/src/app/core/services/filtered",{"_index":378,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{}}}],["wc/src/app/core/store/store.module.ts",{"_index":486,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wc/src/app/core/zoom",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["web",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"interfaces/InputDataFormat.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["webcomponent",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1295,"title":{},"body":{"index.html":{}}}],["week",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1392,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["within",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":724,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["x",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["x_dimension",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["y",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["y_dimension",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["yes",{"_index":276,"title":{},"body":{"injectables/DataSourceService.html":{},"injectables/FilteredSceneService.html":{}}}],["youtube",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["z_dimension",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["zone.js",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"injectables/FilteredSceneService.html":{},"overview.html":{}}}],["zoomto",{"_index":442,"title":{},"body":{"injectables/FilteredSceneService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zoomto(id",{"_index":1285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zoomto(this.zoomtoid",{"_index":412,"title":{},"body":{"injectables/FilteredSceneService.html":{}}}],["zoomtoid",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"injectables/FilteredSceneService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/InputDataFormat.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-body-ui-wc/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                bodyUI\n                            \n                            \n                                    Readonly\n                                data$\n                            \n                            \n                                organs$\n                            \n                            \n                                scene$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                reset\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configState: GlobalConfigState, sceneSource: FilteredSceneService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configState\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sceneSource\n                                                  \n                                                        \n                                                                        FilteredSceneService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseEnter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseLeave\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        bodyUI\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BodyUiComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('bodyUI', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sceneSource.filteredOrgans$\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { FilteredSceneService } from './core/services/filtered-scene/filtered-scene.service';\nimport { Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BodyUiComponent, GlobalConfigState } from 'ccf-shared';\nimport { take, tap } from 'rxjs/operators';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\n\n\nexport interface GlobalConfig {\n  highlightID?: string;\n  zoomToID?: string;\n  data?: JsonLdObj[];\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('bodyUI', { static: true }) readonly bodyUI!: BodyUiComponent;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  readonly data$ = this.configState.getOption('data');\n  organs$ = this.sceneSource.filteredOrgans$;\n  scene$ = this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly sceneSource: FilteredSceneService,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  private async reset(): Promise {\n    const { bodyUI } = this;\n\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise((resolve) => setTimeout(resolve, 200));\n    const organs = await lastValueFrom(this.organs$.pipe(take(1)));\n    const hasZoomingNode = !!bodyUI.scene?.find((node) => node.zoomToOnLoad) ?? false;\n\n    bodyUI.rotation = 0;\n    bodyUI.rotationX = 0;\n\n    if (!hasZoomingNode) {\n      if (organs && organs.length === 1) {\n        const { x_dimension: x, y_dimension: y, z_dimension: z } = organs[0];\n        bodyUI.bounds = { x: 1.25 * x / 1000, y: 1.25 * y / 1000, z: 1.25 * z / 1000 };\n        bodyUI.target = [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n      } else {\n        bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n        bodyUI.target = [0, 0, 0];\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .body-ui {\n  height: 100%;\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StoreModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/app.module.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { AppWebComponent } from './app-web-component.component';\nimport { StoreModule } from './core/store/store.module';\nimport { BodyUiModule } from 'ccf-shared';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    StoreModule,\n    BodyUiModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: []\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-body-ui-wc', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                highlightID\n                            \n                            \n                                zoomToID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         InputDataFormat[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlightID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomToID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseEnter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMouseLeave\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/app-web-component.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\nimport { environment } from '../environments/environment';\n\n\nexport interface InputDataFormat {\n  id: string;\n  rui_location: JsonLdObj;\n}\n\n\nfunction toJsonLd(data: InputDataFormat[]): JsonLdObj[] {\n  return data.map(d => ({\n    '@id': `http://purl.org/ccf/1.5/entity/${d.id}`,\n    '@type': 'http://purl.org/ccf/latest/ccf-entity.owl#Sample',\n    'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity': d.rui_location\n  })) as unknown as JsonLdObj[];\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() data: InputDataFormat[];\n  @Input() highlightID: string;\n  @Input() zoomToID: string;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions']\n      },\n      parse: {\n        data: toJsonLd\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Backend data queries.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                dbOptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDataSource\n                            \n                            \n                                    Private\n                                createDataSource\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getOrganScene\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locator: LocationStrategy, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of data source service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locator\n                                                  \n                                                        \n                                                                    LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDataSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDataSource(source: DataSource, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                DataSource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createDataSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDataSource()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:180\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:90\n                \n            \n\n\n            \n                \n                    Queries for aggregate values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:116\n                \n            \n\n\n            \n                \n                    Queries for cell type term counts.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:140\n                \n            \n\n\n            \n                \n                    Get the cell type tree model.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:103\n                \n            \n\n\n            \n                \n                    Queries for ontology term counts.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:128\n                \n            \n\n\n            \n                \n                    Get the ontology tree model.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganScene\n                        \n                    \n                \n            \n            \n                \ngetOrganScene(organ: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:153\n                \n            \n\n\n            \n                \n                    Get the reference organs.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:166\n                \n            \n\n\n            \n                \n                    Queries for scene nodes to display.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:77\n                \n            \n\n\n            \n                \n                    Queries for tissue block values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Currently applied filter.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:39\n                        \n                    \n\n            \n                \n                    The underlying database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dbOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CCFDatabaseOptions\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:41\n                        \n                    \n\n            \n                \n                    Database initialization options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DEFAULT_CCF_DB_OPTIONS } from './../../../../../../ccf-database/src/lib/ccf-database';\n/* eslint-disable @typescript-eslint/no-shadow */\nimport { LocationStrategy } from '@angular/common';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport {\n  AggregateResult,\n  CCFDatabase,\n  CCFDatabaseOptions,\n  Filter,\n  OntologyTreeModel,\n  SpatialEntity,\n  SpatialSceneNode,\n  TissueBlockResult\n} from 'ccf-database';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { Remote } from 'comlink';\nimport { Observable, Subscription, Unsubscribable, using } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n\ntype DataSource = Remote | CCFDatabase;\n\n\nfunction compareConfig(previous: CCFDatabaseOptions, current: CCFDatabaseOptions): boolean {\n  return previous === current;\n}\n\n\n/**\n * Backend data queries.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSourceService implements OnDestroy {\n  /** The underlying database. */\n  dataSource: Observable;\n  /** Database initialization options. */\n  dbOptions: CCFDatabaseOptions;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of data source service.\n   */\n  constructor(\n    private readonly locator: LocationStrategy,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    this.dataSource = globalConfig.getOption('data').pipe(\n      map(data => ({ ...DEFAULT_CCF_DB_OPTIONS, dataSources: data })),\n      filter(config => Object.keys(config).length > 0),\n      map((config) => config as unknown as CCFDatabaseOptions),\n      distinctUntilChanged(compareConfig),\n      switchMap(config => using(\n        () => this.createDataSource(),\n        (resource) => this.connectDataSource((resource as unknown as { source: DataSource }).source, config)\n      )),\n      shareReplay(1)\n    );\n\n    this.subscriptions.add(this.dataSource.subscribe());\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Queries for tissue block values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getTissueBlockResults(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for aggregate values.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getAggregateResults(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getAggregateResults(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for ontology term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.dataSource.pipe(\n      switchMap(db => db.getOntologyTermOccurences(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for cell type term counts.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.dataSource.pipe(\n      switchMap(db => db.getCellTypeTermOccurences(filter)),\n      take(1)\n    );\n  }\n\n  /**\n   * Get the ontology tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  getOntologyTreeModel(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getOntologyTreeModel()),\n      take(1)\n    );\n  }\n\n  /**\n   * Get the cell type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  getCellTypeTreeModel(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getCellTypeTreeModel()),\n      take(1)\n    );\n  }\n\n\n  /**\n   * Get the reference organs.\n   *\n   * @returns An observable emitting the results.\n   */\n  getReferenceOrgans(): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getReferenceOrgans()),\n      take(1)\n    );\n  }\n\n  /**\n   * Queries for scene nodes to display.\n   *\n   * @param [filter] Currently applied filter.\n   * @returns An observable emitting the results.\n   */\n  getScene(filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getScene(filter)),\n      take(1)\n    );\n  }\n\n  getOrganScene(organ: string, filter?: Filter): Observable {\n    return this.dataSource.pipe(\n      switchMap(db => db.getReferenceOrganScene(organ, filter)),\n      take(1)\n    );\n  }\n\n  private createDataSource(): { source: DataSource } & Unsubscribable {\n    const unsubscribe: () => void = () => undefined;\n    const source = new CCFDatabase();\n\n    return { source, unsubscribe };\n  }\n\n  private async connectDataSource(source: DataSource, config: CCFDatabaseOptions): Promise {\n    const start = new Date().getTime();\n\n    await source.connect(config, false);\n\n    if (!environment.production) {\n      // eslint-disable-next-line no-console\n      console.info(`Loaded CCF database in ${ ((new Date()).getTime() - start) / 1000 }s`);\n      // eslint-disable-next-line no-console\n      console.log(source);\n    }\n    return source;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilteredSceneService.html":{"url":"injectables/FilteredSceneService.html","title":"injectable - FilteredSceneService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilteredSceneService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data$\n                            \n                            \n                                    Readonly\n                                filteredOrgans$\n                            \n                            \n                                    Readonly\n                                filteredScene$\n                            \n                            \n                                    Readonly\n                                highlightID$\n                            \n                            \n                                    Readonly\n                                organs$\n                            \n                            \n                                    Readonly\n                                referenceOrgans$\n                            \n                            \n                                    Readonly\n                                scene$\n                            \n                            \n                                    Readonly\n                                zoomToID$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chooseScene\n                            \n                            \n                                    Private\n                                filterSceneNodes\n                            \n                            \n                                    Private\n                                getNeededReferenceOrgans\n                            \n                            \n                                    Private\n                                getNeededSkins\n                            \n                            \n                                    Private\n                                selectOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configState: GlobalConfigState, source: DataSourceService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configState\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                        DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        chooseScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    chooseScene(data?: JsonLdObj[], organs?: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            JsonLdObj[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        filterSceneNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    filterSceneNodes(nodes: SpatialSceneNode[], organs: Set, referenceOrgans: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    referenceOrgans\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNeededReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNeededReferenceOrgans(referenceOrgans: SpatialEntity[], organs: Set)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    referenceOrgans\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            Set\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialEntity[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNeededSkins\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNeededSkins(organs: SpatialEntity[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organs\n                                    \n                                            SpatialEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        selectOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectOrgans(data: Any[] | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Any[] | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Set\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.organs$, this.referenceOrgans$]).pipe(\n    map(([organs, referenceOrgans]) => this.getNeededReferenceOrgans(referenceOrgans, organs)),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        filteredScene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.scene$, this.organs$, this.referenceOrgans$]).pipe(\n    map(([nodes, organs, referenceOrgans]) => this.filterSceneNodes(nodes, organs, referenceOrgans)),\n    hightlight(this.highlightID$, HIGHLIGHT_YELLOW),\n    zoomTo(this.zoomToID$),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightID$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('highlightID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('data').pipe(\n    map(data => this.selectOrgans(data)),\n    shareReplay(1)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        referenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.source.getReferenceOrgans()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : combineLatest([this.data$, this.referenceOrgans$, this.source.dataSource]).pipe(\n    switchMap(([data, referenceOrgans, _]) => this.chooseScene(data, referenceOrgans))\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        zoomToID$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configState.getOption('zoomToID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { SpatialSceneNode, SpatialEntity, Filter } from 'ccf-database';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { DataSourceService } from '../data-source/data-source.service';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { Any } from '@angular-ru/common/typings';\nimport { FEMALE_SKIN_URL, HIGHLIGHT_YELLOW, MALE_SKIN_URL, SPATIAL_ENTITY_URL } from '../../constants';\nimport { hightlight } from '../../highlight.operator';\nimport { GlobalConfig } from '../../../app.component';\nimport { zoomTo } from '../../zoom-to.operator';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilteredSceneService {\n  readonly data$ = this.configState.getOption('data');\n  readonly zoomToID$ = this.configState.getOption('zoomToID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  );\n  readonly highlightID$ = this.configState.getOption('highlightID').pipe(\n    map(id => `http://purl.org/ccf/1.5/entity/${id}`)\n  );\n\n  readonly referenceOrgans$ = this.source.getReferenceOrgans();\n\n  readonly scene$ = combineLatest([this.data$, this.referenceOrgans$, this.source.dataSource]).pipe(\n    switchMap(([data, referenceOrgans, _]) => this.chooseScene(data, referenceOrgans))\n  );\n\n  readonly organs$ = this.configState.getOption('data').pipe(\n    map(data => this.selectOrgans(data)),\n    shareReplay(1)\n  );\n\n  readonly filteredOrgans$ = combineLatest([this.organs$, this.referenceOrgans$]).pipe(\n    map(([organs, referenceOrgans]) => this.getNeededReferenceOrgans(referenceOrgans, organs)),\n    shareReplay(1)\n  );\n\n  readonly filteredScene$ = combineLatest([this.scene$, this.organs$, this.referenceOrgans$]).pipe(\n    map(([nodes, organs, referenceOrgans]) => this.filterSceneNodes(nodes, organs, referenceOrgans)),\n    hightlight(this.highlightID$, HIGHLIGHT_YELLOW),\n    zoomTo(this.zoomToID$),\n    shareReplay(1)\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly source: DataSourceService\n  ) { }\n\n  private chooseScene(data?: JsonLdObj[], organs?: SpatialEntity[]): Observable {\n    const organUrls = data?.map(obj => {\n      const block: Any = obj[SPATIAL_ENTITY_URL];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return block?.placement.target;\n    }) ?? [];\n    const uniqueOrganUrls = new Set(organUrls);\n\n    if (uniqueOrganUrls.size > 1) {\n      return this.source.getScene();\n    } else if (organs) {\n      const organ = organs.find(tempOrgan => tempOrgan['@id'] === organUrls[0]);\n      if (organ) {\n        return this.source.getOrganScene(organ.representation_of as string, { ontologyTerms: [organ.reference_organ as string], sex: organ.sex } as Filter);\n      }\n    }\n    return of([]);\n  }\n\n  private selectOrgans(data: Any[] | undefined): Set {\n    const selectOrgan = (item: Any) =>\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      item[SPATIAL_ENTITY_URL].placement.target;\n\n    const organs = (data ?? []).map(selectOrgan);\n    return new Set(organs);\n  }\n\n  private filterSceneNodes(nodes: SpatialSceneNode[], organs: Set, referenceOrgans: SpatialEntity[]): SpatialSceneNode[] {\n    const neededReferenceOrgans = this.getNeededReferenceOrgans(referenceOrgans, organs);\n    const neededSkins = this.getNeededSkins(neededReferenceOrgans);\n    const neededOrgans = new Set([...organs, ...neededSkins]);\n    const filteredNodes = nodes.filter(node => !node.reference_organ || neededOrgans.has(node.reference_organ));\n\n    return filteredNodes;\n  }\n\n  private getNeededReferenceOrgans(referenceOrgans: SpatialEntity[], organs: Set): SpatialEntity[] {\n    return referenceOrgans.filter(organ => organs.has(organ.reference_organ ?? ''));\n  }\n\n  private getNeededSkins(organs: SpatialEntity[]): string[] {\n    if (organs.length === 1) {\n      return [];\n    }\n\n    const skins = new Set();\n    organs.forEach(organ => {\n      if (organ.sex === 'Female') {\n        skins.add(FEMALE_SKIN_URL);\n      } else if (organ.sex === 'Male') {\n        skins.add(MALE_SKIN_URL);\n      }\n    });\n\n    return [...skins];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            highlightID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     JsonLdObj[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JsonLdObj[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilteredSceneService } from './core/services/filtered-scene/filtered-scene.service';\nimport { Component, EventEmitter, Output, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { BodyUiComponent, GlobalConfigState } from 'ccf-shared';\nimport { take, tap } from 'rxjs/operators';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\nimport { lastValueFrom } from 'rxjs/internal/lastValueFrom';\n\n\nexport interface GlobalConfig {\n  highlightID?: string;\n  zoomToID?: string;\n  data?: JsonLdObj[];\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('bodyUI', { static: true }) readonly bodyUI!: BodyUiComponent;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  readonly data$ = this.configState.getOption('data');\n  organs$ = this.sceneSource.filteredOrgans$;\n  scene$ = this.sceneSource.filteredScene$.pipe(\n    tap((_) => this.reset())\n  );\n\n  constructor(\n    private readonly configState: GlobalConfigState,\n    private readonly sceneSource: FilteredSceneService,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  private async reset(): Promise {\n    const { bodyUI } = this;\n\n    // eslint-disable-next-line no-promise-executor-return\n    await new Promise((resolve) => setTimeout(resolve, 200));\n    const organs = await lastValueFrom(this.organs$.pipe(take(1)));\n    const hasZoomingNode = !!bodyUI.scene?.find((node) => node.zoomToOnLoad) ?? false;\n\n    bodyUI.rotation = 0;\n    bodyUI.rotationX = 0;\n\n    if (!hasZoomingNode) {\n      if (organs && organs.length === 1) {\n        const { x_dimension: x, y_dimension: y, z_dimension: z } = organs[0];\n        bodyUI.bounds = { x: 1.25 * x / 1000, y: 1.25 * y / 1000, z: 1.25 * z / 1000 };\n        bodyUI.target = [x / 1000 / 2, y / 1000 / 2, z / 1000 / 2];\n      } else {\n        bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n        bodyUI.target = [0, 0, 0];\n      }\n    }\n\n    this.cdr.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputDataFormat.html":{"url":"interfaces/InputDataFormat.html","title":"interface - InputDataFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputDataFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rui_location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_location:     JsonLdObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JsonLdObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, GenericGlobalConfig } from 'ccf-shared/web-components';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\n\nimport { environment } from '../environments/environment';\n\n\nexport interface InputDataFormat {\n  id: string;\n  rui_location: JsonLdObj;\n}\n\n\nfunction toJsonLd(data: InputDataFormat[]): JsonLdObj[] {\n  return data.map(d => ({\n    '@id': `http://purl.org/ccf/1.5/entity/${d.id}`,\n    '@type': 'http://purl.org/ccf/latest/ccf-entity.owl#Sample',\n    'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity': d.rui_location\n  })) as unknown as JsonLdObj[];\n}\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() data: InputDataFormat[];\n  @Input() highlightID: string;\n  @Input() zoomToID: string;\n\n  @Output() readonly onMouseEnter = new EventEmitter();\n  @Output() readonly onMouseLeave = new EventEmitter();\n  @Output() readonly onClick = new EventEmitter();\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions']\n      },\n      parse: {\n        data: toJsonLd\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            interface\n            InputDataFormat\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n            \n            function\n            toJsonLd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/app.component.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            FEMALE_SKIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            HIGHLIGHT_YELLOW\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            MALE_SKIN_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/constants.ts\n            \n            variable\n            SPATIAL_ENTITY_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n            \n            function\n            highlightIfMatching\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n            \n            function\n            hightlight\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                70 %\n                (12/17)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n            \n            function\n            compareConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/services/filtered-scene/filtered-scene.service.ts\n            \n            injectable\n            FilteredSceneService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n            \n            function\n            setZoomToIfMatching\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n            \n            function\n            zoomTo\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : ^14.10.1\n        \n            @angular-ru/common : ^15.313.0\n        \n            @angular-ru/ngxs : ^14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^16.1.5\n        \n            @angular/cdk : ^16.1.5\n        \n            @angular/common : ^16.1.5\n        \n            @angular/compiler : ^16.1.5\n        \n            @angular/core : ^16.1.6\n        \n            @angular/elements : ^16.1.6\n        \n            @angular/forms : ^16.1.5\n        \n            @angular/material : ^16.1.5\n        \n            @angular/platform-browser : ^16.1.5\n        \n            @angular/platform-browser-dynamic : ^16.1.5\n        \n            @angular/router : ^16.1.5\n        \n            @angular/youtube-player : ^16.1.5\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : 8.8.20\n        \n            @deck.gl/geo-layers : 8.8.20\n        \n            @deck.gl/layers : 8.8.20\n        \n            @deck.gl/mesh-layers : 8.8.20\n        \n            @loaders.gl/core : 3.2.10\n        \n            @loaders.gl/draco : 3.2.10\n        \n            @loaders.gl/gltf : 3.2.10\n        \n            @luma.gl/core : 8.5.16\n        \n            @math.gl/core : ^3.6.3\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/storage-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^16.0.0\n        \n            ngx-slider-v2 : ^16.0.2\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareConfig   (projects/.../data-source.service.ts)\n                        \n                        \n                            highlightIfMatching   (projects/.../highlight.operator.ts)\n                        \n                        \n                            hightlight   (projects/.../highlight.operator.ts)\n                        \n                        \n                            setZoomToIfMatching   (projects/.../zoom-to.operator.ts)\n                        \n                        \n                            toJsonLd   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            zoomTo   (projects/.../zoom-to.operator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareConfig\n                        \n                    \n                \n            \n            \n                \ncompareConfig(previous: CCFDatabaseOptions, current: CCFDatabaseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previous\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    current\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightIfMatching\n                        \n                    \n                \n            \n            \n                \nhighlightIfMatching(entity: SpatialSceneNode, id, color: Color)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                Color\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hightlight\n                        \n                    \n                \n            \n            \n                \nhightlight(id: Observable, color: Color)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                Color\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/zoom-to.operator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setZoomToIfMatching\n                        \n                    \n                \n            \n            \n                \nsetZoomToIfMatching(entity: SpatialSceneNode, id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomTo\n                        \n                    \n                \n            \n            \n                \nzoomTo(id: Observable)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toJsonLd\n                        \n                    \n                \n            \n            \n                \ntoJsonLd(data)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     JsonLdObj[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) and Common Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://apps.humanatlas.io/hra-api\nStaging: https://apps.humanatlas.io/hra-api--staging\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nCCF API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nAppModule -->\n\nStoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.7.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Color   (projects/.../highlight.operator.ts)\n                        \n                        \n                            DataSource   (projects/.../data-source.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/highlight.operator.ts\n    \n    \n        \n            \n                \n                    \n                    Color\n                \n            \n            \n                \n                        [number, number, number, number]\n\n                \n            \n        \n    \n    projects/ccf-body-ui-wc/src/app/core/services/data-source/data-source.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataSource\n                \n            \n            \n                \n                        Remote | CCFDatabase\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FEMALE_SKIN_URL   (projects/.../constants.ts)\n                        \n                        \n                            HIGHLIGHT_YELLOW   (projects/.../constants.ts)\n                        \n                        \n                            MALE_SKIN_URL   (projects/.../constants.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                        \n                            SPATIAL_ENTITY_URL   (projects/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui-wc/src/app/core/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FEMALE_SKIN_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HIGHLIGHT_YELLOW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color\n\n                    \n                \n                \n                    \n                        Default value : [173, 255, 47, 229.5]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MALE_SKIN_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf.owl#VHMSkin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPATIAL_ENTITY_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://purl.org/ccf/latest/ccf-entity.owl#has_spatial_entity'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-body-ui-wc/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
