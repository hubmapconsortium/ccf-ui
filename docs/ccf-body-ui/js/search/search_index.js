var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BodyUILayer.html",[0,1.305,1,1.305]],["body/classes/BodyUILayer.html",[0,0.969,1,1.86,2,1.729,3,0.449,4,0.588,5,0.388,6,0.709,7,0.489,8,1.829,9,1.616,10,1.462,11,1.111,12,3.718,13,0.331,14,0.57,15,4.564,16,2.697,17,2.545,18,3.718,19,3.137,20,3.718,21,4.098,22,4.098,23,0.485,24,0.05,25,1.262,26,2.197,27,1.424,28,3.535,29,2.135,30,1.193,31,2.135,32,2.135,33,2.135,34,2.54,35,1.262,36,0.756,37,1.854,38,3.011,39,2.135,40,2.135,41,1.619,42,2.135,43,1.333,44,2.135,45,1.102,46,2.545,47,1.729,48,3.137,49,3.011,50,1.729,51,1.619,52,3.137,53,3.137,54,3.137,55,3.437,56,3.137,57,1.729,58,0.756,59,0.756,60,1.202,61,0.969,62,0.758,63,1.257,64,1.854,65,1.462,66,1.854,67,2.135,68,1.262,69,2.545,70,2.135,71,2.135,72,1.619,73,1.729,74,2.311,75,2.805,76,3.137,77,2.072,78,1.67,79,3.137,80,1.642,81,3.124,82,4.717,83,1.729,84,2.135,85,3.319,86,2.147,87,1.714,88,4.098,89,2.147,90,2.147,91,2.545,92,0.783,93,4.839,94,1.982,95,2.135,96,2.86,97,2.135,98,1.729,99,2.135,100,2.135,101,2.253,102,3.137,103,3.137,104,1.688,105,1.688,106,1.919,107,2.197,108,1.688,109,1.854,110,1.854,111,2.356,112,3.718,113,3.008,114,1.642,115,1.626,116,2.135,117,3.137,118,1.424,119,1.729,120,2.135,121,3.011,122,2.135,123,2.135,124,2.805,125,2.135,126,0.588,127,3.011,128,1.257,129,2.28,130,2.135,131,2.135,132,1.854,133,2.135,134,2.135,135,2.135,136,0.969,137,2.135,138,2.135,139,1.86,140,2.135,141,2.135,142,2.135,143,2.135,144,2.135,145,2.135,146,2.135,147,2.135,148,2.135,149,3.718,150,2.135,151,2.135,152,2.135,153,2.135,154,1.688,155,2.135,156,1.854,157,2.135,158,1.729,159,1.729,160,1.462,161,3.137,162,2.135,163,3.718,164,1.102,165,2.135,166,2.135,167,2.135,168,2.135,169,2.135,170,1.262,171,1.262,172,0.969,173,2.135,174,1.102,175,2.135,176,2.135,177,2.135,178,2.135,179,1.462,180,2.135,181,4.098,182,4.098,183,2.135,184,3.137,185,2.135,186,2.135,187,2.135,188,2.135,189,2.135,190,2.135,191,2.135,192,2.135,193,0.027,194,0.027]],["title/interfaces/BodyUIProps.html",[195,0.025,196,1.483]],["body/interfaces/BodyUIProps.html",[0,1.21,1,1.481,3,0.687,4,0.474,5,0.313,6,0.267,7,0.349,8,0.69,9,0.944,11,0.609,13,0.414,14,0.485,16,3.004,23,0.663,24,0.05,27,1.804,30,1.187,36,1.301,37,2.859,41,2.647,43,1.281,45,0.888,51,0.888,58,1.407,59,0.609,60,1.248,61,0.781,62,0.644,63,1.684,74,2.057,77,1.481,78,1.155,80,1.815,87,1.816,92,0.837,94,1.21,96,1.928,101,2.17,104,1.804,105,1.804,106,2.051,107,2.348,108,1.21,109,1.017,110,1.017,113,1.017,114,1.068,115,1.704,118,0.781,126,1.095,128,0.69,129,2.157,132,2.941,136,2.328,139,0.781,154,0.781,164,0.888,170,1.017,171,1.017,172,0.781,174,0.888,193,0.028,194,0.023,195,0.028,196,1.376,197,0.362,198,0.888,199,2.877,200,2.515,201,2.515,202,2.515,203,2.515,204,2.72,205,2.72,206,1.896,207,2.515,208,1.815,209,3.101,210,2.233,211,2.233,212,2.233,213,2.233,214,1.824,215,1.824,216,1.824,217,1.824,218,1.178,219,2.677,220,1.017,221,1.178,222,2.748,223,1.017,224,1.178,225,1.178,226,1.824,227,0.888,228,1.178,229,2.339,230,2.233,231,2.515,232,2.515,233,2.263,234,1.301,235,1.178,236,2.233,237,1.017,238,1.824,239,1.017,240,2.72,241,1.017,242,1.824,243,1.178,244,1.178,245,0.888,246,1.017,247,3.538,248,1.178,249,1.178,250,1.178,251,1.178,252,1.178,253,1.178,254,1.178,255,1.178,256,1.178,257,1.178,258,1.178,259,1.178,260,1.178,261,1.178,262,1.178,263,1.178,264,1.178,265,1.178,266,1.178,267,1.178,268,1.178,269,1.178,270,1.178,271,2.72,272,1.178,273,1.824,274,1.178,275,1.178,276,1.017,277,1.824,278,1.017,279,1.178,280,1.178,281,1.178,282,1.824,283,1.178,284,1.178,285,1.178,286,1.178,287,1.178,288,1.178,289,1.178,290,1.178,291,1.178,292,1.178,293,1.178,294,1.178,295,1.178,296,1.178,297,1.178,298,1.178,299,1.824,300,1.178,301,1.178,302,1.178,303,1.178,304,1.178,305,1.178,306,1.178,307,1.178,308,1.178,309,3.101,310,3.101,311,1.178,312,1.575,313,1.178,314,1.178,315,1.575,316,1.824,317,1.178,318,1.178,319,1.178,320,0.888,321,1.178,322,2.233,323,1.376,324,1.178,325,1.178,326,1.178,327,1.824,328,1.178,329,1.178,330,1.178,331,1.178,332,2.233,333,1.178,334,1.178,335,1.824,336,1.178,337,2.233,338,1.178,339,1.178,340,1.896,341,1.575,342,1.376,343,0.944,344,1.178,345,1.178,346,1.178,347,1.178,348,2.233,349,1.178,350,1.178,351,1.178,352,1.178,353,0.888,354,1.178,355,1.178,356,1.178,357,1.178,358,1.178,359,1.178,360,1.575,361,0.781,362,1.178,363,0.888,364,1.178,365,1.178,366,1.178,367,2.72,368,1.178,369,1.178,370,1.178,371,1.178,372,1.178,373,1.178,374,1.178,375,1.178,376,1.824,377,1.178,378,1.178,379,1.824,380,1.824,381,1.824,382,1.178,383,1.178,384,1.178,385,1.178,386,1.178,387,1.178,388,1.178,389,1.824,390,1.178,391,1.178,392,1.178,393,1.178,394,1.178,395,1.178,396,1.178,397,1.178,398,1.178,399,0.781,400,1.178,401,1.178,402,1.178,403,1.178,404,1.178,405,1.178,406,2.233,407,1.178,408,1.178,409,1.178,410,1.178,411,1.178,412,1.178,413,1.178,414,1.178]],["title/interfaces/BodyUIViewStateProps.html",[195,0.025,229,1.483]],["body/interfaces/BodyUIViewStateProps.html",[0,1.238,1,1.508,3,0.699,4,0.488,5,0.322,6,0.275,7,0.356,8,0.71,9,0.965,11,0.965,13,0.423,14,0.496,16,3.021,23,0.612,24,0.05,27,1.828,30,1.157,36,1.321,37,2.88,41,2.661,43,1.292,45,0.915,51,0.915,58,1.426,59,0.627,60,1.26,61,0.804,62,0.658,63,1.704,74,2.076,77,1.508,78,1.176,80,1.833,87,1.826,92,0.574,94,1.238,96,1.963,101,2.195,104,1.828,105,1.828,106,2.079,107,2.38,108,1.238,109,1.047,110,1.047,113,1.047,114,1.092,115,1.7,118,0.804,126,1.109,128,0.71,129,2.175,132,2.96,136,2.175,139,0.804,154,0.804,164,0.915,170,1.047,171,1.047,172,0.804,174,0.915,193,0.028,194,0.023,195,0.028,196,0.915,197,0.373,198,0.915,199,2.911,200,1.213,201,1.213,202,1.213,203,1.213,204,1.866,205,1.866,206,0.915,207,1.213,208,1.833,209,3.131,210,1.213,211,1.213,212,2.274,213,2.274,214,1.866,215,1.866,216,1.866,217,2.274,218,1.213,219,2.703,220,1.047,221,1.213,222,2.772,223,1.047,224,1.213,225,1.213,226,1.866,227,0.915,228,1.213,229,2.422,230,2.911,231,3.033,232,3.033,233,2.287,234,1.321,235,1.213,236,2.274,237,1.047,238,1.866,239,1.047,240,2.757,241,1.047,242,1.866,243,1.213,244,1.213,245,0.915,246,1.047,247,3.556,248,1.213,249,1.213,250,1.213,251,1.213,252,1.213,253,1.213,254,1.213,255,1.213,256,1.213,257,1.213,258,1.213,259,1.213,260,1.213,261,1.213,262,1.213,263,1.213,264,1.213,265,1.213,266,1.213,267,1.213,268,1.213,269,1.213,270,1.213,271,2.757,272,1.213,273,1.866,274,1.213,275,1.213,276,1.047,277,1.866,278,1.047,279,1.213,280,1.213,281,1.213,282,1.866,283,1.213,284,1.213,285,1.213,286,1.213,287,1.213,288,1.213,289,1.213,290,1.213,291,1.213,292,1.213,293,1.213,294,1.213,295,1.213,296,1.213,297,1.213,298,1.213,299,1.866,300,1.213,301,1.213,302,1.213,303,1.213,304,1.213,305,1.213,306,1.213,307,1.213,308,1.213,309,3.131,310,3.131,311,1.213,312,1.611,313,1.213,314,1.213,315,1.611,316,1.866,317,1.213,318,1.213,319,1.213,320,0.915,321,1.213,322,2.274,323,1.407,324,1.213,325,1.213,326,1.213,327,1.866,328,1.213,329,1.213,330,1.213,331,1.213,332,2.274,333,1.213,334,1.213,335,1.866,336,1.213,337,2.274,338,1.213,339,1.213,340,1.926,341,1.611,342,1.407,343,0.965,344,1.213,345,1.213,346,1.213,347,1.213,348,2.274,349,1.213,350,1.213,351,1.213,352,1.213,353,0.915,354,1.213,355,1.213,356,1.213,357,1.213,358,1.213,359,1.213,360,1.611,361,0.804,362,1.213,363,0.915,364,1.213,365,1.213,366,1.213,367,2.757,368,1.213,369,1.213,370,1.213,371,1.213,372,1.213,373,1.213,374,1.213,375,1.213,376,1.866,377,1.213,378,1.213,379,1.866,380,1.866,381,1.866,382,1.213,383,1.213,384,1.213,385,1.213,386,1.213,387,1.213,388,1.213,389,1.866,390,1.213,391,1.213,392,1.213,393,1.213,394,1.213,395,1.213,396,1.213,397,1.213,398,1.213,399,0.804,400,1.213,401,1.213,402,1.213,403,1.213,404,1.213,405,1.213,406,2.274,407,1.213,408,1.213,409,1.213,410,1.213,411,1.213,412,1.213,413,1.213,414,1.213]],["title/interfaces/Collision.html",[195,0.025,415,1.967]],["body/interfaces/Collision.html",[3,0.576,4,0.753,5,0.497,6,0.424,7,0.293,13,0.424,14,0.68,23,0.625,24,0.05,25,2.209,30,1.331,35,3.241,43,1.396,58,0.968,59,0.968,60,1.03,61,1.241,62,1.106,63,1.498,68,2.517,72,1.411,77,1.934,80,1.498,81,2.916,87,1.827,92,1.148,94,1.934,104,1.697,105,1.241,111,1.411,126,0.753,128,1.096,129,2.528,156,1.616,159,3.027,179,3.282,193,0.032,194,0.032,195,0.023,197,0.576,208,1.096,320,1.411,323,1.411,415,2.916,416,1.872,417,1.872,418,4.95,419,1.872,420,2.214,421,3.738,422,2.214,423,3.738,424,2.214,425,3.708,426,2.214,427,1.872,428,1.872,429,1.616,430,2.214,431,2.214,432,2.734,433,2.734,434,4.26,435,2.734,436,3.738,437,2.734,438,2.734,439,2.734,440,3.738,441,3.708,442,2.734,443,3.708,444,2.734,445,2.734,446,3.45,447,3.738,448,3.45,449,3.027,450,3.027,451,3.027,452,3.027,453,3.027,454,3.027,455,4.26,456,2.734,457,2.734,458,2.734,459,2.734,460,2.734,461,2.214,462,2.734,463,2.214,464,2.214,465,3.027,466,2.214,467,2.214,468,2.214,469,2.214,470,2.214,471,2.214,472,2.734,473,2.214,474,4.579,475,3.738,476,2.734,477,2.734,478,2.734,479,2.734,480,2.734,481,2.734,482,2.734,483,2.734,484,2.734,485,2.734,486,2.734,487,2.734,488,2.734,489,2.734,490,2.734,491,4.795,492,3.738,493,3.708,494,3.738,495,3.738,496,2.734,497,2.734,498,2.734,499,2.734,500,2.734,501,2.214]],["title/interfaces/PickInfo.html",[195,0.025,233,1.483]],["body/interfaces/PickInfo.html",[0,1.242,1,1.513,3,0.701,4,0.49,5,0.324,6,0.276,7,0.357,8,0.713,9,0.969,11,0.63,13,0.627,14,0.497,16,3.024,23,0.597,24,0.05,27,1.832,30,1.029,36,1.324,37,2.883,41,2.664,43,1.294,45,0.919,51,0.919,58,1.18,59,0.63,60,1.262,61,0.808,62,0.661,63,1.707,74,2.079,77,1.513,78,1.18,80,1.835,87,1.827,92,0.576,94,1.242,96,1.969,101,2.2,104,1.832,105,1.832,106,2.083,107,2.385,108,1.242,109,1.052,110,1.052,113,1.969,114,1.096,115,1.691,118,0.808,126,1.112,128,0.713,129,2.177,132,2.963,136,2.248,139,0.808,154,0.808,164,0.919,170,1.052,171,1.052,172,0.808,174,0.919,193,0.029,194,0.023,195,0.029,196,0.919,197,0.375,198,0.919,199,2.281,200,1.218,201,1.218,202,1.218,203,1.218,204,1.873,205,1.873,206,0.919,207,1.218,208,1.617,209,2.763,210,1.218,211,1.218,212,2.281,213,2.281,214,1.873,215,1.873,216,1.873,217,1.873,218,1.218,219,2.707,220,1.052,221,1.218,222,2.776,223,1.052,224,1.218,225,1.218,226,2.763,227,0.919,228,1.218,229,2.364,230,2.281,231,2.56,232,2.56,233,2.364,234,1.571,235,2.56,236,2.917,237,2.21,238,2.763,239,1.052,240,2.763,241,1.052,242,1.873,243,1.218,244,1.218,245,0.919,246,1.052,247,3.559,248,1.218,249,1.218,250,1.218,251,1.218,252,1.218,253,1.218,254,1.218,255,1.218,256,1.218,257,1.218,258,1.218,259,1.218,260,1.218,261,1.218,262,1.218,263,1.218,264,1.218,265,1.218,266,1.218,267,1.218,268,1.218,269,1.218,270,1.218,271,2.763,272,1.218,273,1.873,274,1.218,275,1.218,276,1.052,277,1.873,278,1.052,279,1.218,280,1.218,281,1.218,282,1.873,283,1.218,284,1.218,285,1.218,286,1.218,287,1.218,288,1.218,289,1.218,290,1.218,291,1.218,292,1.218,293,1.218,294,1.218,295,1.218,296,1.218,297,1.218,298,1.218,299,1.873,300,1.218,301,1.218,302,1.218,303,1.218,304,1.218,305,1.218,306,1.218,307,1.218,308,1.218,309,3.135,310,3.135,311,1.218,312,1.617,313,1.218,314,1.218,315,1.617,316,1.873,317,1.218,318,1.218,319,1.218,320,0.919,321,1.218,322,2.281,323,1.412,324,1.218,325,1.218,326,1.218,327,1.873,328,1.218,329,1.218,330,1.218,331,1.218,332,2.281,333,1.218,334,1.218,335,1.873,336,1.218,337,2.281,338,1.218,339,1.218,340,1.931,341,1.617,342,1.412,343,0.969,344,1.218,345,1.218,346,1.218,347,1.218,348,2.281,349,1.218,350,1.218,351,1.218,352,1.218,353,0.919,354,1.218,355,1.218,356,1.218,357,1.218,358,1.218,359,1.218,360,1.617,361,0.808,362,1.218,363,0.919,364,1.218,365,1.218,366,1.218,367,2.763,368,1.218,369,1.218,370,1.218,371,1.218,372,1.218,373,1.218,374,1.218,375,1.218,376,1.873,377,1.218,378,1.218,379,1.873,380,1.873,381,1.873,382,1.218,383,1.218,384,1.218,385,1.218,386,1.218,387,1.218,388,1.218,389,1.873,390,1.218,391,1.218,392,1.218,393,1.218,394,1.218,395,1.218,396,1.218,397,1.218,398,1.218,399,0.808,400,1.218,401,1.218,402,1.218,403,1.218,404,1.218,405,1.218,406,2.281,407,1.218,408,1.218,409,1.218,410,1.218,411,1.218,412,1.218,413,1.218,414,1.218]],["title/interfaces/ProcessedNode.html",[195,0.025,502,1.967]],["body/interfaces/ProcessedNode.html",[3,0.586,4,0.767,5,0.507,6,0.432,7,0.298,11,1.341,13,0.432,14,0.689,17,2.592,23,0.629,24,0.05,30,1.252,43,1.329,55,1.907,58,1.523,59,0.987,60,1.271,61,1.265,62,1.115,63,2.18,64,1.646,66,2.238,68,2.238,72,1.955,77,1.719,80,1.116,81,2.944,87,1.803,92,0.797,94,1.719,101,2.382,104,1.719,105,1.265,111,1.438,114,1.116,118,1.719,126,1.043,127,2.256,128,1.517,129,2.525,139,1.265,154,1.719,172,1.265,174,1.438,193,0.032,194,0.032,195,0.024,197,0.586,315,2.238,320,1.438,323,1.438,340,1.955,353,1.438,361,1.953,363,1.438,419,1.907,425,3.908,426,4.124,427,1.907,428,1.907,429,1.646,430,2.256,441,3.066,443,3.066,448,3.737,449,2.256,450,2.256,451,2.256,452,2.256,453,2.256,454,2.256,461,2.256,463,2.256,464,2.256,465,3.066,466,2.256,467,2.256,468,2.256,469,2.256,470,2.256,471,2.256,473,3.066,501,2.256,502,3.637,503,1.646,504,1.907,505,3.908,506,3.737,507,4.826,508,2.256,509,2.944,510,3.787,511,2.786,512,2.786,513,2.786,514,2.786,515,3.483,516,2.786,517,3.787,518,3.787,519,3.787,520,2.256,521,3.787,522,2.786,523,2.786,524,2.786,525,2.786,526,2.786,527,2.256,528,2.786,529,2.786,530,2.786,531,3.787,532,2.786,533,2.786,534,4.301,535,2.786,536,2.786,537,2.786,538,3.787,539,2.786,540,2.786,541,2.786,542,2.786,543,2.786,544,2.786,545,2.786,546,2.786,547,2.786,548,2.786,549,2.786,550,2.786,551,2.786,552,2.786,553,2.786,554,2.786]],["title/interfaces/SpatialEntityJsonLd.html",[195,0.025,555,1.305]],["body/interfaces/SpatialEntityJsonLd.html",[3,0.576,4,1.03,5,0.68,6,0.424,7,0.293,11,1.622,13,0.424,14,0.68,23,0.744,24,0.05,30,1.403,43,0.753,78,1.908,92,1.042,115,1.771,126,1.173,193,0.032,194,0.032,195,0.036,197,0.576,208,1.096,234,1.622,555,1.697,556,1.616,557,1.241,558,1.616,559,3.282,560,3.282,561,3.134,562,3.134,563,3.134,564,3.134,565,3.134,566,3.134,567,3.134,568,3.134,569,3.134,570,3.134,571,3.134,572,2.833,573,2.706,574,2.706,575,3.134,576,2.706,577,2.706,578,3.134,579,3.134,580,3.134,581,3.134,582,3.134,583,3.134,584,2.364,585,2.663,586,2.916,587,2.916,588,2.517,589,2.517,590,1.872,591,1.616,592,1.872,593,1.872,594,1.872,595,1.872,596,1.872,597,1.872,598,1.872,599,1.872,600,1.872,601,1.872,602,1.872,603,1.872,604,1.872,605,1.872]],["title/interfaces/SpatialObjectReferenceJsonLd.html",[195,0.025,584,1.483]],["body/interfaces/SpatialObjectReferenceJsonLd.html",[3,0.713,4,1.186,5,0.935,6,0.526,7,0.363,11,1.764,13,0.526,14,0.783,23,0.722,24,0.049,30,1.4,43,0.933,78,1.764,92,1.106,115,1.76,126,1.304,193,0.037,194,0.037,195,0.041,197,0.713,208,1.357,234,1.199,555,1.537,556,2.001,557,1.537,558,2.001,559,3.52,560,2.947,561,2.318,562,2.318,563,2.318,564,2.318,565,2.318,566,2.318,567,2.318,568,2.318,569,2.318,570,2.318,571,2.318,572,3.039,573,2.001,574,2.001,575,2.318,576,2.001,577,2.001,578,2.318,579,2.318,580,2.318,581,2.318,582,2.318,583,2.318,584,2.443,585,2.713,586,2.318,587,2.318,588,2.001,589,2.001,590,2.318,591,2.001,592,2.318,593,2.318,594,2.318,595,2.318,596,2.318,597,2.318,598,2.318,599,2.318,600,2.318,601,2.318,602,2.318,603,2.318,604,2.318,605,3.409]],["title/interfaces/SpatialPlacementJsonLd.html",[195,0.025,585,1.483]],["body/interfaces/SpatialPlacementJsonLd.html",[3,0.635,4,1.366,5,0.727,6,0.469,7,0.323,11,1.688,13,0.469,14,0.727,23,0.741,24,0.049,30,1.4,36,1.688,43,0.831,78,1.688,92,1.073,115,1.795,126,1.234,193,0.034,194,0.034,195,0.038,197,0.635,208,1.91,234,1.069,555,1.37,556,1.784,557,1.37,558,1.784,559,3.394,560,3.394,561,2.066,562,2.066,563,2.066,564,2.066,565,2.066,566,2.066,567,2.066,568,2.066,569,2.066,570,2.066,571,2.066,572,2.361,573,1.784,574,1.784,575,2.066,576,1.784,577,1.784,578,2.066,579,2.066,580,2.066,581,2.066,582,2.066,583,2.066,584,2.062,585,2.56,586,2.066,587,2.066,588,1.784,589,1.784,590,2.066,591,1.784,592,3.263,593,3.263,594,3.263,595,3.263,596,3.263,597,3.263,598,3.263,599,3.263,600,3.263,601,3.263,602,3.263,603,3.263,604,3.263,605,2.066]],["title/interfaces/SpatialSceneNode.html",[60,0.791,195,0.025]],["body/interfaces/SpatialSceneNode.html",[3,0.664,4,0.869,5,0.574,6,0.49,7,0.338,13,0.49,14,0.748,23,0.743,24,0.049,30,1.39,35,2.866,36,2.037,43,0.869,55,3.32,58,1.718,59,1.117,60,1.133,62,0.762,86,2.16,89,2.16,90,2.16,91,2.16,92,1.021,111,1.629,114,1.944,115,1.762,118,2.202,124,3.443,126,1.133,136,2.445,139,2.202,160,3.32,172,2.202,193,0.035,194,0.035,195,0.027,197,0.664,361,2.202,363,2.504,446,3.928,527,3.928,573,2.866,574,2.866,606,2.16,607,2.16,608,4.85,609,4.85,610,4.85,611,3.928]],["title/changelog.html",[612,1.662,613,1.434,614,1.662]],["body/changelog.html",[3,0.776,5,0.206,7,0.431,9,1.513,14,0.206,23,0.148,24,0.037,26,0.67,28,0.918,36,0.401,62,0.972,74,2.282,75,1.302,83,0.918,87,1.513,92,0.239,98,1.54,106,1.904,108,0.863,114,1.153,115,0.354,121,0.918,160,0.776,164,1.998,179,1.302,193,0.036,194,0.016,195,0.033,197,0.239,206,0.585,245,2.722,276,1.452,278,0.67,312,1.124,342,2.414,343,1.677,360,0.67,399,1.306,419,1.97,493,3.678,509,0.776,557,1.306,572,1.124,576,1.124,577,1.124,588,0.67,589,1.124,591,2.179,613,1.452,614,1.302,615,1.99,616,1.99,617,2.33,618,3.259,619,1.54,620,1.902,621,3.471,622,3.134,623,5.635,624,0.918,625,0.776,626,4.994,627,2.811,628,1.133,629,3.206,630,2.877,631,4.462,632,1.133,633,1.902,634,2.877,635,2.457,636,1.133,637,1.902,638,1.133,639,4.462,640,1.133,641,1.682,642,1.902,643,3.678,644,0.918,645,1.133,646,1.54,647,1.54,648,1.902,649,3.87,650,3.688,651,1.133,652,1.133,653,1.133,654,2.457,655,1.902,656,2.457,657,4.272,658,1.133,659,1.54,660,0.918,661,1.133,662,1.133,663,4.024,664,1.902,665,3.206,666,2.457,667,2.457,668,1.133,669,1.902,670,4.339,671,1.902,672,2.845,673,1.133,674,4.677,675,1.133,676,3.48,677,1.133,678,2.457,679,1.902,680,2.457,681,2.457,682,1.902,683,2.457,684,1.133,685,1.902,686,1.902,687,1.133,688,3.688,689,3.471,690,3.688,691,1.902,692,1.133,693,1.133,694,2.877,695,1.133,696,1.902,697,1.133,698,1.133,699,1.902,700,2.457,701,2.597,702,1.133,703,1.902,704,1.133,705,1.133,706,1.133,707,1.902,708,4.613,709,1.133,710,3.471,711,1.133,712,1.133,713,1.133,714,2.457,715,1.99,716,1.133,717,1.133,718,1.54,719,1.133,720,3.471,721,4.272,722,1.902,723,3.206,724,1.133,725,3.206,726,1.902,727,3.471,728,1.902,729,1.133,730,1.133,731,1.133,732,1.902,733,3.471,734,2.33,735,1.133,736,3.688,737,4.159,738,1.133,739,1.133,740,1.902,741,1.133,742,2.877,743,1.133,744,1.902,745,2.457,746,1.133,747,1.133,748,2.457,749,1.902,750,1.133,751,1.902,752,1.133,753,1.133,754,1.133,755,4.542,756,1.133,757,0.918,758,2.195,759,1.133,760,1.902,761,0.776,762,1.133,763,1.902,764,2.877,765,2.877,766,1.133,767,1.902,768,2.457,769,1.133,770,1.133,771,1.902,772,1.133,773,1.133,774,3.471,775,2.051,776,2.597,777,1.99,778,1.133,779,2.597,780,1.133,781,2.457,782,3.134,783,4.462,784,1.133,785,1.133,786,1.902,787,1.99,788,1.133,789,1.133,790,1.133,791,3.206,792,1.133,793,1.133,794,1.133,795,1.133,796,2.457,797,1.133,798,1.902,799,1.54,800,1.133,801,2.649,802,1.133,803,1.133,804,1.133,805,1.133,806,1.133,807,1.133,808,2.597,809,2.597,810,1.133,811,1.902,812,1.133,813,1.133,814,2.457,815,1.902,816,1.133,817,1.902,818,1.133,819,1.902,820,1.902,821,1.902,822,1.902,823,1.133,824,2.457,825,1.133,826,1.133,827,0.918,828,1.133,829,1.99,830,0.918,831,1.302,832,1.902,833,1.133,834,1.133,835,1.902,836,1.902,837,1.902,838,1.902,839,1.133,840,1.133,841,1.133,842,2.457,843,1.133,844,1.902,845,1.133,846,1.133,847,1.902,848,3.471,849,1.902,850,1.133,851,0.918,852,1.133,853,1.133,854,3.206,855,2.877,856,1.133,857,2.457,858,1.902,859,3.471,860,1.902,861,2.877,862,1.133,863,1.133,864,1.133,865,1.133,866,1.133,867,1.133,868,1.902,869,1.902,870,1.133,871,1.902,872,1.133,873,0.918,874,1.902,875,1.133,876,1.902,877,1.133,878,1.133,879,2.877,880,1.133,881,1.133,882,1.133,883,1.133,884,1.902,885,1.133,886,1.133,887,1.133,888,1.133,889,1.133,890,1.133,891,1.902,892,1.133,893,1.133,894,1.133,895,1.133,896,1.133,897,1.902,898,1.133,899,3.471,900,1.133,901,2.457,902,1.902,903,0.918,904,1.902,905,1.133,906,0.918,907,0.918,908,1.133,909,1.902,910,1.133,911,1.133,912,1.97,913,1.133,914,1.133,915,1.902,916,1.902,917,1.133,918,1.133,919,1.902,920,1.902,921,1.133,922,1.902,923,2.877,924,2.457,925,1.133,926,1.133,927,1.133,928,1.133,929,0.918,930,0.918,931,1.133,932,1.902,933,1.133,934,1.133,935,1.133,936,1.133,937,1.902,938,2.877,939,1.133,940,1.133,941,1.133,942,1.133,943,3.471,944,2.457,945,1.902,946,1.133,947,1.133,948,2.457,949,1.902,950,1.902,951,1.902,952,2.877,953,1.133,954,1.133,955,1.133,956,1.902,957,1.133,958,1.133,959,1.133,960,1.133,961,1.133,962,2.877,963,1.133,964,2.457,965,2.877,966,1.133,967,2.457,968,3.206,969,1.902,970,1.902,971,1.902,972,1.902,973,2.457,974,2.877,975,3.206,976,1.902,977,2.457,978,1.133,979,1.133,980,3.688,981,2.457,982,1.133,983,2.877,984,2.877,985,4.024,986,1.133,987,1.133,988,1.133,989,1.133,990,1.133,991,1.133,992,1.902,993,1.133,994,1.902,995,1.133,996,1.133,997,1.133,998,1.133,999,1.902,1000,1.133,1001,1.682,1002,1.133,1003,1.902,1004,1.99,1005,1.902,1006,2.457,1007,1.133,1008,1.133,1009,1.133,1010,1.902,1011,1.133,1012,1.133,1013,1.133,1014,1.133,1015,1.133,1016,1.133,1017,1.133,1018,1.902,1019,1.133,1020,1.133,1021,2.877,1022,3.471,1023,1.902,1024,2.457,1025,1.902,1026,2.877,1027,1.133,1028,1.133,1029,1.133,1030,1.133,1031,2.457,1032,1.133,1033,1.133,1034,1.133,1035,1.902,1036,1.902,1037,1.902,1038,1.902,1039,2.457,1040,1.133,1041,1.133,1042,1.133,1043,1.133,1044,1.133,1045,1.133,1046,0.918,1047,1.133,1048,1.133,1049,1.133,1050,1.902,1051,1.133,1052,1.133,1053,1.902,1054,1.133,1055,1.133,1056,1.133,1057,1.133,1058,1.133,1059,1.133,1060,1.133,1061,1.133,1062,1.133,1063,1.133,1064,3.87,1065,1.133,1066,2.457,1067,2.457,1068,2.877,1069,1.902,1070,2.457,1071,1.133,1072,1.902,1073,1.133,1074,1.133,1075,1.902,1076,1.902,1077,1.902,1078,1.133,1079,1.133,1080,1.133,1081,1.133,1082,1.902,1083,1.133,1084,2.457,1085,1.133,1086,1.133,1087,1.133,1088,1.133,1089,0.918,1090,1.133,1091,1.133,1092,1.133,1093,1.133,1094,1.133,1095,1.133,1096,1.133,1097,1.133,1098,1.133,1099,1.133,1100,1.133,1101,3.206,1102,1.133,1103,1.133,1104,1.133,1105,1.133,1106,1.133,1107,1.133,1108,1.133,1109,1.133,1110,1.133,1111,1.133,1112,1.133,1113,1.133,1114,1.133,1115,1.133,1116,1.902,1117,1.133,1118,1.902,1119,1.133,1120,1.902,1121,1.902,1122,2.877,1123,2.877,1124,1.902,1125,1.902,1126,1.133,1127,1.133,1128,1.133,1129,2.457,1130,1.133,1131,0.918,1132,1.133,1133,1.133,1134,1.133,1135,1.133,1136,1.133,1137,1.133,1138,1.902,1139,4.157,1140,2.457,1141,1.133,1142,1.902,1143,1.133,1144,1.133,1145,1.133,1146,1.133,1147,1.133,1148,1.133,1149,1.133,1150,1.133,1151,1.133,1152,1.902,1153,2.987,1154,1.902,1155,1.133,1156,1.133,1157,1.133,1158,1.54,1159,1.133,1160,2.877,1161,1.133,1162,1.902,1163,1.133,1164,1.133,1165,1.97,1166,1.133,1167,1.902,1168,1.133,1169,1.133,1170,1.133,1171,1.902,1172,1.902,1173,1.133,1174,1.133,1175,1.133,1176,1.133,1177,1.902,1178,2.457,1179,1.902,1180,1.133,1181,1.133,1182,1.54,1183,1.133,1184,1.133,1185,1.133,1186,1.133,1187,1.133,1188,1.133,1189,1.133,1190,1.133,1191,1.133,1192,0.918,1193,1.133,1194,1.133,1195,1.902,1196,1.133,1197,1.133,1198,1.133,1199,1.133,1200,1.133,1201,1.133,1202,1.133,1203,1.902,1204,1.133,1205,0.918,1206,1.133,1207,1.133,1208,0.918,1209,1.133,1210,1.133,1211,1.133,1212,1.902,1213,1.133,1214,1.133,1215,1.133,1216,1.133,1217,1.133,1218,1.133,1219,1.133,1220,1.133,1221,1.133,1222,1.133,1223,1.133,1224,1.902,1225,1.133,1226,1.133,1227,1.133,1228,1.133,1229,1.902,1230,0.918,1231,0.918,1232,1.133,1233,1.133,1234,1.133,1235,1.133,1236,1.133,1237,1.133,1238,1.133]],["title/coverage.html",[1165,2.647]],["body/coverage.html",[0,1.803,1,1.358,5,0.544,6,0.888,7,0.613,8,2.078,9,1.579,10,3.052,23,0.39,24,0.049,46,2.047,60,0.824,62,1.228,64,1.767,65,2.047,66,1.767,69,2.047,72,2.893,80,2.29,87,1.059,193,0.034,194,0.034,195,0.046,196,1.544,198,2.452,227,1.544,229,1.544,233,1.544,246,1.767,343,1.406,399,1.358,415,2.047,416,2.719,417,2.719,429,1.767,502,2.047,503,3.112,504,3.052,555,1.358,556,2.635,557,2.157,558,2.635,584,1.544,585,1.544,606,2.047,607,2.047,775,1.767,831,2.047,1001,2.047,1165,2.047,1239,2.991,1240,2.991,1241,2.422,1242,2.422,1243,2.422,1244,5.62,1245,4.459,1246,2.422,1247,2.991,1248,2.991,1249,2.991,1250,2.991,1251,2.991,1252,2.991,1253,2.991,1254,3.847,1255,3.847,1256,2.422,1257,3.216,1258,3.216,1259,2.422,1260,2.422,1261,2.422,1262,2.422,1263,2.422,1264,2.422,1265,2.719,1266,2.422,1267,2.991,1268,2.047,1269,2.422,1270,2.422,1271,2.422,1272,2.047,1273,2.047,1274,2.422,1275,2.422,1276,2.422,1277,2.991,1278,2.991,1279,2.991]],["title/dependencies.html",[761,1.662,912,2.355]],["body/dependencies.html",[5,0.57,7,0.336,24,0.05,25,1.851,45,1.617,47,2.537,50,2.537,51,2.114,57,2.537,59,1.109,63,1.255,156,1.851,193,0.035,194,0.035,219,1.851,220,2.42,223,1.851,234,1.109,420,2.537,422,2.537,424,2.537,427,2.144,428,2.144,506,2.537,625,2.144,659,2.537,660,2.537,758,3.311,779,3.316,906,2.537,907,2.537,912,2.144,930,3.316,1004,2.537,1158,3.316,1280,3.133,1281,3.133,1282,3.133,1283,3.133,1284,3.133,1285,3.133,1286,3.133,1287,4.095,1288,3.133,1289,3.133,1290,5.427,1291,3.133,1292,3.133,1293,3.133,1294,3.133,1295,4.095,1296,3.133,1297,3.133,1298,3.133,1299,4.095,1300,3.133,1301,3.133,1302,3.133,1303,3.133,1304,3.133,1305,3.133,1306,3.133,1307,4.837,1308,3.133,1309,4.561,1310,3.133,1311,3.133,1312,3.133,1313,3.133,1314,3.133,1315,3.133,1316,4.095,1317,3.133,1318,4.095,1319,4.561,1320,3.133,1321,3.133,1322,3.133,1323,3.133,1324,3.133,1325,3.133,1326,3.133,1327,4.095,1328,3.133,1329,4.095,1330,3.133,1331,3.133,1332,3.133,1333,3.133,1334,3.133,1335,3.133,1336,3.133,1337,3.133,1338,3.133,1339,3.133,1340,3.133,1341,3.133,1342,3.133,1343,2.537,1344,3.133,1345,3.133,1346,3.133,1347,3.133,1348,3.133,1349,3.133,1350,4.095,1351,3.133,1352,3.133,1353,3.133,1354,3.133,1355,3.133,1356,3.133,1357,3.133,1358,3.133,1359,3.133,1360,3.133,1361,3.133,1362,3.133,1363,3.133,1364,3.133,1365,3.133,1366,3.133,1367,3.133,1368,4.561,1369,3.133,1370,3.133,1371,3.133,1372,3.133,1373,3.133,1374,3.133,1375,3.133,1376,3.133,1377,3.133,1378,3.133,1379,3.133,1380,3.133,1381,3.133,1382,3.133,1383,3.133,1384,4.095,1385,3.133,1386,3.133,1387,3.133,1388,3.133,1389,3.133,1390,3.133,1391,3.133,1392,3.133,1393,3.133,1394,3.133,1395,3.133,1396,3.133,1397,3.133,1398,3.133]],["title/miscellaneous/functions.html",[1399,1.102,1400,2.787]],["body/miscellaneous/functions.html",[6,0.834,7,0.575,8,1.076,9,1.494,10,2.888,13,0.417,17,2.527,23,0.7,24,0.049,26,2.181,27,1.915,30,1.366,34,4.469,35,3.261,36,1.954,38,4.469,41,1.386,46,2.888,49,2.174,58,1.609,60,1.017,62,1.241,64,2.181,65,2.527,66,2.493,68,2.181,69,2.527,73,2.174,74,2.063,75,3.11,78,1.307,92,0.777,119,2.174,128,2.167,136,1.219,154,1.219,156,1.586,193,0.032,194,0.032,206,1.386,227,1.905,340,1.386,343,1.307,353,1.386,361,1.676,416,1.837,417,2.527,429,2.181,431,2.174,503,2.815,504,2.888,508,2.174,509,2.527,515,3.68,520,2.174,555,1.676,557,1.676,625,2.527,831,2.527,873,2.989,1001,2.527,1241,2.174,1242,2.989,1243,2.989,1246,2.989,1254,2.174,1255,3.858,1256,2.989,1257,2.174,1258,3.417,1259,2.989,1260,2.989,1261,2.989,1262,2.989,1263,2.989,1264,2.989,1265,2.527,1266,2.989,1268,1.837,1269,2.989,1270,2.989,1271,2.989,1272,1.837,1273,2.527,1274,2.174,1275,2.989,1276,2.989,1399,1.219,1400,2.174,1401,2.684,1402,3.986,1403,4.544,1404,2.174,1405,2.989,1406,3.691,1407,2.684,1408,2.174,1409,2.684,1410,5.043,1411,2.684,1412,3.691,1413,2.684,1414,2.684,1415,3.691,1416,2.684,1417,4.544,1418,4.219,1419,2.684,1420,2.684,1421,2.684,1422,4.544,1423,2.684,1424,2.684,1425,2.684,1426,2.684,1427,3.691,1428,2.684,1429,3.691,1430,2.989]],["title/index.html",[13,0.377,612,1.662,613,1.434]],["body/index.html",[3,1.084,9,1.204,24,0.037,85,3.494,108,1.543,193,0.037,194,0.037,195,0.037,197,0.715,237,2.008,245,2.897,341,2.802,343,1.528,505,2.752,614,2.327,615,3.494,616,3.494,617,4.422,618,3.84,622,2.752,624,4.039,627,3.494,641,2.954,643,4.456,644,3.494,646,3.494,647,4.039,670,3.494,672,3.414,676,3.246,701,2.752,715,3.494,718,3.494,734,2.752,737,3.84,757,2.752,758,2.327,775,2.008,776,4.169,777,4.169,782,3.494,787,2.752,799,3.494,801,2.327,809,2.752,829,2.752,830,2.752,903,3.494,929,2.752,1089,2.752,1182,2.752,1192,2.752,1205,2.752,1230,2.752,1431,4.315,1432,3.399,1433,3.399,1434,3.399,1435,3.399,1436,3.494,1437,3.399,1438,3.399,1439,3.399,1440,4.315,1441,4.315,1442,4.315,1443,4.741,1444,3.399,1445,3.399,1446,4.741,1447,3.399,1448,3.399,1449,4.315,1450,3.399,1451,3.399,1452,3.399,1453,4.315,1454,3.399,1455,3.399,1456,3.399,1457,3.399,1458,3.399,1459,4.315,1460,3.399,1461,3.399,1462,4.315,1463,3.399,1464,4.315,1465,4.315,1466,3.399,1467,3.399,1468,3.399,1469,3.399,1470,3.399,1471,3.399,1472,3.399,1473,3.399,1474,3.399,1475,3.399,1476,3.399,1477,3.399,1478,3.399,1479,3.399,1480,3.399]],["title/license.html",[612,1.662,613,1.434,1481,1.966]],["body/license.html",[24,0.04,193,0.04,194,0.04,222,2.295,641,3.208,672,2.658,775,2.295,808,3.795,827,4.076,851,3.145,1046,3.795,1131,3.145,1153,3.145,1208,3.145,1231,3.145,1343,3.145,1436,4.522,1481,3.145,1482,3.883,1483,5.033,1484,3.883,1485,3.883,1486,4.687,1487,3.883,1488,3.883,1489,3.883,1490,3.883,1491,3.883,1492,3.883,1493,4.687,1494,3.883,1495,3.883,1496,3.883,1497,3.883,1498,3.883,1499,3.883,1500,3.883,1501,3.883,1502,3.883,1503,3.883,1504,3.883,1505,3.883,1506,4.687,1507,3.883,1508,3.883,1509,3.883,1510,3.883,1511,3.883,1512,4.687,1513,3.883,1514,3.883,1515,3.883,1516,3.883,1517,3.883,1518,3.883,1519,3.883,1520,3.883,1521,3.883,1522,3.883,1523,3.883,1524,3.883,1525,3.883,1526,3.883,1527,3.883,1528,3.883,1529,3.883,1530,3.883,1531,3.883,1532,3.883,1533,3.883,1534,3.883,1535,3.883,1536,3.883,1537,3.883,1538,3.883,1539,3.883,1540,3.883]],["title/modules.html",[1541,3.131]],["body/modules.html",[24,0.044,193,0.044,194,0.044,1541,3.637]],["title/overview.html",[1542,3.131]],["body/overview.html",[2,3.612,24,0.044,193,0.044,194,0.044,197,0.939,399,2.025,1542,3.612,1543,4.46]],["title/properties.html",[14,0.626,761,1.662]],["body/properties.html",[14,0.812,24,0.046,193,0.044,194,0.044,619,3.618,801,3.058]],["title/miscellaneous/typealiases.html",[1399,1.102,1544,3.441]],["body/miscellaneous/typealiases.html",[6,0.803,7,0.554,8,1.661,13,0.644,23,0.675,24,0.048,25,2.879,62,1.177,72,2.14,86,2.838,89,2.838,90,2.838,91,2.838,111,2.14,124,2.838,193,0.042,194,0.042,198,2.671,239,2.879,241,2.879,606,2.838,607,3.335,611,3.946,1272,2.838,1273,3.335,1399,1.882,1404,3.357,1405,3.946,1408,3.357,1430,3.946,1545,4.146]],["title/miscellaneous/variables.html",[1399,1.102,1546,2.787]],["body/miscellaneous/variables.html",[6,0.653,7,0.45,13,0.653,23,0.548,24,0.047,26,2.485,27,1.909,158,3.979,193,0.042,194,0.042,234,1.489,342,2.536,343,1.74,503,2.485,676,2.878,1265,3.363,1268,3.363,1399,1.909,1402,3.405,1546,3.405,1547,4.205,1548,4.913,1549,4.913,1550,4.205,1551,4.205,1552,4.205,1553,4.205,1554,4.913,1555,4.205,1556,4.205,1557,4.205,1558,4.205]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["0.05",{"_index":335,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["0.1.0",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["0.13.1",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":315,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["0.5*255",{"_index":177,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.5.0",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1182,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.8",{"_index":133,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.9*255",{"_index":116,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0/1",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":179,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"changelog.html":{}}}],["1.0",{"_index":164,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["1.14.10",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1004,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["1.6875389974302382e",{"_index":351,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["1.7.0",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["1/37",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["10.0",{"_index":306,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10.0.0",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":281,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10x",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["11.5",{"_index":369,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["12",{"_index":622,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["13",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":99,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["14",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":312,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["15.313.0",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["17,0,0",{"_index":350,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17,0.076,0,0.49,0.034,0.11,1",{"_index":352,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2",{"_index":399,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.0",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["2.6.1",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":327,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2019",{"_index":1153,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":100,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["24",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":101,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["26",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":779,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1459,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":619,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3.8.1",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":98,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["31",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":342,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1441,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["4th",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["5th",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["6.11.2",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["8.9",{"_index":398,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["85",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1543,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["9.5",{"_index":318,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["90",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["_dragevent(info",{"_index":412,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_lighting",{"_index":172,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["_onclick(info",{"_index":383,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondrag(info",{"_index":408,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragend(info",{"_index":410,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragstart(info",{"_index":405,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onhover(e",{"_index":375,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onviewstatechange(event",{"_index":391,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["aabb",{"_index":425,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["ability",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1208,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1533,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1545,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1445,"title":{},"body":{"index.html":{}}}],["ambientlight",{"_index":212,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["analytics",{"_index":907,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":1001,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomicalstructuresurl",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1504,"title":{},"body":{"license.html":{}}}],["angular",{"_index":758,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":643,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["appropriate",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1537,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":851,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":320,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["atlas",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempts",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1526,"title":{},"body":{"license.html":{}}}],["autohighlight",{"_index":95,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["automatic",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":323,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["award",{"_index":1479,"title":{},"body":{"index.html":{}}}],["b",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1205,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":903,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bbox",{"_index":448,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["before",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":221,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["behaviorsubject([0",{"_index":252,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["being",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":782,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":219,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["block",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":7,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":246,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer",{"_index":1,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer.gltfcache",{"_index":153,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["bodyuiprops",{"_index":196,"title":{"interfaces/BodyUIProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuiviewstateprops",{"_index":229,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["boolean",{"_index":136,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":88,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["breaking",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":1158,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1437,"title":{},"body":{"index.html":{}}}],["builds",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1484,"title":{},"body":{"license.html":{}}}],["cache",{"_index":625,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["cacheable",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":199,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cancelregistration",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":427,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["canvas",{"_index":200,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["card",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":85,"title":{},"body":{"classes/BodyUILayer.html":{},"index.html":{}}}],["cases",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["casttoglobaltype",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["casttoglobaltype(value",{"_index":1409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ccf",{"_index":245,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":561,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["cell",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":505,"title":{},"body":{"interfaces/ProcessedNode.html":{},"index.html":{}}}],["change",{"_index":929,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":614,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1490,"title":{},"body":{"license.html":{}}}],["child",{"_index":510,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["child.bbox.clone",{"_index":535,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["childnames(child",{"_index":514,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(node.node).map(n",{"_index":532,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(scene",{"_index":508,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1529,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BodyUILayer.html":{},"overview.html":{}}}],["clean",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":624,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["collider",{"_index":71,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["collider.ts",{"_index":417,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collision",{"_index":415,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"coverage.html":{}}}],["collisioning",{"_index":433,"title":{},"body":{"interfaces/Collision.html":{}}}],["collisions",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":114,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["colorizing",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":562,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["common",{"_index":830,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":734,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["compositelayer",{"_index":12,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["comunica/query",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1511,"title":{},"body":{"license.html":{}}}],["cone",{"_index":89,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["conegeometry",{"_index":52,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["config",{"_index":873,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["config.csv",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1539,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":486,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('data",{"_index":356,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('results",{"_index":355,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('starting",{"_index":432,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":500,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":1485,"title":{},"body":{"license.html":{}}}],["const",{"_index":129,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["constructor(private",{"_index":272,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["container",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1435,"title":{},"body":{"index.html":{}}}],["context",{"_index":560,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["contract",{"_index":1534,"title":{},"body":{"license.html":{}}}],["control",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":282,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convenience",{"_index":243,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convention",{"_index":171,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["coordinate",{"_index":237,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["coordinate_system",{"_index":44,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinate_system.cartesian",{"_index":103,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinatesystem",{"_index":102,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["copies",{"_index":1506,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1493,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1483,"title":{},"body":{"license.html":{}}}],["cord",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1165,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["creation_date",{"_index":563,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator",{"_index":564,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_first_name",{"_index":565,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_last_name",{"_index":566,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_middle_name",{"_index":567,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_orcid",{"_index":568,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["credits",{"_index":1470,"title":{},"body":{"index.html":{}}}],["crosswalk.csv",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["csv.ts",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csvreport",{"_index":490,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":492,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvtext",{"_index":1420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlclick",{"_index":242,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ctrlkey",{"_index":385,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cube",{"_index":91,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cubegeometry",{"_index":53,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cuboid",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["currentstate",{"_index":395,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.data",{"_index":401,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.zoomopacity",{"_index":400,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cursor",{"_index":270,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cyberinfrastructure",{"_index":1472,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["cylinder",{"_index":90,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cylindergeometry",{"_index":54,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d",{"_index":113,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["d.geometry",{"_index":437,"title":{},"body":{"interfaces/Collision.html":{}}}],["d.scenegraph",{"_index":436,"title":{},"body":{"interfaces/Collision.html":{}}}],["damages",{"_index":1530,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":74,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.concat(object.values(results",{"_index":358,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.length",{"_index":79,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.map(d",{"_index":120,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.push",{"_index":359,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.ts",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data?.length",{"_index":331,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["database",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["datasets",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1495,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1540,"title":{},"body":{"license.html":{}}}],["debugscenenodeprocessing",{"_index":201,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["debugscenenodeprocessing(data",{"_index":339,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["december",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["deck",{"_index":213,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck(props",{"_index":308,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/core",{"_index":45,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":218,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/geo",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":47,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deck.gl/mesh",{"_index":50,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deckprops",{"_index":273,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.camera",{"_index":277,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.interactive",{"_index":283,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.legacylighting",{"_index":303,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.maxrotationx",{"_index":313,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.minrotationx",{"_index":311,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.rotation",{"_index":316,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.target",{"_index":314,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.zoom",{"_index":317,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["decompress",{"_index":458,"title":{},"body":{"interfaces/Collision.html":{}}}],["decorator",{"_index":220,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deeply",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["delete",{"_index":537,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["demo",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":912,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["depthmask",{"_index":178,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["derivescenegraph",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["derivescenegraph(scenegraphnodename",{"_index":1411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["descrepancies",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["details",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1471,"title":{},"body":{"index.html":{}}}],["developments",{"_index":1192,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["didzoom",{"_index":332,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["different",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["dimension_units",{"_index":569,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["direct",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":105,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["display",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1502,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":69,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["docollisions(scene",{"_index":431,"title":{},"body":{"interfaces/Collision.html":{},"miscellaneous/functions.html":{}}}],["docollisions(state.data",{"_index":187,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["docs",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":775,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["dracoloader",{"_index":421,"title":{},"body":{"interfaces/Collision.html":{}}}],["during",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":37,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.info",{"_index":192,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["e.isdragging",{"_index":300,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object",{"_index":379,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object?.['@id",{"_index":378,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.picked",{"_index":376,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e?.srcevent?.ctrlkey",{"_index":390,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["easier",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":930,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":501,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["entities",{"_index":1422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityid",{"_index":446,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["es",{"_index":428,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["eslint",{"_index":104,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["eslint/naming",{"_index":170,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["eslint/no",{"_index":109,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["etc",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":737,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1525,"title":{},"body":{"license.html":{}}}],["event.interactionstate?.iszooming",{"_index":394,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate",{"_index":402,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.rotationx",{"_index":404,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.zoom",{"_index":397,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["expanded",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":110,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["exploration",{"_index":1439,"title":{},"body":{"index.html":{}}}],["export",{"_index":126,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["express",{"_index":1343,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["external",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":831,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extraction_set",{"_index":570,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["extractionsitesconfigurl",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractionsitesurl",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":96,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["favor",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":587,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["fetch",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_format",{"_index":605,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["files",{"_index":1494,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["filter(d",{"_index":435,"title":{},"body":{"interfaces/Collision.html":{}}}],["filters",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":328,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["finishing",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["firstfieldname",{"_index":1417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fit",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1521,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["fixes.ts",{"_index":1242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixes/performance",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["flipy",{"_index":279,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["fly",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1510,"title":{},"body":{"license.html":{}}}],["form",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1467,"title":{},"body":{"index.html":{}}}],["free",{"_index":1489,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":72,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1400,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1477,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1509,"title":{},"body":{"license.html":{}}}],["further",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["geometries",{"_index":137,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph",{"_index":148,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph.push(node",{"_index":143,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry",{"_index":144,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry].push(node",{"_index":145,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometry",{"_index":55,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcolor",{"_index":112,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getcursor",{"_index":297,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["getpickinginfo",{"_index":20,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":32,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getposition",{"_index":125,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gettext",{"_index":123,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getting",{"_index":612,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettransformmatrix",{"_index":117,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["github",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["gltf",{"_index":68,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltf.scenes",{"_index":461,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["gltf.ts",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gltf:${processednode['@id",{"_index":524,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfcache",{"_index":17,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltfloader",{"_index":423,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltfnode",{"_index":525,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes",{"_index":517,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes.push",{"_index":523,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfoverride",{"_index":1427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfpromise",{"_index":1415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfscene",{"_index":460,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltftransform",{"_index":348,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["gltfurl",{"_index":340,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["good",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":906,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["grab",{"_index":302,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["grabbing",{"_index":301,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["granted",{"_index":1488,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":496,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":499,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":498,"title":{},"body":{"interfaces/Collision.html":{}}}],["halfsize",{"_index":546,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["hand",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["hash",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["helmet",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1487,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["highlightcolor",{"_index":97,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["highlighted",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":491,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":497,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":495,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":494,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":418,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":481,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":478,"title":{},"body":{"interfaces/Collision.html":{}}}],["holders",{"_index":1527,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":617,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":210,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["htmlelement",{"_index":211,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["http://localhost:8080/source_data/asct",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/extraction",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/reference",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":1453,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":1442,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1446,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":341,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":346,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["https://humanatlas.io",{"_index":1468,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":1464,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1448,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1444,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1222,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":672,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":615,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":92,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1518,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["improve",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1513,"title":{},"body":{"license.html":{}}}],["includes",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":808,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1475,"title":{},"body":{"index.html":{}}}],["individual",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{}}}],["info.object",{"_index":389,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.object?.['@id",{"_index":387,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.picked",{"_index":386,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info?.object?.['@id",{"_index":413,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["information",{"_index":718,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":321,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["initializestate",{"_index":21,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["instead",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":305,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interact",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":392,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interactive",{"_index":202,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interest",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":195,"title":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":197,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["isdragging",{"_index":298,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["issue",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":393,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["it's",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":1465,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":647,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":506,"title":{},"body":{"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["jsonld.ts",{"_index":558,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["jsonld/jsonld",{"_index":590,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["jsonldobj",{"_index":559,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["july",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":76,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["keyboard",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1517,"title":{},"body":{"license.html":{}}}],["known",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":189,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["label",{"_index":571,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["labs/dispatch",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["landmarks.csv",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["larger",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["lasthovered",{"_index":271,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["latest",{"_index":701,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layer",{"_index":226,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["layer.ts",{"_index":10,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["layer.ts:143",{"_index":33,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:71",{"_index":31,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:72",{"_index":29,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:74",{"_index":40,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:80",{"_index":42,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layername",{"_index":18,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers",{"_index":51,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["layers.filter(l",{"_index":188,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push",{"_index":157,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(`${geometry}pickable",{"_index":185,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(geometry",{"_index":184,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('text",{"_index":180,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('textpickable",{"_index":183,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["lb",{"_index":540,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["lb.clone().vadd(halfsize",{"_index":550,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ld",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":588,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["left/right",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["legacylighting",{"_index":203,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["level",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1531,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1528,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":757,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["library/vh_female/united/vhf_united_color.glb",{"_index":345,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["library/vh_male/united/vhm_united_color.glb",{"_index":344,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["license",{"_index":1481,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["lightingeffect",{"_index":214,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["limitation",{"_index":1497,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1131,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":107,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["link",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":787,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":25,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":419,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{}}}],["load(model.scenegraph",{"_index":457,"title":{},"body":{"interfaces/Collision.html":{}}}],["loaded",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":420,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":422,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":424,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loadgltf",{"_index":64,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf(model",{"_index":1413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadgltf({scenegraph",{"_index":516,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["loadgltf2",{"_index":65,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf2(model.scenegraphnode",{"_index":167,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["loadgltf2(scenegraphnodename",{"_index":1414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loading",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1469,"title":{},"body":{"index.html":{}}}],["logging",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":324,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["lowerbound",{"_index":441,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lowerbound[i",{"_index":454,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lru",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":57,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["m",{"_index":147,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraph",{"_index":149,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraphnode",{"_index":150,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["made",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":586,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["managers",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["map(model",{"_index":438,"title":{},"body":{"interfaces/Collision.html":{}}}],["march",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":439,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint",{"_index":442,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":444,"title":{},"body":{"interfaces/Collision.html":{}}}],["match",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":194,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":59,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":488,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(n",{"_index":453,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["math.min(math.max(1",{"_index":396,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["math.min(n",{"_index":450,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["matrix",{"_index":365,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix.gettranslation",{"_index":368,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4",{"_index":58,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e",{"_index":349,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(d.transformmatrix).gettranslation",{"_index":122,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["matrix4(matrix4.identity",{"_index":552,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(model.transformmatrix",{"_index":440,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(modelmatrix",{"_index":522,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":366,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(worldmatrix",{"_index":518,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4.identity",{"_index":519,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["maxhits",{"_index":487,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":204,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["mc",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1520,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1500,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":82,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer",{"_index":1246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meshlayer(id",{"_index":73,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["minor",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":205,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["miscellaneous",{"_index":1399,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1482,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":156,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["model._lighting",{"_index":173,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.color",{"_index":176,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.entityid",{"_index":447,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.opacity",{"_index":163,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraph",{"_index":169,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraphnode",{"_index":166,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.tooltip",{"_index":445,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":175,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.unpickable",{"_index":165,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.zoombasedopacity",{"_index":161,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model['@id",{"_index":159,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["modelmatrix",{"_index":463,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":471,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":470,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["models",{"_index":158,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1499,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1541,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1432,"title":{},"body":{"index.html":{}}}],["more",{"_index":627,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouseevent",{"_index":240,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["moved",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1433,"title":{},"body":{"index.html":{}}}],["n.bbox",{"_index":531,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["n.unpickable",{"_index":182,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["n3",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":509,"title":{},"body":{"interfaces/ProcessedNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names.push(child.name",{"_index":513,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["navigation",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["near",{"_index":280,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["need",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1473,"title":{},"body":{"index.html":{}}}],["new",{"_index":87,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":106,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["ngx",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1478,"title":{},"body":{"index.html":{}}}],["node",{"_index":63,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["node.bbox",{"_index":534,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.extend(child.bbox",{"_index":536,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.lowerbound",{"_index":541,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.upperbound",{"_index":543,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.center",{"_index":549,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.geometry",{"_index":141,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.id",{"_index":521,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.mesh",{"_index":464,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives",{"_index":465,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives.length",{"_index":466,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.name",{"_index":473,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.scenegraph",{"_index":142,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.size",{"_index":544,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.transformmatrix",{"_index":551,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.ts",{"_index":607,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["node.zoomtoonload",{"_index":333,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclick",{"_index":256,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclickevent",{"_index":241,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodeclicksubject",{"_index":248,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedrag",{"_index":266,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragend",{"_index":268,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragendsubject",{"_index":255,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragevent",{"_index":239,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodedragstart",{"_index":264,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragstartsubject",{"_index":253,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragsubject",{"_index":254,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstart",{"_index":258,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstartsubject",{"_index":249,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstop",{"_index":260,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstopsubject",{"_index":250,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodes",{"_index":154,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["nodes.filter(n",{"_index":181,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["nodes.ts",{"_index":504,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodes[n]).filter(n",{"_index":533,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[node['@id",{"_index":538,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[processednode['@id",{"_index":529,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["noninfringement",{"_index":1524,"title":{},"body":{"license.html":{}}}],["note",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":1460,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1046,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":115,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["numeric",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":234,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["object.entries(geometries",{"_index":155,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.prototype.hasownproperty.call(url2gltf",{"_index":151,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.values(nodes",{"_index":539,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(nodes).filter(n",{"_index":530,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(results",{"_index":357,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["obtaining",{"_index":1492,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1447,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":287,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondrag",{"_index":293,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragend",{"_index":295,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragstart",{"_index":291,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["one",{"_index":1089,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["onhover",{"_index":285,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["online",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["ontology/objects/vhf_united_v01_060420.glb",{"_index":347,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["onviewstatechange",{"_index":289,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["opacities",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":160,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["openapi",{"_index":799,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1456,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1458,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1457,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":75,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options.geometry",{"_index":84,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["orbitaxis",{"_index":230,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["orbitview",{"_index":215,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["organ",{"_index":676,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["organs/anatomical",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["orthographic",{"_index":278,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["orthographicview",{"_index":216,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ot2od026671",{"_index":1480,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1536,"title":{},"body":{"license.html":{}}}],["out",{"_index":1538,"title":{},"body":{"license.html":{}}}],["over",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1542,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":761,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["parameters['getpickinginfo']>[0",{"_index":190,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["parent",{"_index":206,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["parsecsv",{"_index":1259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsv(sourceurl",{"_index":1416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsecsvtext",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsvtext(csvtext",{"_index":1419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":274,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["particular",{"_index":1522,"title":{},"body":{"license.html":{}}}],["partly",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["pbr",{"_index":174,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["performance",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1486,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1507,"title":{},"body":{"license.html":{}}}],["person",{"_index":1491,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1508,"title":{},"body":{"license.html":{}}}],["pick",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["pickable",{"_index":93,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["picked",{"_index":238,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["pickinfo",{"_index":233,"title":{"interfaces/PickInfo.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["placeholder",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":572,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["placement_date",{"_index":592,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["placenta",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":377,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["popup",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":809,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1515,"title":{},"body":{"license.html":{}}}],["position",{"_index":121,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["possible",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["postprocess",{"_index":459,"title":{},"body":{"interfaces/Collision.html":{}}}],["preferences",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["primitive",{"_index":467,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position",{"_index":468,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position.min",{"_index":469,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["priority",{"_index":608,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["private",{"_index":247,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["process",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["processanatomicalstructures",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processanatomicalstructures(sourceurl",{"_index":1421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processed",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["processednode",{"_index":502,"title":{"interfaces/ProcessedNode.html":{}},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["processednode.bbox",{"_index":528,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processednode['@id",{"_index":526,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processextractionsites",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processextractionsites(sourceurl",{"_index":1423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processing",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["processreferencedata",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processreferencedata(refentities",{"_index":1424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processscenenodes",{"_index":227,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processscenenodes(gltfurl",{"_index":353,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities(parent",{"_index":1426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":776,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1434,"title":{},"body":{"index.html":{}}}],["projects/.../body",{"_index":1405,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../global",{"_index":1401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../load",{"_index":1403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../parse",{"_index":1406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../process",{"_index":1402,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene",{"_index":1408,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../simplify",{"_index":1407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../spatial",{"_index":1404,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":128,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["promise(r",{"_index":325,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"properties.html":{}}}],["props",{"_index":275,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["props.effects",{"_index":304,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["provided",{"_index":1231,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1501,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1523,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":646,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":660,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":1225,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["r.hits.length",{"_index":489,"title":{},"body":{"interfaces/Collision.html":{}}}],["rc.1",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["real",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":138,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rectify",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["refentities",{"_index":1425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":343,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":573,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["referencedataconfig",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["referenceorganconfigurl",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refernced",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["registergltfloaders",{"_index":66,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registration",{"_index":829,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["registrations#1",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["renderlayers",{"_index":22,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["report",{"_index":474,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":482,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":1431,"title":{},"body":{"index.html":{}}}],["representation_of",{"_index":574,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["required",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["resets",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1496,"title":{},"body":{"license.html":{}}}],["results",{"_index":193,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["returns",{"_index":38,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":39,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["returntype['getpickinginfo",{"_index":191,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rgb",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":589,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["rights",{"_index":1498,"title":{},"body":{"license.html":{}}}],["root",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":207,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotation_units",{"_index":600,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rotationorbit",{"_index":231,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotationx",{"_index":232,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["round",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["ru/cdk",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["ru/ngxs",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":670,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["rui_rank",{"_index":575,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rxjs",{"_index":223,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":225,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sad",{"_index":475,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":485,"title":{},"body":{"interfaces/Collision.html":{}}}],["sample",{"_index":1230,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["scale(halfsize.toarray",{"_index":554,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scaling_units",{"_index":596,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["scene",{"_index":62,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scene.children",{"_index":512,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.filter(d",{"_index":456,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":511,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.ts",{"_index":1275,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scenegraph",{"_index":139,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphlayer",{"_index":48,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["scenegraphnode",{"_index":361,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["scenegraphnodename",{"_index":1412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scenerotation",{"_index":262,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenerotationsubject",{"_index":251,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenetraversalvisitor",{"_index":1430,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scheduled",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1474,"title":{},"body":{"index.html":{}}}],["search",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":715,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1505,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["setinteractive(value",{"_index":374,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotation(value",{"_index":370,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotationx(value",{"_index":371,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setscene(data",{"_index":330,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settarget(value",{"_index":373,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settimeout(r",{"_index":326,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setup",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["setzoom(value",{"_index":372,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sex",{"_index":576,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sexes",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1512,"title":{},"body":{"license.html":{}}}],["share",{"_index":224,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["shared",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["shared/spatial",{"_index":61,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["shortest",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":577,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sides",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["simplemeshlayer",{"_index":49,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["simplifies",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["simplifyscene",{"_index":1276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["simplifyscene(nodes",{"_index":1428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["site",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sites",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["sites.ts",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizable",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":507,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["size.clone().vmul(new",{"_index":547,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["slice_count",{"_index":578,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slice_thickness",{"_index":579,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slider",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["slider/ngx",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1436,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceboxes",{"_index":434,"title":{},"body":{"interfaces/Collision.html":{}}}],["sources",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["sourceurl",{"_index":1418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sparc",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":659,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":557,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialentityjsonld",{"_index":555,"title":{"interfaces/SpatialEntityJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialobjectreferencejsonld",{"_index":584,"title":{"interfaces/SpatialObjectReferenceJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialplacementjsonld",{"_index":585,"title":{"interfaces/SpatialPlacementJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialscenegeometry",{"_index":611,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spatialscenenode",{"_index":60,"title":{"interfaces/SpatialSceneNode.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":591,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1455,"title":{},"body":{"index.html":{}}}],["specific",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1454,"title":{},"body":{"index.html":{}}}],["speed",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["sphere",{"_index":86,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spheregeometry",{"_index":56,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["spinal",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":476,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":477,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":483,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":484,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":384,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["stage",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":777,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1440,"title":{},"body":{"index.html":{}}}],["started",{"_index":613,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":134,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.data",{"_index":140,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.docollisions",{"_index":186,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.zoomopacity",{"_index":162,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["statements",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["stay",{"_index":1235,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["structures.ts",{"_index":1261,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":222,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"license.html":{}}}],["subject.next",{"_index":414,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sublicense",{"_index":1503,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1514,"title":{},"body":{"license.html":{}}}],["such",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["support",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":83,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["switched",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":208,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["target.name",{"_index":480,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":479,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes",{"_index":455,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":472,"title":{},"body":{"interfaces/Collision.html":{}}}],["technologies",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["terms",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":360,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["testing",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":124,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["textlayer",{"_index":46,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textlayer(id",{"_index":119,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["theme",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["this._dragevent(info",{"_index":406,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onclick",{"_index":288,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondrag",{"_index":294,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragend",{"_index":296,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragstart",{"_index":292,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onhover",{"_index":286,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onviewstatechange",{"_index":290,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer",{"_index":284,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.setstate",{"_index":337,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.state",{"_index":322,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.cursor",{"_index":299,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.debugscenenodeprocessing(data",{"_index":338,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck",{"_index":307,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.finalize",{"_index":329,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.props.viewstate",{"_index":367,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.setprops",{"_index":309,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deckprops.debugscenenodeprocessing",{"_index":336,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.lasthovered",{"_index":381,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.next",{"_index":388,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":257,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject",{"_index":411,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject.pipe(share",{"_index":269,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject",{"_index":407,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject.pipe(share",{"_index":265,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject",{"_index":409,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject.pipe(share",{"_index":267,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":382,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":259,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":380,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":261,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.props",{"_index":130,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.scenerotationsubject.next([deckprops.rotation",{"_index":319,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.next([event.viewstate.rotationorbit",{"_index":403,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.pipe(share",{"_index":263,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.setstate",{"_index":131,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.state",{"_index":135,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.zoomto(node",{"_index":334,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["through",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":493,"title":{},"body":{"interfaces/Collision.html":{},"changelog.html":{}}}],["tissues",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["tool",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":527,"title":{},"body":{"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":1535,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["transformmatrix",{"_index":118,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["translate(center.toarray",{"_index":553,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["translation_units",{"_index":604,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["transparency",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["traversal",{"_index":430,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["traversal.ts",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["traversescene",{"_index":429,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["traversescene(gltfscene",{"_index":462,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":520,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["travisci",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":94,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["try",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1236,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1544,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":108,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["ub",{"_index":542,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ub.clone().vsub(lb",{"_index":545,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ufl",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":9,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1443,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1452,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1449,"title":{},"body":{"index.html":{}}}],["ui.ts",{"_index":198,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/organ",{"_index":1451,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1450,"title":{},"body":{"index.html":{}}}],["ui/src/global",{"_index":1241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/body",{"_index":8,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/shared/ccf",{"_index":556,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["ui/src/lib/shared/spatial",{"_index":606,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/load",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/parse",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/process",{"_index":503,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui/src/lib/util/scene",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/simplify",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/spatial",{"_index":416,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uis",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":78,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/functions.html":{}}}],["university",{"_index":1476,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["unnecessary",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":609,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["unselect",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["updated_date",{"_index":580,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["updates",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["upperbound",{"_index":443,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["upperbound[i",{"_index":451,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["url",{"_index":127,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{}}}],["url2gltf",{"_index":146,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[m.scenegraph",{"_index":152,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[model.scenegraph",{"_index":168,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["usage",{"_index":644,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":1461,"title":{},"body":{"index.html":{}}}],["use",{"_index":641,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usecase",{"_index":1466,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":1463,"title":{},"body":{"index.html":{}}}],["used",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":618,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["util/load",{"_index":67,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["util/process",{"_index":228,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["util/spatial",{"_index":70,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["utilities",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["v2",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["v2.1.0",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1546,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec3",{"_index":426,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...lowerbound.map((n",{"_index":449,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...upperbound.map((n",{"_index":452,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(0.5",{"_index":548,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["version",{"_index":801,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["vhf_kidney_l_low1').then((results",{"_index":354,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["vhf_kidney_r_low",{"_index":362,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["via",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":276,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["viewstate",{"_index":310,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["viewstateprops",{"_index":217,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["visitor",{"_index":1429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["visual",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":41,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["walkthrough",{"_index":1462,"title":{},"body":{"index.html":{}}}],["warming",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1519,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1516,"title":{},"body":{"license.html":{}}}],["web",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1438,"title":{},"body":{"index.html":{}}}],["week",{"_index":1238,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1532,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["wireframe",{"_index":111,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["within",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":827,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["worldmatrix",{"_index":515,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["wrapper",{"_index":244,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x",{"_index":235,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x_dimension",{"_index":581,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_rotation",{"_index":597,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_scaling",{"_index":593,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_translation",{"_index":601,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y",{"_index":236,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["y_dimension",{"_index":582,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_rotation",{"_index":598,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_scaling",{"_index":594,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_translation",{"_index":602,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["yes",{"_index":1410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youtube",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["z_dimension",{"_index":583,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_rotation",{"_index":599,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_scaling",{"_index":595,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_translation",{"_index":603,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["zone.js",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":209,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoombasedopacity",{"_index":363,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomopacity",{"_index":132,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomto(node",{"_index":364,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomtoonload",{"_index":610,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                gltfCache\n                            \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        gltfCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        layerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BodyUILayer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPickingInfo\n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ReturnType<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderLayers\n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     []\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { TextLayer } from '@deck.gl/layers';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { ConeGeometry, CubeGeometry, CylinderGeometry, Geometry, SphereGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    let mesh: Geometry;\n    switch (options.geometry) {\n      case 'sphere':\n        mesh = new SphereGeometry();\n        break;\n      case 'cone':\n        mesh = new ConeGeometry();\n        break;\n      case 'cylinder':\n        mesh = new CylinderGeometry();\n        break;\n      case 'cube':\n      default:\n        mesh = new CubeGeometry();\n        break;\n    }\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: mesh as any,\n        wireframe: false,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9*255],\n        getTransformMatrix: (d) => (d as { transformMatrix: number[] }).transformMatrix,\n      },\n      ...options\n    });\n  }\n}\n\nfunction textLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): TextLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new TextLayer({\n      ...{\n        id,\n        pickable: true,\n        data: data.map(d => ({ ...d, position: new Matrix4(d.transformMatrix).getTranslation() })),\n        getText: (d) => (d as { text: string }).text,\n        getPosition: (d) => (d as { position: [number, number] }).position,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise } = {};\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as { data: SpatialSceneNode[]; zoomOpacity: number; doCollisions: boolean };\n    const geometries: Record = {\n      'sphere': [], 'cone': [], 'cylinder': [], 'cube': [], 'text': [], 'wireframe': [], 'scenegraph': []\n    };\n\n    for (const node of state.data) {\n      const geometry = node.geometry ?? 'cube';\n      if (node.scenegraph) {\n        geometries.scenegraph.push(node);\n      } else if (geometries[geometry] !== undefined) {\n        geometries[geometry].push(node);\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise } = {};\n    for (const m of geometries.scenegraph) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    const layers: unknown[] = [];\n    for (const [geometry, nodes] of Object.entries(geometries)) {\n      if (geometry === 'scenegraph') {\n        for (const model of nodes) {\n          layers.push(\n            new ScenegraphLayer({\n              id: 'models-' + model['@id'],\n              opacity: model.zoomBasedOpacity ? state.zoomOpacity : (model.opacity ?? 1.0),\n              pickable: !model.unpickable,\n              coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n              data: [model],\n              scenegraph: model.scenegraphNode ?\n                loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string]) :\n                model.scenegraph as unknown as URL,\n              // eslint-disable-next-line @typescript-eslint/naming-convention\n              _lighting: model._lighting, // 'pbr' | undefined\n              getTransformMatrix: model.transformMatrix as unknown as number[][],\n              getColor: model.color ?? [0, 255, 0, 0.5*255],\n              parameters: { depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1) }\n            })\n          );\n        }\n      } else if (geometry === 'text') {\n        layers.push(textLayer('text', nodes.filter(n => n.unpickable), { pickable: false }));\n        layers.push(textLayer('textPickable', nodes.filter(n => !n.unpickable), { pickable: true }));\n      } else if (geometry === 'wireframe') {\n        layers.push(meshLayer(geometry, nodes, { wireframe: true, pickable: false, geometry }));\n      } else {\n        layers.push(meshLayer(geometry, nodes.filter(n => n.unpickable), { wireframe: false, pickable: false, geometry }));\n        layers.push(meshLayer(`${geometry}Pickable`, nodes.filter(n => !n.unpickable), { wireframe: false, pickable: true, geometry }));\n      }\n    }\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return layers.filter(l => !!l);\n  }\n\n  getPickingInfo(\n    e: Parameters['getPickingInfo']>[0]\n  ): ReturnType['getPickingInfo']> {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debugSceneNodeProcessing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            legacyLighting\n                                        \n                                \n                                \n                                        \n                                            maxRotationX\n                                        \n                                \n                                \n                                        \n                                            minRotationX\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugSceneNodeProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugSceneNodeProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyLighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyLighting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orbitAxis\n                                        \n                                \n                                \n                                        \n                                            rotationOrbit\n                                        \n                                \n                                \n                                        \n                                            rotationX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationOrbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationOrbit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\n/* eslint-disable  */\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && d.geometry !== 'wireframe')\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickInfo.html":{"url":"interfaces/PickInfo.html","title":"interface - PickInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picked\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedNode.html":{"url":"interfaces/ProcessedNode.html","title":"interface - ProcessedNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SpatialSceneNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            jsonld\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:     AABB\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AABB\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonld:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\n\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n/* eslint-disable  */\nfunction childNames(scene, names: string[] = []): string[] {\n  for (const child of (scene.nodes || scene.children || [])) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string, \n    gltfCache?: { [url: string]: Promise }): Promise {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({scenegraph: gltfUrl, scenegraphNode} as SpatialSceneNode, gltfCache);\n  const nodes: {[node: string]: ProcessedNode} = {};\n  const gltfNodes: ProcessedNode[] = [];\n  for (const scene of gltf.scenes) {\n    worldMatrix = new Matrix4(worldMatrix || Matrix4.IDENTITY);\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        geometry: 'wireframe',\n        node\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter(n => !n.bbox)) {\n    for (const child of childNames(node.node).map(n => nodes[n]).filter(n => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = node.size = ub.clone().vsub(lb);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = node.center = lb.clone().vadd(halfSize);\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY)\n      .translate(center.toArray())\n      .scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntityJsonLd.html":{"url":"interfaces/SpatialEntityJsonLd.html","title":"interface - SpatialEntityJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialEntityJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            ccf_annotations\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            creation_date\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            creator_first_name\n                                        \n                                \n                                \n                                        \n                                            creator_last_name\n                                        \n                                \n                                \n                                        \n                                            creator_middle_name\n                                        \n                                \n                                \n                                        \n                                            creator_orcid\n                                        \n                                \n                                \n                                        \n                                            dimension_units\n                                        \n                                \n                                \n                                        \n                                            extraction_set\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                                \n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                        \n                                            rui_rank\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slice_count\n                                        \n                                \n                                \n                                        \n                                            slice_thickness\n                                        \n                                \n                                \n                                        \n                                            updated_date\n                                        \n                                \n                                \n                                        \n                                            x_dimension\n                                        \n                                \n                                \n                                        \n                                            y_dimension\n                                        \n                                \n                                \n                                        \n                                            z_dimension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccf_annotations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ccf_annotations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_middle_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_middle_name:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_orcid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_orcid:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraction_set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraction_set:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReferenceJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReferenceJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"Left\" | \"Right\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Left\" | \"Right\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_middle_name: string | undefined;\n  creator_last_name: string;\n  creator_orcid: string | undefined;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReferenceJsonLd.html":{"url":"interfaces/SpatialObjectReferenceJsonLd.html","title":"interface - SpatialObjectReferenceJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialObjectReferenceJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            file_format\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_middle_name: string | undefined;\n  creator_last_name: string;\n  creator_orcid: string | undefined;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacementJsonLd.html":{"url":"interfaces/SpatialPlacementJsonLd.html","title":"interface - SpatialPlacementJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialPlacementJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            placement_date\n                                        \n                                \n                                \n                                        \n                                            rotation_units\n                                        \n                                \n                                \n                                        \n                                            scaling_units\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            translation_units\n                                        \n                                \n                                \n                                        \n                                            x_rotation\n                                        \n                                \n                                \n                                        \n                                            x_scaling\n                                        \n                                \n                                \n                                        \n                                            x_translation\n                                        \n                                \n                                \n                                        \n                                            y_rotation\n                                        \n                                \n                                \n                                        \n                                            y_scaling\n                                        \n                                \n                                \n                                        \n                                            y_translation\n                                        \n                                \n                                \n                                        \n                                            z_rotation\n                                        \n                                \n                                \n                                        \n                                            z_scaling\n                                        \n                                \n                                \n                                        \n                                            z_translation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_middle_name: string | undefined;\n  creator_last_name: string;\n  creator_orcid: string | undefined;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _lighting\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            geometry\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraphNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            transformMatrix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomBasedOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToOnLoad\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geometry:         SpatialSceneGeometry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialSceneGeometry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui/src/global-fixes.ts\n            \n            function\n            castToGlobalType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            class\n            BodyUILayer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            meshLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            textLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            class\n            BodyUI\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIProps\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIViewStateProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            PickInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialEntityJsonLd\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialObjectReferenceJsonLd\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialPlacementJsonLd\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n            \n            interface\n            SpatialSceneNode\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            deriveScenegraph\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            registerGLTFLoaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSVText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n            \n            function\n            processAnatomicalStructures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n            \n            function\n            processExtractionSites\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            function\n            processReferenceData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            variable\n            referenceDataConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            interface\n            ProcessedNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            childNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            processSceneNodes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n            \n            function\n            processSpatialEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n            \n            function\n            traverseScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n            \n            function\n            simplifyScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            function\n            doCollisions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : 14.10.1\n        \n            @angular-ru/common : 15.313.0\n        \n            @angular-ru/ngxs : 14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^16.1.5\n        \n            @angular/cdk : ^16.1.5\n        \n            @angular/common : ^16.1.5\n        \n            @angular/compiler : ^16.1.5\n        \n            @angular/core : ^16.1.6\n        \n            @angular/elements : ^16.1.6\n        \n            @angular/forms : ^16.1.5\n        \n            @angular/material : ^16.1.5\n        \n            @angular/platform-browser : ^16.1.5\n        \n            @angular/platform-browser-dynamic : ^16.1.5\n        \n            @angular/router : ^16.1.5\n        \n            @angular/youtube-player : ^16.1.5\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : ~8.8.20\n        \n            @deck.gl/geo-layers : ~8.8.20\n        \n            @deck.gl/layers : ~8.8.20\n        \n            @deck.gl/mesh-layers : ~8.8.20\n        \n            @loaders.gl/core : ~3.2.10\n        \n            @loaders.gl/draco : ~3.2.10\n        \n            @loaders.gl/gltf : ~3.2.10\n        \n            @luma.gl/core : ~8.5.16\n        \n            @math.gl/core : ~3.6.3\n        \n            @math.gl/culling : ~3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/storage-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^16.0.0\n        \n            ngx-slider-v2 : ^16.0.2\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            castToGlobalType   (projects/.../global-fixes.ts)\n                        \n                        \n                            childNames   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            deriveScenegraph   (projects/.../load-gltf.ts)\n                        \n                        \n                            doCollisions   (projects/.../spatial-scene-collider.ts)\n                        \n                        \n                            loadGLTF   (projects/.../load-gltf.ts)\n                        \n                        \n                            loadGLTF2   (projects/.../load-gltf.ts)\n                        \n                        \n                            meshLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            parseCSV   (projects/.../parse-csv.ts)\n                        \n                        \n                            parseCSVText   (projects/.../parse-csv.ts)\n                        \n                        \n                            processAnatomicalStructures   (projects/.../process-anatomical-structures.ts)\n                        \n                        \n                            processExtractionSites   (projects/.../process-extraction-sites.ts)\n                        \n                        \n                            processReferenceData   (projects/.../process-reference-data.ts)\n                        \n                        \n                            processSceneNodes   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            processSpatialEntities   (projects/.../process-spatial-entities.ts)\n                        \n                        \n                            registerGLTFLoaders   (projects/.../load-gltf.ts)\n                        \n                        \n                            simplifyScene   (projects/.../simplify-scene.ts)\n                        \n                        \n                            textLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            traverseScene   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/global-fixes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        castToGlobalType\n                        \n                    \n                \n            \n            \n                \ncastToGlobalType(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        childNames\n                        \n                    \n                \n            \n            \n                \nchildNames(scene, names)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                scene\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                names\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSceneNodes\n                        \n                    \n                \n            \n            \n                \nprocessSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string, gltfCache?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gltfUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                worldMatrix\n                                            \n                                                        Matrix4\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                scenegraphNode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                gltfCache\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/load-gltf.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deriveScenegraph\n                        \n                    \n                \n            \n            \n                \nderiveScenegraph(scenegraphNodeName: string, gltf: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scenegraphNodeName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gltf\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF\n                        \n                    \n                \n            \n            \n                \nloadGLTF(model: SpatialSceneNode, cache?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cache\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF2\n                        \n                    \n                \n            \n            \n                \nloadGLTF2(scenegraphNodeName: string, gltfPromise: Promise)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scenegraphNodeName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gltfPromise\n                                            \n                                                        Promise\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerGLTFLoaders\n                        \n                    \n                \n            \n            \n                \nregisterGLTFLoaders()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doCollisions\n                        \n                    \n                \n            \n            \n                \ndoCollisions(scene)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scene\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/body-ui-layer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meshLayer\n                        \n                    \n                \n            \n            \n                \nmeshLayer(id: string, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SimpleMeshLayer | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textLayer\n                        \n                    \n                \n            \n            \n                \ntextLayer(id: string, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TextLayer | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/parse-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseCSV\n                        \n                    \n                \n            \n            \n                \nparseCSV(sourceUrl: string, firstFieldName?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstFieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCSVText\n                        \n                    \n                \n            \n            \n                \nparseCSVText(csvText: string, firstFieldName?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                csvText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstFieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processAnatomicalStructures\n                        \n                    \n                \n            \n            \n                \nprocessAnatomicalStructures(sourceUrl: string, entities)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entities\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processExtractionSites\n                        \n                    \n                \n            \n            \n                \nprocessExtractionSites(sourceUrl: string, entities)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entities\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processReferenceData\n                        \n                    \n                \n            \n            \n                \nprocessReferenceData(refEntities, config)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                refEntities\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                config\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    referenceDataConfig\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSpatialEntities\n                        \n                    \n                \n            \n            \n                \nprocessSpatialEntities(parent: SpatialEntityJsonLd, gltfOverride?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parent\n                                            \n                                                            SpatialEntityJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gltfOverride\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        simplifyScene\n                        \n                    \n                \n            \n            \n                \nsimplifyScene(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nodes\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        traverseScene\n                        \n                    \n                \n            \n            \n                \ntraverseScene(scene, worldMatrix: Matrix4, visitor: SceneTraversalVisitor)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scene\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                worldMatrix\n                                            \n                                                        Matrix4\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                visitor\n                                            \n                                                            SceneTraversalVisitor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the EUI, RUI, and Organ-Info.\nWebsite Links\n\nHRA Exploration User Interface (EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nHRA Registration User Interface (RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nHRA Organ Info Component (Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nHRA API\nProduction: https://apps.humanatlas.io/hra-api/\nStaging: https://apps.humanatlas.io/hra-api--staging/\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nHRA API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nHRA API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.7.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeClickEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            NodeDragEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            SceneTraversalVisitor   (projects/.../scene-traversal.ts)\n                        \n                        \n                            SpatialSceneGeometry   (projects/.../spatial-scene-node.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/body-ui.ts\n    \n    \n        \n            \n                \n                    \n                    NodeClickEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeDragEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n    \n        \n            \n                \n                    \n                    SceneTraversalVisitor\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n    \n    \n        \n            \n                \n                    \n                    SpatialSceneGeometry\n                \n            \n            \n                \n                        \"sphere\" | \"cube\" | \"wireframe\" | \"text\" | \"cone\" | \"cylinder\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            referenceDataConfig   (projects/.../process-reference-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        referenceDataConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  extractionSitesUrl: 'http://localhost:8080/source_data/asct-b-3d-models-landmarks.csv',\n  extractionSitesConfigUrl: 'http://localhost:8080/source_data/extraction-site-config.csv',\n  anatomicalStructuresUrl: 'http://localhost:8080/source_data/asct-b-3d-models-crosswalk.csv',\n  referenceOrganConfigUrl: 'http://localhost:8080/source_data/reference-organ-config.csv'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
