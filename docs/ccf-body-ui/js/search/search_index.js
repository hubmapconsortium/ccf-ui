var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BodyUILayer.html",[0,1.305,1,1.305]],["body/classes/BodyUILayer.html",[0,0.967,1,1.858,2,1.725,3,0.448,4,0.587,5,0.387,6,0.708,7,0.489,8,1.827,9,1.615,10,1.458,11,1.109,12,3.713,13,0.331,14,0.569,15,4.56,16,2.695,17,2.542,18,3.713,19,3.132,20,3.713,21,4.094,22,4.094,23,0.484,24,0.05,25,1.259,26,2.194,27,1.422,28,3.532,29,2.13,30,1.192,31,2.13,32,2.13,33,2.13,34,2.536,35,1.259,36,0.754,37,1.851,38,3.007,39,2.13,40,2.13,41,1.617,42,2.13,43,1.332,44,2.13,45,1.1,46,2.542,47,1.725,48,3.132,49,3.007,50,1.725,51,1.617,52,3.132,53,3.132,54,3.132,55,3.435,56,3.132,57,1.725,58,0.754,59,0.754,60,1.201,61,0.967,62,0.756,63,1.255,64,1.851,65,1.458,66,1.851,67,2.13,68,1.259,69,2.542,70,2.13,71,2.13,72,1.617,73,1.725,74,2.31,75,2.802,76,3.132,77,2.07,78,1.669,79,3.132,80,1.64,81,3.122,82,4.714,83,1.725,84,2.13,85,3.315,86,2.144,87,1.713,88,4.094,89,2.144,90,2.144,91,2.542,92,0.782,93,4.836,94,1.98,95,2.13,96,2.858,97,2.13,98,1.725,99,2.13,100,2.13,101,2.251,102,3.132,103,3.132,104,1.686,105,1.686,106,1.917,107,2.194,108,1.686,109,1.851,110,1.851,111,2.354,112,3.713,113,3.007,114,1.64,115,1.626,116,2.13,117,3.132,118,1.422,119,1.725,120,2.13,121,3.007,122,2.13,123,2.13,124,2.802,125,2.13,126,0.587,127,3.007,128,1.255,129,2.278,130,2.13,131,2.13,132,1.851,133,2.13,134,2.13,135,2.13,136,0.967,137,2.13,138,2.13,139,1.858,140,2.13,141,2.13,142,2.13,143,2.13,144,2.13,145,2.13,146,2.13,147,2.13,148,2.13,149,3.713,150,2.13,151,2.13,152,2.13,153,2.13,154,1.686,155,2.13,156,1.851,157,2.13,158,1.725,159,1.725,160,1.458,161,3.132,162,2.13,163,3.713,164,1.1,165,2.13,166,2.13,167,2.13,168,2.13,169,2.13,170,1.259,171,1.259,172,0.967,173,2.13,174,1.1,175,2.13,176,2.13,177,2.13,178,2.13,179,1.458,180,2.13,181,4.094,182,4.094,183,2.13,184,3.132,185,2.13,186,2.13,187,2.13,188,2.13,189,2.13,190,2.13,191,2.13,192,2.13,193,0.027,194,0.027]],["title/interfaces/BodyUIProps.html",[195,0.025,196,1.483]],["body/interfaces/BodyUIProps.html",[0,1.208,1,1.479,3,0.686,4,0.473,5,0.312,6,0.266,7,0.349,8,0.688,9,0.942,11,0.608,13,0.413,14,0.484,16,3.002,23,0.663,24,0.05,27,1.802,30,1.186,36,1.299,37,2.857,41,2.646,43,1.28,45,0.886,51,0.886,58,1.406,59,0.608,60,1.247,61,0.779,62,0.643,63,1.683,74,2.055,77,1.479,78,1.153,80,1.814,87,1.815,92,0.836,94,1.208,96,1.925,101,2.168,104,1.802,105,1.802,106,2.049,107,2.346,108,1.208,109,1.014,110,1.014,113,1.014,114,1.066,115,1.704,118,0.779,126,1.093,128,0.688,129,2.156,132,2.939,136,2.327,139,0.779,154,0.779,164,0.886,170,1.014,171,1.014,172,0.779,174,0.886,193,0.028,194,0.023,195,0.028,196,1.373,197,0.361,198,0.886,199,2.874,200,2.511,201,2.511,202,2.511,203,2.511,204,2.717,205,2.717,206,1.894,207,2.511,208,1.814,209,3.098,210,2.229,211,2.229,212,2.229,213,2.229,214,1.821,215,1.821,216,1.821,217,1.821,218,1.175,219,2.675,220,1.014,221,1.175,222,2.746,223,1.014,224,1.175,225,1.175,226,1.821,227,0.886,228,1.175,229,2.337,230,2.229,231,2.511,232,2.511,233,2.261,234,1.299,235,1.175,236,2.229,237,1.014,238,1.821,239,1.014,240,2.717,241,1.014,242,1.821,243,1.175,244,1.175,245,0.886,246,1.014,247,3.536,248,1.175,249,1.175,250,1.175,251,1.175,252,1.175,253,1.175,254,1.175,255,1.175,256,1.175,257,1.175,258,1.175,259,1.175,260,1.175,261,1.175,262,1.175,263,1.175,264,1.175,265,1.175,266,1.175,267,1.175,268,1.175,269,1.175,270,1.175,271,2.717,272,1.175,273,1.821,274,1.175,275,1.175,276,1.014,277,1.821,278,1.014,279,1.175,280,1.175,281,1.175,282,1.821,283,1.175,284,1.175,285,1.175,286,1.175,287,1.175,288,1.175,289,1.175,290,1.175,291,1.175,292,1.175,293,1.175,294,1.175,295,1.175,296,1.175,297,1.175,298,1.175,299,1.821,300,1.175,301,1.175,302,1.175,303,1.175,304,1.175,305,1.175,306,1.175,307,1.175,308,1.175,309,3.098,310,3.098,311,1.175,312,1.572,313,1.175,314,1.175,315,1.572,316,1.821,317,1.175,318,1.175,319,1.175,320,0.886,321,1.175,322,2.229,323,1.373,324,1.175,325,1.175,326,1.175,327,1.821,328,1.175,329,1.175,330,1.175,331,1.175,332,2.229,333,1.175,334,1.175,335,1.821,336,1.175,337,2.229,338,1.175,339,1.175,340,1.894,341,1.572,342,1.373,343,0.942,344,1.175,345,1.175,346,1.175,347,1.175,348,2.229,349,1.175,350,1.175,351,1.175,352,1.175,353,0.886,354,1.175,355,1.175,356,1.175,357,1.175,358,1.175,359,1.175,360,1.572,361,0.779,362,1.175,363,0.886,364,1.175,365,1.175,366,1.175,367,2.717,368,1.175,369,1.175,370,1.175,371,1.175,372,1.175,373,1.175,374,1.175,375,1.175,376,1.821,377,1.175,378,1.175,379,1.821,380,1.821,381,1.821,382,1.175,383,1.175,384,1.175,385,1.175,386,1.175,387,1.175,388,1.175,389,1.821,390,1.175,391,1.175,392,1.175,393,1.175,394,1.175,395,1.175,396,1.175,397,1.175,398,1.175,399,0.779,400,1.175,401,1.175,402,1.175,403,1.175,404,1.175,405,1.175,406,2.229,407,1.175,408,1.175,409,1.175,410,1.175,411,1.175,412,1.175,413,1.175,414,1.175]],["title/interfaces/BodyUIViewStateProps.html",[195,0.025,229,1.483]],["body/interfaces/BodyUIViewStateProps.html",[0,1.235,1,1.506,3,0.698,4,0.487,5,0.321,6,0.274,7,0.355,8,0.708,9,0.963,11,0.963,13,0.422,14,0.495,16,3.02,23,0.611,24,0.05,27,1.826,30,1.156,36,1.319,37,2.878,41,2.66,43,1.291,45,0.912,51,0.912,58,1.424,59,0.626,60,1.259,61,0.802,62,0.657,63,1.703,74,2.075,77,1.506,78,1.175,80,1.831,87,1.825,92,0.573,94,1.235,96,1.96,101,2.193,104,1.826,105,1.826,106,2.077,107,2.377,108,1.235,109,1.044,110,1.044,113,1.044,114,1.09,115,1.7,118,0.802,126,1.108,128,0.708,129,2.173,132,2.958,136,2.173,139,0.802,154,0.802,164,0.912,170,1.044,171,1.044,172,0.802,174,0.912,193,0.028,194,0.023,195,0.028,196,0.912,197,0.372,198,0.912,199,2.908,200,1.21,201,1.21,202,1.21,203,1.21,204,1.862,205,1.862,206,0.912,207,1.21,208,1.831,209,3.128,210,1.21,211,1.21,212,2.27,213,2.27,214,1.862,215,1.862,216,1.862,217,2.27,218,1.21,219,2.7,220,1.044,221,1.21,222,2.77,223,1.044,224,1.21,225,1.21,226,1.862,227,0.912,228,1.21,229,2.42,230,2.908,231,3.03,232,3.03,233,2.285,234,1.319,235,1.21,236,2.27,237,1.044,238,1.862,239,1.044,240,2.754,241,1.044,242,1.862,243,1.21,244,1.21,245,0.912,246,1.044,247,3.554,248,1.21,249,1.21,250,1.21,251,1.21,252,1.21,253,1.21,254,1.21,255,1.21,256,1.21,257,1.21,258,1.21,259,1.21,260,1.21,261,1.21,262,1.21,263,1.21,264,1.21,265,1.21,266,1.21,267,1.21,268,1.21,269,1.21,270,1.21,271,2.754,272,1.21,273,1.862,274,1.21,275,1.21,276,1.044,277,1.862,278,1.044,279,1.21,280,1.21,281,1.21,282,1.862,283,1.21,284,1.21,285,1.21,286,1.21,287,1.21,288,1.21,289,1.21,290,1.21,291,1.21,292,1.21,293,1.21,294,1.21,295,1.21,296,1.21,297,1.21,298,1.21,299,1.862,300,1.21,301,1.21,302,1.21,303,1.21,304,1.21,305,1.21,306,1.21,307,1.21,308,1.21,309,3.128,310,3.128,311,1.21,312,1.608,313,1.21,314,1.21,315,1.608,316,1.862,317,1.21,318,1.21,319,1.21,320,0.912,321,1.21,322,2.27,323,1.404,324,1.21,325,1.21,326,1.21,327,1.862,328,1.21,329,1.21,330,1.21,331,1.21,332,2.27,333,1.21,334,1.21,335,1.862,336,1.21,337,2.27,338,1.21,339,1.21,340,1.923,341,1.608,342,1.404,343,0.963,344,1.21,345,1.21,346,1.21,347,1.21,348,2.27,349,1.21,350,1.21,351,1.21,352,1.21,353,0.912,354,1.21,355,1.21,356,1.21,357,1.21,358,1.21,359,1.21,360,1.608,361,0.802,362,1.21,363,0.912,364,1.21,365,1.21,366,1.21,367,2.754,368,1.21,369,1.21,370,1.21,371,1.21,372,1.21,373,1.21,374,1.21,375,1.21,376,1.862,377,1.21,378,1.21,379,1.862,380,1.862,381,1.862,382,1.21,383,1.21,384,1.21,385,1.21,386,1.21,387,1.21,388,1.21,389,1.862,390,1.21,391,1.21,392,1.21,393,1.21,394,1.21,395,1.21,396,1.21,397,1.21,398,1.21,399,0.802,400,1.21,401,1.21,402,1.21,403,1.21,404,1.21,405,1.21,406,2.27,407,1.21,408,1.21,409,1.21,410,1.21,411,1.21,412,1.21,413,1.21,414,1.21]],["title/interfaces/Collision.html",[195,0.025,415,1.967]],["body/interfaces/Collision.html",[3,0.575,4,0.752,5,0.496,6,0.424,7,0.292,13,0.424,14,0.679,23,0.625,24,0.05,25,2.206,30,1.33,35,3.24,43,1.395,58,0.967,59,0.967,60,1.028,61,1.239,62,1.105,63,1.496,68,2.515,72,1.409,77,1.932,80,1.496,81,2.913,87,1.826,92,1.148,94,1.932,104,1.695,105,1.239,111,1.409,126,0.752,128,1.094,129,2.527,156,1.613,159,3.024,179,3.28,193,0.032,194,0.032,195,0.023,197,0.575,208,1.094,320,1.409,323,1.409,415,2.913,416,1.868,417,1.868,418,4.948,419,1.868,420,2.21,421,3.734,422,2.21,423,3.734,424,2.21,425,3.706,426,2.21,427,1.868,428,1.868,429,1.613,430,2.21,431,2.21,432,2.729,433,2.729,434,4.256,435,2.729,436,3.734,437,2.729,438,2.729,439,2.729,440,3.734,441,3.706,442,2.729,443,3.706,444,2.729,445,2.729,446,3.447,447,3.734,448,3.447,449,3.024,450,3.024,451,3.024,452,3.024,453,3.024,454,3.024,455,4.256,456,2.729,457,2.729,458,2.729,459,2.729,460,2.729,461,2.21,462,2.729,463,2.21,464,2.21,465,3.024,466,2.21,467,2.21,468,2.21,469,2.21,470,2.21,471,2.21,472,2.729,473,2.21,474,4.576,475,3.734,476,2.729,477,2.729,478,2.729,479,2.729,480,2.729,481,2.729,482,2.729,483,2.729,484,2.729,485,2.729,486,2.729,487,2.729,488,2.729,489,2.729,490,2.729,491,4.792,492,3.734,493,3.706,494,3.734,495,3.734,496,2.729,497,2.729,498,2.729,499,2.729,500,2.729,501,2.21]],["title/interfaces/PickInfo.html",[195,0.025,233,1.483]],["body/interfaces/PickInfo.html",[0,1.24,1,1.51,3,0.7,4,0.489,5,0.323,6,0.276,7,0.356,8,0.711,9,0.967,11,0.629,13,0.626,14,0.496,16,3.022,23,0.597,24,0.05,27,1.83,30,1.028,36,1.322,37,2.882,41,2.662,43,1.293,45,0.916,51,0.916,58,1.178,59,0.629,60,1.26,61,0.806,62,0.66,63,1.706,74,2.078,77,1.51,78,1.178,80,1.834,87,1.826,92,0.575,94,1.24,96,1.966,101,2.197,104,1.83,105,1.83,106,2.081,107,2.382,108,1.24,109,1.049,110,1.049,113,1.966,114,1.094,115,1.69,118,0.806,126,1.11,128,0.711,129,2.176,132,2.961,136,2.247,139,0.806,154,0.806,164,0.916,170,1.049,171,1.049,172,0.806,174,0.916,193,0.028,194,0.023,195,0.028,196,0.916,197,0.374,198,0.916,199,2.277,200,1.215,201,1.215,202,1.215,203,1.215,204,1.869,205,1.869,206,0.916,207,1.215,208,1.615,209,2.759,210,1.215,211,1.215,212,2.277,213,2.277,214,1.869,215,1.869,216,1.869,217,1.869,218,1.215,219,2.704,220,1.049,221,1.215,222,2.774,223,1.049,224,1.215,225,1.215,226,2.759,227,0.916,228,1.215,229,2.362,230,2.277,231,2.556,232,2.556,233,2.362,234,1.57,235,2.556,236,2.914,237,2.207,238,2.759,239,1.049,240,2.759,241,1.049,242,1.869,243,1.215,244,1.215,245,0.916,246,1.049,247,3.557,248,1.215,249,1.215,250,1.215,251,1.215,252,1.215,253,1.215,254,1.215,255,1.215,256,1.215,257,1.215,258,1.215,259,1.215,260,1.215,261,1.215,262,1.215,263,1.215,264,1.215,265,1.215,266,1.215,267,1.215,268,1.215,269,1.215,270,1.215,271,2.759,272,1.215,273,1.869,274,1.215,275,1.215,276,1.049,277,1.869,278,1.049,279,1.215,280,1.215,281,1.215,282,1.869,283,1.215,284,1.215,285,1.215,286,1.215,287,1.215,288,1.215,289,1.215,290,1.215,291,1.215,292,1.215,293,1.215,294,1.215,295,1.215,296,1.215,297,1.215,298,1.215,299,1.869,300,1.215,301,1.215,302,1.215,303,1.215,304,1.215,305,1.215,306,1.215,307,1.215,308,1.215,309,3.133,310,3.133,311,1.215,312,1.613,313,1.215,314,1.215,315,1.613,316,1.869,317,1.215,318,1.215,319,1.215,320,0.916,321,1.215,322,2.277,323,1.409,324,1.215,325,1.215,326,1.215,327,1.869,328,1.215,329,1.215,330,1.215,331,1.215,332,2.277,333,1.215,334,1.215,335,1.869,336,1.215,337,2.277,338,1.215,339,1.215,340,1.928,341,1.613,342,1.409,343,0.967,344,1.215,345,1.215,346,1.215,347,1.215,348,2.277,349,1.215,350,1.215,351,1.215,352,1.215,353,0.916,354,1.215,355,1.215,356,1.215,357,1.215,358,1.215,359,1.215,360,1.613,361,0.806,362,1.215,363,0.916,364,1.215,365,1.215,366,1.215,367,2.759,368,1.215,369,1.215,370,1.215,371,1.215,372,1.215,373,1.215,374,1.215,375,1.215,376,1.869,377,1.215,378,1.215,379,1.869,380,1.869,381,1.869,382,1.215,383,1.215,384,1.215,385,1.215,386,1.215,387,1.215,388,1.215,389,1.869,390,1.215,391,1.215,392,1.215,393,1.215,394,1.215,395,1.215,396,1.215,397,1.215,398,1.215,399,0.806,400,1.215,401,1.215,402,1.215,403,1.215,404,1.215,405,1.215,406,2.277,407,1.215,408,1.215,409,1.215,410,1.215,411,1.215,412,1.215,413,1.215,414,1.215]],["title/interfaces/ProcessedNode.html",[195,0.025,502,1.967]],["body/interfaces/ProcessedNode.html",[3,0.585,4,0.766,5,0.506,6,0.432,7,0.298,11,1.339,13,0.432,14,0.688,17,2.589,23,0.629,24,0.05,30,1.251,43,1.329,55,1.904,58,1.522,59,0.985,60,1.27,61,1.263,62,1.114,63,2.179,64,1.644,66,2.235,68,2.235,72,1.952,77,1.717,80,1.115,81,2.942,87,1.803,92,0.796,94,1.717,101,2.381,104,1.717,105,1.263,111,1.436,114,1.115,118,1.717,126,1.042,127,2.252,128,1.516,129,2.525,139,1.263,154,1.717,172,1.263,174,1.436,193,0.032,194,0.032,195,0.024,197,0.585,315,2.235,320,1.436,323,1.436,340,1.952,353,1.436,361,1.951,363,1.436,419,1.904,425,3.906,426,4.122,427,1.904,428,1.904,429,1.644,430,2.252,441,3.063,443,3.063,448,3.735,449,2.252,450,2.252,451,2.252,452,2.252,453,2.252,454,2.252,461,2.252,463,2.252,464,2.252,465,3.063,466,2.252,467,2.252,468,2.252,469,2.252,470,2.252,471,2.252,473,3.063,501,2.252,502,3.636,503,1.644,504,1.904,505,3.906,506,3.735,507,4.824,508,2.252,509,2.942,510,3.782,511,2.781,512,2.781,513,2.781,514,2.781,515,3.48,516,2.781,517,3.782,518,3.782,519,3.782,520,2.252,521,3.782,522,2.781,523,2.781,524,2.781,525,2.781,526,2.781,527,2.252,528,2.781,529,2.781,530,2.781,531,3.782,532,2.781,533,2.781,534,4.298,535,2.781,536,2.781,537,2.781,538,3.782,539,2.781,540,2.781,541,2.781,542,2.781,543,2.781,544,2.781,545,2.781,546,2.781,547,2.781,548,2.781,549,2.781,550,2.781,551,2.781,552,2.781,553,2.781,554,2.781]],["title/interfaces/SpatialEntityJsonLd.html",[195,0.025,555,1.305]],["body/interfaces/SpatialEntityJsonLd.html",[3,0.593,4,1.051,5,0.694,6,0.437,7,0.302,11,1.642,13,0.437,14,0.694,23,0.744,24,0.05,30,1.402,43,0.776,78,1.769,92,1.051,115,1.775,126,1.191,193,0.033,194,0.033,195,0.037,197,0.593,208,1.129,234,1.642,555,1.732,556,1.665,557,1.279,558,1.665,559,3.316,560,3.316,561,3.174,562,3.174,563,3.174,564,3.174,565,3.174,566,3.174,567,3.174,568,3.174,569,3.174,570,2.863,571,2.74,572,2.74,573,3.174,574,2.74,575,2.74,576,3.174,577,3.174,578,3.174,579,3.174,580,3.174,581,3.174,582,2.393,583,2.682,584,2.961,585,2.961,586,2.556,587,2.556,588,1.928,589,1.665,590,1.928,591,1.928,592,1.928,593,1.928,594,1.928,595,1.928,596,1.928,597,1.928,598,1.928,599,1.928,600,1.928,601,1.928,602,1.928,603,1.928]],["title/interfaces/SpatialObjectReferenceJsonLd.html",[195,0.025,582,1.483]],["body/interfaces/SpatialObjectReferenceJsonLd.html",[3,0.719,4,1.193,5,0.938,6,0.53,7,0.366,11,1.77,13,0.53,14,0.787,23,0.723,24,0.049,30,1.4,43,0.941,78,1.533,92,1.109,115,1.762,126,1.309,193,0.037,194,0.037,195,0.041,197,0.719,208,1.369,234,1.21,555,1.551,556,2.019,557,1.551,558,2.019,559,3.53,560,2.964,561,2.339,562,2.339,563,2.339,564,2.339,565,2.339,566,2.339,567,2.339,568,2.339,569,2.339,570,3.047,571,2.019,572,2.019,573,2.339,574,2.019,575,2.019,576,2.339,577,2.339,578,2.339,579,2.339,580,2.339,581,2.339,582,2.454,583,2.719,584,2.339,585,2.339,586,2.019,587,2.019,588,2.339,589,2.019,590,2.339,591,2.339,592,2.339,593,2.339,594,2.339,595,2.339,596,2.339,597,2.339,598,2.339,599,2.339,600,2.339,601,2.339,602,2.339,603,3.421]],["title/interfaces/SpatialPlacementJsonLd.html",[195,0.025,583,1.483]],["body/interfaces/SpatialPlacementJsonLd.html",[3,0.64,4,1.369,5,0.73,6,0.472,7,0.326,11,1.693,13,0.472,14,0.73,23,0.741,24,0.049,30,1.399,36,1.693,43,0.838,78,1.422,92,1.075,115,1.796,126,1.238,193,0.034,194,0.034,195,0.038,197,0.64,208,1.916,234,1.077,555,1.381,556,1.798,557,1.381,558,1.798,559,3.403,560,3.403,561,2.082,562,2.082,563,2.082,564,2.082,565,2.082,566,2.082,567,2.082,568,2.082,569,2.082,570,2.373,571,1.798,572,1.798,573,2.082,574,1.798,575,1.798,576,2.082,577,2.082,578,2.082,579,2.082,580,2.082,581,2.082,582,2.073,583,2.566,584,2.082,585,2.082,586,1.798,587,1.798,588,2.082,589,1.798,590,3.273,591,3.273,592,3.273,593,3.273,594,3.273,595,3.273,596,3.273,597,3.273,598,3.273,599,3.273,600,3.273,601,3.273,602,3.273,603,2.082]],["title/interfaces/SpatialSceneNode.html",[60,0.791,195,0.025]],["body/interfaces/SpatialSceneNode.html",[3,0.663,4,0.868,5,0.573,6,0.489,7,0.338,13,0.489,14,0.747,23,0.743,24,0.049,30,1.39,35,2.865,36,2.036,43,0.868,55,3.318,58,1.717,59,1.116,60,1.132,62,0.761,86,2.157,89,2.157,90,2.157,91,2.157,92,1.02,111,1.627,114,1.943,115,1.762,118,2.201,124,3.442,126,1.132,136,2.445,139,2.201,160,3.318,172,2.201,193,0.035,194,0.035,195,0.027,197,0.663,361,2.201,363,2.502,446,3.926,527,3.926,571,2.865,572,2.865,604,2.157,605,2.157,606,4.848,607,4.848,608,4.848,609,3.926]],["title/changelog.html",[610,1.662,611,1.434,612,1.662]],["body/changelog.html",[3,0.775,5,0.205,7,0.431,9,1.511,14,0.205,23,0.147,24,0.037,26,0.668,28,0.915,36,0.4,62,0.971,74,2.28,75,1.298,83,0.915,87,1.511,92,0.238,98,1.536,106,1.901,108,0.861,114,1.151,115,0.353,121,0.915,160,0.773,164,1.995,179,1.298,193,0.036,194,0.016,195,0.033,197,0.238,206,0.583,245,2.721,276,1.449,278,0.668,312,1.121,342,2.412,343,1.675,360,0.668,399,1.304,419,1.966,493,3.674,509,0.773,557,1.304,570,1.121,574,1.121,575,1.121,586,0.668,587,1.121,589,2.176,611,1.449,612,1.298,613,1.985,614,1.985,615,2.325,616,3.255,617,1.536,618,1.897,619,3.465,620,3.13,621,5.634,622,0.915,623,0.773,624,4.99,625,2.806,626,1.13,627,3.201,628,2.872,629,4.458,630,1.13,631,1.897,632,2.872,633,2.452,634,1.13,635,1.897,636,1.13,637,4.458,638,1.13,639,1.678,640,1.897,641,3.674,642,0.915,643,1.13,644,1.536,645,1.536,646,1.897,647,3.865,648,3.683,649,1.13,650,1.13,651,1.13,652,2.452,653,1.897,654,2.452,655,4.267,656,1.13,657,1.536,658,0.915,659,1.13,660,1.13,661,4.019,662,1.897,663,3.201,664,2.452,665,2.452,666,1.13,667,1.897,668,4.337,669,1.897,670,2.842,671,1.13,672,4.673,673,1.13,674,3.478,675,1.13,676,2.452,677,1.897,678,2.452,679,2.452,680,1.897,681,2.452,682,1.13,683,1.897,684,1.897,685,1.13,686,3.683,687,3.465,688,3.683,689,1.897,690,1.13,691,1.13,692,2.872,693,1.13,694,1.897,695,1.13,696,1.13,697,1.897,698,2.452,699,2.592,700,1.13,701,1.897,702,1.13,703,1.13,704,1.13,705,1.897,706,4.609,707,1.13,708,3.465,709,1.13,710,1.13,711,1.13,712,2.452,713,1.985,714,1.13,715,1.13,716,1.536,717,1.13,718,3.465,719,4.267,720,1.897,721,3.201,722,1.13,723,3.201,724,1.897,725,3.465,726,1.897,727,1.13,728,1.13,729,1.13,730,1.897,731,3.465,732,2.325,733,1.13,734,3.683,735,4.157,736,1.13,737,1.13,738,1.897,739,1.13,740,2.872,741,1.13,742,1.897,743,2.452,744,1.13,745,1.13,746,2.452,747,1.897,748,1.13,749,1.897,750,1.13,751,1.13,752,1.13,753,4.537,754,1.13,755,0.915,756,2.191,757,1.13,758,1.897,759,0.773,760,1.13,761,1.897,762,2.872,763,2.872,764,1.13,765,1.897,766,2.452,767,1.13,768,1.13,769,1.897,770,1.13,771,1.13,772,3.465,773,2.048,774,2.592,775,1.985,776,1.13,777,2.592,778,1.13,779,2.452,780,3.13,781,4.458,782,1.13,783,1.13,784,1.897,785,1.985,786,1.13,787,1.13,788,1.13,789,3.201,790,1.13,791,1.13,792,1.13,793,1.13,794,2.452,795,1.13,796,1.897,797,1.536,798,1.13,799,2.645,800,1.13,801,1.13,802,1.13,803,1.13,804,1.13,805,1.13,806,2.592,807,2.592,808,1.13,809,1.897,810,1.13,811,1.13,812,2.452,813,1.897,814,1.13,815,1.897,816,1.13,817,1.897,818,1.897,819,1.897,820,1.897,821,1.13,822,2.452,823,1.13,824,1.13,825,0.915,826,1.13,827,1.985,828,0.915,829,1.298,830,1.897,831,1.13,832,1.13,833,1.897,834,1.897,835,1.897,836,1.897,837,1.13,838,1.13,839,1.13,840,2.452,841,1.13,842,1.897,843,1.13,844,1.13,845,1.897,846,3.465,847,1.897,848,1.13,849,0.915,850,1.13,851,1.13,852,3.201,853,2.872,854,1.13,855,2.452,856,1.897,857,3.465,858,1.897,859,2.872,860,1.13,861,1.13,862,1.13,863,1.13,864,1.13,865,1.13,866,1.897,867,1.897,868,1.13,869,1.897,870,1.13,871,0.915,872,1.897,873,1.13,874,1.897,875,1.13,876,1.13,877,2.872,878,1.13,879,1.13,880,1.13,881,1.13,882,1.897,883,1.13,884,1.13,885,1.13,886,1.13,887,1.13,888,1.13,889,1.897,890,1.13,891,1.13,892,1.13,893,1.13,894,1.13,895,1.897,896,1.13,897,3.465,898,1.13,899,2.452,900,1.897,901,0.915,902,1.897,903,1.13,904,0.915,905,0.915,906,1.13,907,1.897,908,1.13,909,1.13,910,1.966,911,1.13,912,1.13,913,1.897,914,1.897,915,1.13,916,1.13,917,1.897,918,1.897,919,1.13,920,1.897,921,2.872,922,2.452,923,1.13,924,1.13,925,1.13,926,1.13,927,0.915,928,0.915,929,1.13,930,1.897,931,1.13,932,1.13,933,1.13,934,1.13,935,1.897,936,2.872,937,1.13,938,1.13,939,1.13,940,1.13,941,3.465,942,2.452,943,1.897,944,1.13,945,1.13,946,2.452,947,1.897,948,1.897,949,1.897,950,2.872,951,1.13,952,1.13,953,1.13,954,1.897,955,1.13,956,1.13,957,1.13,958,1.13,959,1.13,960,2.872,961,1.13,962,2.452,963,2.872,964,1.13,965,2.452,966,3.201,967,1.897,968,1.897,969,1.897,970,1.897,971,2.452,972,2.872,973,3.201,974,1.897,975,2.452,976,1.13,977,1.13,978,3.683,979,2.452,980,1.13,981,2.872,982,2.872,983,4.019,984,1.13,985,1.13,986,1.13,987,1.13,988,1.13,989,1.13,990,1.897,991,1.13,992,1.897,993,1.13,994,1.13,995,1.13,996,1.13,997,1.897,998,1.13,999,1.678,1000,1.13,1001,1.897,1002,1.985,1003,1.897,1004,2.452,1005,1.13,1006,1.13,1007,1.13,1008,1.897,1009,1.13,1010,1.13,1011,1.13,1012,1.13,1013,1.13,1014,1.13,1015,1.13,1016,1.897,1017,1.13,1018,1.13,1019,2.872,1020,3.465,1021,1.897,1022,2.452,1023,1.897,1024,2.872,1025,1.13,1026,1.13,1027,1.13,1028,1.13,1029,2.452,1030,1.13,1031,1.13,1032,1.13,1033,1.897,1034,1.897,1035,1.897,1036,1.897,1037,2.452,1038,1.13,1039,1.13,1040,1.13,1041,1.13,1042,1.13,1043,1.13,1044,0.915,1045,1.13,1046,1.13,1047,1.13,1048,1.897,1049,1.13,1050,1.13,1051,1.897,1052,1.13,1053,1.13,1054,1.13,1055,1.13,1056,1.13,1057,1.13,1058,1.13,1059,1.13,1060,1.13,1061,1.13,1062,3.865,1063,1.13,1064,2.452,1065,2.452,1066,2.872,1067,1.897,1068,2.452,1069,1.13,1070,1.897,1071,1.13,1072,1.13,1073,1.897,1074,1.897,1075,1.897,1076,1.13,1077,1.13,1078,1.13,1079,1.13,1080,1.897,1081,1.13,1082,2.452,1083,1.13,1084,1.13,1085,1.13,1086,1.13,1087,0.915,1088,1.13,1089,1.13,1090,1.13,1091,1.13,1092,1.13,1093,1.13,1094,1.13,1095,1.13,1096,1.13,1097,1.13,1098,1.13,1099,3.201,1100,1.13,1101,1.13,1102,1.13,1103,1.13,1104,1.13,1105,1.13,1106,1.13,1107,1.13,1108,1.13,1109,1.13,1110,1.13,1111,1.13,1112,1.13,1113,1.13,1114,1.897,1115,1.13,1116,1.897,1117,1.13,1118,1.897,1119,1.897,1120,2.872,1121,2.872,1122,1.897,1123,1.897,1124,1.13,1125,1.13,1126,1.13,1127,2.452,1128,1.13,1129,0.915,1130,1.13,1131,1.13,1132,1.13,1133,1.13,1134,1.13,1135,1.13,1136,1.897,1137,4.152,1138,2.452,1139,1.13,1140,1.897,1141,1.13,1142,1.13,1143,1.13,1144,1.13,1145,1.13,1146,1.13,1147,1.13,1148,1.13,1149,1.13,1150,1.897,1151,2.982,1152,1.897,1153,1.13,1154,1.13,1155,1.13,1156,1.536,1157,1.13,1158,2.872,1159,1.13,1160,1.897,1161,1.13,1162,1.13,1163,1.966,1164,1.13,1165,1.897,1166,1.13,1167,1.13,1168,1.13,1169,1.897,1170,1.897,1171,1.13,1172,1.13,1173,1.13,1174,1.13,1175,1.897,1176,2.452,1177,1.897,1178,1.13,1179,1.13,1180,1.536,1181,1.13,1182,1.13,1183,1.13,1184,1.13,1185,1.13,1186,1.13,1187,1.13,1188,1.13,1189,1.13,1190,0.915,1191,1.13,1192,1.13,1193,1.897,1194,1.13,1195,1.13,1196,1.13,1197,1.13,1198,1.13,1199,1.13,1200,1.13,1201,1.897,1202,1.13,1203,0.915,1204,1.13,1205,1.13,1206,0.915,1207,1.13,1208,1.13,1209,1.13,1210,1.897,1211,1.13,1212,1.13,1213,1.13,1214,1.13,1215,1.13,1216,1.13,1217,1.13,1218,1.13,1219,1.13,1220,1.13,1221,1.13,1222,1.897,1223,1.13,1224,1.13,1225,1.13,1226,1.13,1227,1.897,1228,0.915,1229,0.915,1230,1.13,1231,1.13,1232,1.13,1233,1.13,1234,1.13,1235,1.13,1236,1.13]],["title/coverage.html",[1163,2.647]],["body/coverage.html",[0,1.801,1,1.356,5,0.543,6,0.888,7,0.613,8,2.077,9,1.578,10,3.05,23,0.389,24,0.049,46,2.044,60,0.823,62,1.227,64,1.765,65,2.044,66,1.765,69,2.044,72,2.893,80,2.29,87,1.058,193,0.034,194,0.034,195,0.046,196,1.542,198,2.451,227,1.542,229,1.542,233,1.542,246,1.765,343,1.405,399,1.356,415,2.044,416,2.716,417,2.716,429,1.765,502,2.044,503,3.111,504,3.05,555,1.356,556,2.633,557,2.155,558,2.633,582,1.542,583,1.542,604,2.044,605,2.044,773,1.765,829,2.044,999,2.044,1163,2.044,1237,2.987,1238,2.987,1239,2.419,1240,2.419,1241,2.419,1242,5.619,1243,4.455,1244,2.419,1245,2.987,1246,2.987,1247,2.987,1248,2.987,1249,2.987,1250,2.987,1251,2.987,1252,3.844,1253,3.844,1254,2.419,1255,3.213,1256,3.213,1257,2.419,1258,2.419,1259,2.419,1260,2.419,1261,2.419,1262,2.419,1263,2.716,1264,2.419,1265,2.987,1266,2.044,1267,2.419,1268,2.419,1269,2.419,1270,2.044,1271,2.044,1272,2.419,1273,2.419,1274,2.419,1275,2.987,1276,2.987,1277,2.987]],["title/dependencies.html",[759,1.662,910,2.355]],["body/dependencies.html",[5,0.569,7,0.335,24,0.05,25,1.849,45,1.615,47,2.534,50,2.534,51,2.112,57,2.534,59,1.108,63,1.254,156,1.849,193,0.035,194,0.035,219,1.849,220,2.417,223,1.849,234,1.108,420,2.534,422,2.534,424,2.534,427,2.142,428,2.142,506,2.534,623,2.142,657,2.534,658,2.534,756,3.309,777,3.313,904,2.534,905,2.534,910,2.142,928,3.313,1002,2.534,1156,3.313,1278,3.129,1279,3.129,1280,3.129,1281,3.129,1282,3.129,1283,3.129,1284,3.129,1285,4.091,1286,3.129,1287,3.129,1288,5.426,1289,3.129,1290,3.129,1291,3.129,1292,3.129,1293,4.091,1294,3.129,1295,3.129,1296,3.129,1297,4.091,1298,3.129,1299,3.129,1300,3.129,1301,3.129,1302,3.129,1303,3.129,1304,3.129,1305,4.835,1306,3.129,1307,4.558,1308,3.129,1309,3.129,1310,3.129,1311,3.129,1312,3.129,1313,3.129,1314,4.091,1315,3.129,1316,4.091,1317,4.558,1318,3.129,1319,3.129,1320,3.129,1321,3.129,1322,3.129,1323,3.129,1324,3.129,1325,4.091,1326,3.129,1327,4.091,1328,3.129,1329,3.129,1330,3.129,1331,3.129,1332,3.129,1333,3.129,1334,3.129,1335,3.129,1336,3.129,1337,3.129,1338,3.129,1339,3.129,1340,3.129,1341,2.534,1342,3.129,1343,3.129,1344,3.129,1345,3.129,1346,3.129,1347,3.129,1348,4.091,1349,3.129,1350,3.129,1351,3.129,1352,3.129,1353,3.129,1354,3.129,1355,3.129,1356,3.129,1357,3.129,1358,3.129,1359,3.129,1360,3.129,1361,3.129,1362,3.129,1363,3.129,1364,3.129,1365,3.129,1366,4.558,1367,3.129,1368,3.129,1369,3.129,1370,3.129,1371,3.129,1372,3.129,1373,3.129,1374,3.129,1375,3.129,1376,3.129,1377,3.129,1378,3.129,1379,3.129,1380,3.129,1381,3.129,1382,4.091,1383,3.129,1384,3.129,1385,3.129,1386,3.129,1387,3.129,1388,3.129,1389,3.129,1390,3.129,1391,3.129,1392,3.129,1393,3.129,1394,3.129,1395,3.129,1396,3.129]],["title/miscellaneous/functions.html",[1397,1.102,1398,2.787]],["body/miscellaneous/functions.html",[6,0.833,7,0.575,8,1.074,9,1.493,10,2.885,13,0.416,17,2.524,23,0.7,24,0.049,26,2.179,27,1.914,30,1.366,34,4.468,35,3.26,36,1.954,38,4.468,41,1.383,46,2.885,49,2.17,58,1.608,60,1.015,62,1.24,64,2.179,65,2.524,66,2.491,68,2.179,69,2.524,73,2.17,74,2.061,75,3.108,78,1.306,92,0.776,119,2.17,128,2.167,136,1.216,154,1.216,156,1.583,193,0.032,194,0.032,206,1.383,227,1.903,340,1.383,343,1.306,353,1.383,361,1.674,416,1.834,417,2.524,429,2.179,431,2.17,503,2.813,504,2.885,508,2.17,509,2.524,515,3.677,520,2.17,555,1.674,557,1.674,623,2.524,829,2.524,871,2.986,999,2.524,1239,2.17,1240,2.986,1241,2.986,1244,2.986,1252,2.17,1253,3.855,1254,2.986,1255,2.17,1256,3.413,1257,2.986,1258,2.986,1259,2.986,1260,2.986,1261,2.986,1262,2.986,1263,2.524,1264,2.986,1266,1.834,1267,2.986,1268,2.986,1269,2.986,1270,1.834,1271,2.524,1272,2.17,1273,2.986,1274,2.986,1397,1.216,1398,2.17,1399,2.679,1400,3.984,1401,4.54,1402,2.17,1403,2.986,1404,3.687,1405,2.679,1406,2.17,1407,2.679,1408,5.041,1409,2.679,1410,3.687,1411,2.679,1412,2.679,1413,3.687,1414,2.679,1415,4.54,1416,4.215,1417,2.679,1418,2.679,1419,2.679,1420,4.54,1421,2.679,1422,2.679,1423,2.679,1424,2.679,1425,3.687,1426,2.679,1427,3.687,1428,2.986]],["title/index.html",[13,0.377,610,1.662,611,1.434]],["body/index.html",[3,1.079,9,1.187,24,0.037,85,3.464,108,1.522,193,0.037,194,0.037,195,0.037,197,0.706,237,2.528,245,2.966,341,2.784,343,1.515,505,2.714,612,2.294,613,3.464,614,3.464,615,3.815,616,3.815,620,2.714,622,4.018,625,3.464,639,2.928,641,4.445,642,3.464,644,3.464,645,4.018,668,3.464,670,3.397,674,3.225,699,2.714,713,3.464,716,3.464,732,2.714,735,3.815,755,2.714,756,2.294,773,1.981,774,4.151,775,4.151,780,3.464,785,2.714,797,3.464,799,2.294,807,2.714,827,2.714,828,3.464,901,3.464,927,2.714,1087,2.714,1180,2.714,1190,2.714,1203,2.714,1228,2.714,1429,4.277,1430,4.277,1431,3.352,1432,3.352,1433,3.352,1434,3.352,1435,3.464,1436,3.352,1437,3.352,1438,3.352,1439,4.277,1440,4.277,1441,4.277,1442,4.711,1443,3.352,1444,3.352,1445,4.711,1446,3.352,1447,3.352,1448,4.277,1449,3.352,1450,3.352,1451,3.352,1452,4.277,1453,3.352,1454,3.352,1455,3.352,1456,3.352,1457,3.352,1458,4.277,1459,3.352,1460,3.352,1461,4.277,1462,3.352,1463,4.277,1464,4.277,1465,3.352,1466,3.352,1467,3.352,1468,3.352,1469,3.352,1470,3.352,1471,3.352,1472,3.352,1473,3.352,1474,3.352,1475,3.352,1476,3.352,1477,3.352,1478,3.352]],["title/license.html",[610,1.662,611,1.434,1479,1.966]],["body/license.html",[24,0.04,193,0.04,194,0.04,222,2.293,639,3.207,670,2.657,773,2.293,806,3.794,825,4.075,849,3.143,1044,3.794,1129,3.143,1151,3.143,1206,3.143,1229,3.143,1341,3.143,1435,4.522,1479,3.143,1480,3.881,1481,5.032,1482,3.881,1483,3.881,1484,4.685,1485,3.881,1486,3.881,1487,3.881,1488,3.881,1489,3.881,1490,3.881,1491,4.685,1492,3.881,1493,3.881,1494,3.881,1495,3.881,1496,3.881,1497,3.881,1498,3.881,1499,3.881,1500,3.881,1501,3.881,1502,3.881,1503,3.881,1504,4.685,1505,3.881,1506,3.881,1507,3.881,1508,3.881,1509,3.881,1510,4.685,1511,3.881,1512,3.881,1513,3.881,1514,3.881,1515,3.881,1516,3.881,1517,3.881,1518,3.881,1519,3.881,1520,3.881,1521,3.881,1522,3.881,1523,3.881,1524,3.881,1525,3.881,1526,3.881,1527,3.881,1528,3.881,1529,3.881,1530,3.881,1531,3.881,1532,3.881,1533,3.881,1534,3.881,1535,3.881,1536,3.881,1537,3.881,1538,3.881]],["title/modules.html",[1539,3.131]],["body/modules.html",[24,0.044,193,0.044,194,0.044,1539,3.636]],["title/overview.html",[1540,3.131]],["body/overview.html",[2,3.612,24,0.044,193,0.044,194,0.044,197,0.939,399,2.025,1540,3.612,1541,4.46]],["title/properties.html",[14,0.626,759,1.662]],["body/properties.html",[14,0.812,24,0.046,193,0.044,194,0.044,617,3.618,799,3.058]],["title/miscellaneous/typealiases.html",[1397,1.102,1542,3.441]],["body/miscellaneous/typealiases.html",[6,0.803,7,0.554,8,1.661,13,0.643,23,0.675,24,0.048,25,2.879,62,1.177,72,2.139,86,2.837,89,2.837,90,2.837,91,2.837,111,2.139,124,2.837,193,0.042,194,0.042,198,2.671,239,2.879,241,2.879,604,2.837,605,3.334,609,3.945,1270,2.837,1271,3.334,1397,1.881,1402,3.356,1403,3.945,1406,3.356,1428,3.945,1543,4.144]],["title/miscellaneous/variables.html",[1397,1.102,1544,2.787]],["body/miscellaneous/variables.html",[6,0.653,7,0.45,13,0.653,23,0.548,24,0.047,26,2.484,27,1.908,158,3.978,193,0.042,194,0.042,234,1.488,342,2.536,343,1.739,503,2.484,674,2.877,1263,3.362,1266,3.362,1397,1.908,1400,3.404,1544,3.404,1545,4.204,1546,4.912,1547,4.912,1548,4.204,1549,4.204,1550,4.204,1551,4.204,1552,4.912,1553,4.204,1554,4.204,1555,4.204,1556,4.204]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["0.05",{"_index":335,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["0.1.0",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["0.13.1",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1222,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":315,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["0.5*255",{"_index":177,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.5.0",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1180,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.8",{"_index":133,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.9*255",{"_index":116,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0/1",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":179,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"changelog.html":{}}}],["1.0",{"_index":164,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["1.14.10",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1002,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["1.6875389974302382e",{"_index":351,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["1.7.0",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["1/37",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["10.0",{"_index":306,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10.0.0",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":281,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10x",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["11.5",{"_index":369,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["12",{"_index":620,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["13",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":99,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["14",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":312,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["15.313.0",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["17,0,0",{"_index":350,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17,0.076,0,0.49,0.034,0.11,1",{"_index":352,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2",{"_index":399,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.0",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["2.6.1",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":327,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2019",{"_index":1151,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":100,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["24",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":101,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["26",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":777,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1458,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":617,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3.8.1",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":98,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["31",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":342,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1440,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["4th",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["5th",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["6.11.2",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["8.9",{"_index":398,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["85",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1541,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["9.5",{"_index":318,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["90",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["_dragevent(info",{"_index":412,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_lighting",{"_index":172,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["_onclick(info",{"_index":383,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondrag(info",{"_index":408,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragend(info",{"_index":410,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragstart(info",{"_index":405,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onhover(e",{"_index":375,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onviewstatechange(event",{"_index":391,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["aabb",{"_index":425,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["ability",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1206,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1531,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1543,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1444,"title":{},"body":{"index.html":{}}}],["ambientlight",{"_index":212,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["analytics",{"_index":905,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":999,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomicalstructuresurl",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1502,"title":{},"body":{"license.html":{}}}],["angular",{"_index":756,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":641,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["appropriate",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1535,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":849,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":320,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["atlas",{"_index":614,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempts",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1524,"title":{},"body":{"license.html":{}}}],["autohighlight",{"_index":95,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["automatic",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":323,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["award",{"_index":1477,"title":{},"body":{"index.html":{}}}],["b",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1203,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":901,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bbox",{"_index":448,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["before",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":221,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["behaviorsubject([0",{"_index":252,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["being",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":780,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":219,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["block",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":7,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":246,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer",{"_index":1,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer.gltfcache",{"_index":153,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["bodyuiprops",{"_index":196,"title":{"interfaces/BodyUIProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuiviewstateprops",{"_index":229,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["boolean",{"_index":136,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":88,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["breaking",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":1156,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1436,"title":{},"body":{"index.html":{}}}],["builds",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1482,"title":{},"body":{"license.html":{}}}],["cache",{"_index":623,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["cacheable",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":199,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cancelregistration",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":427,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["canvas",{"_index":200,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["card",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":85,"title":{},"body":{"classes/BodyUILayer.html":{},"index.html":{}}}],["cases",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["casttoglobaltype",{"_index":1241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["casttoglobaltype(value",{"_index":1407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ccf",{"_index":245,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":561,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["cell",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":505,"title":{},"body":{"interfaces/ProcessedNode.html":{},"index.html":{}}}],["change",{"_index":927,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":612,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1488,"title":{},"body":{"license.html":{}}}],["child",{"_index":510,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["child.bbox.clone",{"_index":535,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["childnames(child",{"_index":514,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(node.node).map(n",{"_index":532,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(scene",{"_index":508,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1527,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BodyUILayer.html":{},"overview.html":{}}}],["clean",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":622,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["collider",{"_index":71,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["collider.ts",{"_index":417,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collision",{"_index":415,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"coverage.html":{}}}],["collisioning",{"_index":433,"title":{},"body":{"interfaces/Collision.html":{}}}],["collisions",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":114,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["colorizing",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":562,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["common",{"_index":828,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":732,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["compositelayer",{"_index":12,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["comunica/query",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1509,"title":{},"body":{"license.html":{}}}],["cone",{"_index":89,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["conegeometry",{"_index":52,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["config",{"_index":871,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["config.csv",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1537,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":486,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('data",{"_index":356,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('results",{"_index":355,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('starting",{"_index":432,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":500,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":1483,"title":{},"body":{"license.html":{}}}],["const",{"_index":129,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["constructor(private",{"_index":272,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["container",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1434,"title":{},"body":{"index.html":{}}}],["context",{"_index":560,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["contract",{"_index":1532,"title":{},"body":{"license.html":{}}}],["control",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":282,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convenience",{"_index":243,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convention",{"_index":171,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["coordinate",{"_index":237,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["coordinate_system",{"_index":44,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinate_system.cartesian",{"_index":103,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinatesystem",{"_index":102,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["copies",{"_index":1504,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1491,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1481,"title":{},"body":{"license.html":{}}}],["cord",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1163,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["creation_date",{"_index":563,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator",{"_index":564,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_first_name",{"_index":565,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_last_name",{"_index":566,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["credits",{"_index":1468,"title":{},"body":{"index.html":{}}}],["crosswalk.csv",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["csv.ts",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csvreport",{"_index":490,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":492,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvtext",{"_index":1418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlclick",{"_index":242,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ctrlkey",{"_index":385,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cube",{"_index":91,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cubegeometry",{"_index":53,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cuboid",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["currentstate",{"_index":395,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.data",{"_index":401,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.zoomopacity",{"_index":400,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cursor",{"_index":270,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cyberinfrastructure",{"_index":1470,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["cylinder",{"_index":90,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cylindergeometry",{"_index":54,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d",{"_index":113,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["d.geometry",{"_index":437,"title":{},"body":{"interfaces/Collision.html":{}}}],["d.scenegraph",{"_index":436,"title":{},"body":{"interfaces/Collision.html":{}}}],["damages",{"_index":1528,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":74,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.concat(object.values(results",{"_index":358,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.length",{"_index":79,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.map(d",{"_index":120,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.push",{"_index":359,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.ts",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data?.length",{"_index":331,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["database",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["datasets",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1493,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1538,"title":{},"body":{"license.html":{}}}],["debugscenenodeprocessing",{"_index":201,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["debugscenenodeprocessing(data",{"_index":339,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["december",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["deck",{"_index":213,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck(props",{"_index":308,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/core",{"_index":45,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":218,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/geo",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":47,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deck.gl/mesh",{"_index":50,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deckprops",{"_index":273,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.camera",{"_index":277,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.interactive",{"_index":283,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.legacylighting",{"_index":303,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.maxrotationx",{"_index":313,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.minrotationx",{"_index":311,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.rotation",{"_index":316,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.target",{"_index":314,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.zoom",{"_index":317,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["decompress",{"_index":458,"title":{},"body":{"interfaces/Collision.html":{}}}],["decorator",{"_index":220,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deeply",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["delete",{"_index":537,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["demo",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":910,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["depthmask",{"_index":178,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["derivescenegraph",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["derivescenegraph(scenegraphnodename",{"_index":1409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["descrepancies",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["details",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1469,"title":{},"body":{"index.html":{}}}],["developments",{"_index":1190,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["didzoom",{"_index":332,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["different",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["dimension_units",{"_index":567,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["direct",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":105,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["display",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1500,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":69,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["docollisions(scene",{"_index":431,"title":{},"body":{"interfaces/Collision.html":{},"miscellaneous/functions.html":{}}}],["docollisions(state.data",{"_index":187,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["docs",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":773,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["dracoloader",{"_index":421,"title":{},"body":{"interfaces/Collision.html":{}}}],["during",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":37,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.info",{"_index":192,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["e.isdragging",{"_index":300,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object",{"_index":379,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object?.['@id",{"_index":378,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.picked",{"_index":376,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e?.srcevent?.ctrlkey",{"_index":390,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["easier",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":928,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":501,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["entities",{"_index":1420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityid",{"_index":446,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["es",{"_index":428,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["eslint",{"_index":104,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["eslint/naming",{"_index":170,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["eslint/no",{"_index":109,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["etc",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":735,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1523,"title":{},"body":{"license.html":{}}}],["event.interactionstate?.iszooming",{"_index":394,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate",{"_index":402,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.rotationx",{"_index":404,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.zoom",{"_index":397,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["expanded",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":110,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["exploration",{"_index":1438,"title":{},"body":{"index.html":{}}}],["export",{"_index":126,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["express",{"_index":1341,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["external",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":829,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extraction_set",{"_index":568,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["extractionsitesconfigurl",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractionsitesurl",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":96,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["favor",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":585,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["fetch",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_format",{"_index":603,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["files",{"_index":1492,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["filter(d",{"_index":435,"title":{},"body":{"interfaces/Collision.html":{}}}],["filters",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":328,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["finishing",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["firstfieldname",{"_index":1415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fit",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1519,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["fixes.ts",{"_index":1240,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixes/performance",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["flipy",{"_index":279,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["fly",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1508,"title":{},"body":{"license.html":{}}}],["form",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1429,"title":{},"body":{"index.html":{}}}],["free",{"_index":1487,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":72,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1398,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1475,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1507,"title":{},"body":{"license.html":{}}}],["further",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["geometries",{"_index":137,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph",{"_index":148,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph.push(node",{"_index":143,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry",{"_index":144,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry].push(node",{"_index":145,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometry",{"_index":55,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcolor",{"_index":112,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getcursor",{"_index":297,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["getpickinginfo",{"_index":20,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":32,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getposition",{"_index":125,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gettext",{"_index":123,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getting",{"_index":610,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettransformmatrix",{"_index":117,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["github",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["gltf",{"_index":68,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltf.scenes",{"_index":461,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["gltf.ts",{"_index":1253,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gltf:${processednode['@id",{"_index":524,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfcache",{"_index":17,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltfloader",{"_index":423,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltfnode",{"_index":525,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes",{"_index":517,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes.push",{"_index":523,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfoverride",{"_index":1425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfpromise",{"_index":1413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfscene",{"_index":460,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltftransform",{"_index":348,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["gltfurl",{"_index":340,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["good",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":904,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["grab",{"_index":302,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["grabbing",{"_index":301,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["granted",{"_index":1486,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":496,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":499,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":498,"title":{},"body":{"interfaces/Collision.html":{}}}],["halfsize",{"_index":546,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["hand",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["hash",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["helmet",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1485,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["highlightcolor",{"_index":97,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["highlighted",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":491,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":497,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":495,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":494,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":418,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":481,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":478,"title":{},"body":{"interfaces/Collision.html":{}}}],["holders",{"_index":1525,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":615,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":210,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["htmlelement",{"_index":211,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["http://localhost:8080/source_data/asct",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/extraction",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/reference",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":1452,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":1441,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1445,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":341,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":346,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["https://humanatlas.io",{"_index":1466,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":1463,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1447,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1443,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":670,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":613,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":92,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1516,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["improve",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1511,"title":{},"body":{"license.html":{}}}],["includes",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":806,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1473,"title":{},"body":{"index.html":{}}}],["individual",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{}}}],["info.object",{"_index":389,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.object?.['@id",{"_index":387,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.picked",{"_index":386,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info?.object?.['@id",{"_index":413,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["information",{"_index":716,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":321,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["initializestate",{"_index":21,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["instead",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":305,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interact",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":392,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interactive",{"_index":202,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interest",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":195,"title":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":197,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["isdragging",{"_index":298,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["issue",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":393,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["it's",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":1464,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":645,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":506,"title":{},"body":{"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["jsonld.ts",{"_index":558,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["jsonld/jsonld",{"_index":588,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["jsonldobj",{"_index":559,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["july",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":76,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["keyboard",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1515,"title":{},"body":{"license.html":{}}}],["known",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":189,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["label",{"_index":569,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["labs/dispatch",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["landmarks.csv",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["larger",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["lasthovered",{"_index":271,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["latest",{"_index":699,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layer",{"_index":226,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["layer.ts",{"_index":10,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["layer.ts:143",{"_index":33,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:71",{"_index":31,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:72",{"_index":29,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:74",{"_index":40,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:80",{"_index":42,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layername",{"_index":18,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers",{"_index":51,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["layers.filter(l",{"_index":188,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push",{"_index":157,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(`${geometry}pickable",{"_index":185,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(geometry",{"_index":184,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('text",{"_index":180,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('textpickable",{"_index":183,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["lb",{"_index":540,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["lb.clone().vadd(halfsize",{"_index":550,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ld",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":586,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["left/right",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["legacylighting",{"_index":203,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["level",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1529,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1526,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":755,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["library/vh_female/united/vhf_united_color.glb",{"_index":345,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["library/vh_male/united/vhm_united_color.glb",{"_index":344,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["license",{"_index":1479,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["lightingeffect",{"_index":214,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["limitation",{"_index":1495,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1129,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":107,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["link",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":785,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":25,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":419,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{}}}],["load(model.scenegraph",{"_index":457,"title":{},"body":{"interfaces/Collision.html":{}}}],["loaded",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":420,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":422,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":424,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loadgltf",{"_index":64,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf(model",{"_index":1411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadgltf({scenegraph",{"_index":516,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["loadgltf2",{"_index":65,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf2(model.scenegraphnode",{"_index":167,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["loadgltf2(scenegraphnodename",{"_index":1412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loading",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1467,"title":{},"body":{"index.html":{}}}],["logging",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":324,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["lowerbound",{"_index":441,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lowerbound[i",{"_index":454,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lru",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":57,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["m",{"_index":147,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraph",{"_index":149,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraphnode",{"_index":150,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["made",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":584,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["managers",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["map(model",{"_index":438,"title":{},"body":{"interfaces/Collision.html":{}}}],["march",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":439,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint",{"_index":442,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":444,"title":{},"body":{"interfaces/Collision.html":{}}}],["match",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":194,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":59,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":488,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(n",{"_index":453,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["math.min(math.max(1",{"_index":396,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["math.min(n",{"_index":450,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["matrix",{"_index":365,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix.gettranslation",{"_index":368,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4",{"_index":58,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e",{"_index":349,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(d.transformmatrix).gettranslation",{"_index":122,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["matrix4(matrix4.identity",{"_index":552,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(model.transformmatrix",{"_index":440,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(modelmatrix",{"_index":522,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":366,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(worldmatrix",{"_index":518,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4.identity",{"_index":519,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["maxhits",{"_index":487,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":204,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["mc",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1518,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1498,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":82,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meshlayer(id",{"_index":73,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["minor",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":205,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["miscellaneous",{"_index":1397,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1480,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":156,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["model._lighting",{"_index":173,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.color",{"_index":176,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.entityid",{"_index":447,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.opacity",{"_index":163,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraph",{"_index":169,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraphnode",{"_index":166,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.tooltip",{"_index":445,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":175,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.unpickable",{"_index":165,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.zoombasedopacity",{"_index":161,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model['@id",{"_index":159,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["modelmatrix",{"_index":463,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":471,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":470,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["models",{"_index":158,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1497,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1539,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1431,"title":{},"body":{"index.html":{}}}],["more",{"_index":625,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouseevent",{"_index":240,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["moved",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1432,"title":{},"body":{"index.html":{}}}],["n.bbox",{"_index":531,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["n.unpickable",{"_index":182,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["n3",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":509,"title":{},"body":{"interfaces/ProcessedNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names.push(child.name",{"_index":513,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["navigation",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["near",{"_index":280,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["need",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1471,"title":{},"body":{"index.html":{}}}],["new",{"_index":87,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":106,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["ngx",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1476,"title":{},"body":{"index.html":{}}}],["node",{"_index":63,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["node.bbox",{"_index":534,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.extend(child.bbox",{"_index":536,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.lowerbound",{"_index":541,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.upperbound",{"_index":543,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.center",{"_index":549,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.geometry",{"_index":141,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.id",{"_index":521,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.mesh",{"_index":464,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives",{"_index":465,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives.length",{"_index":466,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.name",{"_index":473,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.scenegraph",{"_index":142,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.size",{"_index":544,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.transformmatrix",{"_index":551,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.ts",{"_index":605,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["node.zoomtoonload",{"_index":333,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclick",{"_index":256,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclickevent",{"_index":241,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodeclicksubject",{"_index":248,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedrag",{"_index":266,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragend",{"_index":268,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragendsubject",{"_index":255,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragevent",{"_index":239,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodedragstart",{"_index":264,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragstartsubject",{"_index":253,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragsubject",{"_index":254,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstart",{"_index":258,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstartsubject",{"_index":249,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstop",{"_index":260,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstopsubject",{"_index":250,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodes",{"_index":154,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["nodes.filter(n",{"_index":181,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["nodes.ts",{"_index":504,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodes[n]).filter(n",{"_index":533,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[node['@id",{"_index":538,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[processednode['@id",{"_index":529,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["noninfringement",{"_index":1522,"title":{},"body":{"license.html":{}}}],["note",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":1459,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1044,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":115,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["numeric",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":234,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["object.entries(geometries",{"_index":155,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.prototype.hasownproperty.call(url2gltf",{"_index":151,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.values(nodes",{"_index":539,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(nodes).filter(n",{"_index":530,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(results",{"_index":357,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["obtaining",{"_index":1490,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1446,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":287,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondrag",{"_index":293,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragend",{"_index":295,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragstart",{"_index":291,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["one",{"_index":1087,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["onhover",{"_index":285,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["online",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1225,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["ontology/objects/vhf_united_v01_060420.glb",{"_index":347,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["onviewstatechange",{"_index":289,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["opacities",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":160,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["openapi",{"_index":797,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1455,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1457,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1456,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":75,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options.geometry",{"_index":84,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["orbitaxis",{"_index":230,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["orbitview",{"_index":215,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["organ",{"_index":674,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["organs/anatomical",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["orthographic",{"_index":278,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["orthographicview",{"_index":216,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ot2od026671",{"_index":1478,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1534,"title":{},"body":{"license.html":{}}}],["out",{"_index":1536,"title":{},"body":{"license.html":{}}}],["over",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1540,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":759,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["parameters['getpickinginfo']>[0",{"_index":190,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["parent",{"_index":206,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["parsecsv",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsv(sourceurl",{"_index":1414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsecsvtext",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsvtext(csvtext",{"_index":1417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":274,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["particular",{"_index":1520,"title":{},"body":{"license.html":{}}}],["partly",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["pbr",{"_index":174,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["performance",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1484,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1505,"title":{},"body":{"license.html":{}}}],["person",{"_index":1489,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1506,"title":{},"body":{"license.html":{}}}],["pick",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["pickable",{"_index":93,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["picked",{"_index":238,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["pickinfo",{"_index":233,"title":{"interfaces/PickInfo.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["placeholder",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":570,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["placement_date",{"_index":590,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["placenta",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":377,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["popup",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":807,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1513,"title":{},"body":{"license.html":{}}}],["position",{"_index":121,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["possible",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["postprocess",{"_index":459,"title":{},"body":{"interfaces/Collision.html":{}}}],["preferences",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["primitive",{"_index":467,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position",{"_index":468,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position.min",{"_index":469,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["priority",{"_index":606,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["private",{"_index":247,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["process",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["processanatomicalstructures",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processanatomicalstructures(sourceurl",{"_index":1419,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processed",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["processednode",{"_index":502,"title":{"interfaces/ProcessedNode.html":{}},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["processednode.bbox",{"_index":528,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processednode['@id",{"_index":526,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processextractionsites",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processextractionsites(sourceurl",{"_index":1421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processing",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["processreferencedata",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processreferencedata(refentities",{"_index":1422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processscenenodes",{"_index":227,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processscenenodes(gltfurl",{"_index":353,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities(parent",{"_index":1424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":774,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1433,"title":{},"body":{"index.html":{}}}],["projects/.../body",{"_index":1403,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../global",{"_index":1399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../load",{"_index":1401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../parse",{"_index":1404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../process",{"_index":1400,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene",{"_index":1406,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../simplify",{"_index":1405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../spatial",{"_index":1402,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":128,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["promise(r",{"_index":325,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"properties.html":{}}}],["props",{"_index":275,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["props.effects",{"_index":304,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["provided",{"_index":1229,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1499,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1521,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":644,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":658,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["r.hits.length",{"_index":489,"title":{},"body":{"interfaces/Collision.html":{}}}],["rc.1",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["real",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":138,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rectify",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["refentities",{"_index":1423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":343,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":571,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["referencedataconfig",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["referenceorganconfigurl",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refernced",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["registergltfloaders",{"_index":66,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registration",{"_index":827,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["registrations#1",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["renderlayers",{"_index":22,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["report",{"_index":474,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":482,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":1430,"title":{},"body":{"index.html":{}}}],["representation_of",{"_index":572,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["required",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["resets",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1494,"title":{},"body":{"license.html":{}}}],["results",{"_index":193,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["returns",{"_index":38,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":39,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["returntype['getpickinginfo",{"_index":191,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rgb",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":587,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["rights",{"_index":1496,"title":{},"body":{"license.html":{}}}],["root",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":207,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotation_units",{"_index":598,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rotationorbit",{"_index":231,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotationx",{"_index":232,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["round",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["ru/cdk",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["ru/ngxs",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":668,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["rui_rank",{"_index":573,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rxjs",{"_index":223,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":225,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sad",{"_index":475,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":485,"title":{},"body":{"interfaces/Collision.html":{}}}],["sample",{"_index":1228,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["scale(halfsize.toarray",{"_index":554,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scaling_units",{"_index":594,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["scene",{"_index":62,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scene.children",{"_index":512,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.filter(d",{"_index":456,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":511,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.ts",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scenegraph",{"_index":139,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphlayer",{"_index":48,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["scenegraphnode",{"_index":361,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["scenegraphnodename",{"_index":1410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scenerotation",{"_index":262,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenerotationsubject",{"_index":251,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenetraversalvisitor",{"_index":1428,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scheduled",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1472,"title":{},"body":{"index.html":{}}}],["search",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":713,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1503,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["setinteractive(value",{"_index":374,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotation(value",{"_index":370,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotationx(value",{"_index":371,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setscene(data",{"_index":330,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settarget(value",{"_index":373,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settimeout(r",{"_index":326,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setup",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["setzoom(value",{"_index":372,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sex",{"_index":574,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sexes",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1510,"title":{},"body":{"license.html":{}}}],["share",{"_index":224,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["shared",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["shared/spatial",{"_index":61,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["shortest",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":575,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sides",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["simplemeshlayer",{"_index":49,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["simplifies",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["simplifyscene",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["simplifyscene(nodes",{"_index":1426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["site",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sites",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["sites.ts",{"_index":1261,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizable",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":507,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["size.clone().vmul(new",{"_index":547,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["slice_count",{"_index":576,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slice_thickness",{"_index":577,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slider",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["slider/ngx",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1435,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceboxes",{"_index":434,"title":{},"body":{"interfaces/Collision.html":{}}}],["sources",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["sourceurl",{"_index":1416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sparc",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":657,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":557,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialentityjsonld",{"_index":555,"title":{"interfaces/SpatialEntityJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialobjectreferencejsonld",{"_index":582,"title":{"interfaces/SpatialObjectReferenceJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialplacementjsonld",{"_index":583,"title":{"interfaces/SpatialPlacementJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialscenegeometry",{"_index":609,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spatialscenenode",{"_index":60,"title":{"interfaces/SpatialSceneNode.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":589,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1454,"title":{},"body":{"index.html":{}}}],["specific",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1453,"title":{},"body":{"index.html":{}}}],["speed",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["sphere",{"_index":86,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spheregeometry",{"_index":56,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["spinal",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":476,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":477,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":483,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":484,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":384,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["stage",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1439,"title":{},"body":{"index.html":{}}}],["started",{"_index":611,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1235,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":134,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.data",{"_index":140,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.docollisions",{"_index":186,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.zoomopacity",{"_index":162,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["statements",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["stay",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["structures.ts",{"_index":1259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":222,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"license.html":{}}}],["subject.next",{"_index":414,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sublicense",{"_index":1501,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1512,"title":{},"body":{"license.html":{}}}],["such",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["support",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":83,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["switched",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":208,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["target.name",{"_index":480,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":479,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes",{"_index":455,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":472,"title":{},"body":{"interfaces/Collision.html":{}}}],["technologies",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["terms",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":360,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["testing",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":124,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["textlayer",{"_index":46,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textlayer(id",{"_index":119,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["theme",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["this._dragevent(info",{"_index":406,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onclick",{"_index":288,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondrag",{"_index":294,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragend",{"_index":296,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragstart",{"_index":292,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onhover",{"_index":286,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onviewstatechange",{"_index":290,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer",{"_index":284,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.setstate",{"_index":337,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.state",{"_index":322,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.cursor",{"_index":299,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.debugscenenodeprocessing(data",{"_index":338,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck",{"_index":307,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.finalize",{"_index":329,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.props.viewstate",{"_index":367,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.setprops",{"_index":309,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deckprops.debugscenenodeprocessing",{"_index":336,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.lasthovered",{"_index":381,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.next",{"_index":388,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":257,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject",{"_index":411,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject.pipe(share",{"_index":269,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject",{"_index":407,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject.pipe(share",{"_index":265,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject",{"_index":409,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject.pipe(share",{"_index":267,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":382,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":259,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":380,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":261,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.props",{"_index":130,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.scenerotationsubject.next([deckprops.rotation",{"_index":319,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.next([event.viewstate.rotationorbit",{"_index":403,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.pipe(share",{"_index":263,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.setstate",{"_index":131,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.state",{"_index":135,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.zoomto(node",{"_index":334,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["through",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":493,"title":{},"body":{"interfaces/Collision.html":{},"changelog.html":{}}}],["tissues",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["tool",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":527,"title":{},"body":{"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":1533,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["transformmatrix",{"_index":118,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["translate(center.toarray",{"_index":553,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["translation_units",{"_index":602,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["transparency",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["traversal",{"_index":430,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["traversal.ts",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["traversescene",{"_index":429,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["traversescene(gltfscene",{"_index":462,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":520,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["travisci",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":94,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["try",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1542,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":108,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["ub",{"_index":542,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ub.clone().vsub(lb",{"_index":545,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ufl",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":9,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1442,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1451,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1448,"title":{},"body":{"index.html":{}}}],["ui.ts",{"_index":198,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/organ",{"_index":1450,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1449,"title":{},"body":{"index.html":{}}}],["ui/src/global",{"_index":1239,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/body",{"_index":8,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/shared/ccf",{"_index":556,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["ui/src/lib/shared/spatial",{"_index":604,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/load",{"_index":1252,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/parse",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/process",{"_index":503,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui/src/lib/util/scene",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/simplify",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/spatial",{"_index":416,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uis",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":78,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/functions.html":{}}}],["university",{"_index":1474,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["unnecessary",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":607,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["unselect",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["updated_date",{"_index":578,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["updates",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["upperbound",{"_index":443,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["upperbound[i",{"_index":451,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["url",{"_index":127,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{}}}],["url2gltf",{"_index":146,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[m.scenegraph",{"_index":152,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[model.scenegraph",{"_index":168,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["usage",{"_index":642,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":1460,"title":{},"body":{"index.html":{}}}],["use",{"_index":639,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usecase",{"_index":1465,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":1462,"title":{},"body":{"index.html":{}}}],["used",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["util/load",{"_index":67,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["util/process",{"_index":228,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["util/spatial",{"_index":70,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["utilities",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["v2",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["v2.1.0",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1544,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec3",{"_index":426,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...lowerbound.map((n",{"_index":449,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...upperbound.map((n",{"_index":452,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(0.5",{"_index":548,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["version",{"_index":799,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["vhf_kidney_l_low1').then((results",{"_index":354,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["vhf_kidney_r_low",{"_index":362,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["via",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":276,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["viewstate",{"_index":310,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["viewstateprops",{"_index":217,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["visitor",{"_index":1427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["visual",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":41,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1230,"title":{},"body":{"changelog.html":{}}}],["walkthrough",{"_index":1461,"title":{},"body":{"index.html":{}}}],["warming",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1517,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1514,"title":{},"body":{"license.html":{}}}],["web",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1437,"title":{},"body":{"index.html":{}}}],["week",{"_index":1236,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1530,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["wireframe",{"_index":111,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["within",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":825,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["worldmatrix",{"_index":515,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["wrapper",{"_index":244,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x",{"_index":235,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x_dimension",{"_index":579,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_rotation",{"_index":595,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_scaling",{"_index":591,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_translation",{"_index":599,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y",{"_index":236,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["y_dimension",{"_index":580,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_rotation",{"_index":596,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_scaling",{"_index":592,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_translation",{"_index":600,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["yes",{"_index":1408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youtube",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["z_dimension",{"_index":581,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_rotation",{"_index":597,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_scaling",{"_index":593,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_translation",{"_index":601,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["zone.js",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":209,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoombasedopacity",{"_index":363,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomopacity",{"_index":132,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomto(node",{"_index":364,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomtoonload",{"_index":608,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                gltfCache\n                            \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        gltfCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        layerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BodyUILayer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPickingInfo\n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReturnType<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderLayers\n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     []\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { TextLayer } from '@deck.gl/layers';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { ConeGeometry, CubeGeometry, CylinderGeometry, Geometry, SphereGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    let mesh: Geometry;\n    switch (options.geometry) {\n      case 'sphere':\n        mesh = new SphereGeometry();\n        break;\n      case 'cone':\n        mesh = new ConeGeometry();\n        break;\n      case 'cylinder':\n        mesh = new CylinderGeometry();\n        break;\n      case 'cube':\n      default:\n        mesh = new CubeGeometry();\n        break;\n    }\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: mesh as any,\n        wireframe: false,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9*255],\n        getTransformMatrix: (d) => (d as { transformMatrix: number[] }).transformMatrix,\n      },\n      ...options\n    });\n  }\n}\n\nfunction textLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): TextLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new TextLayer({\n      ...{\n        id,\n        pickable: true,\n        data: data.map(d => ({ ...d, position: new Matrix4(d.transformMatrix).getTranslation() })),\n        getText: (d) => (d as { text: string }).text,\n        getPosition: (d) => (d as { position: [number, number] }).position,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise } = {};\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as { data: SpatialSceneNode[]; zoomOpacity: number; doCollisions: boolean };\n    const geometries: Record = {\n      'sphere': [], 'cone': [], 'cylinder': [], 'cube': [], 'text': [], 'wireframe': [], 'scenegraph': []\n    };\n\n    for (const node of state.data) {\n      const geometry = node.geometry ?? 'cube';\n      if (node.scenegraph) {\n        geometries.scenegraph.push(node);\n      } else if (geometries[geometry] !== undefined) {\n        geometries[geometry].push(node);\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise } = {};\n    for (const m of geometries.scenegraph) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    const layers: unknown[] = [];\n    for (const [geometry, nodes] of Object.entries(geometries)) {\n      if (geometry === 'scenegraph') {\n        for (const model of nodes) {\n          layers.push(\n            new ScenegraphLayer({\n              id: 'models-' + model['@id'],\n              opacity: model.zoomBasedOpacity ? state.zoomOpacity : (model.opacity ?? 1.0),\n              pickable: !model.unpickable,\n              coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n              data: [model],\n              scenegraph: model.scenegraphNode ?\n                loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string]) :\n                model.scenegraph as unknown as URL,\n              // eslint-disable-next-line @typescript-eslint/naming-convention\n              _lighting: model._lighting, // 'pbr' | undefined\n              getTransformMatrix: model.transformMatrix as unknown as number[][],\n              getColor: model.color ?? [0, 255, 0, 0.5*255],\n              parameters: { depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1) }\n            })\n          );\n        }\n      } else if (geometry === 'text') {\n        layers.push(textLayer('text', nodes.filter(n => n.unpickable), { pickable: false }));\n        layers.push(textLayer('textPickable', nodes.filter(n => !n.unpickable), { pickable: true }));\n      } else if (geometry === 'wireframe') {\n        layers.push(meshLayer(geometry, nodes, { wireframe: true, pickable: false, geometry }));\n      } else {\n        layers.push(meshLayer(geometry, nodes.filter(n => n.unpickable), { wireframe: false, pickable: false, geometry }));\n        layers.push(meshLayer(`${geometry}Pickable`, nodes.filter(n => !n.unpickable), { wireframe: false, pickable: true, geometry }));\n      }\n    }\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return layers.filter(l => !!l);\n  }\n\n  getPickingInfo(\n    e: Parameters['getPickingInfo']>[0]\n  ): ReturnType['getPickingInfo']> {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debugSceneNodeProcessing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            legacyLighting\n                                        \n                                \n                                \n                                        \n                                            maxRotationX\n                                        \n                                \n                                \n                                        \n                                            minRotationX\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugSceneNodeProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugSceneNodeProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyLighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyLighting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orbitAxis\n                                        \n                                \n                                \n                                        \n                                            rotationOrbit\n                                        \n                                \n                                \n                                        \n                                            rotationX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationOrbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationOrbit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\n/* eslint-disable  */\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && d.geometry !== 'wireframe')\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickInfo.html":{"url":"interfaces/PickInfo.html","title":"interface - PickInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picked\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedNode.html":{"url":"interfaces/ProcessedNode.html","title":"interface - ProcessedNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SpatialSceneNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            jsonld\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:     AABB\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AABB\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonld:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\n\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n/* eslint-disable  */\nfunction childNames(scene, names: string[] = []): string[] {\n  for (const child of (scene.nodes || scene.children || [])) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string, \n    gltfCache?: { [url: string]: Promise }): Promise {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({scenegraph: gltfUrl, scenegraphNode} as SpatialSceneNode, gltfCache);\n  const nodes: {[node: string]: ProcessedNode} = {};\n  const gltfNodes: ProcessedNode[] = [];\n  for (const scene of gltf.scenes) {\n    worldMatrix = new Matrix4(worldMatrix || Matrix4.IDENTITY);\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        geometry: 'wireframe',\n        node\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter(n => !n.bbox)) {\n    for (const child of childNames(node.node).map(n => nodes[n]).filter(n => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = node.size = ub.clone().vsub(lb);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = node.center = lb.clone().vadd(halfSize);\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY)\n      .translate(center.toArray())\n      .scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntityJsonLd.html":{"url":"interfaces/SpatialEntityJsonLd.html","title":"interface - SpatialEntityJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialEntityJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            ccf_annotations\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            creation_date\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            creator_first_name\n                                        \n                                \n                                \n                                        \n                                            creator_last_name\n                                        \n                                \n                                \n                                        \n                                            dimension_units\n                                        \n                                \n                                \n                                        \n                                            extraction_set\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                                \n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                        \n                                            rui_rank\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slice_count\n                                        \n                                \n                                \n                                        \n                                            slice_thickness\n                                        \n                                \n                                \n                                        \n                                            updated_date\n                                        \n                                \n                                \n                                        \n                                            x_dimension\n                                        \n                                \n                                \n                                        \n                                            y_dimension\n                                        \n                                \n                                \n                                        \n                                            z_dimension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccf_annotations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ccf_annotations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraction_set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraction_set:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReferenceJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReferenceJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"Left\" | \"Right\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Left\" | \"Right\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReferenceJsonLd.html":{"url":"interfaces/SpatialObjectReferenceJsonLd.html","title":"interface - SpatialObjectReferenceJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialObjectReferenceJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            file_format\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacementJsonLd.html":{"url":"interfaces/SpatialPlacementJsonLd.html","title":"interface - SpatialPlacementJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialPlacementJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            placement_date\n                                        \n                                \n                                \n                                        \n                                            rotation_units\n                                        \n                                \n                                \n                                        \n                                            scaling_units\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            translation_units\n                                        \n                                \n                                \n                                        \n                                            x_rotation\n                                        \n                                \n                                \n                                        \n                                            x_scaling\n                                        \n                                \n                                \n                                        \n                                            x_translation\n                                        \n                                \n                                \n                                        \n                                            y_rotation\n                                        \n                                \n                                \n                                        \n                                            y_scaling\n                                        \n                                \n                                \n                                        \n                                            y_translation\n                                        \n                                \n                                \n                                        \n                                            z_rotation\n                                        \n                                \n                                \n                                        \n                                            z_scaling\n                                        \n                                \n                                \n                                        \n                                            z_translation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _lighting\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            geometry\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraphNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            transformMatrix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomBasedOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToOnLoad\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geometry:         SpatialSceneGeometry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialSceneGeometry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui/src/global-fixes.ts\n            \n            function\n            castToGlobalType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            class\n            BodyUILayer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            meshLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            textLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            class\n            BodyUI\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIProps\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIViewStateProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            PickInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialEntityJsonLd\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialObjectReferenceJsonLd\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialPlacementJsonLd\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n            \n            interface\n            SpatialSceneNode\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            deriveScenegraph\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            registerGLTFLoaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSVText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n            \n            function\n            processAnatomicalStructures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n            \n            function\n            processExtractionSites\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            function\n            processReferenceData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            variable\n            referenceDataConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            interface\n            ProcessedNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            childNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            processSceneNodes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n            \n            function\n            processSpatialEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n            \n            function\n            traverseScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n            \n            function\n            simplifyScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            function\n            doCollisions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : ^14.10.1\n        \n            @angular-ru/common : ^15.313.0\n        \n            @angular-ru/ngxs : ^14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^16.1.5\n        \n            @angular/cdk : ^16.1.5\n        \n            @angular/common : ^16.1.5\n        \n            @angular/compiler : ^16.1.5\n        \n            @angular/core : ^16.1.6\n        \n            @angular/elements : ^16.1.6\n        \n            @angular/forms : ^16.1.5\n        \n            @angular/material : ^16.1.5\n        \n            @angular/platform-browser : ^16.1.5\n        \n            @angular/platform-browser-dynamic : ^16.1.5\n        \n            @angular/router : ^16.1.5\n        \n            @angular/youtube-player : ^16.1.5\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : 8.8.20\n        \n            @deck.gl/geo-layers : 8.8.20\n        \n            @deck.gl/layers : 8.8.20\n        \n            @deck.gl/mesh-layers : 8.8.20\n        \n            @loaders.gl/core : 3.2.10\n        \n            @loaders.gl/draco : 3.2.10\n        \n            @loaders.gl/gltf : 3.2.10\n        \n            @luma.gl/core : 8.5.16\n        \n            @math.gl/core : ^3.6.3\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/storage-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^16.0.0\n        \n            ngx-slider-v2 : ^16.0.2\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            castToGlobalType   (projects/.../global-fixes.ts)\n                        \n                        \n                            childNames   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            deriveScenegraph   (projects/.../load-gltf.ts)\n                        \n                        \n                            doCollisions   (projects/.../spatial-scene-collider.ts)\n                        \n                        \n                            loadGLTF   (projects/.../load-gltf.ts)\n                        \n                        \n                            loadGLTF2   (projects/.../load-gltf.ts)\n                        \n                        \n                            meshLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            parseCSV   (projects/.../parse-csv.ts)\n                        \n                        \n                            parseCSVText   (projects/.../parse-csv.ts)\n                        \n                        \n                            processAnatomicalStructures   (projects/.../process-anatomical-structures.ts)\n                        \n                        \n                            processExtractionSites   (projects/.../process-extraction-sites.ts)\n                        \n                        \n                            processReferenceData   (projects/.../process-reference-data.ts)\n                        \n                        \n                            processSceneNodes   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            processSpatialEntities   (projects/.../process-spatial-entities.ts)\n                        \n                        \n                            registerGLTFLoaders   (projects/.../load-gltf.ts)\n                        \n                        \n                            simplifyScene   (projects/.../simplify-scene.ts)\n                        \n                        \n                            textLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            traverseScene   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/global-fixes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        castToGlobalType\n                        \n                    \n                \n            \n            \n                \ncastToGlobalType(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        childNames\n                        \n                    \n                \n            \n            \n                \nchildNames(scene, names)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    names\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSceneNodes\n                        \n                    \n                \n            \n            \n                \nprocessSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string, gltfCache?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gltfUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n                                    \n                                            Matrix4\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    scenegraphNode\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    gltfCache\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/load-gltf.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deriveScenegraph\n                        \n                    \n                \n            \n            \n                \nderiveScenegraph(scenegraphNodeName: string, gltf: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltf\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF\n                        \n                    \n                \n            \n            \n                \nloadGLTF(model: SpatialSceneNode, cache?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cache\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF2\n                        \n                    \n                \n            \n            \n                \nloadGLTF2(scenegraphNodeName: string, gltfPromise: Promise)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfPromise\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerGLTFLoaders\n                        \n                    \n                \n            \n            \n                \nregisterGLTFLoaders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doCollisions\n                        \n                    \n                \n            \n            \n                \ndoCollisions(scene)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/body-ui-layer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meshLayer\n                        \n                    \n                \n            \n            \n                \nmeshLayer(id: string, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SimpleMeshLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textLayer\n                        \n                    \n                \n            \n            \n                \ntextLayer(id: string, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TextLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/parse-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseCSV\n                        \n                    \n                \n            \n            \n                \nparseCSV(sourceUrl: string, firstFieldName?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCSVText\n                        \n                    \n                \n            \n            \n                \nparseCSVText(csvText: string, firstFieldName?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    csvText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processAnatomicalStructures\n                        \n                    \n                \n            \n            \n                \nprocessAnatomicalStructures(sourceUrl: string, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processExtractionSites\n                        \n                    \n                \n            \n            \n                \nprocessExtractionSites(sourceUrl: string, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processReferenceData\n                        \n                    \n                \n            \n            \n                \nprocessReferenceData(refEntities, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    refEntities\n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        referenceDataConfig\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSpatialEntities\n                        \n                    \n                \n            \n            \n                \nprocessSpatialEntities(parent: SpatialEntityJsonLd, gltfOverride?: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                SpatialEntityJsonLd\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfOverride\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        simplifyScene\n                        \n                    \n                \n            \n            \n                \nsimplifyScene(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        traverseScene\n                        \n                    \n                \n            \n            \n                \ntraverseScene(scene, worldMatrix: Matrix4, visitor: SceneTraversalVisitor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n                                    \n                                            Matrix4\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    visitor\n                                    \n                                                SceneTraversalVisitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) and Common Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://apps.humanatlas.io/hra-api\nStaging: https://apps.humanatlas.io/hra-api--staging\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nCCF API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.7.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeClickEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            NodeDragEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            SceneTraversalVisitor   (projects/.../scene-traversal.ts)\n                        \n                        \n                            SpatialSceneGeometry   (projects/.../spatial-scene-node.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/body-ui.ts\n    \n    \n        \n            \n                \n                    \n                    NodeClickEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeDragEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n    \n        \n            \n                \n                    \n                    SceneTraversalVisitor\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n    \n    \n        \n            \n                \n                    \n                    SpatialSceneGeometry\n                \n            \n            \n                \n                        \"sphere\" | \"cube\" | \"wireframe\" | \"text\" | \"cone\" | \"cylinder\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            referenceDataConfig   (projects/.../process-reference-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        referenceDataConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  extractionSitesUrl: 'http://localhost:8080/source_data/asct-b-3d-models-landmarks.csv',\n  extractionSitesConfigUrl: 'http://localhost:8080/source_data/extraction-site-config.csv',\n  anatomicalStructuresUrl: 'http://localhost:8080/source_data/asct-b-3d-models-crosswalk.csv',\n  referenceOrganConfigUrl: 'http://localhost:8080/source_data/reference-organ-config.csv'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
