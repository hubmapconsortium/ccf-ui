var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BodyUILayer.html",[0,1.249,1,1.249]],["body/classes/BodyUILayer.html",[0,0.945,1,1.801,2,1.715,3,0.418,4,0.559,5,0.356,6,0.632,7,0.412,8,1.758,9,1.545,10,1.444,11,1.067,12,3.683,13,0.299,14,0.71,15,4.507,16,2.631,17,2.5,18,3.683,19,3.113,20,3.683,21,4.053,22,4.053,23,0.517,24,0.053,25,1.242,26,2.5,27,1.384,28,3.479,29,2.127,30,1.111,31,2.127,32,2.127,33,2.127,34,2.511,35,1.242,36,0.729,37,1.817,38,2.97,39,2.127,40,2.127,41,1.581,42,2.127,43,1.254,44,2.127,45,1.08,46,2.5,47,1.715,48,3.113,49,2.97,50,1.715,51,1.581,52,3.113,53,3.113,54,3.113,55,3.361,56,3.113,57,1.715,58,0.83,59,0.729,60,1.297,61,0.945,62,0.71,63,1.215,64,1.817,65,1.444,66,1.817,67,2.127,68,1.242,69,2.5,70,2.127,71,2.127,72,1.581,73,1.715,74,2.229,75,2.752,76,3.113,77,2.003,78,1.636,79,3.113,80,1.581,81,3.06,82,4.656,83,1.715,84,2.127,85,4.053,86,2.114,87,1.636,88,4.053,89,2.114,90,2.114,91,2.5,92,0.724,93,4.774,94,1.917,95,2.127,96,2.787,97,2.127,98,1.715,99,2.127,100,2.127,101,2.19,102,3.113,103,3.113,104,1.636,105,1.636,106,1.87,107,2.15,108,1.636,109,1.817,110,1.817,111,2.288,112,3.113,113,2.929,114,1.384,115,1.54,116,3.683,117,1.581,118,2.127,119,1.715,120,2.127,121,2.97,122,2.127,123,2.127,124,2.752,125,2.127,126,0.559,127,2.97,128,1.215,129,2.2,130,2.127,131,2.127,132,1.817,133,2.127,134,2.127,135,2.127,136,0.945,137,2.127,138,2.127,139,1.801,140,2.127,141,2.127,142,2.127,143,2.127,144,2.127,145,2.127,146,2.127,147,2.127,148,2.127,149,3.683,150,2.127,151,2.127,152,2.127,153,2.127,154,1.636,155,2.127,156,1.817,157,2.127,158,1.715,159,1.715,160,1.444,161,3.113,162,2.127,163,4.053,164,1.08,165,2.127,166,2.127,167,2.127,168,2.127,169,2.127,170,1.242,171,1.242,172,0.945,173,2.127,174,1.08,175,2.127,176,2.127,177,2.127,178,2.127,179,1.444,180,2.127,181,4.053,182,4.053,183,2.127,184,3.113,185,2.127,186,2.127,187,2.127,188,2.127,189,2.127,190,2.127,191,2.127,192,2.127,193,0.019,194,0.028,195,0.019]],["title/interfaces/BodyUIProps.html",[196,0.024,197,1.427]],["body/interfaces/BodyUIProps.html",[0,1.178,1,1.439,3,0.637,4,0.451,5,0.288,6,0.241,7,0.296,8,0.67,9,0.909,11,0.589,13,0.372,14,0.605,16,2.925,23,0.703,24,0.053,27,1.748,30,1.106,36,1.248,37,2.786,41,2.566,43,1.206,45,0.872,51,0.872,58,1.535,59,0.589,60,1.345,61,0.763,62,0.605,63,1.622,74,1.989,77,1.439,78,1.248,80,1.746,87,1.732,92,0.773,94,1.178,96,1.89,101,2.111,104,1.748,105,1.748,106,1.997,107,2.296,108,1.178,109,1.003,110,1.003,113,1.003,114,0.763,115,1.613,117,1.034,126,1.033,128,0.67,129,2.084,132,2.865,136,2.246,139,0.763,154,0.763,164,0.872,170,1.003,171,1.003,172,0.763,174,0.872,193,0.016,194,0.024,195,0.024,196,0.028,197,1.346,198,0.338,199,0.872,200,2.823,201,2.472,202,2.472,203,2.472,204,2.472,205,2.671,206,2.671,207,1.848,208,2.472,209,1.746,210,3.038,211,2.198,212,2.198,213,2.198,214,2.198,215,1.8,216,1.8,217,1.8,218,1.8,219,1.166,220,2.612,221,1.003,222,1.166,223,2.68,224,1.003,225,1.166,226,1.166,227,1.8,228,0.872,229,1.166,230,2.272,231,2.198,232,2.472,233,2.472,234,2.2,235,1.42,236,1.166,237,2.198,238,1.003,239,1.8,240,1.003,241,2.671,242,1.003,243,1.8,244,1.166,245,1.166,246,0.872,247,1.003,248,3.458,249,1.166,250,1.166,251,1.166,252,1.166,253,1.166,254,1.166,255,1.166,256,1.166,257,1.166,258,1.166,259,1.166,260,1.166,261,1.166,262,1.166,263,1.166,264,1.166,265,1.166,266,1.166,267,1.166,268,1.166,269,1.166,270,1.166,271,1.166,272,2.671,273,1.166,274,1.8,275,1.166,276,1.166,277,1.003,278,1.8,279,1.003,280,1.166,281,1.166,282,1.166,283,1.8,284,1.8,285,1.166,286,1.166,287,1.166,288,1.166,289,1.166,290,1.166,291,1.166,292,1.166,293,1.166,294,1.166,295,1.166,296,1.166,297,1.166,298,1.166,299,1.166,300,1.8,301,1.166,302,1.166,303,1.166,304,1.166,305,1.166,306,1.166,307,1.166,308,1.166,309,1.166,310,3.038,311,3.038,312,1.166,313,1.548,314,1.166,315,1.166,316,1.548,317,1.8,318,1.166,319,1.166,320,1.166,321,0.872,322,1.166,323,2.198,324,1.346,325,1.166,326,1.166,327,1.166,328,1.8,329,1.166,330,1.166,331,1.166,332,1.166,333,2.198,334,1.166,335,1.166,336,1.8,337,1.166,338,2.198,339,1.166,340,1.166,341,1.848,342,1.548,343,1.346,344,0.909,345,1.166,346,1.166,347,1.166,348,1.166,349,2.198,350,1.166,351,1.166,352,1.166,353,1.166,354,0.872,355,1.166,356,1.166,357,1.166,358,1.166,359,1.166,360,1.166,361,1.548,362,0.763,363,1.166,364,0.872,365,1.166,366,1.166,367,1.166,368,2.671,369,1.166,370,1.166,371,1.166,372,1.166,373,1.166,374,1.166,375,1.166,376,1.166,377,1.8,378,1.166,379,2.198,380,1.166,381,1.8,382,1.8,383,1.166,384,1.166,385,1.166,386,1.166,387,1.166,388,2.198,389,1.166,390,1.166,391,1.166,392,1.166,393,1.166,394,1.166,395,1.166,396,1.166,397,1.166,398,1.166,399,1.166,400,0.763,401,1.166,402,1.166,403,1.166,404,1.166,405,1.166,406,1.166,407,2.198,408,1.166,409,1.166,410,1.166,411,1.166,412,1.166,413,1.166,414,1.166,415,1.166]],["title/interfaces/BodyUIViewStateProps.html",[196,0.024,230,1.427]],["body/interfaces/BodyUIViewStateProps.html",[0,1.204,1,1.465,3,0.648,4,0.464,5,0.296,6,0.248,7,0.301,8,0.69,9,0.929,11,0.929,13,0.38,14,0.618,16,2.941,23,0.65,24,0.053,27,1.771,30,1.078,36,1.267,37,2.806,41,2.579,43,1.216,45,0.898,51,0.898,58,1.555,59,0.606,60,1.358,61,0.786,62,0.618,63,1.641,74,2.007,77,1.465,78,1.267,80,1.762,87,1.741,92,0.533,94,1.204,96,1.924,101,2.135,104,1.771,105,1.771,106,2.023,107,2.326,108,1.204,109,1.032,110,1.032,113,1.032,114,0.786,115,1.609,117,1.057,126,1.047,128,0.69,129,2.1,132,2.883,136,2.1,139,0.786,154,0.786,164,0.898,170,1.032,171,1.032,172,0.786,174,0.898,193,0.016,194,0.025,195,0.025,196,0.029,197,0.898,198,0.348,199,0.898,200,2.855,201,1.2,202,1.2,203,1.2,204,1.2,205,1.84,206,1.84,207,0.898,208,1.2,209,1.762,210,3.066,211,1.2,212,1.2,213,2.238,214,2.238,215,1.84,216,1.84,217,1.84,218,2.238,219,1.2,220,2.636,221,1.032,222,1.2,223,2.703,224,1.032,225,1.2,226,1.2,227,1.84,228,0.898,229,1.2,230,2.351,231,2.855,232,2.972,233,2.972,234,2.222,235,1.442,236,1.2,237,2.238,238,1.032,239,1.84,240,1.032,241,2.706,242,1.032,243,1.84,244,1.2,245,1.2,246,0.898,247,1.032,248,3.475,249,1.2,250,1.2,251,1.2,252,1.2,253,1.2,254,1.2,255,1.2,256,1.2,257,1.2,258,1.2,259,1.2,260,1.2,261,1.2,262,1.2,263,1.2,264,1.2,265,1.2,266,1.2,267,1.2,268,1.2,269,1.2,270,1.2,271,1.2,272,2.706,273,1.2,274,1.84,275,1.2,276,1.2,277,1.032,278,1.84,279,1.032,280,1.2,281,1.2,282,1.2,283,1.84,284,1.84,285,1.2,286,1.2,287,1.2,288,1.2,289,1.2,290,1.2,291,1.2,292,1.2,293,1.2,294,1.2,295,1.2,296,1.2,297,1.2,298,1.2,299,1.2,300,1.84,301,1.2,302,1.2,303,1.2,304,1.2,305,1.2,306,1.2,307,1.2,308,1.2,309,1.2,310,3.066,311,3.066,312,1.2,313,1.582,314,1.2,315,1.2,316,1.582,317,1.84,318,1.2,319,1.2,320,1.2,321,0.898,322,1.2,323,2.238,324,1.376,325,1.2,326,1.2,327,1.2,328,1.84,329,1.2,330,1.2,331,1.2,332,1.2,333,2.238,334,1.2,335,1.2,336,1.84,337,1.2,338,2.238,339,1.2,340,1.2,341,1.876,342,1.582,343,1.376,344,0.929,345,1.2,346,1.2,347,1.2,348,1.2,349,2.238,350,1.2,351,1.2,352,1.2,353,1.2,354,0.898,355,1.2,356,1.2,357,1.2,358,1.2,359,1.2,360,1.2,361,1.582,362,0.786,363,1.2,364,0.898,365,1.2,366,1.2,367,1.2,368,2.706,369,1.2,370,1.2,371,1.2,372,1.2,373,1.2,374,1.2,375,1.2,376,1.2,377,1.84,378,1.2,379,2.238,380,1.2,381,1.84,382,1.84,383,1.2,384,1.2,385,1.2,386,1.2,387,1.2,388,2.238,389,1.2,390,1.2,391,1.2,392,1.2,393,1.2,394,1.2,395,1.2,396,1.2,397,1.2,398,1.2,399,1.2,400,0.786,401,1.2,402,1.2,403,1.2,404,1.2,405,1.2,406,1.2,407,2.238,408,1.2,409,1.2,410,1.2,411,1.2,412,1.2,413,1.2,414,1.2,415,1.2]],["title/interfaces/Collision.html",[196,0.024,416,1.908]],["body/interfaces/Collision.html",[3,0.535,4,0.715,5,0.456,6,0.382,7,0.249,13,0.382,14,0.845,23,0.664,24,0.052,25,2.163,30,1.237,35,3.151,43,1.312,58,1.061,59,0.932,60,1.114,61,1.209,62,1.032,63,1.446,68,2.459,72,1.381,77,1.872,80,1.446,81,2.861,87,1.743,92,1.056,94,1.872,104,1.646,105,1.209,111,1.381,126,0.715,128,1.061,129,2.435,156,1.588,159,2.988,179,3.213,193,0.025,194,0.034,195,0.025,196,0.024,198,0.535,209,1.061,321,1.381,324,1.381,416,2.861,417,1.847,418,1.847,419,4.883,420,1.847,421,2.194,422,3.705,423,2.194,424,3.705,425,2.194,426,3.648,427,2.194,428,1.847,429,1.847,430,1.588,431,2.194,432,2.194,433,2.721,434,2.721,435,4.213,436,2.721,437,3.705,438,2.721,439,2.721,440,2.721,441,3.705,442,3.648,443,2.721,444,3.648,445,2.721,446,2.721,447,3.398,448,3.705,449,3.398,450,2.988,451,2.988,452,2.988,453,2.988,454,2.988,455,2.988,456,4.213,457,2.721,458,2.721,459,2.721,460,2.721,461,2.721,462,2.194,463,2.721,464,2.194,465,2.194,466,2.988,467,2.194,468,2.194,469,2.194,470,2.194,471,2.194,472,2.194,473,2.721,474,2.194,475,4.524,476,3.705,477,2.721,478,2.721,479,2.721,480,2.721,481,2.721,482,2.721,483,2.721,484,2.721,485,2.721,486,2.721,487,2.721,488,2.721,489,2.721,490,2.721,491,2.721,492,4.733,493,3.705,494,3.648,495,3.705,496,3.705,497,2.721,498,2.721,499,2.721,500,2.721,501,2.721,502,2.194]],["title/interfaces/PickInfo.html",[196,0.024,234,1.427]],["body/interfaces/PickInfo.html",[0,1.209,1,1.469,3,0.65,4,0.466,5,0.297,6,0.249,7,0.302,8,0.693,9,0.932,11,0.609,13,0.56,14,0.621,16,2.944,23,0.635,24,0.053,27,1.775,30,0.961,36,1.27,37,2.809,41,2.581,43,1.218,45,0.902,51,0.902,58,1.29,59,0.609,60,1.36,61,0.789,62,0.621,63,1.644,74,2.01,77,1.469,78,1.27,80,1.765,87,1.743,92,0.535,94,1.209,96,1.93,101,2.139,104,1.775,105,1.775,106,2.027,107,2.331,108,1.209,109,1.037,110,1.037,113,1.93,114,0.789,115,1.6,117,1.061,126,1.049,128,0.693,129,2.103,132,2.885,136,2.17,139,0.789,154,0.789,164,0.902,170,1.037,171,1.037,172,0.789,174,0.902,193,0.016,194,0.025,195,0.025,196,0.029,197,0.902,198,0.349,199,0.902,200,2.244,201,1.206,202,1.206,203,1.206,204,1.206,205,1.847,206,1.847,207,0.902,208,1.206,209,1.558,210,2.711,211,1.206,212,1.206,213,2.244,214,2.244,215,1.847,216,1.847,217,1.847,218,1.847,219,1.206,220,2.64,221,1.037,222,1.206,223,2.707,224,1.037,225,1.206,226,1.206,227,2.711,228,0.902,229,1.206,230,2.296,231,2.244,232,2.515,233,2.515,234,2.296,235,1.711,236,2.515,237,2.86,238,2.162,239,2.711,240,1.037,241,2.711,242,1.037,243,1.847,244,1.206,245,1.206,246,0.902,247,1.037,248,3.478,249,1.206,250,1.206,251,1.206,252,1.206,253,1.206,254,1.206,255,1.206,256,1.206,257,1.206,258,1.206,259,1.206,260,1.206,261,1.206,262,1.206,263,1.206,264,1.206,265,1.206,266,1.206,267,1.206,268,1.206,269,1.206,270,1.206,271,1.206,272,2.711,273,1.206,274,1.847,275,1.206,276,1.206,277,1.037,278,1.847,279,1.037,280,1.206,281,1.206,282,1.206,283,1.847,284,1.847,285,1.206,286,1.206,287,1.206,288,1.206,289,1.206,290,1.206,291,1.206,292,1.206,293,1.206,294,1.206,295,1.206,296,1.206,297,1.206,298,1.206,299,1.206,300,1.847,301,1.206,302,1.206,303,1.206,304,1.206,305,1.206,306,1.206,307,1.206,308,1.206,309,1.206,310,3.071,311,3.071,312,1.206,313,1.588,314,1.206,315,1.206,316,1.588,317,1.847,318,1.206,319,1.206,320,1.206,321,0.902,322,1.206,323,2.244,324,1.381,325,1.206,326,1.206,327,1.206,328,1.847,329,1.206,330,1.206,331,1.206,332,1.206,333,2.244,334,1.206,335,1.206,336,1.847,337,1.206,338,2.244,339,1.206,340,1.206,341,1.881,342,1.588,343,1.381,344,0.932,345,1.206,346,1.206,347,1.206,348,1.206,349,2.244,350,1.206,351,1.206,352,1.206,353,1.206,354,0.902,355,1.206,356,1.206,357,1.206,358,1.206,359,1.206,360,1.206,361,1.588,362,0.789,363,1.206,364,0.902,365,1.206,366,1.206,367,1.206,368,2.711,369,1.206,370,1.206,371,1.206,372,1.206,373,1.206,374,1.206,375,1.206,376,1.206,377,1.847,378,1.206,379,2.244,380,1.206,381,1.847,382,1.847,383,1.206,384,1.206,385,1.206,386,1.206,387,1.206,388,2.244,389,1.206,390,1.206,391,1.206,392,1.206,393,1.206,394,1.206,395,1.206,396,1.206,397,1.206,398,1.206,399,1.206,400,0.789,401,1.206,402,1.206,403,1.206,404,1.206,405,1.206,406,1.206,407,2.244,408,1.206,409,1.206,410,1.206,411,1.206,412,1.206,413,1.206,414,1.206,415,1.206]],["title/interfaces/ProcessedNode.html",[196,0.024,503,1.908]],["body/interfaces/ProcessedNode.html",[3,0.545,4,0.728,5,0.464,6,0.389,7,0.253,11,1.286,13,0.389,14,0.856,17,2.547,23,0.668,24,0.052,30,1.165,43,1.251,55,1.882,58,1.659,59,0.95,60,1.37,61,1.232,62,1.04,63,2.089,64,1.618,66,2.19,68,2.19,72,1.905,77,1.667,80,1.081,81,2.888,87,1.721,92,0.738,94,1.667,101,2.314,104,1.667,105,1.232,111,1.407,114,1.667,117,1.081,126,0.985,127,2.235,128,1.464,129,2.432,139,1.232,154,1.667,172,1.232,174,1.407,193,0.025,194,0.034,195,0.025,196,0.024,198,0.545,316,2.19,321,1.407,324,1.407,341,1.905,354,1.407,362,1.89,364,1.407,420,1.882,426,3.841,427,4.049,428,1.882,429,1.882,430,1.618,431,2.235,442,3.026,444,3.026,449,3.676,450,2.235,451,2.235,452,2.235,453,2.235,454,2.235,455,2.235,462,2.235,464,2.235,465,2.235,466,3.026,467,2.235,468,2.235,469,2.235,470,2.235,471,2.235,472,2.235,474,3.026,502,2.235,503,3.553,504,1.618,505,1.882,506,3.841,507,3.676,508,4.763,509,2.235,510,2.888,511,3.752,512,2.771,513,2.771,514,2.771,515,2.771,516,3.43,517,2.771,518,3.752,519,3.752,520,3.752,521,2.235,522,3.752,523,2.771,524,2.771,525,2.771,526,2.771,527,2.771,528,2.235,529,2.771,530,2.771,531,2.771,532,3.752,533,2.771,534,2.771,535,4.253,536,2.771,537,2.771,538,2.771,539,3.752,540,2.771,541,2.771,542,2.771,543,2.771,544,2.771,545,2.771,546,2.771,547,2.771,548,2.771,549,2.771,550,2.771,551,2.771,552,2.771,553,2.771,554,2.771,555,2.771]],["title/interfaces/SpatialEntityJsonLd.html",[196,0.024,556,1.427]],["body/interfaces/SpatialEntityJsonLd.html",[3,0.552,4,0.994,5,0.633,6,0.394,7,0.256,11,1.57,13,0.394,14,0.863,23,0.788,24,0.052,30,1.302,43,0.737,78,1.689,92,0.969,115,1.679,126,1.124,193,0.026,194,0.035,195,0.026,196,0.037,198,0.552,209,1.095,235,1.787,556,1.921,557,1.638,558,1.247,559,1.638,560,3.248,561,3.248,562,3.111,563,3.111,564,3.111,565,3.111,566,3.111,567,3.111,568,3.111,569,3.111,570,3.111,571,2.792,572,2.674,573,2.674,574,3.111,575,2.674,576,2.674,577,3.111,578,3.111,579,3.111,580,3.111,581,3.111,582,3.111,583,2.326,584,2.6,585,2.906,586,2.906,587,2.499,588,2.499,589,1.905,590,1.638,591,1.905,592,1.905,593,1.905,594,1.905,595,1.905,596,1.905,597,1.905,598,1.905,599,1.905,600,1.905,601,1.905,602,1.905,603,1.905,604,1.905]],["title/interfaces/SpatialObjectReferenceJsonLd.html",[196,0.024,583,1.427]],["body/interfaces/SpatialObjectReferenceJsonLd.html",[3,0.666,4,1.124,5,0.851,6,0.475,7,0.31,11,1.689,13,0.475,14,0.976,23,0.765,24,0.051,30,1.3,43,0.89,78,1.466,92,1.02,115,1.666,126,1.232,193,0.031,194,0.039,195,0.031,196,0.041,198,0.666,209,1.322,235,1.322,556,1.72,557,1.978,558,1.505,559,1.978,560,3.449,561,2.905,562,2.3,563,2.3,564,2.3,565,2.3,566,2.3,567,2.3,568,2.3,569,2.3,570,2.3,571,2.966,572,1.978,573,1.978,574,2.3,575,1.978,576,1.978,577,2.3,578,2.3,579,2.3,580,2.3,581,2.3,582,2.3,583,2.381,584,2.634,585,2.3,586,2.3,587,1.978,588,1.978,589,2.3,590,1.978,591,2.3,592,2.3,593,2.3,594,2.3,595,2.3,596,2.3,597,2.3,598,2.3,599,2.3,600,2.3,601,2.3,602,2.3,603,2.3,604,3.345]],["title/interfaces/SpatialPlacementJsonLd.html",[196,0.024,584,1.427]],["body/interfaces/SpatialPlacementJsonLd.html",[3,0.595,4,1.288,5,0.666,6,0.424,7,0.276,11,1.618,13,0.424,14,0.908,23,0.785,24,0.052,30,1.299,36,1.618,43,0.794,78,1.363,92,0.99,115,1.698,126,1.167,193,0.028,194,0.036,195,0.028,196,0.039,198,0.595,209,1.842,235,1.18,556,1.536,557,1.766,558,1.344,559,1.766,560,3.33,561,3.33,562,2.054,563,2.054,564,2.054,565,2.054,566,2.054,567,2.054,568,2.054,569,2.054,570,2.054,571,2.322,572,1.766,573,1.766,574,2.054,575,1.766,576,1.766,577,2.054,578,2.054,579,2.054,580,2.054,581,2.054,582,2.054,583,2.019,584,2.49,585,2.054,586,2.054,587,1.766,588,1.766,589,2.054,590,1.766,591,3.205,592,3.205,593,3.205,594,3.205,595,3.205,596,3.205,597,3.205,598,3.205,599,3.205,600,3.205,601,3.205,602,3.205,603,3.205,604,2.054]],["title/interfaces/SpatialSceneNode.html",[60,0.845,196,0.024]],["body/interfaces/SpatialSceneNode.html",[3,0.615,4,0.822,5,0.524,6,0.439,7,0.286,13,0.439,14,0.928,23,0.787,24,0.052,30,1.291,35,2.792,36,1.938,43,0.822,55,3.248,58,1.866,59,1.073,60,1.223,62,0.714,86,2.126,89,2.126,90,2.126,91,2.126,92,0.94,111,1.589,114,2.126,115,1.666,117,1.866,124,3.367,126,1.068,136,2.356,139,2.126,160,3.248,172,2.126,193,0.029,194,0.037,195,0.029,196,0.027,198,0.615,362,2.126,364,2.429,447,3.858,528,3.858,572,2.792,573,2.792,605,2.126,606,2.126,607,4.784,608,4.784,609,4.784,610,3.858]],["title/changelog.html",[611,1.61,612,1.384,613,1.61]],["body/changelog.html",[3,0.723,5,0.192,7,0.366,9,1.454,14,0.262,23,0.161,24,0.039,26,0.78,28,0.926,36,0.394,62,0.913,74,2.207,75,1.302,83,0.926,87,1.454,92,0.226,98,1.547,106,1.867,108,0.852,115,0.345,117,1.125,121,0.926,160,0.78,164,1.956,179,1.302,193,0.01,194,0.018,195,0.037,196,0.034,198,0.226,207,0.583,246,2.642,277,1.441,279,0.671,313,1.12,343,2.352,344,1.607,361,0.671,400,1.281,420,1.958,494,3.631,510,0.78,558,1.281,571,1.12,575,1.12,576,0.671,587,0.671,588,1.12,590,2.146,612,1.441,613,1.302,614,1.991,615,1.991,616,1.991,617,3.228,618,1.918,619,1.149,620,2.884,621,5.545,622,4.903,623,2.469,624,1.149,625,1.918,626,1.149,627,4.426,628,1.149,629,1.991,630,1.918,631,3.631,632,1.149,633,1.149,634,1.547,635,1.547,636,1.547,637,3.853,638,3.677,639,1.149,640,1.149,641,1.149,642,2.469,643,1.918,644,2.469,645,4.242,646,1.149,647,1.547,648,0.926,649,1.149,650,1.149,651,4.003,652,1.918,653,3.206,654,2.469,655,2.469,656,1.149,657,1.918,658,4.261,659,1.918,660,2.805,661,1.149,662,4.632,663,1.149,664,3.41,665,1.149,666,2.469,667,3.206,668,1.918,669,2.469,670,2.469,671,1.918,672,2.469,673,1.149,674,1.918,675,1.918,676,1.149,677,3.677,678,3.465,679,3.677,680,1.918,681,1.149,682,1.149,683,2.884,684,1.149,685,1.918,686,1.149,687,1.149,688,1.918,689,2.469,690,2.586,691,1.149,692,1.918,693,1.149,694,1.149,695,1.149,696,1.918,697,4.571,698,1.149,699,3.465,700,1.149,701,1.149,702,1.149,703,2.469,704,1.991,705,1.149,706,1.149,707,2.586,708,1.547,709,1.149,710,3.465,711,4.242,712,4.34,713,1.918,714,3.206,715,1.149,716,3.206,717,1.918,718,3.465,719,1.918,720,1.149,721,1.149,722,1.149,723,1.918,724,2.965,725,3.465,726,2.325,727,1.149,728,3.677,729,4.09,730,1.149,731,1.149,732,1.918,733,1.149,734,2.884,735,1.149,736,1.918,737,2.469,738,1.149,739,1.149,740,2.469,741,2.469,742,1.918,743,1.149,744,1.918,745,1.149,746,1.149,747,1.149,748,4.502,749,1.149,750,0.926,751,2.177,752,1.149,753,1.918,754,0.926,755,1.149,756,1.918,757,2.884,758,2.884,759,1.149,760,1.918,761,2.469,762,1.149,763,1.149,764,1.918,765,1.149,766,1.149,767,3.465,768,2.352,769,2.586,770,1.991,771,1.149,772,2.586,773,1.149,774,2.469,775,3.107,776,4.426,777,1.149,778,1.149,779,1.918,780,1.991,781,1.149,782,1.149,783,1.149,784,3.206,785,1.149,786,1.149,787,1.149,788,1.149,789,2.469,790,1.149,791,1.547,792,1.547,793,1.149,794,3.107,795,1.149,796,1.149,797,1.149,798,1.149,799,1.149,800,1.149,801,2.586,802,2.586,803,1.149,804,1.918,805,1.149,806,1.149,807,2.469,808,1.918,809,1.149,810,1.918,811,1.149,812,1.918,813,1.918,814,1.918,815,1.918,816,1.149,817,2.469,818,1.149,819,1.149,820,0.926,821,1.149,822,1.991,823,0.926,824,1.302,825,1.918,826,1.149,827,1.149,828,1.918,829,1.918,830,1.918,831,1.918,832,1.149,833,1.149,834,1.149,835,2.469,836,1.149,837,1.918,838,1.149,839,1.149,840,1.918,841,3.465,842,1.547,843,1.149,844,0.926,845,1.149,846,1.149,847,3.206,848,2.884,849,1.149,850,2.469,851,1.918,852,3.465,853,1.547,854,2.884,855,1.149,856,1.149,857,2.884,858,1.149,859,1.149,860,1.149,861,1.149,862,1.918,863,1.918,864,1.149,865,1.918,866,1.149,867,0.926,868,1.918,869,1.149,870,1.918,871,1.149,872,1.149,873,2.884,874,1.149,875,1.149,876,1.149,877,1.149,878,1.918,879,1.149,880,1.149,881,1.149,882,1.149,883,1.149,884,1.149,885,1.918,886,1.149,887,1.149,888,1.149,889,1.149,890,1.149,891,1.918,892,1.149,893,3.465,894,1.149,895,2.469,896,1.918,897,1.149,898,1.918,899,1.149,900,0.926,901,0.926,902,1.149,903,1.918,904,1.149,905,1.149,906,1.958,907,1.149,908,1.149,909,1.918,910,1.918,911,1.149,912,1.149,913,1.918,914,1.918,915,1.149,916,1.918,917,2.884,918,2.469,919,1.149,920,1.149,921,1.149,922,1.149,923,0.926,924,0.926,925,1.149,926,1.918,927,1.149,928,1.149,929,1.149,930,1.149,931,1.918,932,2.884,933,1.149,934,1.149,935,1.149,936,1.149,937,3.465,938,2.469,939,1.918,940,1.149,941,1.149,942,2.469,943,1.918,944,1.918,945,1.918,946,2.884,947,1.149,948,1.149,949,1.149,950,1.918,951,1.149,952,1.149,953,1.149,954,1.149,955,1.149,956,2.884,957,1.149,958,2.469,959,2.884,960,1.149,961,2.469,962,3.206,963,1.918,964,1.918,965,1.918,966,1.918,967,2.469,968,2.884,969,3.206,970,1.918,971,2.469,972,1.149,973,1.149,974,3.677,975,2.469,976,1.149,977,2.884,978,2.884,979,4.003,980,1.149,981,1.149,982,1.149,983,1.149,984,1.149,985,1.149,986,1.918,987,1.149,988,1.918,989,1.149,990,1.149,991,1.149,992,1.149,993,1.918,994,1.149,995,1.676,996,1.149,997,1.918,998,1.991,999,1.918,1000,2.469,1001,1.149,1002,1.149,1003,1.149,1004,1.918,1005,1.149,1006,1.149,1007,1.149,1008,1.149,1009,1.149,1010,1.149,1011,1.149,1012,1.918,1013,1.149,1014,1.149,1015,2.884,1016,3.465,1017,1.918,1018,2.469,1019,1.918,1020,2.884,1021,1.149,1022,1.149,1023,1.149,1024,1.149,1025,2.469,1026,1.149,1027,1.149,1028,1.149,1029,1.918,1030,1.918,1031,1.918,1032,1.918,1033,2.469,1034,1.149,1035,1.149,1036,1.149,1037,1.149,1038,1.149,1039,1.149,1040,0.926,1041,1.149,1042,1.149,1043,1.149,1044,1.918,1045,1.149,1046,1.149,1047,1.918,1048,1.149,1049,1.149,1050,1.149,1051,1.149,1052,1.149,1053,1.149,1054,1.149,1055,1.149,1056,1.149,1057,1.149,1058,3.853,1059,1.149,1060,1.991,1061,2.469,1062,2.884,1063,1.918,1064,2.469,1065,1.149,1066,1.918,1067,1.149,1068,1.149,1069,1.918,1070,1.918,1071,1.918,1072,1.149,1073,1.149,1074,1.149,1075,1.149,1076,1.918,1077,1.149,1078,2.469,1079,1.149,1080,1.149,1081,1.149,1082,1.149,1083,0.926,1084,1.149,1085,1.149,1086,1.149,1087,1.149,1088,1.149,1089,1.149,1090,1.149,1091,1.149,1092,1.149,1093,1.149,1094,1.149,1095,3.206,1096,1.149,1097,1.149,1098,1.149,1099,1.149,1100,1.149,1101,1.149,1102,1.149,1103,1.149,1104,1.149,1105,1.149,1106,1.149,1107,1.149,1108,1.149,1109,1.149,1110,1.918,1111,1.149,1112,1.918,1113,1.149,1114,1.918,1115,1.918,1116,2.884,1117,2.884,1118,1.918,1119,1.918,1120,1.149,1121,1.149,1122,1.149,1123,2.469,1124,1.149,1125,0.926,1126,1.149,1127,1.149,1128,1.149,1129,1.149,1130,1.149,1131,1.149,1132,1.918,1133,4.131,1134,2.469,1135,1.149,1136,1.918,1137,1.149,1138,1.149,1139,1.149,1140,1.149,1141,1.149,1142,1.149,1143,1.149,1144,1.149,1145,1.149,1146,1.918,1147,2.965,1148,1.918,1149,1.149,1150,1.149,1151,1.149,1152,1.547,1153,1.149,1154,2.884,1155,1.149,1156,1.918,1157,1.149,1158,1.149,1159,1.958,1160,1.149,1161,1.918,1162,1.149,1163,1.149,1164,1.149,1165,1.918,1166,1.918,1167,1.149,1168,1.149,1169,1.149,1170,1.149,1171,1.918,1172,2.469,1173,1.918,1174,1.149,1175,1.149,1176,1.547,1177,1.149,1178,1.149,1179,1.149,1180,1.149,1181,1.149,1182,1.149,1183,1.149,1184,1.149,1185,1.149,1186,0.926,1187,1.149,1188,1.149,1189,1.918,1190,1.149,1191,1.149,1192,1.149,1193,1.149,1194,1.149,1195,1.149,1196,1.149,1197,1.918,1198,1.149,1199,0.926,1200,1.149,1201,1.149,1202,0.926,1203,1.149,1204,1.149,1205,1.149,1206,1.918,1207,1.149,1208,1.149,1209,1.149,1210,1.149,1211,1.149,1212,1.149,1213,1.149,1214,1.149,1215,1.149,1216,1.149,1217,1.149,1218,1.918,1219,1.149,1220,1.149,1221,1.149,1222,1.149,1223,1.918,1224,1.149,1225,0.926,1226,1.149,1227,1.149,1228,1.149,1229,1.149,1230,1.149,1231,1.149,1232,1.149]],["title/coverage.html",[1159,2.571]],["body/coverage.html",[0,1.747,1,1.32,5,0.497,6,0.79,7,0.514,8,1.993,9,1.51,10,2.991,23,0.417,24,0.051,46,2.017,60,0.893,62,1.143,64,1.734,65,2.017,66,1.734,69,2.017,72,2.799,80,2.193,87,1.018,193,0.027,194,0.036,195,0.027,196,0.046,197,1.508,199,2.38,228,1.508,230,1.508,234,1.508,247,1.734,344,1.347,400,1.32,416,2.017,417,2.669,418,2.669,430,1.734,503,2.017,504,3.028,505,2.991,556,1.508,557,2.571,558,2.083,559,2.571,583,1.508,584,1.508,605,2.017,606,2.017,768,2.017,824,2.017,995,2.017,1159,2.017,1233,2.971,1234,2.971,1235,2.396,1236,2.396,1237,2.396,1238,5.528,1239,4.405,1240,2.396,1241,2.971,1242,2.971,1243,2.971,1244,2.971,1245,2.971,1246,2.971,1247,2.971,1248,3.78,1249,3.78,1250,2.396,1251,3.17,1252,3.17,1253,2.396,1254,2.396,1255,2.396,1256,2.396,1257,2.396,1258,2.396,1259,2.669,1260,2.396,1261,2.971,1262,2.396,1263,2.396,1264,2.396,1265,2.396,1266,2.017,1267,2.017,1268,2.396,1269,2.396,1270,2.396,1271,2.971,1272,2.971,1273,2.971]],["title/dependencies.html",[754,1.912,906,2.286]],["body/dependencies.html",[5,0.528,7,0.288,24,0.052,25,1.84,45,1.601,47,2.543,50,2.543,51,2.075,57,2.543,59,1.081,63,1.23,156,1.84,193,0.029,194,0.037,195,0.029,220,1.84,221,2.385,224,1.84,421,2.543,423,2.543,425,2.543,428,2.141,429,2.141,507,2.543,636,2.543,647,2.543,648,2.543,751,2.141,772,2.543,791,2.543,842,2.543,853,2.543,900,2.543,901,2.543,906,2.141,924,3.296,998,2.543,1060,3.296,1152,3.296,1274,3.153,1275,3.153,1276,3.153,1277,5.393,1278,3.153,1279,3.153,1280,3.153,1281,3.153,1282,3.153,1283,3.153,1284,3.153,1285,3.153,1286,4.086,1287,3.153,1288,3.153,1289,3.153,1290,3.153,1291,3.153,1292,3.153,1293,4.534,1294,3.153,1295,3.153,1296,4.534,1297,3.153,1298,3.153,1299,3.153,1300,3.153,1301,4.086,1302,3.153,1303,3.153,1304,3.153,1305,3.153,1306,3.153,1307,4.086,1308,4.086,1309,3.153,1310,3.153,1311,3.153,1312,3.153,1313,3.153,1314,3.296,1315,3.153,1316,3.153,1317,4.086,1318,3.153,1319,3.153,1320,3.153,1321,3.153,1322,3.153,1323,3.153,1324,3.153,1325,3.153,1326,3.153,1327,3.153,1328,3.153,1329,3.153,1330,3.153,1331,3.153,1332,3.153,1333,2.543,1334,3.153,1335,3.153,1336,3.153,1337,3.153,1338,3.153,1339,3.153,1340,4.086,1341,3.153,1342,3.153,1343,3.153,1344,3.153,1345,3.153,1346,3.153,1347,3.153,1348,3.153,1349,3.153,1350,3.153,1351,3.153,1352,3.153,1353,3.153,1354,3.153,1355,3.153,1356,3.153,1357,3.153,1358,3.153,1359,3.153,1360,3.153,1361,3.153,1362,4.086,1363,3.153,1364,3.153,1365,3.153,1366,3.153,1367,3.153,1368,3.153,1369,3.153,1370,3.153,1371,3.153,1372,3.153,1373,3.153,1374,4.086,1375,3.153,1376,3.153,1377,3.153,1378,3.153,1379,3.153,1380,3.153,1381,3.153,1382,3.153,1383,3.153,1384,3.153,1385,3.153,1386,3.153]],["title/miscellaneous/functions.html",[1387,1.054,1388,2.715]],["body/miscellaneous/functions.html",[6,0.749,7,0.488,8,1.104,9,1.473,10,2.919,13,0.397,17,2.583,24,0.052,27,1.258,30,0.646,34,4.409,35,3.192,36,1.874,38,4.409,41,1.437,46,2.919,49,2.282,62,1.171,64,2.221,65,2.583,66,2.509,68,2.221,69,2.583,73,2.282,74,2.043,75,3.121,78,1.304,92,0.748,119,2.282,128,2.068,136,1.258,154,1.258,156,1.652,193,0.026,194,0.035,195,0.026,207,1.437,228,1.932,341,1.437,344,1.304,354,1.437,362,1.691,417,1.921,418,2.583,430,2.221,432,2.282,504,2.8,505,2.919,509,2.282,510,2.583,516,3.707,521,2.282,558,1.691,824,2.583,867,3.069,995,2.583,1235,2.282,1236,3.069,1237,3.069,1240,3.069,1248,2.282,1249,3.868,1250,3.069,1251,2.282,1252,3.467,1253,3.069,1254,3.069,1255,3.069,1256,3.069,1257,3.069,1258,3.069,1259,2.583,1260,3.069,1263,3.069,1264,3.069,1265,3.069,1266,1.921,1267,2.583,1268,2.282,1269,3.069,1270,3.069,1314,3.069,1387,1.258,1388,2.282,1389,2.83,1390,3.984,1391,4.597,1392,2.282,1393,3.069,1394,3.805,1395,2.83,1396,2.282,1397,2.83,1398,5.048,1399,2.83,1400,3.805,1401,2.83,1402,2.83,1403,3.805,1404,2.83,1405,4.597,1406,4.299,1407,2.83,1408,2.83,1409,2.83,1410,4.597,1411,2.83,1412,2.83,1413,2.83,1414,2.83,1415,3.805,1416,2.83,1417,3.805]],["title/index.html",[13,0.333,611,1.61,612,1.384]],["body/index.html",[3,1.006,9,1.188,24,0.04,108,1.541,193,0.032,194,0.04,195,0.032,196,0.038,198,0.682,238,2.534,246,2.867,342,2.767,344,1.488,506,2.796,613,2.354,614,3.501,615,3.501,616,3.822,617,3.822,631,3.822,634,2.796,635,2.796,658,3.501,660,3.373,664,3.218,690,2.796,704,3.501,707,3.501,708,3.501,724,2.796,726,2.796,729,3.822,750,2.796,751,2.354,769,4.125,770,4.006,775,3.501,780,2.796,792,3.501,794,2.796,802,2.796,822,2.796,823,3.501,923,2.796,1083,2.796,1176,2.796,1186,2.796,1199,2.796,1418,4.341,1419,4.341,1420,3.467,1421,3.467,1422,3.467,1423,3.467,1424,3.501,1425,3.467,1426,3.467,1427,3.467,1428,4.341,1429,4.341,1430,4.341,1431,4.74,1432,3.467,1433,3.467,1434,4.74,1435,3.467,1436,3.467,1437,4.341,1438,3.467,1439,3.467,1440,3.467,1441,3.467,1442,3.467,1443,3.467,1444,3.467,1445,3.467,1446,3.467,1447,3.467,1448,4.968,1449,3.467,1450,3.467,1451,3.467,1452,3.467,1453,3.467,1454,3.467,1455,3.467,1456,3.467,1457,3.467,1458,3.467,1459,3.467,1460,3.467,1461,3.467,1462,3.467,1463,3.467,1464,3.467,1465,3.467]],["title/license.html",[611,1.61,612,1.384,1466,1.912]],["body/license.html",[24,0.042,193,0.035,194,0.042,195,0.035,223,2.238,629,3.724,660,2.603,768,2.603,801,3.724,820,3.997,844,3.092,1040,3.724,1125,3.092,1147,3.092,1202,3.092,1225,3.092,1333,3.092,1424,4.429,1466,3.092,1467,3.834,1468,4.956,1469,3.834,1470,3.834,1471,4.618,1472,3.834,1473,3.834,1474,3.834,1475,3.834,1476,3.834,1477,3.834,1478,4.618,1479,3.834,1480,3.834,1481,3.834,1482,3.834,1483,3.834,1484,3.834,1485,3.834,1486,3.834,1487,3.834,1488,3.834,1489,3.834,1490,3.834,1491,4.618,1492,3.834,1493,3.834,1494,3.834,1495,3.834,1496,3.834,1497,4.618,1498,3.834,1499,3.834,1500,3.834,1501,3.834,1502,3.834,1503,3.834,1504,3.834,1505,3.834,1506,3.834,1507,3.834,1508,3.834,1509,3.834,1510,3.834,1511,3.834,1512,3.834,1513,3.834,1514,3.834,1515,3.834,1516,3.834,1517,3.834,1518,3.834,1519,3.834,1520,3.834,1521,3.834,1522,3.834,1523,3.834,1524,3.834,1525,3.834]],["title/modules.html",[1526,3.054]],["body/modules.html",[24,0.046,193,0.04,194,0.046,195,0.04,1526,3.56]],["title/overview.html",[1527,3.054]],["body/overview.html",[2,3.537,24,0.046,193,0.04,194,0.046,195,0.04,198,0.862,400,1.949,1527,3.537,1528,4.386]],["title/miscellaneous/typealiases.html",[1387,1.054,1529,3.367]],["body/miscellaneous/typealiases.html",[6,0.714,7,0.465,8,1.594,13,0.573,23,0.714,24,0.05,25,2.799,62,1.094,72,2.074,86,2.773,89,2.773,90,2.773,91,2.773,111,2.074,124,2.773,193,0.037,194,0.044,195,0.037,199,2.585,240,2.799,242,2.799,605,2.773,606,3.256,610,3.867,1266,2.773,1267,3.256,1387,1.815,1392,3.294,1393,3.867,1396,3.294,1530,4.085,1531,4.796]],["title/miscellaneous/variables.html",[1387,1.054,1532,2.715]],["body/miscellaneous/variables.html",[6,0.581,7,0.378,13,0.581,23,0.581,24,0.05,26,2.812,27,1.84,158,3.899,193,0.038,194,0.044,195,0.038,235,1.616,343,2.454,344,1.657,504,2.418,664,2.812,1259,3.282,1262,3.899,1387,1.84,1390,3.34,1532,3.34,1533,4.142,1534,4.835,1535,4.835,1536,4.142,1537,4.142,1538,4.142,1539,4.142,1540,4.835,1541,4.142,1542,4.142,1543,4.142,1544,4.142]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["0.05",{"_index":336,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["0.1.0",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":316,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["0.5*255",{"_index":177,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.5.0",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1176,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.8",{"_index":133,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.9*255",{"_index":118,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0/1",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":179,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"changelog.html":{}}}],["1.0",{"_index":164,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1060,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":998,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["1.6875389974302382e",{"_index":352,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["1.7.0",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["1/37",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["10.0",{"_index":307,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10.0.0",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":282,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10x",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["11.5",{"_index":370,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["12",{"_index":724,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":99,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["14",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":313,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["15.126.1",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["17,0,0",{"_index":351,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17,0.076,0,0.49,0.034,0.11,1",{"_index":353,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2",{"_index":400,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.0",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":853,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":842,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":791,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["2.awsapprunner.com",{"_index":1445,"title":{},"body":{"index.html":{}}}],["200",{"_index":328,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2019",{"_index":1147,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":100,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["24",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":101,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["26",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":772,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["3.3.0",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["3.4.0",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1452,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":636,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.7.0",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["3.7.1",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":98,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["31",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":343,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1429,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["4th",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["5th",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["6.0.1",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["8.9",{"_index":399,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["85",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1528,"title":{},"body":{"overview.html":{}}}],["9.5",{"_index":319,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["90",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["_dragevent(info",{"_index":413,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_lighting",{"_index":172,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["_onclick(info",{"_index":384,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondrag(info",{"_index":409,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragend(info",{"_index":411,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragstart(info",{"_index":406,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onhover(e",{"_index":376,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onviewstatechange(event",{"_index":392,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["aabb",{"_index":426,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["ability",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1202,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1518,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1530,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1433,"title":{},"body":{"index.html":{}}}],["ambientlight",{"_index":213,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["analytics",{"_index":901,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":995,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomicalstructuresurl",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1489,"title":{},"body":{"license.html":{}}}],["angular",{"_index":751,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":631,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":1442,"title":{},"body":{"index.html":{}}}],["appear",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["appropriate",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1522,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":844,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":321,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["atlas",{"_index":615,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempts",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1511,"title":{},"body":{"license.html":{}}}],["autohighlight",{"_index":95,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["automatic",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":324,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["award",{"_index":1464,"title":{},"body":{"index.html":{}}}],["b",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1199,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":449,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["before",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":222,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["behaviorsubject([0",{"_index":253,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["being",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":220,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["block",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":7,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":247,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer",{"_index":1,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer.gltfcache",{"_index":153,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["bodyuiprops",{"_index":197,"title":{"interfaces/BodyUIProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuiviewstateprops",{"_index":230,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["boolean",{"_index":136,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":88,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["breaking",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":1152,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1425,"title":{},"body":{"index.html":{}}}],["builds",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1469,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1314,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["cacheable",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":200,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cancelregistration",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":428,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["canvas",{"_index":201,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["card",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":85,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cases",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["casttoglobaltype",{"_index":1237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["casttoglobaltype(value",{"_index":1397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ccf",{"_index":246,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":562,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["cell",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":506,"title":{},"body":{"interfaces/ProcessedNode.html":{},"index.html":{}}}],["change",{"_index":923,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":613,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1475,"title":{},"body":{"license.html":{}}}],["child",{"_index":511,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["child.bbox.clone",{"_index":536,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["childnames(child",{"_index":515,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(node.node).map(n",{"_index":533,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(scene",{"_index":509,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1514,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BodyUILayer.html":{},"overview.html":{}}}],["clean",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":1448,"title":{},"body":{"index.html":{}}}],["code",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["collider",{"_index":71,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["collider.ts",{"_index":418,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collision",{"_index":416,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"coverage.html":{}}}],["collisioning",{"_index":434,"title":{},"body":{"interfaces/Collision.html":{}}}],["collisions",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":117,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["colorizing",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":563,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["common",{"_index":823,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":726,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["compositelayer",{"_index":12,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["comunica/query",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1496,"title":{},"body":{"license.html":{}}}],["cone",{"_index":89,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["conegeometry",{"_index":52,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["config",{"_index":867,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["config.csv",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1524,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":487,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('data",{"_index":357,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('results",{"_index":356,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('starting",{"_index":433,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":501,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":1470,"title":{},"body":{"license.html":{}}}],["const",{"_index":129,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["constructor(private",{"_index":273,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["container",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1423,"title":{},"body":{"index.html":{}}}],["context",{"_index":561,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["contract",{"_index":1519,"title":{},"body":{"license.html":{}}}],["control",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":283,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convenience",{"_index":244,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convention",{"_index":171,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["coordinate",{"_index":238,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["coordinate_system",{"_index":44,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinate_system.cartesian",{"_index":103,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinatesystem",{"_index":102,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["copies",{"_index":1491,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1478,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1468,"title":{},"body":{"license.html":{}}}],["cord",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1159,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["creation_date",{"_index":564,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator",{"_index":565,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_first_name",{"_index":566,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_last_name",{"_index":567,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["credits",{"_index":1455,"title":{},"body":{"index.html":{}}}],["crosswalk.csv",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["csv.ts",{"_index":1252,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csvreport",{"_index":491,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":493,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvtext",{"_index":1408,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlclick",{"_index":243,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ctrlkey",{"_index":386,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cube",{"_index":91,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cubegeometry",{"_index":53,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cuboid",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["currentstate",{"_index":396,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.data",{"_index":402,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.zoomopacity",{"_index":401,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cursor",{"_index":271,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cyberinfrastructure",{"_index":1457,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["cylinder",{"_index":90,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cylindergeometry",{"_index":54,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d",{"_index":113,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["d.geometry",{"_index":438,"title":{},"body":{"interfaces/Collision.html":{}}}],["d.scenegraph",{"_index":437,"title":{},"body":{"interfaces/Collision.html":{}}}],["damages",{"_index":1515,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":74,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.concat(object.values(results",{"_index":359,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.length",{"_index":79,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.map(d",{"_index":120,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.push",{"_index":360,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.ts",{"_index":1259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data?.length",{"_index":332,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["database",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["datasets",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1480,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1525,"title":{},"body":{"license.html":{}}}],["debugscenenodeprocessing",{"_index":202,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["debugscenenodeprocessing(data",{"_index":340,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["december",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["deck",{"_index":214,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck(props",{"_index":309,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/core",{"_index":45,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":219,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/geo",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":47,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deck.gl/mesh",{"_index":50,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deckprops",{"_index":274,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.camera",{"_index":278,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.interactive",{"_index":284,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.legacylighting",{"_index":304,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.maxrotationx",{"_index":314,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.minrotationx",{"_index":312,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.rotation",{"_index":317,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.target",{"_index":315,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.zoom",{"_index":318,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["decompress",{"_index":459,"title":{},"body":{"interfaces/Collision.html":{}}}],["decorator",{"_index":221,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deeply",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["delete",{"_index":538,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["demo",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":906,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["depthmask",{"_index":178,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["derivescenegraph",{"_index":1250,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["derivescenegraph(scenegraphnodename",{"_index":1399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["descrepancies",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["details",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1456,"title":{},"body":{"index.html":{}}}],["developments",{"_index":1186,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["didzoom",{"_index":333,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["different",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["dimension_units",{"_index":568,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["direct",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":105,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["display",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1487,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":69,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["docollisions(scene",{"_index":432,"title":{},"body":{"interfaces/Collision.html":{},"miscellaneous/functions.html":{}}}],["docollisions(state.data",{"_index":187,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["docs",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":768,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["done",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["dracoloader",{"_index":422,"title":{},"body":{"interfaces/Collision.html":{}}}],["during",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":37,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.info",{"_index":192,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["e.isdragging",{"_index":301,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object",{"_index":379,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object['@id",{"_index":380,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.picked",{"_index":377,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e?.srcevent?.ctrlkey",{"_index":391,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["easier",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":1444,"title":{},"body":{"index.html":{}}}],["effect",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":924,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":502,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["entities",{"_index":1410,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityid",{"_index":447,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["es",{"_index":429,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["eslint",{"_index":104,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["eslint/naming",{"_index":170,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["eslint/no",{"_index":109,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["etc",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":729,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1510,"title":{},"body":{"license.html":{}}}],["event.interactionstate?.iszooming",{"_index":395,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate",{"_index":403,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.rotationx",{"_index":405,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.zoom",{"_index":398,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["expanded",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":110,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["exploration",{"_index":1427,"title":{},"body":{"index.html":{}}}],["export",{"_index":126,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["express",{"_index":1333,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["external",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":824,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extraction_set",{"_index":569,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["extractionsitesconfigurl",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractionsitesurl",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":96,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["favor",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":586,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["fetch",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_format",{"_index":604,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["files",{"_index":1479,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["filter(d",{"_index":436,"title":{},"body":{"interfaces/Collision.html":{}}}],["filters",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":329,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["finishing",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["firstfieldname",{"_index":1405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fit",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1506,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["fixes.ts",{"_index":1236,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixes/performance",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["flipy",{"_index":280,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["fly",{"_index":1222,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1495,"title":{},"body":{"license.html":{}}}],["form",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1418,"title":{},"body":{"index.html":{}}}],["free",{"_index":1474,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":72,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1388,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1462,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1494,"title":{},"body":{"license.html":{}}}],["further",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["geometries",{"_index":137,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph",{"_index":148,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph.push(node",{"_index":143,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry",{"_index":144,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry].push(node",{"_index":145,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometry",{"_index":55,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcolor",{"_index":116,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getcursor",{"_index":298,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["getpickinginfo",{"_index":20,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":32,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getposition",{"_index":125,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gettext",{"_index":123,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getting",{"_index":611,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettransformmatrix",{"_index":112,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["github",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["gltf",{"_index":68,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltf.scenes",{"_index":462,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["gltf.ts",{"_index":1249,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gltf:${processednode['@id",{"_index":525,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfcache",{"_index":17,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltfloader",{"_index":424,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltfnode",{"_index":526,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes",{"_index":518,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes.push",{"_index":524,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfoverride",{"_index":1415,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfpromise",{"_index":1403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfscene",{"_index":461,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltftransform",{"_index":349,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["gltfurl",{"_index":341,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["good",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":900,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["grab",{"_index":303,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["grabbing",{"_index":302,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["granted",{"_index":1473,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":497,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":500,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":499,"title":{},"body":{"interfaces/Collision.html":{}}}],["halfsize",{"_index":547,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["hand",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["helmet",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1472,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["highlightcolor",{"_index":97,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["highlighted",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":492,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":498,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":496,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":495,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":419,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":482,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":479,"title":{},"body":{"interfaces/Collision.html":{}}}],["holders",{"_index":1512,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":211,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["htmlelement",{"_index":212,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["http://localhost:8080/source_data/asct",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/extraction",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/reference",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://beta",{"_index":1430,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":1441,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1434,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":342,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":347,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["https://humanatlas.io",{"_index":1453,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1436,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1432,"title":{},"body":{"index.html":{}}}],["https://r5i95k35v5.us",{"_index":1443,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":660,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":614,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":92,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1503,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["improve",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1498,"title":{},"body":{"license.html":{}}}],["includes",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":801,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1460,"title":{},"body":{"index.html":{}}}],["individual",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{}}}],["info.object",{"_index":388,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.object['@id",{"_index":389,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.picked",{"_index":387,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info?.object?.['@id",{"_index":414,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["information",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":322,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["initializestate",{"_index":21,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["instead",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":306,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interact",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":393,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interactive",{"_index":203,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interest",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":196,"title":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":198,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["isdragging",{"_index":299,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["issue",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":394,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["it's",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":635,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":507,"title":{},"body":{"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["jsonld.ts",{"_index":559,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["jsonld/jsonld",{"_index":589,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["jsonldobj",{"_index":560,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["july",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":76,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["keyboard",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1502,"title":{},"body":{"license.html":{}}}],["known",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":189,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["label",{"_index":570,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["labs/data",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["labs/dispatch",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["landmarks.csv",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["larger",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["lasthovered",{"_index":272,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["latest",{"_index":690,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layer",{"_index":227,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["layer.ts",{"_index":10,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["layer.ts:143",{"_index":33,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:71",{"_index":31,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:72",{"_index":29,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:74",{"_index":40,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:80",{"_index":42,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layername",{"_index":18,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers",{"_index":51,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["layers.filter(l",{"_index":188,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push",{"_index":157,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(`${geometry}pickable",{"_index":185,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(geometry",{"_index":184,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('text",{"_index":180,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('textpickable",{"_index":183,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["lb",{"_index":541,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["lb.clone().vadd(halfsize",{"_index":551,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ld",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":587,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["left/right",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["legacylighting",{"_index":204,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["level",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1516,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1513,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":750,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["library/vh_female/united/vhf_united_color.glb",{"_index":346,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["library/vh_male/united/vhm_united_color.glb",{"_index":345,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["license",{"_index":1466,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["lightingeffect",{"_index":215,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["limitation",{"_index":1482,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1125,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":107,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["link",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":780,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":25,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":420,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{}}}],["load(model.scenegraph",{"_index":458,"title":{},"body":{"interfaces/Collision.html":{}}}],["loaded",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":421,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":423,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":425,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loadgltf",{"_index":64,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf(model",{"_index":1401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadgltf({scenegraph",{"_index":517,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["loadgltf2",{"_index":65,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf2(model.scenegraphnode",{"_index":167,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["loadgltf2(scenegraphnodename",{"_index":1402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loading",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1454,"title":{},"body":{"index.html":{}}}],["logging",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":325,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["lowerbound",{"_index":442,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lowerbound[i",{"_index":455,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lru",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":57,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["m",{"_index":147,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraph",{"_index":149,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraphnode",{"_index":150,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["made",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":585,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["managers",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["map(model",{"_index":439,"title":{},"body":{"interfaces/Collision.html":{}}}],["march",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":440,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint",{"_index":443,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":445,"title":{},"body":{"interfaces/Collision.html":{}}}],["match",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":194,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":59,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":489,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(n",{"_index":454,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["math.min(math.max(1",{"_index":397,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["math.min(n",{"_index":451,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["matrix",{"_index":366,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix.gettranslation",{"_index":369,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4",{"_index":58,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e",{"_index":350,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(d.transformmatrix).gettranslation",{"_index":122,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["matrix4(matrix4.identity",{"_index":553,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(model.transformmatrix",{"_index":441,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(modelmatrix",{"_index":523,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":367,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(worldmatrix",{"_index":519,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4.identity",{"_index":520,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["maxhits",{"_index":488,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":205,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["mc",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1505,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1485,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":82,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer",{"_index":1240,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meshlayer(id",{"_index":73,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["minor",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":206,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["miscellaneous",{"_index":1387,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1467,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":156,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["model._lighting",{"_index":173,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.color",{"_index":176,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.entityid",{"_index":448,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.opacity",{"_index":163,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraph",{"_index":169,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraphnode",{"_index":166,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.tooltip",{"_index":446,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":175,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.unpickable",{"_index":165,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.zoombasedopacity",{"_index":161,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model['@id",{"_index":159,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["modelmatrix",{"_index":464,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":472,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":471,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["models",{"_index":158,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1484,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1526,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1420,"title":{},"body":{"index.html":{}}}],["more",{"_index":707,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouseevent",{"_index":241,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["moved",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1421,"title":{},"body":{"index.html":{}}}],["n.bbox",{"_index":532,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["n.unpickable",{"_index":182,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["n3",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":510,"title":{},"body":{"interfaces/ProcessedNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names.push(child.name",{"_index":514,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["navigation",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["near",{"_index":281,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["need",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1458,"title":{},"body":{"index.html":{}}}],["new",{"_index":87,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":106,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["ng5",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1463,"title":{},"body":{"index.html":{}}}],["node",{"_index":63,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["node.bbox",{"_index":535,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.extend(child.bbox",{"_index":537,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.lowerbound",{"_index":542,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.upperbound",{"_index":544,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.center",{"_index":550,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.geometry",{"_index":141,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.id",{"_index":522,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.mesh",{"_index":465,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives",{"_index":466,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives.length",{"_index":467,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.name",{"_index":474,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.scenegraph",{"_index":142,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.size",{"_index":545,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.transformmatrix",{"_index":552,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.ts",{"_index":606,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["node.zoomtoonload",{"_index":334,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclick",{"_index":257,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclickevent",{"_index":242,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodeclicksubject",{"_index":249,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedrag",{"_index":267,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragend",{"_index":269,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragendsubject",{"_index":256,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragevent",{"_index":240,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodedragstart",{"_index":265,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragstartsubject",{"_index":254,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragsubject",{"_index":255,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstart",{"_index":259,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstartsubject",{"_index":250,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstop",{"_index":261,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstopsubject",{"_index":251,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodes",{"_index":154,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["nodes.filter(n",{"_index":181,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["nodes.ts",{"_index":505,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodes[n]).filter(n",{"_index":534,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[node['@id",{"_index":539,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[processednode['@id",{"_index":530,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["noninfringement",{"_index":1509,"title":{},"body":{"license.html":{}}}],["note",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1040,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":115,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["numeric",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":235,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/variables.html":{}}}],["object.entries(geometries",{"_index":155,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.prototype.hasownproperty.call(url2gltf",{"_index":151,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.values(nodes",{"_index":540,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(nodes).filter(n",{"_index":531,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(results",{"_index":358,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["obtaining",{"_index":1477,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1435,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":288,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondrag",{"_index":294,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragend",{"_index":296,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragstart",{"_index":292,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["one",{"_index":1083,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["onhover",{"_index":286,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["online",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["ontology/objects/vhf_united_v01_060420.glb",{"_index":348,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["onviewstatechange",{"_index":290,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["opacities",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":160,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["openapi",{"_index":792,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1449,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1451,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1450,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":75,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options.geometry",{"_index":84,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["orbitaxis",{"_index":231,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["orbitview",{"_index":216,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["organ",{"_index":664,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["organs/anatomical",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["orthographic",{"_index":279,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["orthographicview",{"_index":217,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ot2od026671",{"_index":1465,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1521,"title":{},"body":{"license.html":{}}}],["out",{"_index":1523,"title":{},"body":{"license.html":{}}}],["over",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1527,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":754,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["parameters['getpickinginfo']>[0",{"_index":190,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["parent",{"_index":207,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["parsecsv",{"_index":1253,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsv(sourceurl",{"_index":1404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsecsvtext",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsvtext(csvtext",{"_index":1407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":275,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["particular",{"_index":1507,"title":{},"body":{"license.html":{}}}],["partly",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["pbr",{"_index":174,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["performance",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1471,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1492,"title":{},"body":{"license.html":{}}}],["person",{"_index":1476,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1493,"title":{},"body":{"license.html":{}}}],["pick",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["pickable",{"_index":93,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["picked",{"_index":239,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["pickinfo",{"_index":234,"title":{"interfaces/PickInfo.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["placeholder",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":571,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["placement_date",{"_index":591,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["placenta",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":378,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["popup",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":802,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1500,"title":{},"body":{"license.html":{}}}],["position",{"_index":121,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["possible",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["postprocess",{"_index":460,"title":{},"body":{"interfaces/Collision.html":{}}}],["preferences",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["primitive",{"_index":468,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position",{"_index":469,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position.min",{"_index":470,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["priority",{"_index":607,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["private",{"_index":248,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["process",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["processanatomicalstructures",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processanatomicalstructures(sourceurl",{"_index":1409,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processed",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["processednode",{"_index":503,"title":{"interfaces/ProcessedNode.html":{}},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["processednode.bbox",{"_index":529,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processednode['@id",{"_index":527,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processextractionsites",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processextractionsites(sourceurl",{"_index":1411,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processing",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["processreferencedata",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processreferencedata(refentities",{"_index":1412,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processscenenodes",{"_index":228,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processscenenodes(gltfurl",{"_index":354,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities(parent",{"_index":1414,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":769,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1422,"title":{},"body":{"index.html":{}}}],["projects/.../body",{"_index":1393,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../global",{"_index":1389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../load",{"_index":1391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../parse",{"_index":1394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../process",{"_index":1390,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene",{"_index":1396,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../simplify",{"_index":1395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../spatial",{"_index":1392,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":128,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["promise(r",{"_index":326,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["props",{"_index":276,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["props.effects",{"_index":305,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["provided",{"_index":1225,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1486,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1508,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":634,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":648,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["r.hits.length",{"_index":490,"title":{},"body":{"interfaces/Collision.html":{}}}],["rc.1",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["real",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":138,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rectify",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["refentities",{"_index":1413,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":344,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":572,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["referencedataconfig",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["referenceorganconfigurl",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refernced",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["registergltfloaders",{"_index":66,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registration",{"_index":822,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["renderlayers",{"_index":22,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["report",{"_index":475,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":483,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":1419,"title":{},"body":{"index.html":{}}}],["representation_of",{"_index":573,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["required",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["resets",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1481,"title":{},"body":{"license.html":{}}}],["result",{"_index":193,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":195,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["returns",{"_index":38,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":39,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["returntype['getpickinginfo",{"_index":191,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rgb",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":588,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["rights",{"_index":1483,"title":{},"body":{"license.html":{}}}],["root",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":208,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotation_units",{"_index":599,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rotationorbit",{"_index":232,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotationx",{"_index":233,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["round",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":658,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["rui_rank",{"_index":574,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rxjs",{"_index":224,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":226,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sad",{"_index":476,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":486,"title":{},"body":{"interfaces/Collision.html":{}}}],["sample",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["scale(halfsize.toarray",{"_index":555,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scaling_units",{"_index":595,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["scene",{"_index":62,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scene.children",{"_index":513,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.filter(d",{"_index":457,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":512,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.ts",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scenegraph",{"_index":139,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphlayer",{"_index":48,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["scenegraphnode",{"_index":362,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["scenegraphnodename",{"_index":1400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scenerotation",{"_index":263,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenerotationsubject",{"_index":252,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenetraversalvisitor",{"_index":1531,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scheduled",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1459,"title":{},"body":{"index.html":{}}}],["search",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":704,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1490,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["setinteractive(value",{"_index":375,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotation(value",{"_index":371,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotationx(value",{"_index":372,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setscene(data",{"_index":331,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settarget(value",{"_index":374,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settimeout(r",{"_index":327,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setup",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["setzoom(value",{"_index":373,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sex",{"_index":575,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sexes",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1497,"title":{},"body":{"license.html":{}}}],["share",{"_index":225,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["shared",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["shared/spatial",{"_index":61,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["shortest",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":576,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sides",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["simplemeshlayer",{"_index":49,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["simplifies",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["simplifyscene",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["simplifyscene(nodes",{"_index":1416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["site",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sites",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["sites.ts",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizable",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":508,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["size.clone().vmul(new",{"_index":548,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["slice_count",{"_index":577,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slice_thickness",{"_index":578,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slider",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1424,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceboxes",{"_index":435,"title":{},"body":{"interfaces/Collision.html":{}}}],["sources",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["sourceurl",{"_index":1406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sparc",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":647,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":558,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialentityjsonld",{"_index":556,"title":{"interfaces/SpatialEntityJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialobjectreferencejsonld",{"_index":583,"title":{"interfaces/SpatialObjectReferenceJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialplacementjsonld",{"_index":584,"title":{"interfaces/SpatialPlacementJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialscenegeometry",{"_index":610,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spatialscenenode",{"_index":60,"title":{"interfaces/SpatialSceneNode.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["spec",{"_index":590,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1447,"title":{},"body":{"index.html":{}}}],["specific",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1446,"title":{},"body":{"index.html":{}}}],["speed",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["sphere",{"_index":86,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spheregeometry",{"_index":56,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["spinal",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":477,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":478,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":484,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":485,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":385,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["stage",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":770,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1428,"title":{},"body":{"index.html":{}}}],["started",{"_index":612,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":134,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.data",{"_index":140,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.docollisions",{"_index":186,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.zoomopacity",{"_index":162,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["statements",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["stay",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["structures.ts",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":223,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"license.html":{}}}],["subject.next",{"_index":415,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sublicense",{"_index":1488,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1499,"title":{},"body":{"license.html":{}}}],["such",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["support",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":83,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["switched",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":209,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["target.name",{"_index":481,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":480,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes",{"_index":456,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":473,"title":{},"body":{"interfaces/Collision.html":{}}}],["technologies",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["terms",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":361,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["testing",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":124,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["textlayer",{"_index":46,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textlayer(id",{"_index":119,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["theme",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["this._dragevent(info",{"_index":407,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onclick",{"_index":289,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondrag",{"_index":295,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragend",{"_index":297,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragstart",{"_index":293,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onhover",{"_index":287,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onviewstatechange",{"_index":291,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer",{"_index":285,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.setstate",{"_index":338,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.state",{"_index":323,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.cursor",{"_index":300,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.debugscenenodeprocessing(data",{"_index":339,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck",{"_index":308,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.finalize",{"_index":330,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.props.viewstate",{"_index":368,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.setprops",{"_index":310,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deckprops.debugscenenodeprocessing",{"_index":337,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.lasthovered",{"_index":382,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.next",{"_index":390,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":258,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject",{"_index":412,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject.pipe(share",{"_index":270,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject",{"_index":408,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject.pipe(share",{"_index":266,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject",{"_index":410,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject.pipe(share",{"_index":268,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":383,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":260,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":381,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":262,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.props",{"_index":130,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.scenerotationsubject.next([deckprops.rotation",{"_index":320,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.next([event.viewstate.rotationorbit",{"_index":404,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.pipe(share",{"_index":264,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.setstate",{"_index":131,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.state",{"_index":135,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.zoomto(node",{"_index":335,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["through",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":494,"title":{},"body":{"interfaces/Collision.html":{},"changelog.html":{}}}],["tissues",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["tool",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":528,"title":{},"body":{"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":1520,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["transformmatrix",{"_index":114,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["translate(center.toarray",{"_index":554,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["translation_units",{"_index":603,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["transparency",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["traversal",{"_index":431,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["traversal.ts",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["traversescene",{"_index":430,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["traversescene(gltfscene",{"_index":463,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":521,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["travisci",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":94,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["try",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1230,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1529,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":108,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["ub",{"_index":543,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ub.clone().vsub(lb",{"_index":546,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ufl",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":9,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1431,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1440,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1437,"title":{},"body":{"index.html":{}}}],["ui.ts",{"_index":199,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/organ",{"_index":1439,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1438,"title":{},"body":{"index.html":{}}}],["ui/src/global",{"_index":1235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/body",{"_index":8,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/shared/ccf",{"_index":557,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["ui/src/lib/shared/spatial",{"_index":605,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/load",{"_index":1248,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/parse",{"_index":1251,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/process",{"_index":504,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui/src/lib/util/scene",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/simplify",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/spatial",{"_index":417,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uis",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":78,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/functions.html":{}}}],["university",{"_index":1461,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["unnecessary",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":608,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["unselect",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["updated_date",{"_index":579,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["updates",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["upperbound",{"_index":444,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["upperbound[i",{"_index":452,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["url",{"_index":127,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{}}}],["url2gltf",{"_index":146,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[m.scenegraph",{"_index":152,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[model.scenegraph",{"_index":168,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["usage",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":629,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":617,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["util/load",{"_index":67,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["util/process",{"_index":229,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["util/spatial",{"_index":70,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["utilities",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["v2.1.0",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1532,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec3",{"_index":427,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...lowerbound.map((n",{"_index":450,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...upperbound.map((n",{"_index":453,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(0.5",{"_index":549,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["version",{"_index":794,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["vhf_kidney_l_low1').then((results",{"_index":355,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["vhf_kidney_r_low",{"_index":363,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["via",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":277,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["viewstate",{"_index":311,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["viewstateprops",{"_index":218,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["visitor",{"_index":1417,"title":{},"body":{"miscellaneous/functions.html":{}}}],["visual",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":41,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1504,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1501,"title":{},"body":{"license.html":{}}}],["web",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1426,"title":{},"body":{"index.html":{}}}],["week",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1517,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["wireframe",{"_index":111,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["within",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":820,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["worldmatrix",{"_index":516,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["wrapper",{"_index":245,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x",{"_index":236,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x_dimension",{"_index":580,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_rotation",{"_index":596,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_scaling",{"_index":592,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_translation",{"_index":600,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y",{"_index":237,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["y_dimension",{"_index":581,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_rotation",{"_index":597,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_scaling",{"_index":593,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_translation",{"_index":601,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["yes",{"_index":1398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youtube",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["z_dimension",{"_index":582,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_rotation",{"_index":598,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_scaling",{"_index":594,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_translation",{"_index":602,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["zone.js",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":210,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoombasedopacity",{"_index":364,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomopacity",{"_index":132,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomto(node",{"_index":365,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomtoonload",{"_index":609,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                gltfCache\n                            \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        gltfCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        layerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BodyUILayer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPickingInfo\n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReturnType<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderLayers\n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     []\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { TextLayer } from '@deck.gl/layers';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { ConeGeometry, CubeGeometry, CylinderGeometry, Geometry, SphereGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    let mesh: Geometry;\n    switch (options.geometry) {\n      case 'sphere':\n        mesh = new SphereGeometry();\n        break;\n      case 'cone':\n        mesh = new ConeGeometry();\n        break;\n      case 'cylinder':\n        mesh = new CylinderGeometry();\n        break;\n      case 'cube':\n      default:\n        mesh = new CubeGeometry();\n        break;\n    }\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: mesh as any,\n        wireframe: false,\n        getTransformMatrix: (d) => (d as { transformMatrix: number[][] }).transformMatrix,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nfunction textLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): TextLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new TextLayer({\n      ...{\n        id,\n        pickable: true,\n        data: data.map(d => ({ ...d, position: new Matrix4(d.transformMatrix).getTranslation() })),\n        getText: (d) => (d as { text: string }).text,\n        getPosition: (d) => (d as { position: [number, number] }).position,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise } = {};\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as { data: SpatialSceneNode[]; zoomOpacity: number; doCollisions: boolean };\n    const geometries: Record = {\n      'sphere': [], 'cone': [], 'cylinder': [], 'cube': [], 'text': [], 'wireframe': [], 'scenegraph': []\n    };\n\n    for (const node of state.data) {\n      const geometry = node.geometry ?? 'cube';\n      if (node.scenegraph) {\n        geometries.scenegraph.push(node);\n      } else if (geometries[geometry] !== undefined) {\n        geometries[geometry].push(node);\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise } = {};\n    for (const m of geometries.scenegraph) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    const layers: unknown[] = [];\n    for (const [geometry, nodes] of Object.entries(geometries)) {\n      if (geometry === 'scenegraph') {\n        for (const model of nodes) {\n          layers.push(\n            new ScenegraphLayer({\n              id: 'models-' + model['@id'],\n              opacity: model.zoomBasedOpacity ? state.zoomOpacity : (model.opacity !== undefined ? model.opacity : 1.0),\n              pickable: !model.unpickable,\n              coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n              data: [model],\n              scenegraph: model.scenegraphNode ?\n                loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string]) :\n                model.scenegraph as unknown as URL,\n              // eslint-disable-next-line @typescript-eslint/naming-convention\n              _lighting: model._lighting, // 'pbr' | undefined\n              getTransformMatrix: model.transformMatrix as unknown as number[][],\n              getColor: model.color ?? [0, 255, 0, 0.5*255],\n              parameters: { depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1) }\n            })\n          );\n        }\n      } else if (geometry === 'text') {\n        layers.push(textLayer('text', nodes.filter(n => n.unpickable), { pickable: false }));\n        layers.push(textLayer('textPickable', nodes.filter(n => !n.unpickable), { pickable: true }));\n      } else if (geometry === 'wireframe') {\n        layers.push(meshLayer(geometry, nodes, { wireframe: true, pickable: false, geometry }));\n      } else {\n        layers.push(meshLayer(geometry, nodes.filter(n => n.unpickable), { wireframe: false, pickable: false, geometry }));\n        layers.push(meshLayer(`${geometry}Pickable`, nodes.filter(n => !n.unpickable), { wireframe: false, pickable: true, geometry }));\n      }\n    }\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return layers.filter(l => !!l);\n  }\n\n  getPickingInfo(\n    e: Parameters['getPickingInfo']>[0]\n  ): ReturnType['getPickingInfo']> {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debugSceneNodeProcessing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            legacyLighting\n                                        \n                                \n                                \n                                        \n                                            maxRotationX\n                                        \n                                \n                                \n                                        \n                                            minRotationX\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugSceneNodeProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugSceneNodeProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyLighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyLighting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orbitAxis\n                                        \n                                \n                                \n                                        \n                                            rotationOrbit\n                                        \n                                \n                                \n                                        \n                                            rotationX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationOrbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationOrbit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\n/* eslint-disable  */\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && d.geometry !== 'wireframe')\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickInfo.html":{"url":"interfaces/PickInfo.html","title":"interface - PickInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picked\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedNode.html":{"url":"interfaces/ProcessedNode.html","title":"interface - ProcessedNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SpatialSceneNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            jsonld\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:     AABB\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AABB\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonld:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\n\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n/* eslint-disable  */\nfunction childNames(scene, names: string[] = []): string[] {\n  for (const child of (scene.nodes || scene.children || [])) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string, \n    gltfCache?: { [url: string]: Promise }): Promise {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({scenegraph: gltfUrl, scenegraphNode} as SpatialSceneNode, gltfCache);\n  const nodes: {[node: string]: ProcessedNode} = {};\n  const gltfNodes: ProcessedNode[] = [];\n  for (const scene of gltf.scenes) {\n    worldMatrix = new Matrix4(worldMatrix || Matrix4.IDENTITY);\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        geometry: 'wireframe',\n        node\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter(n => !n.bbox)) {\n    for (const child of childNames(node.node).map(n => nodes[n]).filter(n => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = node.size = ub.clone().vsub(lb);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = node.center = lb.clone().vadd(halfSize);\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY)\n      .translate(center.toArray())\n      .scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntityJsonLd.html":{"url":"interfaces/SpatialEntityJsonLd.html","title":"interface - SpatialEntityJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialEntityJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            ccf_annotations\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            creation_date\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            creator_first_name\n                                        \n                                \n                                \n                                        \n                                            creator_last_name\n                                        \n                                \n                                \n                                        \n                                            dimension_units\n                                        \n                                \n                                \n                                        \n                                            extraction_set\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                                \n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                        \n                                            rui_rank\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slice_count\n                                        \n                                \n                                \n                                        \n                                            slice_thickness\n                                        \n                                \n                                \n                                        \n                                            updated_date\n                                        \n                                \n                                \n                                        \n                                            x_dimension\n                                        \n                                \n                                \n                                        \n                                            y_dimension\n                                        \n                                \n                                \n                                        \n                                            z_dimension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccf_annotations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ccf_annotations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraction_set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraction_set:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReferenceJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReferenceJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"Left\" | \"Right\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Left\" | \"Right\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReferenceJsonLd.html":{"url":"interfaces/SpatialObjectReferenceJsonLd.html","title":"interface - SpatialObjectReferenceJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialObjectReferenceJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            file_format\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacementJsonLd.html":{"url":"interfaces/SpatialPlacementJsonLd.html","title":"interface - SpatialPlacementJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialPlacementJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            placement_date\n                                        \n                                \n                                \n                                        \n                                            rotation_units\n                                        \n                                \n                                \n                                        \n                                            scaling_units\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            translation_units\n                                        \n                                \n                                \n                                        \n                                            x_rotation\n                                        \n                                \n                                \n                                        \n                                            x_scaling\n                                        \n                                \n                                \n                                        \n                                            x_translation\n                                        \n                                \n                                \n                                        \n                                            y_rotation\n                                        \n                                \n                                \n                                        \n                                            y_scaling\n                                        \n                                \n                                \n                                        \n                                            y_translation\n                                        \n                                \n                                \n                                        \n                                            z_rotation\n                                        \n                                \n                                \n                                        \n                                            z_scaling\n                                        \n                                \n                                \n                                        \n                                            z_translation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _lighting\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            geometry\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraphNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            transformMatrix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomBasedOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToOnLoad\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geometry:         SpatialSceneGeometry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialSceneGeometry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui/src/global-fixes.ts\n            \n            function\n            castToGlobalType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            class\n            BodyUILayer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            meshLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            textLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            class\n            BodyUI\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIProps\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIViewStateProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            PickInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialEntityJsonLd\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialObjectReferenceJsonLd\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialPlacementJsonLd\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n            \n            interface\n            SpatialSceneNode\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            deriveScenegraph\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            registerGLTFLoaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSVText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n            \n            function\n            processAnatomicalStructures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n            \n            function\n            processExtractionSites\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            function\n            processReferenceData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            variable\n            referenceDataConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            interface\n            ProcessedNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            childNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            processSceneNodes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n            \n            function\n            processSpatialEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n            \n            function\n            traverseScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n            \n            function\n            simplifyScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            function\n            doCollisions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            castToGlobalType   (projects/.../global-fixes.ts)\n                        \n                        \n                            childNames   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            deriveScenegraph   (projects/.../load-gltf.ts)\n                        \n                        \n                            doCollisions   (projects/.../spatial-scene-collider.ts)\n                        \n                        \n                            loadGLTF   (projects/.../load-gltf.ts)\n                        \n                        \n                            loadGLTF2   (projects/.../load-gltf.ts)\n                        \n                        \n                            meshLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            parseCSV   (projects/.../parse-csv.ts)\n                        \n                        \n                            parseCSVText   (projects/.../parse-csv.ts)\n                        \n                        \n                            processAnatomicalStructures   (projects/.../process-anatomical-structures.ts)\n                        \n                        \n                            processExtractionSites   (projects/.../process-extraction-sites.ts)\n                        \n                        \n                            processReferenceData   (projects/.../process-reference-data.ts)\n                        \n                        \n                            processSceneNodes   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            processSpatialEntities   (projects/.../process-spatial-entities.ts)\n                        \n                        \n                            registerGLTFLoaders   (projects/.../load-gltf.ts)\n                        \n                        \n                            simplifyScene   (projects/.../simplify-scene.ts)\n                        \n                        \n                            textLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            traverseScene   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/global-fixes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        castToGlobalType\n                        \n                    \n                \n            \n            \n                \ncastToGlobalType(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        childNames\n                        \n                    \n                \n            \n            \n                \nchildNames(scene, names)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    names\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSceneNodes\n                        \n                    \n                \n            \n            \n                \nprocessSceneNodes(gltfUrl, worldMatrix?, scenegraphNode?, gltfCache?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gltfUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    scenegraphNode\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    gltfCache\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/load-gltf.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deriveScenegraph\n                        \n                    \n                \n            \n            \n                \nderiveScenegraph(scenegraphNodeName, gltf)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltf\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF\n                        \n                    \n                \n            \n            \n                \nloadGLTF(model, cache?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cache\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF2\n                        \n                    \n                \n            \n            \n                \nloadGLTF2(scenegraphNodeName, gltfPromise)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfPromise\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerGLTFLoaders\n                        \n                    \n                \n            \n            \n                \nregisterGLTFLoaders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doCollisions\n                        \n                    \n                \n            \n            \n                \ndoCollisions(scene)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/body-ui-layer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meshLayer\n                        \n                    \n                \n            \n            \n                \nmeshLayer(id, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SimpleMeshLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textLayer\n                        \n                    \n                \n            \n            \n                \ntextLayer(id, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TextLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/parse-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseCSV\n                        \n                    \n                \n            \n            \n                \nparseCSV(sourceUrl, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCSVText\n                        \n                    \n                \n            \n            \n                \nparseCSVText(csvText, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    csvText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processAnatomicalStructures\n                        \n                    \n                \n            \n            \n                \nprocessAnatomicalStructures(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processExtractionSites\n                        \n                    \n                \n            \n            \n                \nprocessExtractionSites(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processReferenceData\n                        \n                    \n                \n            \n            \n                \nprocessReferenceData(refEntities, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refEntities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSpatialEntities\n                        \n                    \n                \n            \n            \n                \nprocessSpatialEntities(parent, gltfOverride?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfOverride\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        simplifyScene\n                        \n                    \n                \n            \n            \n                \nsimplifyScene(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        traverseScene\n                        \n                    \n                \n            \n            \n                \ntraverseScene(scene, worldMatrix, visitor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    visitor\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) and Common Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://r5i95k35v5.us-east-2.awsapprunner.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeClickEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            NodeDragEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            SceneTraversalVisitor   (projects/.../scene-traversal.ts)\n                        \n                        \n                            SpatialSceneGeometry   (projects/.../spatial-scene-node.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/body-ui.ts\n    \n    \n        \n            \n                \n                    \n                    NodeClickEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeDragEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n    \n        \n            \n                \n                    \n                    SceneTraversalVisitor\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n    \n    \n        \n            \n                \n                    \n                    SpatialSceneGeometry\n                \n            \n            \n                \n                        \"sphere\" | \"cube\" | \"wireframe\" | \"text\" | \"cone\" | \"cylinder\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            referenceDataConfig   (projects/.../process-reference-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        referenceDataConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  extractionSitesUrl: 'http://localhost:8080/source_data/asct-b-3d-models-landmarks.csv',\n  extractionSitesConfigUrl: 'http://localhost:8080/source_data/extraction-site-config.csv',\n  anatomicalStructuresUrl: 'http://localhost:8080/source_data/asct-b-3d-models-crosswalk.csv',\n  referenceOrganConfigUrl: 'http://localhost:8080/source_data/reference-organ-config.csv'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
