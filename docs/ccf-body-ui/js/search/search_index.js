var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BodyUILayer.html",[0,1.305,1,1.305]],["body/classes/BodyUILayer.html",[0,0.974,1,1.865,2,1.738,3,0.452,4,0.591,5,0.39,6,0.71,7,0.49,8,1.832,9,1.619,10,1.469,11,1.115,12,3.729,13,0.333,14,0.572,15,4.572,16,2.702,17,2.552,18,3.729,19,3.148,20,3.729,21,4.108,22,4.108,23,0.486,24,0.05,25,1.268,26,2.203,27,1.429,28,3.542,29,2.146,30,1.194,31,2.146,32,2.146,33,2.146,34,2.549,35,1.268,36,0.76,37,1.86,38,3.02,39,2.146,40,2.146,41,1.625,42,2.146,43,1.335,44,2.146,45,1.108,46,2.552,47,1.738,48,3.148,49,3.02,50,1.738,51,1.625,52,3.148,53,3.148,54,3.148,55,3.441,56,3.148,57,1.738,58,0.76,59,0.76,60,1.205,61,0.974,62,0.76,63,1.262,64,1.86,65,1.469,66,1.86,67,2.146,68,1.268,69,2.552,70,2.146,71,2.146,72,1.625,73,1.738,74,2.314,75,2.812,76,3.148,77,2.076,78,1.673,79,3.148,80,1.646,81,3.13,82,4.725,83,1.738,84,2.146,85,3.326,86,2.155,87,1.716,88,4.108,89,2.155,90,2.155,91,2.552,92,0.785,93,4.846,94,1.986,95,2.146,96,2.864,97,2.146,98,1.738,99,2.146,100,2.146,101,2.258,102,3.148,103,3.148,104,1.693,105,1.693,106,1.925,107,2.203,108,1.693,109,1.86,110,1.86,111,2.36,112,3.729,113,3.011,114,1.646,115,1.628,116,2.146,117,3.148,118,1.429,119,1.738,120,2.146,121,3.02,122,2.146,123,2.146,124,2.812,125,2.146,126,0.591,127,3.02,128,1.262,129,2.282,130,2.146,131,2.146,132,1.86,133,2.146,134,2.146,135,2.146,136,0.974,137,2.146,138,2.146,139,1.865,140,2.146,141,2.146,142,2.146,143,2.146,144,2.146,145,2.146,146,2.146,147,2.146,148,2.146,149,3.729,150,2.146,151,2.146,152,2.146,153,2.146,154,1.693,155,2.146,156,1.86,157,2.146,158,1.738,159,1.738,160,1.469,161,3.148,162,2.146,163,3.729,164,1.108,165,2.146,166,2.146,167,2.146,168,2.146,169,2.146,170,1.268,171,1.268,172,0.974,173,2.146,174,1.108,175,2.146,176,2.146,177,2.146,178,2.146,179,1.469,180,2.146,181,4.108,182,4.108,183,2.146,184,3.148,185,2.146,186,2.146,187,2.146,188,2.146,189,2.146,190,2.146,191,2.146,192,2.146,193,0.027,194,0.027]],["title/interfaces/BodyUIProps.html",[195,0.025,196,1.483]],["body/interfaces/BodyUIProps.html",[0,1.216,1,1.486,3,0.689,4,0.477,5,0.315,6,0.269,7,0.351,8,0.694,9,0.948,11,0.613,13,0.416,14,0.487,16,3.007,23,0.664,24,0.05,27,1.809,30,1.188,36,1.305,37,2.863,41,2.65,43,1.283,45,0.893,51,0.893,58,1.411,59,0.613,60,1.25,61,0.786,62,0.647,63,1.688,74,2.061,77,1.486,78,1.159,80,1.819,87,1.818,92,0.839,94,1.216,96,1.935,101,2.175,104,1.809,105,1.809,106,2.057,107,2.355,108,1.216,109,1.023,110,1.023,113,1.023,114,1.073,115,1.706,118,0.786,126,1.097,128,0.694,129,2.161,132,2.945,136,2.331,139,0.786,154,0.786,164,0.893,170,1.023,171,1.023,172,0.786,174,0.893,193,0.028,194,0.023,195,0.028,196,1.382,197,0.364,198,0.893,199,2.884,200,2.522,201,2.522,202,2.522,203,2.522,204,2.728,205,2.728,206,1.902,207,2.522,208,1.819,209,3.107,210,2.241,211,2.241,212,2.241,213,2.241,214,1.833,215,1.833,216,1.833,217,1.833,218,1.185,219,2.682,220,1.023,221,1.185,222,2.753,223,1.023,224,1.185,225,1.185,226,1.833,227,0.893,228,1.185,229,2.343,230,2.241,231,2.522,232,2.522,233,2.268,234,1.305,235,1.185,236,2.241,237,1.023,238,1.833,239,1.023,240,2.728,241,1.023,242,1.833,243,1.185,244,1.185,245,0.893,246,1.023,247,3.541,248,1.185,249,1.185,250,1.185,251,1.185,252,1.185,253,1.185,254,1.185,255,1.185,256,1.185,257,1.185,258,1.185,259,1.185,260,1.185,261,1.185,262,1.185,263,1.185,264,1.185,265,1.185,266,1.185,267,1.185,268,1.185,269,1.185,270,1.185,271,2.728,272,1.185,273,1.833,274,1.185,275,1.185,276,1.023,277,1.833,278,1.023,279,1.185,280,1.185,281,1.185,282,1.833,283,1.185,284,1.185,285,1.185,286,1.185,287,1.185,288,1.185,289,1.185,290,1.185,291,1.185,292,1.185,293,1.185,294,1.185,295,1.185,296,1.185,297,1.185,298,1.185,299,1.833,300,1.185,301,1.185,302,1.185,303,1.185,304,1.185,305,1.185,306,1.185,307,1.185,308,1.185,309,3.107,310,3.107,311,1.185,312,1.582,313,1.185,314,1.185,315,1.582,316,1.833,317,1.185,318,1.185,319,1.185,320,0.893,321,1.185,322,2.241,323,1.382,324,1.185,325,1.185,326,1.185,327,1.833,328,1.185,329,1.185,330,1.185,331,1.185,332,2.241,333,1.185,334,1.185,335,1.833,336,1.185,337,2.241,338,1.185,339,1.185,340,1.902,341,1.582,342,1.382,343,0.948,344,1.185,345,1.185,346,1.185,347,1.185,348,2.241,349,1.185,350,1.185,351,1.185,352,1.185,353,0.893,354,1.185,355,1.185,356,1.185,357,1.185,358,1.185,359,1.185,360,1.582,361,0.786,362,1.185,363,0.893,364,1.185,365,1.185,366,1.185,367,2.728,368,1.185,369,1.185,370,1.185,371,1.185,372,1.185,373,1.185,374,1.185,375,1.185,376,1.833,377,1.185,378,1.185,379,1.833,380,1.833,381,1.833,382,1.185,383,1.185,384,1.185,385,1.185,386,1.185,387,1.185,388,1.185,389,1.833,390,1.185,391,1.185,392,1.185,393,1.185,394,1.185,395,1.185,396,1.185,397,1.185,398,1.185,399,0.786,400,1.185,401,1.185,402,1.185,403,1.185,404,1.185,405,1.185,406,2.241,407,1.185,408,1.185,409,1.185,410,1.185,411,1.185,412,1.185,413,1.185,414,1.185]],["title/interfaces/BodyUIViewStateProps.html",[195,0.025,229,1.483]],["body/interfaces/BodyUIViewStateProps.html",[0,1.243,1,1.514,3,0.702,4,0.491,5,0.324,6,0.277,7,0.357,8,0.714,9,0.969,11,0.969,13,0.425,14,0.498,16,3.024,23,0.613,24,0.05,27,1.833,30,1.159,36,1.325,37,2.884,41,2.664,43,1.294,45,0.92,51,0.92,58,1.43,59,0.631,60,1.262,61,0.809,62,0.661,63,1.708,74,2.08,77,1.514,78,1.181,80,1.836,87,1.828,92,0.576,94,1.243,96,1.97,101,2.2,104,1.833,105,1.833,106,2.084,107,2.386,108,1.243,109,1.053,110,1.053,113,1.053,114,1.097,115,1.701,118,0.809,126,1.112,128,0.714,129,2.178,132,2.963,136,2.178,139,0.809,154,0.809,164,0.92,170,1.053,171,1.053,172,0.809,174,0.92,193,0.029,194,0.023,195,0.029,196,0.92,197,0.375,198,0.92,199,2.918,200,1.22,201,1.22,202,1.22,203,1.22,204,1.874,205,1.874,206,0.92,207,1.22,208,1.836,209,3.136,210,1.22,211,1.22,212,2.282,213,2.282,214,1.874,215,1.874,216,1.874,217,2.282,218,1.22,219,2.707,220,1.053,221,1.22,222,2.777,223,1.053,224,1.22,225,1.22,226,1.874,227,0.92,228,1.22,229,2.426,230,2.918,231,3.039,232,3.039,233,2.292,234,1.325,235,1.22,236,2.282,237,1.053,238,1.874,239,1.053,240,2.764,241,1.053,242,1.874,243,1.22,244,1.22,245,0.92,246,1.053,247,3.559,248,1.22,249,1.22,250,1.22,251,1.22,252,1.22,253,1.22,254,1.22,255,1.22,256,1.22,257,1.22,258,1.22,259,1.22,260,1.22,261,1.22,262,1.22,263,1.22,264,1.22,265,1.22,266,1.22,267,1.22,268,1.22,269,1.22,270,1.22,271,2.764,272,1.22,273,1.874,274,1.22,275,1.22,276,1.053,277,1.874,278,1.053,279,1.22,280,1.22,281,1.22,282,1.874,283,1.22,284,1.22,285,1.22,286,1.22,287,1.22,288,1.22,289,1.22,290,1.22,291,1.22,292,1.22,293,1.22,294,1.22,295,1.22,296,1.22,297,1.22,298,1.22,299,1.874,300,1.22,301,1.22,302,1.22,303,1.22,304,1.22,305,1.22,306,1.22,307,1.22,308,1.22,309,3.136,310,3.136,311,1.22,312,1.618,313,1.22,314,1.22,315,1.618,316,1.874,317,1.22,318,1.22,319,1.22,320,0.92,321,1.22,322,2.282,323,1.413,324,1.22,325,1.22,326,1.22,327,1.874,328,1.22,329,1.22,330,1.22,331,1.22,332,2.282,333,1.22,334,1.22,335,1.874,336,1.22,337,2.282,338,1.22,339,1.22,340,1.931,341,1.618,342,1.413,343,0.969,344,1.22,345,1.22,346,1.22,347,1.22,348,2.282,349,1.22,350,1.22,351,1.22,352,1.22,353,0.92,354,1.22,355,1.22,356,1.22,357,1.22,358,1.22,359,1.22,360,1.618,361,0.809,362,1.22,363,0.92,364,1.22,365,1.22,366,1.22,367,2.764,368,1.22,369,1.22,370,1.22,371,1.22,372,1.22,373,1.22,374,1.22,375,1.22,376,1.874,377,1.22,378,1.22,379,1.874,380,1.874,381,1.874,382,1.22,383,1.22,384,1.22,385,1.22,386,1.22,387,1.22,388,1.22,389,1.874,390,1.22,391,1.22,392,1.22,393,1.22,394,1.22,395,1.22,396,1.22,397,1.22,398,1.22,399,0.809,400,1.22,401,1.22,402,1.22,403,1.22,404,1.22,405,1.22,406,2.282,407,1.22,408,1.22,409,1.22,410,1.22,411,1.22,412,1.22,413,1.22,414,1.22]],["title/interfaces/Collision.html",[195,0.025,415,1.967]],["body/interfaces/Collision.html",[3,0.578,4,0.756,5,0.499,6,0.426,7,0.294,13,0.426,14,0.682,23,0.626,24,0.05,25,2.215,30,1.331,35,3.242,43,1.397,58,0.972,59,0.972,60,1.032,61,1.246,62,1.108,63,1.502,68,2.522,72,1.417,77,1.938,80,1.502,81,2.921,87,1.829,92,1.149,94,1.938,104,1.701,105,1.246,111,1.417,126,0.756,128,1.1,129,2.529,156,1.622,159,3.035,179,3.286,193,0.032,194,0.032,195,0.023,197,0.578,208,1.1,320,1.417,323,1.417,415,2.921,416,1.878,417,1.878,418,4.956,419,1.878,420,2.222,421,3.748,422,2.222,423,3.748,424,2.222,425,3.714,426,2.222,427,1.878,428,1.878,429,1.622,430,2.222,431,2.222,432,2.744,433,2.744,434,4.268,435,2.744,436,3.748,437,2.744,438,2.744,439,2.744,440,3.748,441,3.714,442,2.744,443,3.714,444,2.744,445,2.744,446,3.456,447,3.748,448,3.456,449,3.035,450,3.035,451,3.035,452,3.035,453,3.035,454,3.035,455,4.268,456,2.744,457,2.744,458,2.744,459,2.744,460,2.744,461,2.222,462,2.744,463,2.222,464,2.222,465,3.035,466,2.222,467,2.222,468,2.222,469,2.222,470,2.222,471,2.222,472,2.744,473,2.222,474,4.586,475,3.748,476,2.744,477,2.744,478,2.744,479,2.744,480,2.744,481,2.744,482,2.744,483,2.744,484,2.744,485,2.744,486,2.744,487,2.744,488,2.744,489,2.744,490,2.744,491,4.801,492,3.748,493,3.714,494,3.748,495,3.748,496,2.744,497,2.744,498,2.744,499,2.744,500,2.744,501,2.222]],["title/interfaces/PickInfo.html",[195,0.025,233,1.483]],["body/interfaces/PickInfo.html",[0,1.247,1,1.518,3,0.704,4,0.493,5,0.326,6,0.278,7,0.358,8,0.717,9,0.973,11,0.634,13,0.628,14,0.5,16,3.027,23,0.598,24,0.05,27,1.837,30,1.032,36,1.328,37,2.887,41,2.666,43,1.296,45,0.924,51,0.924,58,1.184,59,0.634,60,1.264,61,0.813,62,0.664,63,1.711,74,2.083,77,1.518,78,1.184,80,1.839,87,1.829,92,0.578,94,1.247,96,1.976,101,2.205,104,1.837,105,1.837,106,2.089,107,2.391,108,1.247,109,1.058,110,1.058,113,1.976,114,1.101,115,1.692,118,0.813,126,1.114,128,0.717,129,2.181,132,2.966,136,2.251,139,0.813,154,0.813,164,0.924,170,1.058,171,1.058,172,0.813,174,0.924,193,0.029,194,0.024,195,0.029,196,0.924,197,0.377,198,0.924,199,2.289,200,1.225,201,1.225,202,1.225,203,1.225,204,1.881,205,1.881,206,0.924,207,1.225,208,1.621,209,2.77,210,1.225,211,1.225,212,2.289,213,2.289,214,1.881,215,1.881,216,1.881,217,1.881,218,1.225,219,2.712,220,1.058,221,1.225,222,2.781,223,1.058,224,1.225,225,1.225,226,2.77,227,0.924,228,1.225,229,2.369,230,2.289,231,2.568,232,2.568,233,2.369,234,1.575,235,2.568,236,2.923,237,2.217,238,2.77,239,1.058,240,2.77,241,1.058,242,1.881,243,1.225,244,1.225,245,0.924,246,1.058,247,3.562,248,1.225,249,1.225,250,1.225,251,1.225,252,1.225,253,1.225,254,1.225,255,1.225,256,1.225,257,1.225,258,1.225,259,1.225,260,1.225,261,1.225,262,1.225,263,1.225,264,1.225,265,1.225,266,1.225,267,1.225,268,1.225,269,1.225,270,1.225,271,2.77,272,1.225,273,1.881,274,1.225,275,1.225,276,1.058,277,1.881,278,1.058,279,1.225,280,1.225,281,1.225,282,1.881,283,1.225,284,1.225,285,1.225,286,1.225,287,1.225,288,1.225,289,1.225,290,1.225,291,1.225,292,1.225,293,1.225,294,1.225,295,1.225,296,1.225,297,1.225,298,1.225,299,1.881,300,1.225,301,1.225,302,1.225,303,1.225,304,1.225,305,1.225,306,1.225,307,1.225,308,1.225,309,3.141,310,3.141,311,1.225,312,1.624,313,1.225,314,1.225,315,1.624,316,1.881,317,1.225,318,1.225,319,1.225,320,0.924,321,1.225,322,2.289,323,1.418,324,1.225,325,1.225,326,1.225,327,1.881,328,1.225,329,1.225,330,1.225,331,1.225,332,2.289,333,1.225,334,1.225,335,1.881,336,1.225,337,2.289,338,1.225,339,1.225,340,1.936,341,1.624,342,1.418,343,0.973,344,1.225,345,1.225,346,1.225,347,1.225,348,2.289,349,1.225,350,1.225,351,1.225,352,1.225,353,0.924,354,1.225,355,1.225,356,1.225,357,1.225,358,1.225,359,1.225,360,1.624,361,0.813,362,1.225,363,0.924,364,1.225,365,1.225,366,1.225,367,2.77,368,1.225,369,1.225,370,1.225,371,1.225,372,1.225,373,1.225,374,1.225,375,1.225,376,1.881,377,1.225,378,1.225,379,1.881,380,1.881,381,1.881,382,1.225,383,1.225,384,1.225,385,1.225,386,1.225,387,1.225,388,1.225,389,1.881,390,1.225,391,1.225,392,1.225,393,1.225,394,1.225,395,1.225,396,1.225,397,1.225,398,1.225,399,0.813,400,1.225,401,1.225,402,1.225,403,1.225,404,1.225,405,1.225,406,2.289,407,1.225,408,1.225,409,1.225,410,1.225,411,1.225,412,1.225,413,1.225,414,1.225]],["title/interfaces/ProcessedNode.html",[195,0.025,502,1.967]],["body/interfaces/ProcessedNode.html",[3,0.589,4,0.77,5,0.508,6,0.434,7,0.3,11,1.344,13,0.434,14,0.69,17,2.598,23,0.63,24,0.05,30,1.253,43,1.331,55,1.914,58,1.526,59,0.99,60,1.273,61,1.269,62,1.116,63,2.181,64,1.652,66,2.243,68,2.243,72,1.959,77,1.723,80,1.12,81,2.95,87,1.805,92,0.799,94,1.723,101,2.386,104,1.723,105,1.269,111,1.443,114,1.12,118,1.723,126,1.045,127,2.264,128,1.521,129,2.526,139,1.269,154,1.723,172,1.269,174,1.443,193,0.032,194,0.032,195,0.024,197,0.589,315,2.243,320,1.443,323,1.443,340,1.959,353,1.443,361,1.956,363,1.443,419,1.914,425,3.913,426,4.128,427,1.914,428,1.914,429,1.652,430,2.264,441,3.074,443,3.074,448,3.743,449,2.264,450,2.264,451,2.264,452,2.264,453,2.264,454,2.264,461,2.264,463,2.264,464,2.264,465,3.074,466,2.264,467,2.264,468,2.264,469,2.264,470,2.264,471,2.264,473,3.074,501,2.264,502,3.639,503,1.652,504,1.914,505,3.913,506,3.743,507,4.832,508,2.264,509,2.95,510,3.796,511,2.796,512,2.796,513,2.796,514,2.796,515,3.49,516,2.796,517,3.796,518,3.796,519,3.796,520,2.264,521,3.796,522,2.796,523,2.796,524,2.796,525,2.796,526,2.796,527,2.264,528,2.796,529,2.796,530,2.796,531,3.796,532,2.796,533,2.796,534,4.309,535,2.796,536,2.796,537,2.796,538,3.796,539,2.796,540,2.796,541,2.796,542,2.796,543,2.796,544,2.796,545,2.796,546,2.796,547,2.796,548,2.796,549,2.796,550,2.796,551,2.796,552,2.796,553,2.796,554,2.796]],["title/interfaces/SpatialEntityJsonLd.html",[195,0.025,555,1.305]],["body/interfaces/SpatialEntityJsonLd.html",[3,0.578,4,1.032,5,0.682,6,0.426,7,0.294,11,1.624,13,0.426,14,0.682,23,0.744,24,0.05,30,1.403,43,0.756,78,1.909,92,1.043,115,1.772,126,1.176,193,0.032,194,0.032,195,0.037,197,0.578,208,1.1,234,1.624,555,1.701,556,1.622,557,1.246,558,1.622,559,3.286,560,3.286,561,3.139,562,3.139,563,3.139,564,3.139,565,3.139,566,3.139,567,3.139,568,3.139,569,3.139,570,3.139,571,3.139,572,2.837,573,2.71,574,2.71,575,3.139,576,2.71,577,2.71,578,3.139,579,3.139,580,3.139,581,3.139,582,3.139,583,3.139,584,2.367,585,2.666,586,2.921,587,2.921,588,2.522,589,2.522,590,1.878,591,1.622,592,1.878,593,1.878,594,1.878,595,1.878,596,1.878,597,1.878,598,1.878,599,1.878,600,1.878,601,1.878,602,1.878,603,1.878,604,1.878,605,1.878]],["title/interfaces/SpatialObjectReferenceJsonLd.html",[195,0.025,584,1.483]],["body/interfaces/SpatialObjectReferenceJsonLd.html",[3,0.714,4,1.187,5,0.936,6,0.527,7,0.364,11,1.765,13,0.527,14,0.784,23,0.722,24,0.049,30,1.401,43,0.935,78,1.765,92,1.107,115,1.76,126,1.305,193,0.037,194,0.037,195,0.041,197,0.714,208,1.36,234,1.202,555,1.541,556,2.005,557,1.541,558,2.005,559,3.522,560,2.951,561,2.323,562,2.323,563,2.323,564,2.323,565,2.323,566,2.323,567,2.323,568,2.323,569,2.323,570,2.323,571,2.323,572,3.041,573,2.005,574,2.005,575,2.323,576,2.005,577,2.005,578,2.323,579,2.323,580,2.323,581,2.323,582,2.323,583,2.323,584,2.446,585,2.715,586,2.323,587,2.323,588,2.005,589,2.005,590,2.323,591,2.005,592,2.323,593,2.323,594,2.323,595,2.323,596,2.323,597,2.323,598,2.323,599,2.323,600,2.323,601,2.323,602,2.323,603,2.323,604,2.323,605,3.412]],["title/interfaces/SpatialPlacementJsonLd.html",[195,0.025,585,1.483]],["body/interfaces/SpatialPlacementJsonLd.html",[3,0.637,4,1.367,5,0.728,6,0.47,7,0.324,11,1.69,13,0.47,14,0.728,23,0.741,24,0.049,30,1.4,36,1.69,43,0.834,78,1.69,92,1.073,115,1.796,126,1.235,193,0.034,194,0.034,195,0.038,197,0.637,208,1.913,234,1.072,555,1.375,556,1.789,557,1.375,558,1.789,559,3.398,560,3.398,561,2.073,562,2.073,563,2.073,564,2.073,565,2.073,566,2.073,567,2.073,568,2.073,569,2.073,570,2.073,571,2.073,572,2.366,573,1.789,574,1.789,575,2.073,576,1.789,577,1.789,578,2.073,579,2.073,580,2.073,581,2.073,582,2.073,583,2.073,584,2.067,585,2.562,586,2.073,587,2.073,588,1.789,589,1.789,590,2.073,591,1.789,592,3.267,593,3.267,594,3.267,595,3.267,596,3.267,597,3.267,598,3.267,599,3.267,600,3.267,601,3.267,602,3.267,603,3.267,604,3.267,605,2.073]],["title/interfaces/SpatialSceneNode.html",[60,0.791,195,0.025]],["body/interfaces/SpatialSceneNode.html",[3,0.666,4,0.872,5,0.575,6,0.491,7,0.339,13,0.491,14,0.749,23,0.744,24,0.049,30,1.391,35,2.869,36,2.037,43,0.872,55,3.324,58,1.719,59,1.121,60,1.135,62,0.764,86,2.166,89,2.166,90,2.166,91,2.166,92,1.022,111,1.633,114,1.946,115,1.763,118,2.204,124,3.446,126,1.135,136,2.447,139,2.204,160,3.324,172,2.204,193,0.035,194,0.035,195,0.027,197,0.666,361,2.204,363,2.506,446,3.932,527,3.932,573,2.869,574,2.869,606,2.166,607,2.166,608,4.856,609,4.856,610,4.856,611,3.932]],["title/changelog.html",[612,1.662,613,1.434,614,1.662]],["body/changelog.html",[3,0.767,5,0.201,7,0.427,9,1.535,14,0.201,23,0.243,24,0.036,26,0.652,28,0.894,36,0.391,62,0.962,74,2.271,75,1.273,83,0.894,87,1.499,92,0.232,98,1.506,106,1.881,108,0.845,114,1.134,115,0.345,121,0.894,160,0.756,164,1.975,179,1.273,193,0.035,194,0.016,195,0.033,197,0.232,206,0.57,245,2.713,276,1.425,278,0.652,312,1.425,342,2.398,343,1.666,360,0.652,399,1.285,419,1.937,493,3.65,509,0.756,557,1.285,572,1.099,576,1.099,577,1.099,588,0.652,589,1.099,591,2.153,613,1.425,614,1.273,615,1.952,616,1.952,617,2.773,618,3.225,619,1.506,620,3.159,621,3.225,622,5.636,623,5.032,624,2.773,625,2.83,626,1.104,627,1.104,628,1.104,629,1.104,630,4.233,631,4.195,632,3.708,633,1.104,634,3.159,635,3.424,636,3.424,637,4.117,638,2.95,639,2.83,640,1.86,641,4.354,642,1.86,643,1.86,644,3.159,645,2.83,646,3.159,647,1.86,648,1.104,649,1.86,650,2.83,651,1.104,652,3.827,653,4.336,654,4.507,655,1.86,656,1.104,657,2.162,658,2.773,659,2.83,660,2.344,661,1.86,662,3.424,663,0.894,664,0.756,665,2.773,666,1.104,667,3.159,668,2.83,669,1.104,670,1.86,671,2.83,672,1.104,673,1.86,674,1.104,675,4.426,676,1.104,677,1.65,678,1.86,679,0.894,680,1.104,681,1.506,682,1.506,683,1.86,684,3.827,685,3.643,686,1.104,687,1.104,688,1.104,689,2.411,690,1.86,691,2.411,692,4.233,693,1.104,694,1.506,695,0.894,696,1.104,697,1.104,698,1.86,699,3.159,700,2.411,701,1.104,702,1.86,703,1.86,704,2.818,705,1.104,706,4.645,707,1.104,708,3.464,709,1.104,710,2.411,711,1.86,712,2.411,713,2.411,714,1.86,715,2.411,716,1.104,717,1.86,718,1.86,719,1.104,720,3.643,721,3.424,722,1.86,723,1.104,724,1.104,725,2.83,726,1.104,727,1.86,728,1.104,729,1.104,730,1.86,731,1.104,732,1.86,733,1.104,734,1.104,735,1.104,736,1.86,737,4.58,738,1.104,739,3.424,740,1.104,741,1.104,742,1.104,743,2.411,744,1.104,745,1.104,746,1.506,747,1.104,748,3.424,749,1.86,750,3.159,751,1.104,752,3.159,753,1.86,754,1.86,755,1.104,756,1.104,757,1.104,758,1.86,759,3.424,760,2.291,761,1.104,762,3.643,763,1.104,764,1.104,765,1.86,766,1.104,767,1.104,768,1.86,769,2.411,770,1.104,771,1.104,772,2.411,773,1.86,774,1.104,775,1.86,776,1.104,777,1.104,778,1.104,779,4.507,780,1.104,781,0.894,782,1.104,783,1.86,784,0.756,785,1.104,786,1.86,787,2.83,788,1.104,789,1.86,790,2.411,791,1.104,792,1.104,793,1.86,794,1.104,795,1.104,796,3.424,797,2.024,798,2.558,799,1.952,800,1.104,801,2.558,802,1.104,803,2.411,804,3.099,805,4.426,806,1.104,807,1.104,808,1.86,809,1.952,810,1.104,811,1.104,812,1.104,813,3.159,814,1.104,815,1.104,816,1.104,817,1.104,818,2.411,819,1.104,820,1.86,821,1.506,822,1.104,823,2.619,824,1.104,825,1.104,826,1.104,827,1.104,828,1.104,829,1.104,830,2.558,831,1.104,832,1.86,833,1.104,834,1.104,835,2.411,836,1.86,837,1.104,838,1.86,839,1.104,840,1.86,841,1.86,842,1.104,843,2.411,844,1.104,845,1.104,846,0.894,847,1.104,848,1.952,849,0.894,850,1.273,851,1.86,852,1.104,853,1.104,854,1.86,855,1.86,856,1.86,857,1.86,858,1.104,859,1.104,860,1.104,861,2.411,862,1.104,863,1.86,864,1.104,865,1.104,866,1.86,867,3.424,868,1.86,869,1.104,870,0.894,871,1.104,872,1.104,873,3.159,874,2.83,875,1.104,876,2.411,877,1.86,878,3.424,879,1.86,880,2.83,881,1.104,882,1.104,883,1.104,884,1.104,885,1.104,886,1.104,887,1.86,888,1.86,889,1.104,890,1.86,891,1.104,892,0.894,893,1.86,894,1.104,895,1.86,896,1.104,897,1.104,898,2.83,899,1.104,900,1.104,901,1.104,902,1.104,903,1.86,904,1.104,905,1.104,906,1.104,907,1.104,908,1.104,909,1.104,910,1.86,911,1.104,912,1.104,913,1.104,914,1.104,915,1.104,916,1.86,917,1.104,918,3.424,919,1.104,920,2.411,921,0.894,922,1.86,923,1.104,924,0.894,925,0.894,926,1.104,927,1.86,928,1.104,929,1.104,930,1.104,931,1.104,932,1.86,933,1.86,934,1.104,935,1.104,936,1.86,937,1.86,938,1.104,939,1.86,940,2.83,941,2.411,942,1.104,943,1.104,944,1.104,945,1.104,946,0.894,947,0.894,948,1.104,949,1.86,950,1.104,951,1.104,952,1.104,953,1.104,954,1.86,955,2.83,956,1.104,957,1.104,958,1.104,959,1.104,960,3.424,961,2.411,962,1.86,963,1.104,964,1.104,965,2.411,966,1.86,967,1.86,968,1.86,969,2.83,970,1.104,971,1.104,972,1.104,973,1.86,974,1.104,975,1.104,976,1.104,977,1.104,978,1.104,979,2.83,980,1.104,981,2.411,982,2.83,983,1.104,984,2.411,985,3.159,986,1.86,987,1.86,988,1.86,989,1.86,990,2.411,991,2.83,992,3.159,993,1.86,994,2.411,995,1.104,996,1.104,997,3.643,998,2.411,999,1.104,1000,2.83,1001,2.83,1002,3.982,1003,1.104,1004,1.104,1005,1.104,1006,1.104,1007,1.104,1008,1.104,1009,1.86,1010,1.104,1011,1.86,1012,1.104,1013,1.104,1014,1.104,1015,1.104,1016,1.86,1017,1.104,1018,1.65,1019,1.104,1020,1.86,1021,1.952,1022,1.86,1023,1.104,1024,1.104,1025,1.104,1026,1.86,1027,1.104,1028,1.104,1029,1.104,1030,1.104,1031,1.104,1032,1.104,1033,1.104,1034,1.86,1035,1.104,1036,1.104,1037,2.83,1038,3.424,1039,1.86,1040,2.411,1041,1.86,1042,2.83,1043,1.104,1044,1.104,1045,1.104,1046,1.104,1047,2.411,1048,1.104,1049,1.104,1050,1.104,1051,1.86,1052,1.86,1053,1.86,1054,1.86,1055,2.411,1056,1.104,1057,1.104,1058,1.104,1059,1.104,1060,1.104,1061,1.104,1062,0.894,1063,1.104,1064,1.104,1065,1.104,1066,1.86,1067,1.104,1068,1.104,1069,1.86,1070,1.104,1071,1.104,1072,1.104,1073,1.104,1074,1.104,1075,1.104,1076,1.104,1077,1.104,1078,1.104,1079,1.104,1080,3.827,1081,1.104,1082,2.411,1083,2.411,1084,2.83,1085,1.86,1086,2.411,1087,1.104,1088,1.86,1089,1.104,1090,1.104,1091,1.86,1092,1.86,1093,1.86,1094,1.104,1095,1.104,1096,1.104,1097,1.104,1098,1.86,1099,1.104,1100,2.411,1101,1.104,1102,1.104,1103,1.104,1104,1.104,1105,0.894,1106,1.104,1107,1.104,1108,1.104,1109,1.104,1110,1.104,1111,1.104,1112,1.104,1113,1.104,1114,1.104,1115,1.104,1116,1.104,1117,3.159,1118,1.104,1119,1.104,1120,1.104,1121,1.104,1122,1.104,1123,1.104,1124,1.104,1125,1.104,1126,1.104,1127,1.104,1128,1.104,1129,1.104,1130,1.104,1131,1.104,1132,1.86,1133,1.104,1134,1.86,1135,1.104,1136,1.86,1137,1.86,1138,2.83,1139,2.83,1140,1.86,1141,1.86,1142,1.104,1143,1.104,1144,1.104,1145,2.411,1146,1.104,1147,0.894,1148,1.104,1149,1.104,1150,1.104,1151,1.104,1152,1.104,1153,1.104,1154,1.86,1155,4.117,1156,2.411,1157,1.104,1158,1.86,1159,1.104,1160,1.104,1161,1.104,1162,1.104,1163,1.104,1164,1.104,1165,1.104,1166,1.104,1167,1.104,1168,1.86,1169,2.95,1170,1.86,1171,1.104,1172,1.104,1173,1.104,1174,1.506,1175,1.104,1176,2.83,1177,1.104,1178,1.86,1179,1.104,1180,1.104,1181,1.937,1182,1.104,1183,1.86,1184,1.104,1185,1.104,1186,1.104,1187,1.86,1188,1.86,1189,1.104,1190,1.104,1191,1.104,1192,1.104,1193,1.86,1194,2.411,1195,1.86,1196,1.104,1197,1.104,1198,1.506,1199,1.104,1200,1.104,1201,1.104,1202,1.104,1203,1.104,1204,1.104,1205,1.104,1206,1.104,1207,0.894,1208,1.104,1209,1.104,1210,1.86,1211,1.104,1212,1.104,1213,1.104,1214,1.104,1215,1.104,1216,1.104,1217,1.86,1218,1.104,1219,0.894,1220,1.104,1221,1.104,1222,0.894,1223,1.104,1224,1.104,1225,1.104,1226,1.86,1227,1.104,1228,1.104,1229,1.104,1230,1.104,1231,1.104,1232,1.104,1233,1.104,1234,1.104,1235,1.104,1236,1.104,1237,1.104,1238,1.86,1239,1.104,1240,1.104,1241,1.104,1242,1.104,1243,1.86,1244,0.894,1245,0.894,1246,1.104,1247,1.104,1248,1.104,1249,1.104,1250,1.104,1251,1.104,1252,1.104]],["title/coverage.html",[1181,2.647]],["body/coverage.html",[0,1.807,1,1.362,5,0.546,6,0.888,7,0.613,8,2.08,9,1.581,10,3.057,23,0.391,24,0.049,46,2.054,60,0.826,62,1.229,64,1.773,65,2.054,66,1.773,69,2.054,72,2.894,80,2.291,87,1.063,193,0.034,194,0.034,195,0.046,196,1.549,198,2.455,227,1.549,229,1.549,233,1.549,246,1.773,343,1.409,399,1.362,415,2.054,416,2.724,417,2.724,429,1.773,502,2.054,503,3.114,504,3.057,555,1.362,556,2.639,557,2.159,558,2.639,584,1.549,585,1.549,606,2.054,607,2.054,797,1.773,850,2.054,1018,2.054,1181,2.054,1253,3.001,1254,3.001,1255,2.43,1256,2.43,1257,2.43,1258,5.622,1259,4.466,1260,2.43,1261,3.001,1262,3.001,1263,3.001,1264,3.001,1265,3.001,1266,3.001,1267,3.001,1268,3.851,1269,3.851,1270,2.43,1271,3.223,1272,3.223,1273,2.43,1274,2.43,1275,2.43,1276,2.43,1277,2.43,1278,2.43,1279,2.724,1280,2.43,1281,3.001,1282,2.054,1283,2.43,1284,2.43,1285,2.43,1286,2.054,1287,2.054,1288,2.43,1289,2.43,1290,2.43,1291,3.001,1292,3.001,1293,3.001]],["title/dependencies.html",[657,2.355,784,1.662]],["body/dependencies.html",[5,0.571,7,0.337,24,0.05,25,1.857,45,1.622,47,2.544,50,2.544,51,2.118,57,2.544,59,1.113,63,1.259,156,1.857,193,0.035,194,0.035,219,1.857,220,2.424,223,1.857,234,1.113,420,2.544,422,2.544,424,2.544,427,2.151,428,2.151,506,2.544,657,2.151,660,3.315,664,2.151,694,2.544,695,2.544,801,3.322,924,2.544,925,2.544,947,3.322,1021,2.544,1174,3.322,1294,3.142,1295,3.142,1296,3.142,1297,3.142,1298,3.142,1299,3.142,1300,3.142,1301,4.102,1302,3.142,1303,3.142,1304,5.382,1305,3.142,1306,4.102,1307,3.142,1308,3.142,1309,3.142,1310,3.142,1311,3.142,1312,3.142,1313,4.102,1314,3.142,1315,3.142,1316,3.142,1317,3.142,1318,3.142,1319,3.142,1320,3.142,1321,3.142,1322,4.842,1323,3.142,1324,4.568,1325,3.142,1326,3.142,1327,3.142,1328,3.142,1329,3.142,1330,3.142,1331,4.102,1332,3.142,1333,4.102,1334,4.568,1335,3.142,1336,3.142,1337,3.142,1338,3.142,1339,3.142,1340,3.142,1341,3.142,1342,4.102,1343,3.142,1344,4.102,1345,3.142,1346,3.142,1347,3.142,1348,3.142,1349,3.142,1350,3.142,1351,3.142,1352,3.142,1353,3.142,1354,3.142,1355,3.142,1356,3.142,1357,3.142,1358,2.544,1359,3.142,1360,3.142,1361,3.142,1362,3.142,1363,3.142,1364,3.142,1365,4.102,1366,3.142,1367,3.142,1368,3.142,1369,3.142,1370,3.142,1371,3.142,1372,3.142,1373,3.142,1374,3.142,1375,3.142,1376,3.142,1377,3.142,1378,3.142,1379,3.142,1380,3.142,1381,3.142,1382,3.142,1383,4.568,1384,3.142,1385,3.142,1386,3.142,1387,3.142,1388,3.142,1389,3.142,1390,3.142,1391,3.142,1392,3.142,1393,3.142,1394,3.142,1395,3.142,1396,3.142,1397,3.142,1398,3.142,1399,4.102,1400,3.142,1401,3.142,1402,3.142,1403,3.142,1404,3.142,1405,3.142,1406,3.142,1407,3.142,1408,3.142,1409,3.142,1410,3.142,1411,3.142,1412,3.142,1413,3.142]],["title/miscellaneous/functions.html",[1414,1.102,1415,2.787]],["body/miscellaneous/functions.html",[6,0.834,7,0.576,8,1.08,9,1.497,10,2.894,13,0.418,17,2.533,23,0.701,24,0.049,26,2.187,27,1.919,30,1.367,34,4.471,35,3.262,36,1.955,38,4.471,41,1.391,46,2.894,49,2.182,58,1.612,60,1.019,62,1.242,64,2.187,65,2.533,66,2.498,68,2.187,69,2.533,73,2.182,74,2.066,75,3.115,78,1.311,92,0.779,119,2.182,128,2.169,136,1.223,154,1.223,156,1.592,193,0.032,194,0.032,206,1.391,227,1.91,340,1.391,343,1.311,353,1.391,361,1.68,416,1.844,417,2.533,429,2.187,431,2.182,503,2.819,504,2.894,508,2.182,509,2.533,515,3.685,520,2.182,555,1.68,557,1.68,664,2.533,850,2.533,892,2.997,1018,2.533,1255,2.182,1256,2.997,1257,2.997,1260,2.997,1268,2.182,1269,3.863,1270,2.997,1271,2.182,1272,3.423,1273,2.997,1274,2.997,1275,2.997,1276,2.997,1277,2.997,1278,2.997,1279,2.533,1280,2.997,1282,1.844,1283,2.997,1284,2.997,1285,2.997,1286,1.844,1287,2.533,1288,2.182,1289,2.997,1290,2.997,1414,1.223,1415,2.182,1416,2.694,1417,3.991,1418,4.551,1419,2.182,1420,2.997,1421,3.701,1422,2.694,1423,2.182,1424,2.694,1425,5.048,1426,2.694,1427,3.701,1428,2.694,1429,2.694,1430,3.701,1431,2.694,1432,4.551,1433,4.227,1434,2.694,1435,2.694,1436,2.694,1437,4.551,1438,2.694,1439,2.694,1440,2.694,1441,2.694,1442,3.701,1443,2.694,1444,3.701,1445,2.997]],["title/index.html",[13,0.377,612,1.662,613,1.434]],["body/index.html",[3,1.084,9,1.206,24,0.037,85,3.5,108,1.547,193,0.037,194,0.037,195,0.037,197,0.717,237,2.013,245,2.898,341,2.805,343,1.53,505,2.759,614,2.332,615,3.5,616,3.5,617,4.424,618,3.844,621,2.759,624,2.759,631,3.844,632,4.457,638,3.5,641,3.5,660,2.332,663,4.042,665,3.5,677,2.958,679,3.5,681,3.5,682,4.042,704,3.417,708,3.249,746,3.5,760,2.759,781,2.759,797,2.013,798,4.172,799,4.172,804,3.5,809,2.759,821,3.5,823,2.332,830,2.759,848,2.759,849,2.759,921,3.5,946,2.759,1105,2.759,1198,2.759,1207,2.759,1219,2.759,1244,2.759,1446,4.322,1447,3.407,1448,3.407,1449,3.407,1450,3.407,1451,3.5,1452,3.407,1453,3.407,1454,3.407,1455,4.322,1456,4.322,1457,4.322,1458,4.747,1459,3.407,1460,3.407,1461,4.747,1462,3.407,1463,3.407,1464,4.322,1465,3.407,1466,3.407,1467,3.407,1468,4.322,1469,3.407,1470,3.407,1471,3.407,1472,3.407,1473,3.407,1474,4.322,1475,3.407,1476,3.407,1477,4.322,1478,3.407,1479,4.322,1480,4.322,1481,3.407,1482,3.407,1483,3.407,1484,3.407,1485,3.407,1486,3.407,1487,3.407,1488,3.407,1489,3.407,1490,3.407,1491,3.407,1492,3.407,1493,3.407,1494,3.407,1495,3.407]],["title/license.html",[612,1.662,613,1.434,1496,1.966]],["body/license.html",[24,0.04,193,0.04,194,0.04,222,2.298,658,3.798,677,3.211,704,2.662,797,2.298,846,4.078,870,3.149,1062,3.798,1147,3.149,1169,3.149,1222,3.149,1245,3.149,1358,3.149,1451,4.523,1496,3.149,1497,3.889,1498,5.036,1499,3.889,1500,3.889,1501,4.69,1502,3.889,1503,3.889,1504,3.889,1505,3.889,1506,3.889,1507,3.889,1508,4.69,1509,3.889,1510,3.889,1511,3.889,1512,3.889,1513,3.889,1514,3.889,1515,3.889,1516,3.889,1517,3.889,1518,3.889,1519,3.889,1520,3.889,1521,4.69,1522,3.889,1523,3.889,1524,3.889,1525,3.889,1526,3.889,1527,4.69,1528,3.889,1529,3.889,1530,3.889,1531,3.889,1532,3.889,1533,3.889,1534,3.889,1535,3.889,1536,3.889,1537,3.889,1538,3.889,1539,3.889,1540,3.889,1541,3.889,1542,3.889,1543,3.889,1544,3.889,1545,3.889,1546,3.889,1547,3.889,1548,3.889,1549,3.889,1550,3.889,1551,3.889,1552,3.889,1553,3.889,1554,3.889,1555,3.889]],["title/modules.html",[1556,3.131]],["body/modules.html",[24,0.044,193,0.044,194,0.044,1556,3.637]],["title/overview.html",[1557,3.131]],["body/overview.html",[2,3.613,24,0.044,193,0.044,194,0.044,197,0.939,399,2.025,1557,3.613,1558,4.461]],["title/properties.html",[14,0.626,784,1.662]],["body/properties.html",[14,0.813,24,0.046,193,0.044,194,0.044,619,3.619,823,3.059]],["title/miscellaneous/typealiases.html",[1414,1.102,1559,3.441]],["body/miscellaneous/typealiases.html",[6,0.804,7,0.555,8,1.662,13,0.644,23,0.675,24,0.048,25,2.881,62,1.177,72,2.142,86,2.84,89,2.84,90,2.84,91,2.84,111,2.142,124,2.84,193,0.042,194,0.042,198,2.672,239,2.881,241,2.881,606,2.84,607,3.337,611,3.947,1286,2.84,1287,3.337,1414,1.884,1419,3.36,1420,3.947,1423,3.36,1445,3.947,1560,4.149]],["title/miscellaneous/variables.html",[1414,1.102,1561,2.787]],["body/miscellaneous/variables.html",[6,0.653,7,0.451,13,0.653,23,0.549,24,0.047,26,2.486,27,1.91,158,3.98,193,0.042,194,0.042,234,1.49,342,2.537,343,1.74,503,2.486,708,2.88,1279,3.364,1282,3.364,1414,1.91,1417,3.407,1561,3.407,1562,4.208,1563,4.915,1564,4.915,1565,4.208,1566,4.208,1567,4.208,1568,4.208,1569,4.915,1570,4.208,1571,4.208,1572,4.208,1573,4.208]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["0.05",{"_index":335,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["0.1.0",{"_index":1243,"title":{},"body":{"changelog.html":{}}}],["0.14.3",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1238,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":315,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["0.5*255",{"_index":177,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.5.0",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1198,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.8",{"_index":133,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.9*255",{"_index":116,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0/1",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":179,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"changelog.html":{}}}],["1.0",{"_index":164,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["1.14.10",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1021,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["1.6875389974302382e",{"_index":351,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["1.7.0",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["1/37",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["10.0",{"_index":306,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10.0.0",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":281,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10x",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["11.5",{"_index":369,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["12",{"_index":621,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["13",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":99,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["14",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":312,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["15.313.0",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["16.3.1",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["17,0,0",{"_index":350,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17,0.076,0,0.49,0.034,0.11,1",{"_index":352,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17.0",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["17.0.0",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["17.0.5",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["17.0.9",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":399,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2.0",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["2.6.2",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":327,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2019",{"_index":1169,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":100,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["24",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":101,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["26",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":801,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1474,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["3.8.0",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["3.8.1",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["3.8.2",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":619,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["30",{"_index":98,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["31",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":342,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1456,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["4th",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["5th",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["6.11.2",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["8.9",{"_index":398,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["85",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1558,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["9.5",{"_index":318,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["90",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["_dragevent(info",{"_index":412,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_lighting",{"_index":172,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["_onclick(info",{"_index":383,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondrag(info",{"_index":408,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragend(info",{"_index":410,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragstart(info",{"_index":405,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onhover(e",{"_index":375,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onviewstatechange(event",{"_index":391,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["aabb",{"_index":425,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["ability",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1222,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1548,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1223,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1560,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1460,"title":{},"body":{"index.html":{}}}],["ambientlight",{"_index":212,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["analagous",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["analytics",{"_index":925,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":1018,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomicalstructuresurl",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1519,"title":{},"body":{"license.html":{}}}],["angular",{"_index":660,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":632,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["appropriate",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1552,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":870,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":320,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["atlas",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempts",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1541,"title":{},"body":{"license.html":{}}}],["autohighlight",{"_index":95,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["automatic",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":323,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["award",{"_index":1494,"title":{},"body":{"index.html":{}}}],["b",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1219,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":921,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bbox",{"_index":448,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["before",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":221,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["behaviorsubject([0",{"_index":252,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["being",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":804,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":219,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["biomarker",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":7,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":246,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer",{"_index":1,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer.gltfcache",{"_index":153,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["bodyuiprops",{"_index":196,"title":{"interfaces/BodyUIProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuiviewstateprops",{"_index":229,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["boolean",{"_index":136,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":88,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["breaking",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":1174,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":1247,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1452,"title":{},"body":{"index.html":{}}}],["builds",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1499,"title":{},"body":{"license.html":{}}}],["cache",{"_index":664,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["cacheable",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":199,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cancelregistration",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":427,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["canvas",{"_index":200,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["card",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":85,"title":{},"body":{"classes/BodyUILayer.html":{},"index.html":{}}}],["cases",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["casttoglobaltype",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["casttoglobaltype(value",{"_index":1424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ccf",{"_index":245,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":561,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["cell",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":505,"title":{},"body":{"interfaces/ProcessedNode.html":{},"index.html":{}}}],["change",{"_index":946,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":614,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1505,"title":{},"body":{"license.html":{}}}],["child",{"_index":510,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["child.bbox.clone",{"_index":535,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["childnames(child",{"_index":514,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(node.node).map(n",{"_index":532,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(scene",{"_index":508,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1544,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BodyUILayer.html":{},"overview.html":{}}}],["clean",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":663,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["collider",{"_index":71,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["collider.ts",{"_index":417,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collision",{"_index":415,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"coverage.html":{}}}],["collisioning",{"_index":433,"title":{},"body":{"interfaces/Collision.html":{}}}],["collisions",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":114,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["colorizing",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":562,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["common",{"_index":849,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":760,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["compositelayer",{"_index":12,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["comunica/query",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1526,"title":{},"body":{"license.html":{}}}],["cone",{"_index":89,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["conegeometry",{"_index":52,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["config",{"_index":892,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["config.csv",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1554,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":486,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('data",{"_index":356,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('results",{"_index":355,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('starting",{"_index":432,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":500,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":1500,"title":{},"body":{"license.html":{}}}],["const",{"_index":129,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["constructor(private",{"_index":272,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["container",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1450,"title":{},"body":{"index.html":{}}}],["context",{"_index":560,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["contract",{"_index":1549,"title":{},"body":{"license.html":{}}}],["control",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":282,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["controls",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["convenience",{"_index":243,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convention",{"_index":171,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["coordinate",{"_index":237,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["coordinate_system",{"_index":44,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinate_system.cartesian",{"_index":103,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinatesystem",{"_index":102,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["copies",{"_index":1521,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1508,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1498,"title":{},"body":{"license.html":{}}}],["cord",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1181,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["creation_date",{"_index":563,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator",{"_index":564,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_first_name",{"_index":565,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_last_name",{"_index":566,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_middle_name",{"_index":567,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_orcid",{"_index":568,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["credits",{"_index":1485,"title":{},"body":{"index.html":{}}}],["crosswalk.csv",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["csv.ts",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csvreport",{"_index":490,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":492,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvtext",{"_index":1435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlclick",{"_index":242,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ctrlkey",{"_index":385,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cube",{"_index":91,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cubegeometry",{"_index":53,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cuboid",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["currentstate",{"_index":395,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.data",{"_index":401,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.zoomopacity",{"_index":400,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cursor",{"_index":270,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cyberinfrastructure",{"_index":1487,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["cylinder",{"_index":90,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cylindergeometry",{"_index":54,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d",{"_index":113,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["d.geometry",{"_index":437,"title":{},"body":{"interfaces/Collision.html":{}}}],["d.scenegraph",{"_index":436,"title":{},"body":{"interfaces/Collision.html":{}}}],["damages",{"_index":1545,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":74,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.concat(object.values(results",{"_index":358,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.length",{"_index":79,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.map(d",{"_index":120,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.push",{"_index":359,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.ts",{"_index":1279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data?.length",{"_index":331,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["database",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["datasets",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1510,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1555,"title":{},"body":{"license.html":{}}}],["debugscenenodeprocessing",{"_index":201,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["debugscenenodeprocessing(data",{"_index":339,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["december",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["deck",{"_index":213,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck(props",{"_index":308,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/core",{"_index":45,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":218,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/geo",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":47,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deck.gl/mesh",{"_index":50,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deckprops",{"_index":273,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.camera",{"_index":277,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.interactive",{"_index":283,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.legacylighting",{"_index":303,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.maxrotationx",{"_index":313,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.minrotationx",{"_index":311,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.rotation",{"_index":316,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.target",{"_index":314,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.zoom",{"_index":317,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["decompress",{"_index":458,"title":{},"body":{"interfaces/Collision.html":{}}}],["decorator",{"_index":220,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deeply",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["delete",{"_index":537,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["demo",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":657,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["depthmask",{"_index":178,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["derivescenegraph",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["derivescenegraph(scenegraphnodename",{"_index":1426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["descrepancies",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["details",{"_index":1225,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1486,"title":{},"body":{"index.html":{}}}],["developments",{"_index":1207,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["didzoom",{"_index":332,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["different",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["dimension_units",{"_index":569,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["direct",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":105,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["display",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1517,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":69,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["docollisions(scene",{"_index":431,"title":{},"body":{"interfaces/Collision.html":{},"miscellaneous/functions.html":{}}}],["docollisions(state.data",{"_index":187,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["docs",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":797,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["dracoloader",{"_index":421,"title":{},"body":{"interfaces/Collision.html":{}}}],["during",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":37,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.info",{"_index":192,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["e.isdragging",{"_index":300,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object",{"_index":379,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object?.['@id",{"_index":378,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.picked",{"_index":376,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e?.srcevent?.ctrlkey",{"_index":390,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["easier",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":947,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":501,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["entities",{"_index":1437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityid",{"_index":446,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["es",{"_index":428,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["eslint",{"_index":104,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["eslint/naming",{"_index":170,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["eslint/no",{"_index":109,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["etc",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":631,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1540,"title":{},"body":{"license.html":{}}}],["event.interactionstate?.iszooming",{"_index":394,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate",{"_index":402,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.rotationx",{"_index":404,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.zoom",{"_index":397,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["expanded",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":110,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["exploration",{"_index":1454,"title":{},"body":{"index.html":{}}}],["export",{"_index":126,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["express",{"_index":1358,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["external",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":850,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extraction_set",{"_index":570,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["extractionsitesconfigurl",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractionsitesurl",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":96,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["favor",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":587,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["fetch",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_format",{"_index":605,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["files",{"_index":1509,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["filter(d",{"_index":435,"title":{},"body":{"interfaces/Collision.html":{}}}],["filters",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":328,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["finalized",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["finishing",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["firstfieldname",{"_index":1432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fit",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1536,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["fixes.ts",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixes/performance",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["flipy",{"_index":279,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["fly",{"_index":1242,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1525,"title":{},"body":{"license.html":{}}}],["form",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1482,"title":{},"body":{"index.html":{}}}],["free",{"_index":1504,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":72,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1415,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1492,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1524,"title":{},"body":{"license.html":{}}}],["further",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["geometries",{"_index":137,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph",{"_index":148,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph.push(node",{"_index":143,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry",{"_index":144,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry].push(node",{"_index":145,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometry",{"_index":55,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcolor",{"_index":112,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getcursor",{"_index":297,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["getpickinginfo",{"_index":20,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":32,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getposition",{"_index":125,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gettext",{"_index":123,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getting",{"_index":612,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettransformmatrix",{"_index":117,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["github",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["gltf",{"_index":68,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltf.scenes",{"_index":461,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["gltf.ts",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gltf:${processednode['@id",{"_index":524,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfcache",{"_index":17,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltfloader",{"_index":423,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltfnode",{"_index":525,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes",{"_index":517,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes.push",{"_index":523,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfoverride",{"_index":1442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfpromise",{"_index":1430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfscene",{"_index":460,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltftransform",{"_index":348,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["gltfurl",{"_index":340,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["good",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":924,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["grab",{"_index":302,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["grabbing",{"_index":301,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["granted",{"_index":1503,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":496,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":499,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":498,"title":{},"body":{"interfaces/Collision.html":{}}}],["halfsize",{"_index":546,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["hand",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["hash",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["helmet",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1502,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["highlightcolor",{"_index":97,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["highlighted",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":491,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":497,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":495,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":494,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":418,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":481,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":478,"title":{},"body":{"interfaces/Collision.html":{}}}],["holders",{"_index":1542,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":617,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":210,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["htmlelement",{"_index":211,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["http://localhost:8080/source_data/asct",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/extraction",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/reference",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":1468,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":1457,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1461,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":341,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":346,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["https://humanatlas.io",{"_index":1483,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":1479,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1463,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1459,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1236,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":704,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":615,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":92,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1533,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["improve",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1528,"title":{},"body":{"license.html":{}}}],["includes",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":658,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1490,"title":{},"body":{"index.html":{}}}],["individual",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{}}}],["info.object",{"_index":389,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.object?.['@id",{"_index":387,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.picked",{"_index":386,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info?.object?.['@id",{"_index":413,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["information",{"_index":746,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":321,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["initializestate",{"_index":21,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["instead",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":305,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interact",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":392,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interactive",{"_index":202,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interest",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":195,"title":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":197,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["isdragging",{"_index":298,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["issue",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":393,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["it's",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":1480,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":682,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":506,"title":{},"body":{"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["jsonld.ts",{"_index":558,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["jsonld/jsonld",{"_index":590,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["jsonldobj",{"_index":559,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["july",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":76,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["keyboard",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1532,"title":{},"body":{"license.html":{}}}],["known",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":189,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["label",{"_index":571,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["labs/dispatch",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["landmarks.csv",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["larger",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["lasthovered",{"_index":271,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["latest",{"_index":624,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layer",{"_index":226,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["layer.ts",{"_index":10,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["layer.ts:143",{"_index":33,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:71",{"_index":31,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:72",{"_index":29,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:74",{"_index":40,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:80",{"_index":42,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layername",{"_index":18,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers",{"_index":51,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["layers.filter(l",{"_index":188,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push",{"_index":157,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(`${geometry}pickable",{"_index":185,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(geometry",{"_index":184,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('text",{"_index":180,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('textpickable",{"_index":183,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["lb",{"_index":540,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["lb.clone().vadd(halfsize",{"_index":550,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ld",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":588,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["left/right",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["legacylighting",{"_index":203,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["level",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1230,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1546,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1543,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":781,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["library/vh_female/united/vhf_united_color.glb",{"_index":345,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["library/vh_male/united/vhm_united_color.glb",{"_index":344,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["license",{"_index":1496,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["lightingeffect",{"_index":214,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["limitation",{"_index":1512,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1147,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":107,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["link",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":809,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":25,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":419,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{}}}],["load(model.scenegraph",{"_index":457,"title":{},"body":{"interfaces/Collision.html":{}}}],["loaded",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":420,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":422,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":424,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loadgltf",{"_index":64,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf(model",{"_index":1428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadgltf({scenegraph",{"_index":516,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["loadgltf2",{"_index":65,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf2(model.scenegraphnode",{"_index":167,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["loadgltf2(scenegraphnodename",{"_index":1429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loading",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["location",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1484,"title":{},"body":{"index.html":{}}}],["logging",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":324,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["lot",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["lowerbound",{"_index":441,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lowerbound[i",{"_index":454,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lru",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":57,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["m",{"_index":147,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraph",{"_index":149,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraphnode",{"_index":150,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["made",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":586,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["managers",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["map(model",{"_index":438,"title":{},"body":{"interfaces/Collision.html":{}}}],["march",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":439,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint",{"_index":442,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":444,"title":{},"body":{"interfaces/Collision.html":{}}}],["match",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":194,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":59,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":488,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(n",{"_index":453,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["math.min(math.max(1",{"_index":396,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["math.min(n",{"_index":450,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["matrix",{"_index":365,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix.gettranslation",{"_index":368,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4",{"_index":58,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e",{"_index":349,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(d.transformmatrix).gettranslation",{"_index":122,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["matrix4(matrix4.identity",{"_index":552,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(model.transformmatrix",{"_index":440,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(modelmatrix",{"_index":522,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":366,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(worldmatrix",{"_index":518,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4.identity",{"_index":519,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["maxhits",{"_index":487,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":204,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["mc",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1535,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1515,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":82,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meshlayer(id",{"_index":73,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["milestone",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":205,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["miscellaneous",{"_index":1414,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1497,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":156,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["model._lighting",{"_index":173,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.color",{"_index":176,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.entityid",{"_index":447,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.opacity",{"_index":163,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraph",{"_index":169,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraphnode",{"_index":166,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.tooltip",{"_index":445,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":175,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.unpickable",{"_index":165,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.zoombasedopacity",{"_index":161,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model['@id",{"_index":159,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["modelmatrix",{"_index":463,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":471,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":470,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["models",{"_index":158,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1514,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1556,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1447,"title":{},"body":{"index.html":{}}}],["more",{"_index":665,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouseevent",{"_index":240,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["moved",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1448,"title":{},"body":{"index.html":{}}}],["n.bbox",{"_index":531,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["n.unpickable",{"_index":182,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["n3",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":509,"title":{},"body":{"interfaces/ProcessedNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names.push(child.name",{"_index":513,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["navigation",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["near",{"_index":280,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["need",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1488,"title":{},"body":{"index.html":{}}}],["new",{"_index":87,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":106,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["ngx",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1493,"title":{},"body":{"index.html":{}}}],["node",{"_index":63,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["node.bbox",{"_index":534,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.extend(child.bbox",{"_index":536,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.lowerbound",{"_index":541,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.upperbound",{"_index":543,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.center",{"_index":549,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.geometry",{"_index":141,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.id",{"_index":521,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.mesh",{"_index":464,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives",{"_index":465,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives.length",{"_index":466,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.name",{"_index":473,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.scenegraph",{"_index":142,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.size",{"_index":544,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.transformmatrix",{"_index":551,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.ts",{"_index":607,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["node.zoomtoonload",{"_index":333,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclick",{"_index":256,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclickevent",{"_index":241,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodeclicksubject",{"_index":248,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedrag",{"_index":266,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragend",{"_index":268,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragendsubject",{"_index":255,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragevent",{"_index":239,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodedragstart",{"_index":264,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragstartsubject",{"_index":253,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragsubject",{"_index":254,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstart",{"_index":258,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstartsubject",{"_index":249,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstop",{"_index":260,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstopsubject",{"_index":250,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodes",{"_index":154,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["nodes.filter(n",{"_index":181,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["nodes.ts",{"_index":504,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodes[n]).filter(n",{"_index":533,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[node['@id",{"_index":538,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[processednode['@id",{"_index":529,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["noninfringement",{"_index":1539,"title":{},"body":{"license.html":{}}}],["note",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":1475,"title":{},"body":{"index.html":{}}}],["notice",{"_index":1062,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":115,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["numeric",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":234,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["object.entries(geometries",{"_index":155,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.prototype.hasownproperty.call(url2gltf",{"_index":151,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.values(nodes",{"_index":539,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(nodes).filter(n",{"_index":530,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(results",{"_index":357,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["obtaining",{"_index":1507,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1462,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":287,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondrag",{"_index":293,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragend",{"_index":295,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragstart",{"_index":291,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["one",{"_index":1105,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["onhover",{"_index":285,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["online",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1241,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["ontology/objects/vhf_united_v01_060420.glb",{"_index":347,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["onviewstatechange",{"_index":289,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["opacities",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":160,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["openapi",{"_index":821,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1471,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1473,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1472,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":75,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options.geometry",{"_index":84,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["orbitaxis",{"_index":230,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["orbitview",{"_index":215,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["organ",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["organs/anatomical",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["orthographic",{"_index":278,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["orthographicview",{"_index":216,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ot2od026671",{"_index":1495,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1551,"title":{},"body":{"license.html":{}}}],["out",{"_index":1553,"title":{},"body":{"license.html":{}}}],["over",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1557,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":784,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["parameters['getpickinginfo']>[0",{"_index":190,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["parent",{"_index":206,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["parsecsv",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsv(sourceurl",{"_index":1431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsecsvtext",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsvtext(csvtext",{"_index":1434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["partial",{"_index":274,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["particular",{"_index":1537,"title":{},"body":{"license.html":{}}}],["partly",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["pbr",{"_index":174,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["performance",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1501,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1522,"title":{},"body":{"license.html":{}}}],["person",{"_index":1506,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1523,"title":{},"body":{"license.html":{}}}],["pick",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["pickable",{"_index":93,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["picked",{"_index":238,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["pickinfo",{"_index":233,"title":{"interfaces/PickInfo.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["placeholder",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":572,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["placement_date",{"_index":592,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["placenta",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":377,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["popup",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":830,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1530,"title":{},"body":{"license.html":{}}}],["position",{"_index":121,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["possible",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["postprocess",{"_index":459,"title":{},"body":{"interfaces/Collision.html":{}}}],["preferences",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["primitive",{"_index":467,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position",{"_index":468,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position.min",{"_index":469,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["priority",{"_index":608,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["private",{"_index":247,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["process",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["processanatomicalstructures",{"_index":1276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processanatomicalstructures(sourceurl",{"_index":1436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processed",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["processednode",{"_index":502,"title":{"interfaces/ProcessedNode.html":{}},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["processednode.bbox",{"_index":528,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processednode['@id",{"_index":526,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processextractionsites",{"_index":1278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processextractionsites(sourceurl",{"_index":1438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processing",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["processreferencedata",{"_index":1280,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processreferencedata(refentities",{"_index":1439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processscenenodes",{"_index":227,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processscenenodes(gltfurl",{"_index":353,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities(parent",{"_index":1441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":798,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1449,"title":{},"body":{"index.html":{}}}],["projects/.../body",{"_index":1420,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../global",{"_index":1416,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../load",{"_index":1418,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../parse",{"_index":1421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../process",{"_index":1417,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene",{"_index":1423,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../simplify",{"_index":1422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../spatial",{"_index":1419,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":128,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["promise(r",{"_index":325,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"properties.html":{}}}],["props",{"_index":275,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["props.effects",{"_index":304,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["provided",{"_index":1245,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1516,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1538,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":681,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":695,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":1239,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["r.hits.length",{"_index":489,"title":{},"body":{"interfaces/Collision.html":{}}}],["rc.1",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["real",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":138,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rectify",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["refentities",{"_index":1440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":343,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":573,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["referencedataconfig",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["referenceorganconfigurl",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refernced",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["registergltfloaders",{"_index":66,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registration",{"_index":848,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["registrations#1",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["renderlayers",{"_index":22,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["report",{"_index":474,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":482,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":1446,"title":{},"body":{"index.html":{}}}],["representation_of",{"_index":574,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["required",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["resets",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1511,"title":{},"body":{"license.html":{}}}],["results",{"_index":193,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["returns",{"_index":38,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":39,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["returntype['getpickinginfo",{"_index":191,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rgb",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":589,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["rights",{"_index":1513,"title":{},"body":{"license.html":{}}}],["root",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":207,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotation_units",{"_index":600,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rotationorbit",{"_index":231,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotationx",{"_index":232,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["round",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["ru/cdk",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["ru/ngxs",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":641,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["rui_rank",{"_index":575,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rxjs",{"_index":223,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":225,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sad",{"_index":475,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":485,"title":{},"body":{"interfaces/Collision.html":{}}}],["sample",{"_index":1244,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["scale(halfsize.toarray",{"_index":554,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scaling_units",{"_index":596,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["scene",{"_index":62,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scene.children",{"_index":512,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.filter(d",{"_index":456,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":511,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.ts",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scenegraph",{"_index":139,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphlayer",{"_index":48,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["scenegraphnode",{"_index":361,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["scenegraphnodename",{"_index":1427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scenerotation",{"_index":262,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenerotationsubject",{"_index":251,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenetraversalvisitor",{"_index":1445,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scheduled",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1489,"title":{},"body":{"index.html":{}}}],["search",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":638,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1520,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["setinteractive(value",{"_index":374,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotation(value",{"_index":370,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotationx(value",{"_index":371,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setscene(data",{"_index":330,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settarget(value",{"_index":373,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settimeout(r",{"_index":326,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setup",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["setzoom(value",{"_index":372,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sex",{"_index":576,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sexes",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1527,"title":{},"body":{"license.html":{}}}],["share",{"_index":224,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["shared",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["shared/spatial",{"_index":61,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["shortest",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":577,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sides",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["simplemeshlayer",{"_index":49,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["simplifies",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["simplifyscene",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["simplifyscene(nodes",{"_index":1443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["site",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sites",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["sites.ts",{"_index":1277,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizable",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":507,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["size.clone().vmul(new",{"_index":547,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["slice_count",{"_index":578,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slice_thickness",{"_index":579,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slider",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["slider/ngx",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1451,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceboxes",{"_index":434,"title":{},"body":{"interfaces/Collision.html":{}}}],["sources",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["sourceurl",{"_index":1433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sparc",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":694,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":557,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialentityjsonld",{"_index":555,"title":{"interfaces/SpatialEntityJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialobjectreferencejsonld",{"_index":584,"title":{"interfaces/SpatialObjectReferenceJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialplacementjsonld",{"_index":585,"title":{"interfaces/SpatialPlacementJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialscenegeometry",{"_index":611,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spatialscenenode",{"_index":60,"title":{"interfaces/SpatialSceneNode.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":591,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1470,"title":{},"body":{"index.html":{}}}],["specific",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1469,"title":{},"body":{"index.html":{}}}],["speed",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["sphere",{"_index":86,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spheregeometry",{"_index":56,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["spinal",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1200,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":476,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":477,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":483,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":484,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":384,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["stage",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":799,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1455,"title":{},"body":{"index.html":{}}}],["started",{"_index":613,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1251,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":134,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.data",{"_index":140,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.docollisions",{"_index":186,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.zoomopacity",{"_index":162,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["statements",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["stay",{"_index":1249,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["structures.ts",{"_index":1275,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":222,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"license.html":{}}}],["subject.next",{"_index":414,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sublicense",{"_index":1518,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1529,"title":{},"body":{"license.html":{}}}],["such",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["support",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":83,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["switched",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":208,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["target.name",{"_index":480,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":479,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes",{"_index":455,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":472,"title":{},"body":{"interfaces/Collision.html":{}}}],["technologies",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["terms",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":360,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["testing",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":124,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["textlayer",{"_index":46,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textlayer(id",{"_index":119,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["theme",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["this._dragevent(info",{"_index":406,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onclick",{"_index":288,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondrag",{"_index":294,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragend",{"_index":296,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragstart",{"_index":292,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onhover",{"_index":286,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onviewstatechange",{"_index":290,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer",{"_index":284,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.setstate",{"_index":337,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.state",{"_index":322,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.cursor",{"_index":299,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.debugscenenodeprocessing(data",{"_index":338,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck",{"_index":307,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.finalize",{"_index":329,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.props.viewstate",{"_index":367,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.setprops",{"_index":309,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deckprops.debugscenenodeprocessing",{"_index":336,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.lasthovered",{"_index":381,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.next",{"_index":388,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":257,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject",{"_index":411,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject.pipe(share",{"_index":269,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject",{"_index":407,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject.pipe(share",{"_index":265,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject",{"_index":409,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject.pipe(share",{"_index":267,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":382,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":259,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":380,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":261,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.props",{"_index":130,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.scenerotationsubject.next([deckprops.rotation",{"_index":319,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.next([event.viewstate.rotationorbit",{"_index":403,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.pipe(share",{"_index":263,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.setstate",{"_index":131,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.state",{"_index":135,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.zoomto(node",{"_index":334,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["through",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":493,"title":{},"body":{"interfaces/Collision.html":{},"changelog.html":{}}}],["tissues",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1240,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["tool",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":527,"title":{},"body":{"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":1550,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["transformmatrix",{"_index":118,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["translate(center.toarray",{"_index":553,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["translation_units",{"_index":604,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["transparency",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["traversal",{"_index":430,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["traversal.ts",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["traversescene",{"_index":429,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["traversescene(gltfscene",{"_index":462,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":520,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["travisci",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":94,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["try",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1250,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1559,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["typescript",{"_index":108,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["ub",{"_index":542,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ub.clone().vsub(lb",{"_index":545,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ufl",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":9,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1458,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1467,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1464,"title":{},"body":{"index.html":{}}}],["ui.ts",{"_index":198,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/organ",{"_index":1466,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1465,"title":{},"body":{"index.html":{}}}],["ui/src/global",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/body",{"_index":8,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/shared/ccf",{"_index":556,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["ui/src/lib/shared/spatial",{"_index":606,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/load",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/parse",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/process",{"_index":503,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui/src/lib/util/scene",{"_index":1286,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/simplify",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/spatial",{"_index":416,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uis",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":78,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/functions.html":{}}}],["university",{"_index":1491,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["unnecessary",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":609,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["unselect",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["updated_date",{"_index":580,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["updates",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["upperbound",{"_index":443,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["upperbound[i",{"_index":451,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["url",{"_index":127,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{}}}],["url2gltf",{"_index":146,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[m.scenegraph",{"_index":152,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[model.scenegraph",{"_index":168,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["usage",{"_index":679,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":1476,"title":{},"body":{"index.html":{}}}],["use",{"_index":677,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usecase",{"_index":1481,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":1478,"title":{},"body":{"index.html":{}}}],["used",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":618,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1235,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["util/load",{"_index":67,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["util/process",{"_index":228,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["util/spatial",{"_index":70,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["utilities",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["v2",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["v2.0",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["v2.1.0",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1561,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec3",{"_index":426,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...lowerbound.map((n",{"_index":449,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...upperbound.map((n",{"_index":452,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(0.5",{"_index":548,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["version",{"_index":823,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["vhf_kidney_l_low1').then((results",{"_index":354,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["vhf_kidney_r_low",{"_index":362,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["via",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":276,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["viewstate",{"_index":310,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["viewstateprops",{"_index":217,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["visitor",{"_index":1444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["visual",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":41,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1246,"title":{},"body":{"changelog.html":{}}}],["walkthrough",{"_index":1477,"title":{},"body":{"index.html":{}}}],["warming",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1534,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1531,"title":{},"body":{"license.html":{}}}],["web",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1453,"title":{},"body":{"index.html":{}}}],["week",{"_index":1252,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1547,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1248,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["wireframe",{"_index":111,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["within",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":846,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["worldmatrix",{"_index":515,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["wrapper",{"_index":244,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x",{"_index":235,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x_dimension",{"_index":581,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_rotation",{"_index":597,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_scaling",{"_index":593,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_translation",{"_index":601,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y",{"_index":236,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["y_dimension",{"_index":582,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_rotation",{"_index":598,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_scaling",{"_index":594,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_translation",{"_index":602,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["yes",{"_index":1425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youtube",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["z_dimension",{"_index":583,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_rotation",{"_index":599,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_scaling",{"_index":595,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_translation",{"_index":603,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["zone.js",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":209,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoombasedopacity",{"_index":363,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomopacity",{"_index":132,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomto(node",{"_index":364,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomtoonload",{"_index":610,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                gltfCache\n                            \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        gltfCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        layerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BodyUILayer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPickingInfo\n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ReturnType<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderLayers\n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     []\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { TextLayer } from '@deck.gl/layers';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { ConeGeometry, CubeGeometry, CylinderGeometry, Geometry, SphereGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    let mesh: Geometry;\n    switch (options.geometry) {\n      case 'sphere':\n        mesh = new SphereGeometry();\n        break;\n      case 'cone':\n        mesh = new ConeGeometry();\n        break;\n      case 'cylinder':\n        mesh = new CylinderGeometry();\n        break;\n      case 'cube':\n      default:\n        mesh = new CubeGeometry();\n        break;\n    }\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: mesh as any,\n        wireframe: false,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9*255],\n        getTransformMatrix: (d) => (d as { transformMatrix: number[] }).transformMatrix,\n      },\n      ...options\n    });\n  }\n}\n\nfunction textLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): TextLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new TextLayer({\n      ...{\n        id,\n        pickable: true,\n        data: data.map(d => ({ ...d, position: new Matrix4(d.transformMatrix).getTranslation() })),\n        getText: (d) => (d as { text: string }).text,\n        getPosition: (d) => (d as { position: [number, number] }).position,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise } = {};\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as { data: SpatialSceneNode[]; zoomOpacity: number; doCollisions: boolean };\n    const geometries: Record = {\n      'sphere': [], 'cone': [], 'cylinder': [], 'cube': [], 'text': [], 'wireframe': [], 'scenegraph': []\n    };\n\n    for (const node of state.data) {\n      const geometry = node.geometry ?? 'cube';\n      if (node.scenegraph) {\n        geometries.scenegraph.push(node);\n      } else if (geometries[geometry] !== undefined) {\n        geometries[geometry].push(node);\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise } = {};\n    for (const m of geometries.scenegraph) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    const layers: unknown[] = [];\n    for (const [geometry, nodes] of Object.entries(geometries)) {\n      if (geometry === 'scenegraph') {\n        for (const model of nodes) {\n          layers.push(\n            new ScenegraphLayer({\n              id: 'models-' + model['@id'],\n              opacity: model.zoomBasedOpacity ? state.zoomOpacity : (model.opacity ?? 1.0),\n              pickable: !model.unpickable,\n              coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n              data: [model],\n              scenegraph: model.scenegraphNode ?\n                loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string]) :\n                model.scenegraph as unknown as URL,\n              // eslint-disable-next-line @typescript-eslint/naming-convention\n              _lighting: model._lighting, // 'pbr' | undefined\n              getTransformMatrix: model.transformMatrix as unknown as number[][],\n              getColor: model.color ?? [0, 255, 0, 0.5*255],\n              parameters: { depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1) }\n            })\n          );\n        }\n      } else if (geometry === 'text') {\n        layers.push(textLayer('text', nodes.filter(n => n.unpickable), { pickable: false }));\n        layers.push(textLayer('textPickable', nodes.filter(n => !n.unpickable), { pickable: true }));\n      } else if (geometry === 'wireframe') {\n        layers.push(meshLayer(geometry, nodes, { wireframe: true, pickable: false, geometry }));\n      } else {\n        layers.push(meshLayer(geometry, nodes.filter(n => n.unpickable), { wireframe: false, pickable: false, geometry }));\n        layers.push(meshLayer(`${geometry}Pickable`, nodes.filter(n => !n.unpickable), { wireframe: false, pickable: true, geometry }));\n      }\n    }\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return layers.filter(l => !!l);\n  }\n\n  getPickingInfo(\n    e: Parameters['getPickingInfo']>[0]\n  ): ReturnType['getPickingInfo']> {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debugSceneNodeProcessing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            legacyLighting\n                                        \n                                \n                                \n                                        \n                                            maxRotationX\n                                        \n                                \n                                \n                                        \n                                            minRotationX\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugSceneNodeProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugSceneNodeProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyLighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyLighting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orbitAxis\n                                        \n                                \n                                \n                                        \n                                            rotationOrbit\n                                        \n                                \n                                \n                                        \n                                            rotationX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationOrbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationOrbit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\n/* eslint-disable  */\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && d.geometry !== 'wireframe')\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickInfo.html":{"url":"interfaces/PickInfo.html","title":"interface - PickInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picked\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport { bind } from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive ?? true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object?.['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object?.['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedNode.html":{"url":"interfaces/ProcessedNode.html","title":"interface - ProcessedNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SpatialSceneNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            jsonld\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:     AABB\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AABB\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonld:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\n\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n/* eslint-disable  */\nfunction childNames(scene, names: string[] = []): string[] {\n  for (const child of (scene.nodes || scene.children || [])) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string, \n    gltfCache?: { [url: string]: Promise }): Promise {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({scenegraph: gltfUrl, scenegraphNode} as SpatialSceneNode, gltfCache);\n  const nodes: {[node: string]: ProcessedNode} = {};\n  const gltfNodes: ProcessedNode[] = [];\n  for (const scene of gltf.scenes) {\n    worldMatrix = new Matrix4(worldMatrix || Matrix4.IDENTITY);\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        geometry: 'wireframe',\n        node\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter(n => !n.bbox)) {\n    for (const child of childNames(node.node).map(n => nodes[n]).filter(n => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = node.size = ub.clone().vsub(lb);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = node.center = lb.clone().vadd(halfSize);\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY)\n      .translate(center.toArray())\n      .scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntityJsonLd.html":{"url":"interfaces/SpatialEntityJsonLd.html","title":"interface - SpatialEntityJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialEntityJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            ccf_annotations\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            creation_date\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            creator_first_name\n                                        \n                                \n                                \n                                        \n                                            creator_last_name\n                                        \n                                \n                                \n                                        \n                                            creator_middle_name\n                                        \n                                \n                                \n                                        \n                                            creator_orcid\n                                        \n                                \n                                \n                                        \n                                            dimension_units\n                                        \n                                \n                                \n                                        \n                                            extraction_set\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                                \n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                        \n                                            rui_rank\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slice_count\n                                        \n                                \n                                \n                                        \n                                            slice_thickness\n                                        \n                                \n                                \n                                        \n                                            updated_date\n                                        \n                                \n                                \n                                        \n                                            x_dimension\n                                        \n                                \n                                \n                                        \n                                            y_dimension\n                                        \n                                \n                                \n                                        \n                                            z_dimension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccf_annotations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ccf_annotations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_middle_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_middle_name:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_orcid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_orcid:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraction_set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraction_set:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReferenceJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReferenceJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"Left\" | \"Right\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Left\" | \"Right\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_middle_name: string | undefined;\n  creator_last_name: string;\n  creator_orcid: string | undefined;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReferenceJsonLd.html":{"url":"interfaces/SpatialObjectReferenceJsonLd.html","title":"interface - SpatialObjectReferenceJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialObjectReferenceJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            file_format\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_middle_name: string | undefined;\n  creator_last_name: string;\n  creator_orcid: string | undefined;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacementJsonLd.html":{"url":"interfaces/SpatialPlacementJsonLd.html","title":"interface - SpatialPlacementJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialPlacementJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            placement_date\n                                        \n                                \n                                \n                                        \n                                            rotation_units\n                                        \n                                \n                                \n                                        \n                                            scaling_units\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            translation_units\n                                        \n                                \n                                \n                                        \n                                            x_rotation\n                                        \n                                \n                                \n                                        \n                                            x_scaling\n                                        \n                                \n                                \n                                        \n                                            x_translation\n                                        \n                                \n                                \n                                        \n                                            y_rotation\n                                        \n                                \n                                \n                                        \n                                            y_scaling\n                                        \n                                \n                                \n                                        \n                                            y_translation\n                                        \n                                \n                                \n                                        \n                                            z_rotation\n                                        \n                                \n                                \n                                        \n                                            z_scaling\n                                        \n                                \n                                \n                                        \n                                            z_translation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_middle_name: string | undefined;\n  creator_last_name: string;\n  creator_orcid: string | undefined;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _lighting\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            geometry\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraphNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            transformMatrix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomBasedOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToOnLoad\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geometry:         SpatialSceneGeometry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialSceneGeometry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.9.0 - 2023-12-15\nAdded in 3.9.0\n\nUpdated to the latest CCF.OWL as part of HRA v2.0!\nFinalized Biomarker support in the EUI and API analagous to Cell Type support\nEUI Quality of Life Improvements. See milestone 6\nRUI Quality of Life Improvements. See milestone 5\n\n3.8.1 - 2023-11-17\nAdded in 3.8.1\n\nImproved keyboard controls in the RUI\n\n3.8.0 - 2023-11-16\nAdded in 3.8.0\n\nEUI Quality of Life Improvements. See milestone 6\nRUI Quality of Life Improvements. See milestone 5\nA lot of minor UI and bug fixes in preparation for HRA 2.0\nUpdated dependencies including, update to Angular 16\n\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui/src/global-fixes.ts\n            \n            function\n            castToGlobalType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            class\n            BodyUILayer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            meshLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            textLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            class\n            BodyUI\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIProps\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIViewStateProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            PickInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialEntityJsonLd\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialObjectReferenceJsonLd\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialPlacementJsonLd\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n            \n            interface\n            SpatialSceneNode\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            deriveScenegraph\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            registerGLTFLoaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSVText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n            \n            function\n            processAnatomicalStructures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n            \n            function\n            processExtractionSites\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            function\n            processReferenceData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            variable\n            referenceDataConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            interface\n            ProcessedNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            childNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            processSceneNodes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n            \n            function\n            processSpatialEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n            \n            function\n            traverseScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n            \n            function\n            simplifyScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            function\n            doCollisions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : ^14.10.1\n        \n            @angular-ru/common : ^15.313.0\n        \n            @angular-ru/ngxs : ^14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^17.0.9\n        \n            @angular/cdk : ^17.0.5\n        \n            @angular/common : ^17.0.9\n        \n            @angular/compiler : ^17.0.9\n        \n            @angular/core : ^17.0.9\n        \n            @angular/elements : ^17.0.9\n        \n            @angular/forms : ^17.0.9\n        \n            @angular/material : ^17.0.5\n        \n            @angular/platform-browser : ^17.0.9\n        \n            @angular/platform-browser-dynamic : ^17.0.9\n        \n            @angular/router : ^17.0.9\n        \n            @angular/youtube-player : 17.0\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : ~8.8.20\n        \n            @deck.gl/geo-layers : ~8.8.20\n        \n            @deck.gl/layers : ~8.8.20\n        \n            @deck.gl/mesh-layers : ~8.8.20\n        \n            @loaders.gl/core : ~3.2.10\n        \n            @loaders.gl/draco : ~3.2.10\n        \n            @loaders.gl/gltf : ~3.2.10\n        \n            @luma.gl/core : ~8.5.16\n        \n            @math.gl/core : ~3.6.3\n        \n            @math.gl/culling : ~3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.2\n        \n            @ngxs/storage-plugin : ^3.8.2\n        \n            @ngxs/store : ^3.8.2\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^17.1.1\n        \n            ngx-slider-v2 : ^17.0.0\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.2\n        \n            uuid : ^9.0.0\n        \n            zone.js : ^0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            castToGlobalType   (projects/.../global-fixes.ts)\n                        \n                        \n                            childNames   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            deriveScenegraph   (projects/.../load-gltf.ts)\n                        \n                        \n                            doCollisions   (projects/.../spatial-scene-collider.ts)\n                        \n                        \n                            loadGLTF   (projects/.../load-gltf.ts)\n                        \n                        \n                            loadGLTF2   (projects/.../load-gltf.ts)\n                        \n                        \n                            meshLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            parseCSV   (projects/.../parse-csv.ts)\n                        \n                        \n                            parseCSVText   (projects/.../parse-csv.ts)\n                        \n                        \n                            processAnatomicalStructures   (projects/.../process-anatomical-structures.ts)\n                        \n                        \n                            processExtractionSites   (projects/.../process-extraction-sites.ts)\n                        \n                        \n                            processReferenceData   (projects/.../process-reference-data.ts)\n                        \n                        \n                            processSceneNodes   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            processSpatialEntities   (projects/.../process-spatial-entities.ts)\n                        \n                        \n                            registerGLTFLoaders   (projects/.../load-gltf.ts)\n                        \n                        \n                            simplifyScene   (projects/.../simplify-scene.ts)\n                        \n                        \n                            textLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            traverseScene   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/global-fixes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        castToGlobalType\n                        \n                    \n                \n            \n            \n                \ncastToGlobalType(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        childNames\n                        \n                    \n                \n            \n            \n                \nchildNames(scene, names)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                scene\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                names\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSceneNodes\n                        \n                    \n                \n            \n            \n                \nprocessSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string, gltfCache?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gltfUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                worldMatrix\n                                            \n                                                        Matrix4\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                scenegraphNode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                gltfCache\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/load-gltf.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deriveScenegraph\n                        \n                    \n                \n            \n            \n                \nderiveScenegraph(scenegraphNodeName: string, gltf: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scenegraphNodeName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gltf\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF\n                        \n                    \n                \n            \n            \n                \nloadGLTF(model: SpatialSceneNode, cache?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cache\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF2\n                        \n                    \n                \n            \n            \n                \nloadGLTF2(scenegraphNodeName: string, gltfPromise: Promise)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scenegraphNodeName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gltfPromise\n                                            \n                                                        Promise\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerGLTFLoaders\n                        \n                    \n                \n            \n            \n                \nregisterGLTFLoaders()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doCollisions\n                        \n                    \n                \n            \n            \n                \ndoCollisions(scene)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scene\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/body-ui-layer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meshLayer\n                        \n                    \n                \n            \n            \n                \nmeshLayer(id: string, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SimpleMeshLayer | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textLayer\n                        \n                    \n                \n            \n            \n                \ntextLayer(id: string, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TextLayer | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/parse-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseCSV\n                        \n                    \n                \n            \n            \n                \nparseCSV(sourceUrl: string, firstFieldName?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstFieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCSVText\n                        \n                    \n                \n            \n            \n                \nparseCSVText(csvText: string, firstFieldName?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                csvText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firstFieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processAnatomicalStructures\n                        \n                    \n                \n            \n            \n                \nprocessAnatomicalStructures(sourceUrl: string, entities)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entities\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processExtractionSites\n                        \n                    \n                \n            \n            \n                \nprocessExtractionSites(sourceUrl: string, entities)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sourceUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entities\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processReferenceData\n                        \n                    \n                \n            \n            \n                \nprocessReferenceData(refEntities, config)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                refEntities\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                config\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    referenceDataConfig\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSpatialEntities\n                        \n                    \n                \n            \n            \n                \nprocessSpatialEntities(parent: SpatialEntityJsonLd, gltfOverride?: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parent\n                                            \n                                                            SpatialEntityJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gltfOverride\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        simplifyScene\n                        \n                    \n                \n            \n            \n                \nsimplifyScene(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nodes\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        traverseScene\n                        \n                    \n                \n            \n            \n                \ntraverseScene(scene, worldMatrix: Matrix4, visitor: SceneTraversalVisitor)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                scene\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                worldMatrix\n                                            \n                                                        Matrix4\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                visitor\n                                            \n                                                            SceneTraversalVisitor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the EUI, RUI, and Organ-Info.\nWebsite Links\n\nHRA Exploration User Interface (EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nHRA Registration User Interface (RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nHRA Organ Info Component (Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nHRA API\nProduction: https://apps.humanatlas.io/hra-api/\nStaging: https://apps.humanatlas.io/hra-api--staging/\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nHRA API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nHRA API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.9.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeClickEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            NodeDragEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            SceneTraversalVisitor   (projects/.../scene-traversal.ts)\n                        \n                        \n                            SpatialSceneGeometry   (projects/.../spatial-scene-node.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/body-ui.ts\n    \n    \n        \n            \n                \n                    \n                    NodeClickEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeDragEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n    \n        \n            \n                \n                    \n                    SceneTraversalVisitor\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n    \n    \n        \n            \n                \n                    \n                    SpatialSceneGeometry\n                \n            \n            \n                \n                        \"sphere\" | \"cube\" | \"wireframe\" | \"text\" | \"cone\" | \"cylinder\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            referenceDataConfig   (projects/.../process-reference-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        referenceDataConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  extractionSitesUrl: 'http://localhost:8080/source_data/asct-b-3d-models-landmarks.csv',\n  extractionSitesConfigUrl: 'http://localhost:8080/source_data/extraction-site-config.csv',\n  anatomicalStructuresUrl: 'http://localhost:8080/source_data/asct-b-3d-models-crosswalk.csv',\n  referenceOrganConfigUrl: 'http://localhost:8080/source_data/reference-organ-config.csv'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
