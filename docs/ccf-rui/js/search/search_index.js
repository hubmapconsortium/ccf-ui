var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AnatomicalStructureTagState.html",[0,1.34,1,2.607]],["body/injectables/AnatomicalStructureTagState.html",[0,1.575,1,3.063,2,2.104,3,0.074,4,0.091,5,0.066,6,0.139,7,6.773,8,4.075,9,5.557,10,2.833,11,0.876,12,2.256,13,4.528,14,2.811,15,2.569,16,2.01,17,5.34,18,0.343,19,0.549,20,2.252,21,5.34,22,2.754,23,2.889,24,5.02,25,1.353,26,5.865,27,5.139,28,5.865,29,2.941,30,4.528,31,5.139,32,2.702,33,5.837,34,5.34,35,1.127,36,3.109,37,3.89,38,2.046,39,5.139,40,1.005,41,1.03,42,1.805,43,0.01,44,1.091,45,0.776,46,1.305,47,1.269,48,1.535,49,3.613,50,3.315,51,4.528,52,2.04,53,4.008,54,3.529,55,1.687,56,1.255,57,4.528,58,3.529,59,3.584,60,3.584,61,3.584,62,4.528,63,3.529,64,3.529,65,2.27,66,4.125,67,3.529,68,4.528,69,0.901,70,4.935,71,1.557,72,5.68,73,3.529,74,4.125,75,0.007,76,3.141,77,4.163,78,4.528,79,4.528,80,0.008,81,4.528,82,4.227,83,3.824,84,3.584,85,0.69,86,0.69,87,3.529,88,2.441,89,3.529,90,2.149,91,2.239,92,3.456,93,3.529,94,3.529,95,3.529,96,2.85,97,3.529,98,3.529,99,0.334,100,4.528,101,3.109,102,2.178,103,3.109,104,0.179,105,2.702,106,2.27,107,1.559,108,1.559,109,1.465,110,2.833,111,1.93,112,1.028,113,1.51,114,1.268,115,2.324,116,2.207,117,2.833,118,2.012,119,2.207,120,2.833,121,1.422,122,1.422,123,1.38,124,1.341,125,1.38,126,2.626,127,1.665,128,0.33,129,0.132,130,2.626,131,1.51,132,0.134,133,1.335,134,3.109,135,3.109,136,3.109,137,3.584,138,1.246,139,3.969,140,0.931,141,0.98,142,4.384,143,3.109,144,2.833,145,3.109,146,3.109,147,3.109,148,3.613,149,3.109,150,3.109,151,3.109,152,3.109,153,3.109,154,2.849,155,2.07,156,3.109,157,2.324,158,4.528,159,1.117,160,0.562,161,1.559,162,1.665,163,2.462,164,2.104,165,2.462,166,2.462,167,2.324,168,2.462,169,2.462,170,3.109,171,3.109,172,2.324,173,2.324,174,3.109,175,3.109,176,2.462,177,4.528,178,4.528,179,4.528,180,3.824,181,1.797,182,4.528,183,2.462,184,2.626,185,3.109,186,3.109,187,1.201,188,2.462,189,3.109,190,3.109,191,3.109,192,3.109,193,3.109]],["title/interfaces/AnatomicalStructureTagStateModel.html",[128,0.281,130,3.255]],["body/interfaces/AnatomicalStructureTagStateModel.html",[0,1.844,1,2.631,3,0.093,4,0.113,5,0.083,6,0.073,7,3.542,8,3.123,9,2.906,10,3.542,11,0.581,12,2.24,13,3.888,14,2.414,15,2.557,16,1.726,17,5.301,20,2.09,21,3.888,22,2.765,23,2.678,24,4.508,26,3.888,28,3.888,29,1.949,33,5.768,34,3.888,35,1.119,37,3.758,40,0.863,41,0.885,43,0.01,44,0.631,45,0.72,47,1.147,48,1.318,49,3.587,50,3.291,51,3.888,53,3.865,55,0.953,56,1.193,57,3.888,59,3.078,60,3.078,61,3.078,62,3.888,65,1.949,66,3.542,68,3.888,69,0.814,70,4.774,71,1.133,72,5.901,74,3.542,75,0.007,76,2.838,77,3.762,78,3.888,79,3.888,80,0.008,81,3.888,82,4.196,83,3.284,84,3.078,88,2.423,90,1.942,91,2.223,92,3.431,96,2.757,99,0.348,100,5.301,101,3.888,102,2.46,103,3.888,104,0.223,105,3.163,106,2.657,107,1.949,108,1.949,109,1.832,110,3.542,111,2.414,112,1.285,113,1.889,114,1.586,115,2.906,116,2.759,117,3.542,118,2.516,119,2.759,120,3.542,121,1.778,122,1.778,123,1.726,124,1.677,125,1.726,126,3.284,127,2.082,128,0.386,129,0.155,130,4.477,131,1.889,132,0.167,133,1.474,134,3.888,135,3.888,136,3.888,137,4.196,138,1.328,139,4.383,140,1.09,141,1.147,142,4.842,143,3.888,144,3.542,145,3.888,146,3.888,147,3.888,148,4.081,149,3.888,150,3.888,151,3.888,152,3.888,153,3.888,154,3.147,155,2.423,156,3.888,157,2.906,158,5.301,159,1.234,160,0.703,161,1.949,162,2.082,163,3.078,164,2.631,165,3.078,166,3.078,167,2.906,168,3.078,169,3.078,170,3.888,171,3.888,172,2.906,173,2.906,174,3.888,175,3.888,176,3.078,177,5.301,178,5.301,179,5.301,180,4.477,181,2.104,182,5.301,183,3.078,184,3.284,185,3.888,186,3.888,187,1.502,188,3.078,189,3.888,190,3.888,191,3.888,192,3.888,193,3.888,194,1.133]],["title/components/AppComponent.html",[195,0.453,196,1.211]],["body/components/AppComponent.html",[3,0.054,4,0.066,5,0.075,6,0.139,11,0.808,12,1.008,16,0.999,18,0.548,19,0.43,20,1.486,22,1.369,23,1.946,25,1.059,32,2.115,35,0.748,37,3.451,38,2.057,42,1.5,43,0.01,44,1.011,45,0.619,46,1.084,52,1.232,55,1.326,56,1.154,69,1.072,75,0.004,80,0.004,85,1.455,86,1.421,88,2.273,91,2.085,99,0.293,104,0.129,111,1.397,112,0.744,128,0.258,129,0.103,132,0.097,133,0.806,138,0.813,140,1.023,141,0.767,159,0.675,160,1.353,181,1.406,187,1.369,195,0.636,196,1.562,197,1.033,198,0.744,199,0.825,200,0.825,201,0.803,202,1.901,203,2.398,204,1.669,205,2.519,206,3.276,207,0.725,208,1.086,209,1.086,210,2.262,211,1.129,212,1.246,213,1.113,214,3.993,215,1.113,216,3.229,217,3.993,218,3.107,219,4.264,220,4.264,221,3.73,222,3.47,223,3.364,224,4.264,225,4.15,226,3.993,227,3.544,228,4.022,229,2.857,230,3.716,231,4.529,232,3.544,233,3.544,234,4.022,235,3.993,236,2.051,237,5.474,238,4.529,239,4.529,240,3.47,241,3.364,242,3.993,243,3.364,244,2.146,245,2.273,246,2.721,247,3.086,248,4.022,249,2.993,250,3.47,251,2.251,252,3.716,253,4.022,254,4.926,255,1.777,256,2.449,257,2.27,258,1.729,259,1.815,260,4.85,261,3.885,262,2.79,263,2.555,264,4.529,265,4.022,266,3.993,267,3.993,268,3.276,269,3.993,270,3.702,271,2.993,272,2.993,273,3.229,274,3.229,275,2.555,276,2.515,277,1.529,278,2.555,279,2.555,280,2.294,281,3.229,282,2.515,283,4.199,284,3.993,285,3.716,286,2.321,287,2.555,288,3.229,289,2.555,290,2.555,291,3.229,292,2.555,293,2.555,294,3.229,295,2.555,296,1.657,297,2.555,298,2.268,299,1.867,300,2.662,301,2.555,302,2.294,303,2.037,304,2.555,305,2.805,306,1.964,307,1.131,308,1.246,309,3.086,310,3.11,311,2.515,312,2.197,313,2.555,314,3.229,315,2.555,316,3.229,317,2.555,318,2.555,319,2.555,320,0.69,321,1.782,322,1.901,323,1.683,324,2.051,325,0.725,326,1.901,327,2.051,328,1.782,329,1.901,330,1.523,331,1.457,332,0.893,333,1.343,334,1.343,335,1.782,336,0.847,337,2.051,338,2.051,339,3.229,340,2.051,341,2.051,342,2.051,343,2.051,344,3.229,345,2.051,346,1.901,347,2.051,348,2.051,349,1.597,350,2.051,351,2.051,352,1.397,353,1.901,354,1.901,355,1.205,356,2.051,357,2.051,358,2.051,359,1.523,360,2.051,361,0.744,362,2.051,363,2.051,364,2.805,365,2.051,366,2.051,367,2.051,368,2.051,369,2.051,370,2.051,371,5.672,372,2.051,373,3.993,374,2.051,375,5.474,376,2.051,377,1.901,378,2.051,379,5.075,380,1.294,381,2.051,382,3.3,383,2.051,384,2.205,385,3.229,386,3.889,387,1.782,388,2.051,389,1.573,390,3.229,391,1.457,392,1.721,393,3.229,394,2.051,395,1.901,396,2.051,397,1.597,398,4.022,399,5.642,400,4.971,401,0.893,402,1.742,403,2.879,404,2.515,405,2.515,406,2.968,407,1.838,408,1.457,409,2.294,410,1.166,411,1.059,412,2.037,413,2.615,414,2.555,415,2.037,416,1.232,417,2.555,418,2.711,419,2.649,420,2.8,421,2.993,422,2.555,423,2.831,424,4.974,425,2.805,426,1.033,427,2.294,428,2.251,429,2.129,430,2.398,431,1.033,432,2.805,433,1.898,434,1.683,435,2.515,436,2.197,437,1.248,438,1.777,439,1.777,440,3.229,441,2.051,442,2.051,443,1.093,444,2.837,445,2.555,446,1.166,447,1.029,448,2.649,449,1.782,450,2.43,451,2.967,452,0.869,453,2.519,454,4.022,455,0.869,456,1.782,457,2.555,458,2.555,459,1.523,460,2.805,461,3.276,462,4.022,463,2.519,464,2.555,465,2.555,466,1.343,467,2.051,468,0.999,469,1.782,470,1.294,471,1.294,472,1.523,473,2.555,474,1.683,475,1.901,476,0.407,477,1.033,478,0.825,479,1.821,480,0.825,481,0.825,482,0.744,483,0.825,484,0.725,485,1.606,486,0.744,487,0.825,488,1.113,489,1.606,490,0.744,491,0.783,492,0.825,493,0.744,494,0.825,495,0.744,496,0.707,497,0.825,498,0.744,499,0.825,500,0.744,501,0.763,502,0.825,503,0.744,504,0.803,505,0.725,506,0.825,507,0.744,508,1.298,509,0.725,510,0.744,511,0.744,512,1.606,513,0.744,514,1.201,515,1.298,516,0.725,517,0.744,518,0.725,519,0.624,520,0.825,521,0.725,522,0.707,523,0.744,524,0.825,525,0.744,526,0.825,527,0.763,528,0.825,529,0.744,530,1.059,531,0.744,532,1.171,533,0.744,534,0.825,535,0.744,536,1.086,537,0.825,538,0.744,539,0.825,540,0.825]],["title/modules/AppModule.html",[541,0.643,542,3.255]],["body/modules/AppModule.html",[3,0.109,4,0.134,5,0.097,6,0.11,25,1.37,37,3.833,38,1.272,43,0.01,55,1.124,56,1.041,75,0.007,80,0.007,99,0.365,104,0.263,129,0.134,132,0.197,138,0.851,160,0.829,196,2.302,203,3.102,204,2.16,211,0.666,225,2.846,283,3.872,296,1.812,322,3.872,323,3.427,325,1.477,329,3.872,426,1.336,476,0.829,482,2.422,541,0.765,542,6.781,543,1.477,544,1.515,545,2.336,546,1.594,547,1.954,548,1.636,549,4.584,550,4.584,551,4.584,552,5.802,553,5.802,554,5.802,555,5.802,556,5.802,557,5.802,558,5.802,559,2.11,560,1.477,561,5.203,562,2.166,563,7.428,564,5.203,565,6.711,566,2.056,567,5.203,568,4.584,569,6.711,570,3.872,571,2.735,572,2.785,573,2.035,574,6.711,575,5.913,576,4.42,577,3.253,578,5.387,579,4.177,580,5.913,581,6.711,582,3.427,583,5.203,584,5.203,585,5.203,586,4.994,587,5.203,588,5.203,589,5.203,590,3.872,591,6.711,592,5.203,593,4.42,594,4.584,595,5.203,596,3.872,597,5.203,598,4.994,599,5.387,600,3.629,601,5.203,602,5.203,603,2.096,604,6.711,605,5.203,606,4.584,607,5.203,608,3.629]],["title/interfaces/AppOptions.html",[128,0.281,335,3.05]],["body/interfaces/AppOptions.html",[3,0.086,4,0.105,5,0.077,6,0.067,16,2.233,18,0.397,19,0.61,20,1.503,22,1.392,23,1.6,35,0.76,37,3.476,43,0.01,45,0.646,46,1.435,56,1.161,69,1.188,75,0.006,80,0.006,85,0.8,88,2.3,91,2.109,99,0.333,104,0.207,111,2.237,112,1.191,128,0.366,129,0.147,132,0.155,133,1.145,138,1.075,140,1.035,141,0.78,159,0.958,160,1.357,181,1.43,194,1.051,195,0.681,196,1.132,202,3.044,203,2.438,204,1.698,205,2.891,206,3.76,208,1.104,209,1.104,210,1.689,211,0.841,212,1.025,213,1.132,214,3.283,215,1.132,216,3.283,217,3.283,218,3.791,219,4.849,220,4.849,221,3.123,222,2.853,223,3.403,224,4.112,225,4.569,226,3.283,229,2.071,230,2.694,231,3.283,235,3.283,237,5.279,238,4.583,239,4.583,240,2.853,241,3.403,242,3.283,243,3.403,244,2.489,245,2.3,246,2.237,247,3.123,250,2.853,252,2.694,254,4.583,255,1.608,256,2.123,257,1.866,258,1.749,259,1.466,260,4.249,261,3.403,262,2.444,264,3.283,266,3.283,267,3.283,268,2.694,269,3.283,270,3.044,271,3.044,272,3.044,273,3.283,274,3.283,276,2.558,277,1.555,280,2.332,281,3.283,282,2.558,283,4.895,284,4.583,285,4.331,286,2.423,288,3.283,291,3.283,294,3.283,296,1.776,298,2.109,299,1.051,300,3.103,302,2.332,303,2.071,305,2.853,306,1.998,307,0.82,308,1.025,309,2.237,310,3.57,311,2.558,312,1.807,314,3.283,316,3.283,320,1.104,321,2.853,322,3.044,323,2.694,324,3.283,325,1.161,326,3.044,327,3.283,328,2.853,329,3.044,330,2.438,331,2.332,332,1.43,333,2.15,334,2.15,335,3.982,336,1.5,337,3.283,338,3.283,339,4.583,340,3.283,341,3.283,342,3.283,343,3.283,344,4.583,345,3.283,346,3.044,347,3.283,348,3.283,349,2.558,350,3.283,351,3.283,352,2.237,353,3.044,354,3.044,355,1.93,356,3.283,357,3.283,358,3.283,359,2.438,360,3.283,361,1.191,362,3.283,363,3.283,364,2.853,365,3.283,366,3.283,367,3.283,368,3.283,369,3.283,370,3.283,371,6.518,372,3.283,373,5.279,374,3.283,375,6.389,376,3.283,377,3.044,378,3.283,379,5.923,380,2.071,381,3.283,382,3.927,383,3.283,384,2.052,385,4.583,386,4.539,387,2.853,388,3.283,389,2.233,390,4.583,391,2.332,392,2.444,393,4.583,394,3.283,395,3.044,396,3.283,397,2.558]],["title/components/AppWebComponent.html",[195,0.453,482,1.273]],["body/components/AppWebComponent.html",[3,0.082,4,0.1,5,0.103,6,0.143,12,1.38,16,2.154,18,0.377,19,0.589,35,1.024,38,2.12,42,0.95,43,0.01,44,0.996,45,0.803,46,0.687,56,0.854,69,1.224,75,0.006,80,0.006,82,3.841,86,0.76,99,0.316,104,0.197,112,1.132,129,0.196,132,0.147,133,1.104,138,0.635,141,0.741,195,0.663,196,1.076,197,1.643,198,1.604,200,1.254,201,1.222,207,1.103,208,1.487,209,1.487,210,2.32,211,1.16,212,1.603,218,3.524,219,4,220,4,225,3.499,244,1.359,245,2.803,246,3.806,247,3.806,255,0.95,258,2.643,259,1.415,298,3.012,299,1.643,307,1.104,308,0.974,320,1.049,325,1.103,328,2.711,332,2.743,336,1.689,361,1.132,411,1.023,452,0.839,455,0.839,459,1.049,468,1.52,476,0.619,477,1.415,478,1.254,479,2.246,480,1.254,481,1.254,482,2.026,483,1.254,484,1.103,485,2.065,486,1.132,487,1.254,488,1.525,489,2.065,490,1.132,491,1.191,492,1.254,493,1.132,494,1.254,495,1.132,496,1.076,497,1.254,498,1.132,499,1.254,500,1.132,501,1.161,502,1.254,503,1.132,504,1.222,505,1.103,506,1.254,507,1.132,508,1.778,509,1.103,510,1.132,511,1.132,512,2.065,513,1.132,514,1.645,515,1.778,516,1.103,517,1.132,518,1.103,519,0.95,520,1.254,521,1.103,522,1.076,523,1.132,524,1.254,525,1.132,526,1.254,527,1.161,528,1.254,529,1.132,530,1.45,531,1.132,532,1.604,533,1.132,534,1.254,535,1.132,536,1.487,537,1.254,538,1.132,539,1.254,540,1.254,582,5.74,609,6.486,610,2.892,611,6.397,612,5.507,613,3.813,614,2.286,615,3.813,616,4.351,617,5.586,618,5.586,619,4.351,620,3.074,621,5.586,622,5.179,623,3.886,624,5.507,625,5.507,626,3.886,627,4.462,628,3.886,629,4.462,630,3.886,631,5.636,632,3.886,633,3.886,634,3.886,635,3.886,636,3.886,637,3.886,638,5.135,639,3.886,640,3.886,641,3.886,642,3.886,643,3.886,644,1.968,645,2.043,646,5.507,647,3.886,648,1.968,649,1.968,650,4.852,651,2.357,652,3.424,653,2.892,654,3.886,655,3.12,656,3.886,657,3.886,658,3.886,659,3.886,660,3.886,661,3.886,662,3.886,663,6.397,664,5.507,665,3.12,666,6.397,667,3.886]],["title/interfaces/BlockSize.html",[128,0.281,668,2.392]],["body/interfaces/BlockSize.html",[3,0.111,4,0.135,5,0.098,6,0.086,11,0.692,18,0.51,19,0.722,40,1.028,41,1.054,43,0.01,44,0.966,45,0.677,47,1.002,56,1.048,69,0.712,71,2.229,75,0.007,80,0.007,86,1.028,99,0.273,104,0.266,128,0.479,129,0.174,131,2.25,132,0.256,138,1.104,140,1.224,159,1.253,160,1.189,181,1.838,194,1.35,195,0.816,208,1.419,209,1.419,210,1.35,211,0.864,213,1.455,215,1.455,255,2.206,258,2.633,259,1.35,320,1.419,384,2.928,389,3.188,392,3.488,406,2.642,411,2.262,416,2.07,477,1.35,484,1.492,603,2.117,668,4.309,669,3.666,670,3.462,671,3.133,672,5.422,673,3.42,674,4.667,675,4.696,676,5.951,677,2.891,678,1.53,679,2.891,680,2.721,681,2.056,682,1.998,683,2.567,684,3.912,685,5.555,686,4.696,687,3.912,688,3.462,689,3.462,690,1.53,691,1.697,692,3.372,693,3.912,694,3.462,695,4.631,696,2.721,697,2.25,698,4.224,699,3.133,700,3.848,701,3.462,702,3.462,703,4.631,704,3.666,705,3.462,706,3.287,707,6.576,708,3.912,709,4.631,710,5.951,711,4.631,712,5.951,713,3.912,714,4.631,715,4.631]],["title/components/BlockSizeInputComponent.html",[195,0.453,484,1.242]],["body/components/BlockSizeInputComponent.html",[3,0.074,4,0.091,5,0.096,6,0.128,11,0.798,12,1.289,18,0.343,19,0.55,25,1.355,35,0.657,38,1.864,40,1.006,41,1.031,42,1.257,43,0.01,44,1.158,45,0.67,46,0.909,47,0.981,52,1.083,55,1.111,56,1.033,69,0.902,71,1.558,75,0.005,76,2.427,80,0.005,85,1.186,86,1.384,99,0.208,104,0.179,128,0.33,129,0.132,131,1.513,132,0.28,138,0.841,140,1.099,141,0.674,159,1.018,160,1.128,181,1.799,187,1.751,195,0.79,196,0.978,197,1.321,198,1.029,199,1.141,200,1.141,201,1.111,207,1.003,208,1.389,209,1.389,210,2.303,211,1.154,212,0.885,213,1.424,215,1.424,218,1.789,255,2.175,258,2.636,259,1.711,299,1.558,307,1.031,308,0.885,320,0.954,384,2.394,389,2.606,392,2.851,401,1.236,402,1.722,403,2.679,406,2.769,410,1.612,411,2.368,412,1.789,415,1.789,416,2.041,423,1.467,429,2.851,431,1.558,436,2.272,438,1.561,439,1.561,443,1.513,446,2.347,447,1.424,450,1.726,451,1.858,452,0.763,453,1.789,455,1.111,456,2.465,459,0.954,463,1.789,470,1.789,471,1.789,472,3.616,476,0.563,477,1.818,478,1.141,479,2.15,480,1.141,481,1.141,482,1.029,483,1.141,484,1.891,485,1.958,486,1.029,487,1.141,488,1.424,489,1.958,490,1.029,491,1.083,492,1.141,493,1.029,494,1.141,495,1.029,496,0.978,497,1.141,498,1.029,499,1.141,500,1.029,501,1.055,502,1.141,503,1.029,504,1.111,505,1.003,506,1.141,507,1.029,508,1.66,509,1.003,510,1.029,511,1.029,512,1.958,513,1.029,514,1.536,515,1.66,516,1.003,517,1.029,518,1.003,519,0.864,520,1.141,521,1.003,522,0.978,523,1.029,524,1.141,525,1.029,526,1.141,527,1.055,528,1.141,529,1.029,530,1.355,531,1.029,532,1.498,533,1.029,534,1.141,535,1.029,536,1.389,537,1.141,538,1.029,539,1.141,540,1.141,571,3.502,603,1.424,614,2.517,668,4.041,669,5.45,670,5.146,671,2.107,672,2.837,673,1.789,674,4.426,675,4.546,676,5.344,677,2.596,678,1.029,679,2.202,680,2.683,681,1.382,682,1.343,683,2.305,684,2.63,685,4.958,686,4.22,687,3.828,688,3.388,689,3.994,690,1.498,691,1.958,692,3.344,693,3.828,694,3.388,695,5.344,696,2.443,697,2.202,698,4.426,699,3.067,700,3.609,701,3.388,702,3.388,703,4.532,704,2.465,705,2.327,706,2.21,707,5.344,708,2.63,709,3.114,710,4.532,711,3.114,712,4.532,713,3.828,714,5.869,715,3.114,716,5.144,717,2.605,718,1.751,719,1.858,720,5.144,721,3.114,722,4.532,723,3.534,724,3.114,725,4.532,726,3.994,727,3.114,728,2.465,729,3.114,730,3.114,731,2.21,732,1.858,733,2.465,734,2.21,735,2.465,736,1.858,737,2.465,738,3.114,739,2.837,740,2.63,741,2.465,742,4.532,743,2.347,744,3.828,745,3.114,746,2.327,747,2.837,748,3.534,749,3.114,750,2.327,751,2.327]],["title/modules/BlockSizeInputModule.html",[541,0.643,752,3.05]],["body/modules/BlockSizeInputModule.html",[3,0.132,4,0.161,5,0.118,6,0.103,43,0.01,75,0.008,80,0.008,99,0.359,104,0.318,129,0.161,132,0.237,255,1.534,411,2.129,426,1.612,476,1,484,2.574,541,0.923,543,1.781,544,1.827,545,2.543,546,1.923,547,1.827,548,2.543,559,2.372,560,1.781,562,2.026,566,2.311,570,4.67,571,3.299,572,3.13,573,2.455,669,4.377,670,4.133,752,6.147,753,5.529,754,5.529,755,5.529,756,5.038,757,2.71,758,2.136,759,5.613,760,4.67,761,5.26,762,4.377,763,4.125,764,3.432,765,6.054,766,5.038]],["title/modules/ConfigModule.html",[541,0.643,767,3.05]],["body/modules/ConfigModule.html",[3,0.143,4,0.175,5,0.128,6,0.112,43,0.01,75,0.008,80,0.008,99,0.338,104,0.345,129,0.175,132,0.258,211,0.872,325,1.935,543,1.935,547,1.984,566,2.427,598,5.072,767,5.524,768,6.816,769,4.952,770,5.524,771,6.357,772,3.887,773,6.816,774,6.816]],["title/components/ContainerComponent.html",[195,0.453,486,1.273]],["body/components/ContainerComponent.html",[3,0.069,4,0.084,5,0.091,6,0.138,11,0.764,12,1.219,18,0.472,19,0.52,20,2.3,25,1.281,32,2.559,35,0.609,38,2.036,40,0.952,41,0.976,42,1.19,43,0.01,44,0.982,45,0.721,46,0.86,47,0.928,48,1.453,52,1.969,55,1.608,56,0.997,61,2.286,69,0.444,71,1.25,75,0.005,80,0.005,85,1.135,86,1.135,90,1.571,99,0.29,104,0.166,112,0.954,114,1.178,129,0.084,132,0.272,133,1.288,138,1.05,140,1.052,141,0.625,159,1.078,160,0.925,187,1.976,195,0.836,196,0.907,197,1.847,198,0.954,199,1.058,200,1.058,201,1.031,204,2.02,205,2.939,207,0.93,208,1.314,209,1.314,210,2.288,211,1.147,212,0.821,213,1.347,215,1.347,224,4.656,229,3.253,246,3.514,247,3.514,255,1.19,256,2.215,257,2.931,259,1.25,262,3.078,276,3.043,277,2.442,296,2.01,299,2.171,307,0.976,308,0.821,310,3.63,311,3.043,312,3.708,320,0.885,336,1.354,359,1.954,384,1.178,397,2.049,401,1.146,402,0.93,408,2.775,409,1.869,411,0.863,418,3.708,419,2.158,431,0.842,452,0.708,455,0.708,459,0.885,468,1.904,476,0.522,477,1.763,478,1.058,479,2.074,480,1.058,481,1.058,482,0.954,483,1.058,484,0.93,485,1.874,486,1.87,487,1.058,488,1.9,489,1.874,490,0.954,491,1.004,492,1.058,493,1.87,494,1.058,495,0.954,496,0.907,497,1.058,498,0.954,499,1.058,500,0.954,501,0.979,502,1.058,503,0.954,504,1.031,505,0.93,506,1.058,507,0.954,508,1.571,509,0.93,510,0.954,511,0.954,512,1.874,513,0.954,514,1.453,515,1.571,516,0.93,517,0.954,518,0.93,519,0.801,520,1.058,521,0.93,522,0.907,523,0.954,524,1.058,525,0.954,526,1.058,527,0.979,528,1.058,529,0.954,530,1.281,531,0.954,532,1.417,533,0.954,534,1.058,535,0.954,536,1.314,537,1.058,538,0.954,539,1.058,540,1.058,547,1.417,673,1.659,678,0.954,690,1.417,718,1.656,775,2.631,776,2.662,777,4.66,778,4.288,779,4.867,780,3.378,781,5.805,782,4.867,783,3.132,784,4.32,785,5.805,786,5.805,787,4.74,788,3.907,789,5.157,790,6.424,791,5.805,792,3.907,793,4.867,794,2.559,795,3.352,796,3.394,797,4.867,798,4.867,799,3.289,800,3.277,801,4.288,802,4.867,803,3.205,804,3.622,805,3.622,806,3.277,807,2.22,808,4.867,809,4.867,810,3.277,811,3.277,812,4.867,813,4.867,814,2.835,815,3.277,816,3.205,817,7.446,818,4.867,819,6.424,820,3.277,821,4.481,822,4.288,823,6.424,824,4.867,825,3.277,826,3.907,827,4.288,828,4.867,829,3.277,830,3.277,831,3.277,832,4.288,833,3.277,834,3.277,835,1.281,836,3.277,837,3.277,838,2.888,839,2.631,840,2.439,841,2.158,842,2.439,843,2.888,844,3.907,845,3.277,846,2.888,847,3.277,848,2.888,849,3.823,850,3.823,851,2.888,852,2.888,853,3.277,854,3.277,855,3.277,856,3.277,857,2.158,858,2.631,859,2.888,860,2.439,861,3.277,862,3.277,863,4.288,864,2.049,865,2.662,866,4.288,867,3.277,868,3.277,869,3.277,870,1.85,871,3.277,872,3.277,873,4.867,874,4.867,875,3.277,876,3.277,877,3.277,878,3.277,879,3.277,880,3.277,881,3.277,882,2.439,883,3.277,884,3.277]],["title/components/ContentComponent.html",[195,0.453,488,1.211]],["body/components/ContentComponent.html",[3,0.061,4,0.074,5,0.083,6,0.136,11,0.708,12,1.108,15,2.339,18,0.522,19,0.473,20,1.711,22,2.211,23,2.681,24,3.541,25,1.165,35,0.822,38,2.006,40,0.865,41,0.887,42,1.314,43,0.01,44,1.079,45,0.721,46,0.95,52,0.885,55,1.403,56,1.063,69,0.391,71,1.136,75,0.005,80,0.005,85,1.439,86,1.439,88,2.427,91,2.226,92,3.436,99,0.304,104,0.146,113,1.236,114,1.038,129,0.074,132,0.259,138,0.879,140,0.523,141,1.025,159,1.09,160,1.336,187,0.983,195,0.811,196,0.799,197,1.136,198,0.841,199,0.932,200,0.932,201,0.908,204,1.836,205,2.722,206,3.541,207,0.82,208,1.194,209,1.194,210,2.261,211,1.139,212,1.347,213,1.224,215,1.224,229,2.722,230,3.968,236,2.318,243,3.592,246,3.296,247,3.296,255,1.314,256,2.624,257,2.018,259,1.669,262,1.236,277,1.681,282,1.805,286,2.051,296,0.78,299,1.381,306,1.41,307,1.544,308,0.723,320,0.78,323,1.902,330,1.721,331,1.647,336,0.932,379,4.835,380,1.462,382,3.051,384,2.855,386,3.436,389,3.012,392,3.295,395,2.149,401,1.01,402,1.844,403,2.662,406,2.103,407,1.634,408,1.647,409,2.522,411,0.76,412,1.462,413,1.518,416,1.991,418,3.682,420,2.453,423,1.836,429,1.236,431,1.136,435,2.766,436,1.954,437,1.41,438,1.275,439,1.275,446,1.317,447,1.163,449,2.014,451,1.518,452,1.161,455,1.161,459,0.78,461,1.902,463,3.289,466,2.326,476,0.46,477,1.669,478,0.932,479,1.945,480,0.932,481,0.932,482,0.841,483,0.932,484,0.82,485,1.735,486,0.841,487,0.932,488,1.798,489,1.735,490,0.841,491,0.885,492,0.932,493,0.841,494,0.932,495,0.841,496,0.799,497,0.932,498,0.841,499,0.932,500,0.841,501,0.862,502,0.932,503,0.841,504,0.908,505,0.82,506,0.932,507,0.841,508,1.428,509,0.82,510,0.841,511,0.841,512,1.735,513,0.841,514,1.321,515,1.428,516,0.82,517,0.841,518,0.82,519,0.706,520,0.932,521,0.82,522,0.799,523,0.841,524,0.932,525,0.841,526,0.932,527,0.862,528,0.932,529,0.841,530,1.165,531,0.841,532,1.288,533,0.841,534,0.932,535,0.841,536,1.194,537,0.932,538,0.841,539,0.932,540,0.932,560,1.256,620,2.375,644,2.24,645,2.326,648,1.462,649,1.462,678,0.841,686,1.721,690,1.288,691,1.735,718,1.505,726,2.913,734,1.805,735,2.014,736,1.518,776,2.941,796,3.085,803,2.913,807,2.453,821,2.014,835,1.587,885,2.544,886,4.316,887,3.897,888,5.376,889,5.376,890,6.026,891,6.026,892,6.853,893,5.376,894,4.423,895,5.376,896,4.423,897,3.436,898,6.026,899,4.423,900,4.423,901,4.423,902,2.887,903,5.376,904,2.887,905,2.887,906,2.887,907,6.496,908,2.887,909,2.887,910,1.721,911,2.887,912,2.887,913,2.16,914,2.149,915,2.887,916,2.887,917,3.768,918,3.289,919,1.805,920,4.423,921,4.423,922,4.423,923,4.423,924,6.853,925,4.698,926,4.423,927,4.423,928,4.423,929,4.423,930,4.423,931,4.423,932,2.887,933,2.887,934,3.551,935,4.423,936,6.496,937,3.897,938,3.897,939,4.423,940,4.423,941,2.887,942,2.887,943,5.376,944,3.897,945,4.423,946,4.423,947,4.423,948,4.423,949,4.423,950,4.423,951,2.887,952,5.376,953,2.766,954,2.887,955,2.913,956,4.423,957,2.544,958,2.318,959,2.887,960,2.318,961,2.887,962,2.887,963,2.887,964,3.551,965,3.085,966,1.902,967,2.149,968,1.902,969,1.902,970,1.902,971,2.318,972,1.902,973,4.423,974,6.026,975,6.026,976,3.292,977,1.721,978,3.292,979,4.423,980,4.423,981,4.423,982,4.423,983,3.051,984,2.913,985,3.085,986,1.805,987,1.902,988,1.893,989,2.887,990,3.292,991,2.014,992,2.043,993,2.887,994,2.887,995,1.721,996,2.887,997,2.544,998,2.318,999,2.014,1000,2.887]],["title/components/ContentComponent-1.html",[187,1.241,195,0.378,488,1.01]],["body/components/ContentComponent-1.html",[3,0.064,4,0.078,5,0.086,6,0.139,11,0.814,12,1.151,15,1.656,18,0.446,19,0.491,20,2.181,25,1.21,35,0.564,38,2.054,40,0.898,41,0.921,42,1.355,43,0.01,44,1,45,0.729,46,0.98,47,0.876,48,1.372,52,2.035,55,1.435,56,1.084,69,0.411,71,2.004,75,0.005,80,0.005,85,1.589,86,1.571,90,1.483,99,0.268,104,0.154,112,0.884,129,0.078,132,0.264,133,1.24,138,1.187,140,0.833,141,0.579,159,1.218,160,0.883,164,2.739,187,1.564,195,0.793,196,0.84,197,1.18,198,1.338,199,0.98,200,0.98,201,0.955,204,1.907,205,2.807,207,0.862,208,1.241,209,1.241,210,2.272,211,1.14,212,0.761,213,1.272,224,4.538,229,3.131,246,3.382,247,3.382,255,0.742,256,1.996,257,2.821,259,1.18,262,2.991,276,2.873,277,1.746,286,2.47,296,1.96,299,2.223,307,0.921,308,0.761,310,3.467,311,2.873,320,0.82,336,1.529,359,1.81,364,2.117,380,1.537,382,2.807,384,1.091,397,1.898,401,1.061,402,0.862,403,2.03,404,1.898,405,1.898,406,1.187,407,1.122,408,1.731,411,2.015,416,2.345,418,3.735,423,1.907,425,2.117,426,0.78,431,1.864,436,2.03,437,1.483,452,1.568,455,1.568,459,0.82,467,2.437,468,1.187,469,2.117,476,0.484,477,1.706,478,0.98,479,1.996,480,0.98,481,0.98,482,0.884,483,0.98,484,0.862,485,1.79,486,0.884,487,0.98,488,1.839,489,1.79,490,0.884,491,0.93,492,0.98,493,1.934,494,0.98,495,0.884,496,0.84,497,0.98,498,0.884,499,0.98,500,0.884,501,0.907,502,0.98,503,0.884,504,0.955,505,0.862,506,0.98,507,0.884,508,1.483,509,0.862,510,0.884,511,0.884,512,1.79,513,0.884,514,1.372,515,1.483,516,0.862,517,0.884,518,0.862,519,0.742,520,0.98,521,0.862,522,0.84,523,0.884,524,0.98,525,0.884,526,0.98,527,0.907,528,0.98,529,0.884,530,1.21,531,0.884,532,1.338,533,0.884,534,0.98,535,0.884,536,1.241,537,0.98,538,0.884,539,0.98,540,0.98,613,1.81,678,0.884,690,1.338,697,2.646,718,1.564,780,3.087,784,4.126,787,3.96,788,3.689,792,3.689,794,2.416,795,3.02,796,3.205,799,3.087,803,3.026,804,3.42,805,3.42,827,4.049,835,1.968,840,2.259,849,4.78,850,4.602,860,2.259,864,1.898,865,1.66,886,4.451,987,1.999,988,1.967,992,3.277,1001,2.675,1002,4.595,1003,6.984,1004,5.544,1005,6.642,1006,5.544,1007,5.544,1008,6.183,1009,4.595,1010,4.595,1011,4.595,1012,6.183,1013,6.183,1014,6.183,1015,4.595,1016,3.026,1017,4.595,1018,5.544,1019,4.595,1020,4.595,1021,5.544,1022,4.595,1023,4.595,1024,3.689,1025,3.036,1026,3.689,1027,3.689,1028,3.036,1029,3.036,1030,4.049,1031,3.689,1032,4.595,1033,4.956,1034,3.036,1035,4.595,1036,3.036,1037,3.205,1038,1.967,1039,4.595,1040,6.183,1041,2.259,1042,4.126,1043,2.437,1044,2.437,1045,3.036,1046,3.036,1047,3.036,1048,3.036,1049,3.036,1050,3.036,1051,3.036,1052,2.437,1053,4.595,1054,3.036,1055,4.595,1056,3.036,1057,1.66,1058,1.999,1059,3.036,1060,3.036,1061,3.036,1062,5.544,1063,3.036,1064,3.036,1065,4.595,1066,3.036,1067,3.036,1068,4.595,1069,3.036,1070,3.036,1071,3.036,1072,3.036,1073,2.675]],["title/interfaces/ContentContainerChanged.html",[128,0.281,1074,2.735]],["body/interfaces/ContentContainerChanged.html",[3,0.111,4,0.136,5,0.099,6,0.087,11,0.696,15,1.579,18,0.513,19,0.725,43,0.01,45,0.828,47,1.293,48,1.579,71,1.742,75,0.007,80,0.007,90,2.416,99,0.213,121,2.13,122,2.13,123,2.069,124,2.01,125,2.069,128,0.507,129,0.227,132,0.2,138,0.865,140,1.229,181,2.761,194,1.358,195,0.846,197,1.742,221,2.893,299,2.288,312,2.995,336,1.429,416,2.078,418,3.838,427,3.867,433,2.495,530,1.393,613,3.153,651,3.204,692,2.264,780,3.307,783,2.413,787,4.043,794,2.78,795,3.312,799,3.936,814,3.312,835,1.786,864,3.307,865,3.709,870,2.01,992,2.577,1033,4.24,1037,3.689,1057,2.893,1074,4.681,1075,3.307,1076,4.764,1077,4.73,1078,4.73,1079,4.93,1080,3.689,1081,4.24,1082,3.689,1083,4.503,1084,4.24,1085,4.73,1086,3.936,1087,3.936,1088,4.24,1089,4.24,1090,3.936,1091,3.689,1092,4.73,1093,3.689,1094,3.689,1095,4.094,1096,3.689,1097,3.689]],["title/modules/ContentModule.html",[541,0.643,552,3.05]],["body/modules/ContentModule.html",[3,0.129,4,0.158,5,0.115,6,0.101,43,0.01,75,0.008,80,0.008,99,0.357,104,0.311,129,0.158,132,0.232,211,0.785,308,1.864,325,1.741,426,1.575,459,1.656,476,0.977,488,2.503,532,1.786,541,0.902,543,1.741,544,1.786,545,2.518,546,1.879,547,1.786,548,2.518,552,6.282,559,2.339,560,1.741,562,2.401,566,2.279,572,3.087,573,2.399,757,2.673,758,2.087,761,5.188,762,4.278,839,4.923,1098,5.404,1099,5.404,1100,5.404,1101,5.404,1102,6.046,1103,6.046,1104,6.133,1105,7.438,1106,7.438,1107,4.278,1108,6.133,1109,4.039,1110,4.565,1111,6.133]],["title/modules/CoreModule.html",[541,0.643,553,3.05]],["body/modules/CoreModule.html",[3,0.128,4,0.157,5,0.114,6,0.1,43,0.01,46,1.079,75,0.008,80,0.008,99,0.357,104,0.309,129,0.157,132,0.231,140,1.106,211,0.949,212,1.529,325,1.733,326,4.543,426,1.568,476,0.972,541,1.175,543,1.733,544,1.777,545,1.919,546,1.87,547,1.777,548,2.332,553,6.278,559,2.332,560,1.733,562,2.394,566,2.273,608,4.258,648,3.091,649,3.091,767,6.039,852,5.378,1112,5.378,1113,5.378,1114,6.039,1115,6.039,1116,6.104,1117,7.417,1118,6.104,1119,5.173,1120,7.417,1121,6.104,1122,6.104,1123,6.104,1124,6.104,1125,6.104,1126,6.104,1127,6.104,1128,6.104,1129,4.543,1130,7.99,1131,6.104,1132,4.9,1133,6.104]],["title/interfaces/DefaultIconDefinition.html",[128,0.281,1134,3.255]],["body/interfaces/DefaultIconDefinition.html",[3,0.079,4,0.097,5,0.071,6,0.062,11,0.497,18,0.366,19,0.577,43,0.01,44,1.314,45,0.623,46,1.406,69,1.137,75,0.006,80,0.006,90,1.218,128,0.242,129,0.139,138,0.617,141,1.441,194,0.97,203,5.455,302,5.206,307,0.757,349,5.745,443,3.676,452,1.569,455,1.569,477,1.998,620,3.034,673,2.732,776,2.065,988,1.616,1134,4.685,1135,2.633,1136,3.03,1137,3.03,1138,1.993,1139,3.03,1140,3.326,1141,4.015,1142,3.775,1143,3.775,1144,3.03,1145,3.775,1146,3.775,1147,2.633,1148,3.326,1149,6.835,1150,4.015,1151,5.513,1152,3.763,1153,2.486,1154,3.03,1155,2.633,1156,3.326,1157,8.038,1158,3.326,1159,3.326,1160,3.326,1161,4.753,1162,3.326,1163,3.326,1164,3.326,1165,3.326,1166,3.326,1167,3.326,1168,6.051,1169,6.051,1170,6.401,1171,6.401,1172,2.809,1173,3.326,1174,4.331,1175,3.326,1176,3.326,1177,3.326,1178,4.015,1179,4.015,1180,4.753,1181,3.326,1182,3.326,1183,3.326,1184,3.326,1185,6.401,1186,3.326,1187,4.753,1188,2.809,1189,3.326,1190,3.326,1191,3.326,1192,3.326,1193,3.326,1194,3.326,1195,3.326,1196,3.326,1197,3.326,1198,3.326,1199,3.326,1200,6.051,1201,4.753,1202,3.326,1203,3.326,1204,3.326,1205,3.326,1206,4.753,1207,3.326,1208,3.326,1209,3.03,1210,3.326,1211,3.326,1212,3.326,1213,3.326,1214,3.326,1215,4.753,1216,4.331,1217,3.03,1218,3.326,1219,2.809,1220,3.326,1221,3.326,1222,3.326,1223,3.326,1224,3.326,1225,3.326,1226,3.326,1227,6.051,1228,3.326,1229,3.326,1230,6.051,1231,3.326,1232,3.326,1233,2.633,1234,3.326,1235,3.326,1236,5.546,1237,3.326,1238,4.753,1239,3.326,1240,3.326,1241,3.326,1242,3.326]],["title/components/DetailsLabelComponent.html",[195,0.453,490,1.273]],["body/components/DetailsLabelComponent.html",[3,0.094,4,0.115,5,0.114,6,0.127,11,0.798,12,1.519,18,0.433,19,0.648,25,1.596,38,1.805,42,1.091,43,0.01,44,1.166,45,0.67,46,0.789,52,1.368,55,1.309,69,1.185,75,0.006,80,0.006,85,1.346,86,1.346,99,0.18,104,0.226,129,0.115,132,0.301,133,0.895,138,0.73,141,0.851,155,3.209,159,0.749,160,1.097,195,0.8,196,1.235,197,1.557,198,1.299,199,1.44,200,1.44,201,1.403,207,1.267,208,1.637,209,1.637,210,2.343,211,1.171,212,1.118,213,1.678,215,1.678,255,1.482,258,1.858,259,1.557,299,1.768,303,3.07,307,1.215,308,1.118,320,1.205,401,1.56,402,1.954,406,1.746,411,1.175,413,3.187,443,2.595,447,2.442,452,0.964,455,0.964,459,1.205,468,2.371,476,0.711,477,1.984,478,1.44,479,2.384,480,1.44,481,1.44,482,1.299,483,1.44,484,1.267,485,2.222,486,1.299,487,1.44,488,1.678,489,2.222,490,2.15,491,2.717,492,1.44,493,1.299,494,1.44,495,1.299,496,1.235,497,1.44,498,1.299,499,1.44,500,1.299,501,1.333,502,1.44,503,1.299,504,1.403,505,1.267,506,1.44,507,1.299,508,1.957,509,1.267,510,1.299,511,1.299,512,2.222,513,1.299,514,1.811,515,1.957,516,1.267,517,1.299,518,1.267,519,1.091,520,1.44,521,1.267,522,1.235,523,1.299,524,1.44,525,1.299,526,1.44,527,1.333,528,1.44,529,1.299,530,1.596,531,1.299,532,1.765,533,1.299,534,1.44,535,1.299,536,1.637,537,1.44,538,1.299,539,1.44,540,1.44,614,2.516,678,1.299,690,1.765,691,2.222,718,2.063,1243,6.2,1244,5.748,1245,3.932,1246,5.341,1247,4.866,1248,4.847,1249,7.386,1250,6.062,1251,7.386,1252,6.062,1253,6.885,1254,6.062,1255,6.062,1256,4.463,1257,6.062,1258,6.062,1259,4.463,1260,3.316,1261,6.062,1262,4.866,1263,7.386,1264,6.062,1265,6.062,1266,6.062,1267,4.463,1268,4.463,1269,2.346,1270,4.463,1271,6.062,1272,2.79]],["title/modules/DetailsLabelModule.html",[541,0.643,1273,3.05]],["body/modules/DetailsLabelModule.html",[3,0.138,4,0.169,5,0.123,6,0.108,43,0.01,75,0.008,80,0.008,99,0.332,104,0.332,129,0.169,132,0.248,426,1.686,476,1.045,490,2.654,491,2.011,541,0.965,543,1.863,544,1.911,545,2.592,546,2.011,547,1.911,548,2.592,559,2.436,560,1.863,562,2.119,566,2.374,757,2.784,758,2.234,1243,5.269,1244,4.885,1273,6.201,1274,5.783,1275,5.783,1276,5.783,1277,6.564,1278,6.564]],["title/interfaces/DocumentationContent.html",[128,0.281,1279,3.511]],["body/interfaces/DocumentationContent.html",[3,0.165,4,0.172,5,0.125,6,0.11,8,3.049,11,0.88,18,0.649,19,0.837,43,0.01,45,0.71,69,1.197,75,0.008,80,0.008,128,0.429,129,0.172,194,1.717,418,3.904,731,5.527,1279,6.284,1280,5.888,1281,6.683,1282,4.179,1283,4.661,1284,6.087,1285,5.365,1286,3.811,1287,5.826]],["title/interfaces/DrawerContainersChanged.html",[128,0.281,1081,2.735]],["body/interfaces/DrawerContainersChanged.html",[3,0.11,4,0.135,5,0.098,6,0.086,11,0.69,15,1.567,18,0.509,19,0.721,43,0.01,45,0.828,47,1.286,48,1.567,71,1.733,75,0.007,80,0.007,90,2.177,99,0.212,121,2.113,122,2.113,123,2.052,124,1.994,125,2.052,128,0.505,129,0.226,132,0.198,138,0.858,140,0.951,181,2.753,194,1.347,195,0.815,197,1.915,221,2.869,299,2.304,312,2.98,336,1.421,416,2.067,418,3.477,427,3.847,433,2.475,530,1.381,613,3.127,651,3.192,692,2.887,780,3.294,783,2.393,787,4.855,794,2.758,795,3.295,799,3.931,814,3.295,835,1.776,864,3.28,865,3.69,870,2.564,992,2.564,1033,4.218,1037,4.705,1057,2.869,1074,4.218,1075,3.28,1076,4.753,1077,4.705,1078,4.705,1079,4.911,1080,3.659,1081,4.663,1082,4.705,1083,4.489,1084,4.218,1085,4.705,1086,3.904,1087,3.904,1088,4.218,1089,4.218,1090,3.904,1091,3.659,1092,4.705,1093,3.659,1094,3.659,1095,4.079,1096,3.659,1097,3.659]],["title/interfaces/DrawerInitialized.html",[128,0.281,1088,2.735]],["body/interfaces/DrawerInitialized.html",[3,0.112,4,0.137,5,0.1,6,0.088,11,0.701,15,1.591,18,0.517,19,0.728,43,0.01,45,0.828,47,1.299,48,1.591,71,1.75,75,0.007,80,0.007,90,2.199,99,0.215,121,2.146,122,2.146,123,2.084,124,2.025,125,2.084,128,0.508,129,0.227,132,0.202,138,0.871,140,0.966,181,2.626,194,1.368,195,0.778,197,1.75,221,2.913,299,2.3,312,3.009,336,1.436,416,2.088,418,3.497,427,3.885,433,2.513,530,1.403,613,3.176,651,3.215,692,2.28,780,3.318,783,2.43,787,4.061,794,2.801,795,3.328,799,3.939,814,3.328,835,1.794,864,3.331,865,3.726,870,2.025,992,2.589,1033,4.26,1037,3.715,1057,2.913,1074,4.26,1075,3.331,1076,4.773,1077,4.752,1078,4.752,1079,4.947,1080,3.715,1081,4.26,1082,3.715,1083,4.515,1084,4.26,1085,4.752,1086,5.07,1087,5.07,1088,4.697,1089,4.26,1090,3.964,1091,3.715,1092,4.752,1093,3.715,1094,3.715,1095,4.108,1096,3.715,1097,3.715]],["title/modules/DrawerModule.html",[541,0.643,554,3.05]],["body/modules/DrawerModule.html",[3,0.125,4,0.153,5,0.111,6,0.098,43,0.01,75,0.008,80,0.008,99,0.358,104,0.301,129,0.153,132,0.225,426,1.526,476,0.946,486,2.622,488,2.412,493,2.622,529,2.622,530,1.565,541,0.874,543,1.687,544,1.73,545,2.483,546,1.821,547,2.124,548,2.483,554,6.341,559,2.294,560,1.687,562,1.918,566,2.236,572,3.028,573,2.324,575,6.428,576,4.805,577,3.715,578,5.857,579,4.77,598,4.422,599,4.77,839,4.77,840,4.422,1080,4.145,1288,5.235,1289,5.235,1290,5.235,1291,5.942,1292,4.562,1293,4.562,1294,5.942,1295,4.77,1296,5.235]],["title/interfaces/DrawerToggled.html",[128,0.281,1089,2.735]],["body/interfaces/DrawerToggled.html",[3,0.107,4,0.131,5,0.095,6,0.084,11,0.671,15,1.977,18,0.495,19,0.708,43,0.01,45,0.83,47,1.262,48,1.977,71,2.124,75,0.007,80,0.007,90,2.137,99,0.206,121,2.052,122,2.052,123,1.993,124,1.936,125,1.993,128,0.5,129,0.225,132,0.193,138,0.833,140,0.923,181,2.722,194,1.309,195,0.762,197,1.7,221,3.621,299,2.317,312,2.924,336,1.743,416,2.534,418,3.439,427,4.716,433,3.123,530,1.743,613,3.037,651,3.148,692,2.181,780,3.248,783,2.325,787,3.946,794,3.481,795,3.233,799,3.916,814,3.233,835,2.05,864,3.186,865,3.621,870,1.936,992,3.144,1033,5.172,1037,3.554,1057,2.787,1074,4.139,1075,3.186,1076,4.602,1077,4.617,1078,4.617,1079,4.843,1080,3.554,1081,4.139,1082,3.554,1083,4.44,1084,4.139,1085,4.617,1086,3.792,1087,3.792,1088,4.139,1089,4.598,1090,4.927,1091,4.617,1092,4.617,1093,3.554,1094,3.554,1095,4.022,1096,3.554,1097,3.554]],["title/interfaces/ExtractionSet.html",[128,0.281,1297,2.392]],["body/interfaces/ExtractionSet.html",[3,0.134,4,0.164,5,0.119,6,0.105,11,0.839,18,0.619,19,0.814,43,0.01,44,1.251,45,0.739,46,1.345,69,1.184,75,0.008,80,0.008,99,0.257,128,0.409,129,0.164,141,1.668,194,1.638,298,3.293,496,2.467,536,1.721,699,4.539,913,3.719,1269,3.353,1297,4.165,1298,5.618,1299,5.618,1300,6.216,1301,7.615,1302,4.434,1303,7.615]],["title/components/ExtractionSetDropdownComponent.html",[195,0.453,495,1.273]],["body/components/ExtractionSetDropdownComponent.html",[3,0.079,4,0.097,5,0.101,6,0.133,11,0.829,12,1.352,18,0.366,19,0.577,25,1.421,35,0.702,38,1.944,40,1.055,41,1.082,42,1.319,43,0.01,44,1.138,45,0.706,46,0.953,47,1.029,52,1.157,55,1.36,56,0.837,69,0.511,75,0.006,76,1.781,80,0.006,85,1.055,86,1.42,99,0.254,104,0.191,129,0.097,132,0.286,133,0.757,140,0.684,141,1.752,159,0.905,160,1.157,187,1.285,195,0.753,196,1.045,197,1.386,198,1.099,199,1.218,200,1.218,201,1.187,207,1.072,208,1.456,209,1.456,210,2.315,211,1.159,212,0.946,213,1.493,215,1.493,255,0.923,256,1.218,258,1.653,259,1.386,296,1.456,299,1.617,303,2.732,307,1.082,308,0.946,320,1.019,336,1.137,355,2.97,401,1.32,406,2.11,411,0.994,416,1.653,420,1.722,421,4.685,429,1.616,431,0.97,434,2.486,452,0.815,455,0.815,459,1.019,460,4.391,466,1.985,470,3.188,471,3.188,472,3.216,474,2.486,475,2.809,476,0.601,477,1.866,478,1.218,479,2.217,480,1.218,481,1.218,482,1.099,483,1.218,484,1.072,485,2.032,486,1.099,487,1.218,488,1.493,489,2.032,490,1.099,491,1.157,492,1.218,493,1.099,494,1.218,495,2,496,2.505,497,1.218,498,1.099,499,1.218,500,1.099,501,1.127,502,1.218,503,1.099,504,1.187,505,1.072,506,1.218,507,1.099,508,1.741,509,1.072,510,1.099,511,1.099,512,2.032,513,1.099,514,1.611,515,1.741,516,1.072,517,1.099,518,1.072,519,0.923,520,1.218,521,1.072,522,1.045,523,1.099,524,1.218,525,1.099,526,1.218,527,1.127,528,1.218,529,1.099,530,1.421,531,1.099,532,1.571,533,1.099,534,1.218,535,1.099,536,1.456,537,1.218,538,1.099,539,1.218,540,1.218,571,2.836,603,1.521,614,2.239,677,2.694,678,1.099,679,2.309,680,2.767,681,1.477,682,1.435,683,2.393,690,1.571,691,2.032,696,2.536,717,2.732,718,1.836,719,1.985,743,2.461,744,2.809,746,3.553,747,3.03,807,3.549,835,1.421,1284,2.633,1297,4.351,1304,6.5,1305,6.026,1306,3.326,1307,7.237,1308,4.331,1309,6.295,1310,5.395,1311,5.198,1312,5.395,1313,6.868,1314,6.295,1315,5.395,1316,3.775,1317,3.775,1318,3.478,1319,2.836,1320,5.395,1321,5.395,1322,3.775,1323,3.775,1324,4.753,1325,4.791,1326,4.523,1327,3.373,1328,3.775,1329,3.775,1330,3.775,1331,3.775,1332,3.775,1333,3.775,1334,3.775,1335,5.395,1336,5.395,1337,5.395,1338,3.326,1339,3.775,1340,3.775,1341,3.326,1342,2.809,1343,3.775,1344,3.775,1345,3.326,1346,3.326]],["title/modules/ExtractionSetDropdownModule.html",[541,0.643,1347,3.05]],["body/modules/ExtractionSetDropdownModule.html",[3,0.136,4,0.167,5,0.122,6,0.107,43,0.01,75,0.008,80,0.008,99,0.342,104,0.329,129,0.167,132,0.246,141,1.564,426,1.667,476,1.034,495,2.65,496,1.796,541,0.954,543,1.842,544,1.889,545,2.579,546,1.988,547,1.889,548,2.579,559,2.419,560,1.842,562,2.095,566,2.358,757,2.765,758,2.209,1304,5.209,1305,4.829,1347,6.187,1348,5.717,1349,5.717,1350,5.717,1351,6.489,1352,6.779,1353,5.717,1354,6.489]],["title/interfaces/GlobalConfig.html",[128,0.281,244,1.529]],["body/interfaces/GlobalConfig.html",[3,0.11,4,0.134,5,0.098,6,0.086,14,3.673,18,0.506,19,0.718,43,0.01,44,0.745,45,0.818,46,1.625,56,1.042,69,1.234,75,0.007,80,0.007,82,4.684,99,0.3,104,0.264,112,1.516,128,0.431,129,0.202,133,1.044,138,0.852,140,0.944,194,1.338,211,0.666,218,3.975,219,4.909,220,4.909,223,4.68,225,4.294,244,2.745,298,2.901,325,1.478,332,2.841,333,3.531,334,3.531,336,1.864,361,1.516,452,1.125,455,1.125,468,3.311,615,4.68,616,4.909,617,6.302,618,6.302,619,4.909,620,3.468,621,6.302,622,5.843,769,4.199,770,3.633,1038,2.229,1138,1.924,1172,3.876,1174,3.105,1178,3.876,1179,3.876,1219,3.876,1355,3.633,1356,4.895,1357,4.909,1358,5.39,1359,4.003,1360,3.633,1361,2.738,1362,2.849,1363,2.849,1364,4.589,1365,3.876,1366,2.376,1367,4.181,1368,4.589]],["title/components/HeaderComponent.html",[195,0.453,498,1.273]],["body/components/HeaderComponent.html",[3,0.091,4,0.111,5,0.111,6,0.13,11,0.782,12,1.488,18,0.42,19,0.635,23,3.162,35,0.805,38,1.868,40,1.161,41,1.191,42,1.059,43,0.01,44,1.157,45,0.693,46,0.765,52,1.327,69,1.035,75,0.006,76,2.802,80,0.006,85,1.161,86,1.161,91,2.695,99,0.24,104,0.219,129,0.111,132,0.299,141,0.826,159,0.727,160,1.08,187,1.474,195,0.792,196,1.199,197,1.526,198,1.261,199,1.398,200,1.398,201,1.362,207,1.23,208,1.604,209,1.604,210,2.338,211,1.169,212,1.085,213,1.644,215,1.644,218,4.279,219,4.239,220,4.239,255,1.059,258,2.077,259,1.526,277,1.646,299,1.741,307,1.191,308,1.085,320,1.169,331,2.47,361,1.729,401,1.514,402,2.071,403,3.376,406,2.99,407,2.195,410,3.093,411,2.013,413,2.277,415,2.193,416,2.235,423,1.798,429,2.901,431,1.874,436,3.222,438,1.913,439,1.913,443,1.854,446,3.328,447,2.938,448,3.912,450,2.901,451,3.123,452,0.936,455,0.936,459,1.169,463,3.008,476,0.69,477,1.963,478,1.398,479,2.354,480,1.398,481,1.398,482,1.261,483,1.398,484,1.23,485,2.188,486,1.261,487,1.398,488,1.644,489,2.188,490,1.261,491,1.327,492,1.398,493,1.261,494,1.398,495,1.261,496,1.199,497,1.398,498,2.124,499,1.398,500,1.261,501,1.294,502,1.398,503,1.261,504,1.362,505,1.23,506,1.398,507,1.261,508,1.917,509,1.23,510,1.261,511,1.261,512,2.188,513,1.261,514,1.774,515,1.917,516,1.23,517,1.261,518,1.23,519,1.059,520,1.398,521,1.23,522,1.199,523,1.261,524,1.398,525,1.261,526,1.398,527,1.294,528,1.398,529,1.261,530,1.564,531,1.261,532,1.729,533,1.261,534,1.398,535,1.261,536,1.604,537,1.398,538,1.261,539,1.398,540,1.398,614,2.465,678,1.261,690,1.729,691,2.188,718,2.022,732,2.277,736,2.277,746,2.853,749,3.816,750,2.853,751,2.853,846,3.816,986,2.708,991,3.021,992,1.646,1042,3.223,1082,3.021,1153,2.853,1262,3.477,1272,4.239,1285,3.477,1369,3.816,1370,6.779,1371,5.94,1372,3.477,1373,5.94,1374,4.331,1375,5.94,1376,4.331,1377,5.94,1378,4.421,1379,3.477,1380,3.223,1381,3.912,1382,3.021,1383,4.331,1384,3.816,1385,4.331,1386,4.331,1387,4.331,1388,3.021,1389,4.331,1390,4.331,1391,3.816,1392,3.477,1393,4.331,1394,3.021,1395,5.94]],["title/modules/HeaderModule.html",[541,0.643,555,3.05]],["body/modules/HeaderModule.html",[3,0.136,4,0.167,5,0.122,6,0.107,43,0.01,75,0.008,80,0.008,99,0.349,104,0.329,129,0.167,132,0.246,426,1.667,476,1.034,498,2.65,541,0.954,543,1.842,544,1.889,545,2.579,546,1.988,547,1.889,548,2.579,555,6.187,559,2.419,560,1.842,562,2.095,566,2.358,572,3.194,573,2.538,757,2.765,758,2.209,763,4.208,764,3.549,1396,5.717,1397,5.717,1398,5.717,1399,6.489,1400,6.489]],["title/interfaces/IconDefinition.html",[128,0.281,1401,3.255]],["body/interfaces/IconDefinition.html",[0,1.775,3,0.088,4,0.107,5,0.078,6,0.069,11,0.55,15,2.145,16,1.634,18,0.405,19,0.619,20,2.056,29,1.845,40,0.817,41,0.837,43,0.01,44,1.232,45,0.652,46,1.464,47,0.796,48,1.986,53,3.046,55,1.551,56,0.899,60,2.913,69,1.084,75,0.006,80,0.006,85,1.133,86,0.817,99,0.334,102,2.082,104,0.211,106,2.559,107,1.845,108,1.845,109,1.734,128,0.268,129,0.149,132,0.158,133,1.682,138,1.334,140,1.05,141,1.488,159,1.31,160,0.923,161,1.845,194,1.073,211,0.534,244,2.026,245,2.333,249,3.108,286,2.657,296,1.795,307,1.44,325,1.186,336,1.221,349,5.3,443,3.85,477,2.177,573,1.634,576,2.751,577,2.612,615,3.453,620,3.605,651,2.846,653,3.108,655,3.353,673,2.933,743,2.643,870,2.202,910,4.497,919,3.622,983,3.367,1129,3.108,1132,3.353,1135,2.913,1138,2.14,1139,6.551,1149,6.363,1150,5.615,1151,5.765,1152,4.04,1153,5.141,1155,4.04,1248,2.382,1388,2.913,1401,5.81,1402,3.108,1403,3.353,1404,4.65,1405,6.328,1406,6.328,1407,5.86,1408,5.104,1409,5.104,1410,2.115,1411,3.68,1412,3.68,1413,2.751,1414,6.878,1415,5.104,1416,3.68,1417,3.68,1418,3.622,1419,3.68,1420,3.68,1421,3.68,1422,3.68,1423,3.68,1424,5.104,1425,3.68,1426,3.68,1427,3.68,1428,3.68,1429,3.68,1430,3.68,1431,3.68,1432,3.68,1433,3.68,1434,3.68,1435,3.68,1436,3.68,1437,3.353,1438,5.104,1439,3.68,1440,3.68,1441,3.68,1442,3.68,1443,3.68,1444,5.104,1445,3.68,1446,3.68,1447,3.353,1448,3.68,1449,3.68,1450,3.68,1451,5.86,1452,3.68,1453,3.68,1454,3.68,1455,4.65,1456,3.68,1457,3.68,1458,3.68,1459,3.68,1460,3.68,1461,3.68,1462,3.68,1463,3.68,1464,3.108,1465,3.68,1466,3.68]],["title/injectables/IconRegistryState.html",[0,1.34,1413,2.88]],["body/injectables/IconRegistryState.html",[0,1.658,2,2.26,3,0.08,4,0.097,5,0.071,6,0.128,11,0.906,15,2.26,16,2.117,18,0.368,20,2.213,25,1.425,29,3.04,35,0.705,38,1.85,40,1.058,41,1.085,42,1.779,43,0.01,44,1.23,45,0.66,46,1.337,47,1.032,48,2.26,52,1.162,53,3.318,55,1.751,56,0.979,60,3.775,69,0.932,75,0.006,80,0.006,85,1.234,86,0.741,99,0.327,102,1.945,104,0.192,106,2.39,107,1.675,108,1.675,109,1.574,128,0.243,129,0.139,132,0.143,133,1.648,138,1.302,140,0.687,141,1.203,159,1.27,160,0.862,161,1.675,211,0.485,244,2.406,245,2.772,249,4.028,286,2.71,296,1.965,307,1.597,325,1.076,336,1.45,349,4.87,443,3.825,477,2.045,573,1.483,576,2.497,577,2.371,615,3.226,620,3.58,651,2.701,653,2.822,655,3.044,673,1.92,743,3.14,870,2.057,910,4.748,919,4.303,983,3.685,1129,2.822,1132,4.344,1135,5.433,1138,1.401,1139,6.506,1149,5.927,1150,5.122,1151,4.344,1152,2.645,1153,4.984,1155,3.775,1248,3.086,1388,3.775,1401,6.308,1402,5.797,1403,3.044,1404,3.044,1405,4.768,1406,4.768,1407,6.667,1408,6.064,1409,5.56,1410,1.92,1411,4.768,1412,3.341,1413,3.564,1414,7.244,1415,6.064,1416,4.768,1417,4.768,1418,4.303,1419,3.341,1420,3.341,1421,3.341,1422,3.341,1423,3.341,1424,4.768,1425,3.341,1426,3.341,1427,3.341,1428,3.341,1429,3.341,1430,3.341,1431,3.341,1432,3.341,1433,3.341,1434,3.341,1435,3.341,1436,3.341,1437,4.344,1438,6.064,1439,4.768,1440,3.341,1441,4.768,1442,6.064,1443,4.768,1444,4.768,1445,3.341,1446,3.341,1447,3.044,1448,3.341,1449,3.341,1450,3.341,1451,5.56,1452,3.341,1453,3.341,1454,3.341,1455,5.524,1456,5.56,1457,3.341,1458,3.341,1459,3.341,1460,3.341,1461,3.341,1462,3.341,1463,4.768,1464,4.028,1465,5.56,1466,3.341,1467,5.412,1468,3.792,1469,3.792,1470,3.792,1471,3.792,1472,3.792,1473,3.792,1474,3.792,1475,3.792,1476,3.792]],["title/classes/InitializationState.html",[132,0.165,1477,3.511]],["body/classes/InitializationState.html",[3,0.055,4,0.067,5,0.049,6,0.113,11,0.342,15,2.493,18,0.252,19,0.435,20,2.259,25,1.072,38,1.604,40,0.508,41,0.52,42,0.996,43,0.01,45,0.595,47,0.495,48,1.216,55,1.417,56,1.233,65,1.147,71,1.046,75,0.004,80,0.004,85,1.113,86,1.209,90,1.315,99,0.249,104,0.131,112,0.756,121,2.293,122,2.293,123,1.966,124,2.164,125,1.966,129,0.067,132,0.19,133,1.652,138,1.222,140,1.244,141,1.453,159,1.152,160,0.907,181,0.908,195,0.68,197,0.667,199,0.838,204,1.078,205,2.062,208,0.701,209,0.701,210,0.667,211,0.521,213,0.719,215,0.719,221,4.348,224,3.143,229,1.314,243,2.428,246,2.228,247,2.228,256,1.837,257,1.858,258,1.744,259,1.762,262,2.436,276,1.623,277,0.987,280,2.323,282,2.547,286,2.418,296,2.057,299,2.247,305,1.811,309,3.996,310,2.547,311,1.623,320,0.701,321,1.811,336,1.632,359,1.548,380,1.314,382,1.314,397,1.623,415,1.314,416,2.462,419,2.682,423,1.691,425,2.841,426,1.046,427,4.479,431,2.017,432,2.841,437,1.268,441,2.084,442,2.084,452,0.88,455,0.88,461,2.682,468,1.966,469,3.97,477,1.046,493,1.463,530,0.684,613,3.687,651,1.111,677,1.111,678,0.756,679,2.937,690,0.756,699,1.548,734,1.623,777,3.27,778,2.287,780,2.22,783,2.293,784,1.932,789,2.084,792,2.084,795,1.989,796,1.811,799,2.22,801,2.287,803,1.71,805,1.932,807,1.858,814,1.989,816,1.71,832,3.589,835,1.807,849,4.679,850,4.679,857,1.71,858,2.084,859,2.287,860,1.932,863,3.589,992,3.054,1003,2.287,1024,2.084,1027,2.084,1033,4.765,1038,1.111,1041,1.932,1042,5.106,1043,2.084,1044,2.084,1052,2.084,1057,2.228,1058,1.71,1084,1.623,1096,3.506,1097,3.506,1138,1.505,1147,1.811,1319,2.643,1477,4.035,1478,2.084,1479,1.932,1480,4.073,1481,5.026,1482,6.861,1483,5.692,1484,5.015,1485,5.692,1486,4.073,1487,5.026,1488,2.596,1489,6.714,1490,5.026,1491,2.596,1492,2.596,1493,2.596,1494,2.596,1495,4.103,1496,3.27,1497,2.596,1498,5.026,1499,2.596,1500,2.596,1501,2.287,1502,4.428,1503,6.045,1504,4.428,1505,4.428,1506,5.782,1507,4.428,1508,5.449,1509,3.589,1510,4.428,1511,4.035,1512,5.449,1513,4.569,1514,3.589,1515,5.015,1516,4.073,1517,2.596,1518,2.596,1519,2.596,1520,2.596,1521,2.596,1522,2.596,1523,2.596,1524,2.596,1525,2.596,1526,4.073,1527,2.596,1528,4.073,1529,2.596,1530,2.596,1531,2.596,1532,2.287,1533,6.184,1534,2.596,1535,2.596,1536,2.596,1537,4.428,1538,2.287,1539,3.589,1540,4.073,1541,2.596,1542,5.692,1543,2.084,1544,4.073,1545,2.596,1546,2.596,1547,2.596,1548,5.026,1549,2.596,1550,2.596,1551,2.596,1552,3.143,1553,2.596,1554,5.026,1555,2.596,1556,1.71,1557,2.596,1558,3.589,1559,2.596,1560,2.596,1561,2.596,1562,6.562,1563,4.073,1564,5.692,1565,4.073,1566,4.073,1567,2.596,1568,5.026,1569,4.073,1570,2.084,1571,2.596,1572,2.596,1573,2.596,1574,4.073,1575,4.073,1576,2.596,1577,2.596,1578,5.026,1579,2.596,1580,2.596,1581,2.596,1582,2.596,1583,4.073,1584,2.596,1585,2.596,1586,1.932,1587,2.084,1588,2.596,1589,1.71,1590,2.596,1591,2.596,1592,5.015,1593,5.026,1594,5.692,1595,4.073,1596,4.073,1597,2.596,1598,2.596,1599,2.596,1600,2.596,1601,2.596,1602,2.596,1603,2.596,1604,6.562,1605,2.841,1606,4.073,1607,2.596,1608,2.596,1609,2.596,1610,2.596,1611,2.596,1612,2.596,1613,2.596,1614,1.811,1615,2.596,1616,2.596,1617,1.811,1618,2.596,1619,2.596,1620,4.073,1621,2.596,1622,2.596,1623,2.596,1624,2.596,1625,2.596,1626,2.596,1627,4.073,1628,5.026,1629,2.596,1630,2.596,1631,4.073,1632,2.596,1633,2.596,1634,2.596,1635,2.596,1636,2.596,1637,2.287,1638,3.143,1639,2.596,1640,2.596,1641,2.596]],["title/components/JsonFileReaderComponent.html",[195,0.453,500,1.273]],["body/components/JsonFileReaderComponent.html",[3,0.08,4,0.098,5,0.171,6,0.134,11,0.716,12,1.363,18,0.371,19,0.582,25,1.433,35,0.71,38,1.95,40,1.064,41,1.091,42,1.33,43,0.01,44,1.142,45,0.708,46,0.961,47,1.037,48,2.266,52,1.667,55,1.175,56,1.071,69,0.858,75,0.006,80,0.006,85,1.239,86,1.239,99,0.219,104,0.193,129,0.098,132,0.287,133,0.766,138,1.193,140,0.986,141,0.728,155,3.144,159,0.913,160,1.162,195,0.756,196,1.057,197,1.397,198,1.112,199,1.233,200,1.233,201,1.201,207,1.084,208,1.469,209,1.469,210,2.317,211,1.16,212,0.957,213,1.506,215,1.506,243,3.777,250,2.664,252,2.516,255,0.934,258,2.445,259,1.774,262,3.247,299,1.628,307,1.091,308,0.957,320,1.031,401,1.336,406,1.494,407,1.411,410,1.743,411,1.006,416,1.171,423,1.586,433,3.443,438,1.687,439,1.687,452,0.825,455,0.825,459,1.031,476,0.608,477,1.875,478,1.233,479,2.229,480,1.233,481,1.233,482,1.112,483,1.233,484,1.084,485,2.045,486,1.112,487,1.233,488,1.506,489,2.045,490,1.112,491,1.171,492,1.233,493,1.112,494,1.233,495,1.112,496,1.057,497,1.233,498,1.112,499,1.233,500,2.01,501,2.637,502,1.233,503,1.112,504,1.201,505,1.084,506,1.233,507,1.112,508,1.756,509,1.084,510,1.112,511,1.112,512,2.045,513,1.112,514,1.625,515,1.756,516,1.084,517,1.112,518,1.084,519,0.934,520,1.233,521,1.084,522,1.057,523,1.112,524,1.233,525,1.112,526,1.233,527,1.141,528,1.233,529,1.112,530,1.433,531,1.112,532,1.584,533,1.112,534,1.233,535,1.112,536,1.469,537,1.233,538,1.112,539,1.233,540,1.233,603,1.539,614,2.258,651,1.635,677,2.712,678,1.112,679,2.329,680,2.781,681,1.494,682,1.452,683,2.408,690,1.584,691,2.045,696,2.552,698,3.962,704,2.664,706,2.389,717,2.755,718,1.852,719,2.008,732,2.008,736,2.008,910,3.243,938,4.793,1043,5.543,1138,2.551,1247,4.367,1272,2.389,1318,3.496,1642,6.518,1643,6.043,1644,3.366,1645,7.979,1646,6.337,1647,5.441,1648,6.337,1649,5.441,1650,6.905,1651,6.337,1652,5.441,1653,6.43,1654,3.82,1655,3.583,1656,5.441,1657,4.793,1658,4.793,1659,5.441,1660,5.441,1661,3.82,1662,5.441,1663,3.82,1664,5.441,1665,4.816,1666,4.793,1667,4.049,1668,4.793,1669,5.441,1670,3.82,1671,5.441,1672,3.366,1673,3.82,1674,3.82,1675,3.82,1676,3.82,1677,3.82,1678,5.441,1679,3.82,1680,3.82,1681,3.82,1682,5.441,1683,3.82,1684,3.82,1685,3.82,1686,3.066]],["title/modules/JsonFileReaderModule.html",[541,0.643,1687,3.05]],["body/modules/JsonFileReaderModule.html",[3,0.136,4,0.166,5,0.159,6,0.106,43,0.01,75,0.008,80,0.008,99,0.342,104,0.328,129,0.166,132,0.245,426,1.663,476,1.031,500,2.65,501,1.933,541,0.952,543,1.837,544,1.885,545,2.576,546,1.983,547,1.885,548,2.576,559,2.416,560,1.837,562,2.089,566,2.354,757,2.761,758,2.203,1642,5.196,1643,4.817,1687,6.184,1688,5.703,1689,5.703,1690,5.703,1691,6.473,1692,6.473,1693,5.359,1694,4.515]],["title/components/LabeledSlideToggleComponent.html",[195,0.453,503,1.273]],["body/components/LabeledSlideToggleComponent.html",[3,0.08,4,0.098,5,0.102,6,0.135,11,0.833,12,1.36,15,1.621,18,0.37,19,0.58,25,1.43,32,2.854,35,0.708,38,1.983,40,1.061,41,1.088,42,1.327,43,0.01,44,1.141,45,0.723,46,0.959,47,1.035,52,1.167,55,1.173,56,0.842,69,1.026,75,0.006,80,0.006,85,1.425,86,1.645,99,0.219,104,0.193,129,0.098,132,0.287,133,0.764,138,0.623,140,0.69,141,0.726,155,1.534,159,0.911,160,1.161,195,0.808,196,1.054,197,1.394,198,1.109,199,1.229,200,1.229,201,1.198,207,1.081,208,1.466,209,1.466,210,2.316,211,1.16,212,0.954,213,1.503,215,1.503,255,0.931,258,2.322,259,1.394,286,1.848,299,1.625,307,1.088,308,0.954,320,1.028,336,1.597,355,2.561,401,1.332,411,1.003,412,1.928,413,2.002,423,1.581,431,0.978,438,2.398,439,1.682,452,1.778,455,1.366,459,1.028,476,0.607,477,1.872,478,1.229,479,2.226,480,1.229,481,1.229,482,1.109,483,1.229,484,1.081,485,2.042,486,1.109,487,1.229,488,1.503,489,2.042,490,1.109,491,1.167,492,1.229,493,1.109,494,1.229,495,1.109,496,1.054,497,1.229,498,1.109,499,1.229,500,1.109,501,1.137,502,1.229,503,2.008,504,2.687,505,2.573,506,1.229,507,1.109,508,1.752,509,1.081,510,1.109,511,1.109,512,2.042,513,1.109,514,1.621,515,1.752,516,1.081,517,1.109,518,1.081,519,0.931,520,1.229,521,1.081,522,1.054,523,1.109,524,1.229,525,1.109,526,1.229,527,1.137,528,1.229,529,1.109,530,2.299,531,1.109,532,1.581,533,1.109,534,1.229,535,1.109,536,1.466,537,1.229,538,1.109,539,1.229,540,1.229,603,1.534,614,2.253,677,2.708,678,1.109,679,2.324,680,2.778,681,1.49,682,1.448,683,2.404,690,1.581,691,2.042,696,2.548,697,2.324,717,2.749,718,1.848,719,2.002,736,2.002,835,1.43,988,1.63,992,1.448,1057,2.969,1311,4.739,1318,3.492,1319,2.854,1324,4.783,1327,4.312,1695,6.607,1696,5.42,1697,3.057,1698,5.429,1699,4.145,1700,5.574,1701,4.783,1702,5.429,1703,5.286,1704,6.896,1705,6.326,1706,5.429,1707,3.356,1708,3.809,1709,4.783,1710,5.852,1711,3.356,1712,5.429,1713,6.677,1714,5.429,1715,5.429,1716,3.809,1717,5.429,1718,5.429,1719,3.809,1720,3.809,1721,5.429,1722,5.429,1723,3.809,1724,3.809,1725,3.809,1726,3.809,1727,3.809,1728,3.809,1729,3.356,1730,3.057,1731,3.809]],["title/modules/LabeledSlideToggleModule.html",[541,0.643,1732,2.735]],["body/modules/LabeledSlideToggleModule.html",[3,0.136,4,0.167,5,0.121,6,0.107,43,0.01,75,0.008,80,0.008,99,0.342,104,0.328,129,0.167,132,0.245,426,1.665,476,1.032,503,2.65,504,2.038,505,2.327,530,1.707,541,0.953,543,1.84,544,1.887,545,2.578,546,1.986,547,1.887,548,2.578,559,2.418,560,1.84,562,2.092,566,2.356,757,2.763,758,2.206,1695,5.203,1696,4.268,1732,5.545,1733,5.71,1734,5.71,1735,5.71,1736,5.71,1737,7.689,1738,6.481,1739,5.71]],["title/components/LeftSidebarComponent.html",[195,0.453,507,1.273]],["body/components/LeftSidebarComponent.html",[3,0.052,4,0.064,5,0.074,6,0.135,11,0.888,12,0.986,15,1.923,18,0.382,19,0.421,22,1.662,23,1.539,25,1.036,35,0.731,38,1.998,42,1.649,43,0.01,44,1.112,45,0.705,46,1.192,52,0.761,55,1.457,56,1.145,69,1.115,75,0.004,76,1.172,80,0.004,85,1.472,86,1.472,88,2.238,91,2.053,96,1.968,99,0.291,104,0.126,111,2.672,112,0.723,113,1.063,114,0.893,127,1.856,129,0.064,132,0.244,133,0.789,140,0.713,141,1.154,155,2.439,159,1.081,160,1.302,184,3.635,187,0.846,195,0.506,196,0.688,197,1.011,198,0.723,199,0.802,200,0.802,201,0.781,207,0.705,208,1.062,209,1.062,210,2.231,211,1.124,212,0.622,213,1.089,215,1.089,218,1.992,222,3.407,255,0.962,256,0.802,258,1.855,259,1.011,262,2.378,286,2.192,296,1.062,298,2.053,299,1.255,306,1.922,307,1.558,308,1.224,309,2.152,312,1.097,320,0.671,330,2.345,331,1.417,332,1.376,336,1.276,352,3.941,384,0.893,389,0.972,401,0.869,402,1.828,403,2.674,404,1.553,405,1.553,406,2.639,407,1.805,408,1.417,410,2.938,411,1.286,412,1.992,415,2.473,416,1.973,418,1.738,420,2.762,429,2.091,430,1.481,431,1.427,434,1.636,435,1.553,436,2.454,437,1.213,444,3.168,446,2.229,447,2.238,450,2.386,451,2.069,452,1.779,453,1.258,455,1.2,459,1.319,461,1.636,463,2.813,466,1.306,469,2.744,470,1.992,471,1.992,474,1.636,475,1.849,476,0.396,477,1.555,478,0.802,479,1.793,480,0.802,481,0.802,482,0.723,483,0.802,484,0.705,485,1.577,486,0.723,487,0.802,488,1.089,489,1.577,490,0.723,491,0.761,492,0.802,493,0.723,494,0.802,495,0.723,496,1.868,497,0.802,498,0.723,499,0.802,500,0.723,501,1.808,502,0.802,503,0.723,504,0.781,505,0.705,506,0.802,507,1.618,508,1.27,509,0.705,510,0.723,511,0.723,512,1.577,513,0.723,514,1.175,515,1.27,516,0.705,517,0.723,518,0.705,519,0.607,520,0.802,521,0.705,522,0.688,523,0.723,524,0.802,525,0.723,526,0.802,527,0.742,528,0.802,529,0.723,530,1.696,531,0.723,532,1.146,533,0.723,534,0.802,535,0.723,536,1.739,537,0.802,538,0.723,539,0.802,540,0.802,590,6.128,614,1.633,629,3.875,644,1.992,645,1.306,678,0.723,690,1.146,691,1.577,697,2.378,718,1.339,728,1.733,731,1.553,732,2.921,733,2.744,741,2.744,743,2.762,746,1.636,750,1.636,751,1.636,807,2.938,835,1.036,865,2.152,870,2.805,882,2.928,897,3.168,910,2.345,955,2.591,960,1.994,986,1.553,988,2.756,991,1.733,992,2.659,1038,3.159,1147,2.744,1233,1.733,1247,3.158,1260,2.152,1269,2.568,1272,1.553,1284,3.407,1302,3.88,1311,3.474,1319,2.069,1361,4.027,1362,3.522,1363,3.941,1372,1.994,1378,4.135,1379,1.994,1380,1.849,1658,3.466,1666,3.466,1667,1.849,1699,3.311,1740,6.61,1741,1.994,1742,6.165,1743,4.304,1744,3.466,1745,4.885,1746,6.055,1747,4.304,1748,4.885,1749,4.304,1750,4.885,1751,3.934,1752,3.466,1753,3.934,1754,3.934,1755,3.934,1756,3.934,1757,4.885,1758,4.304,1759,3.934,1760,2.484,1761,2.484,1762,3.934,1763,3.934,1764,2.484,1765,3.934,1766,3.522,1767,6.44,1768,5.556,1769,5.556,1770,3.934,1771,3.466,1772,3.934,1773,3.466,1774,2.484,1775,3.934,1776,6.44,1777,4.506,1778,2.484,1779,3.934,1780,2.484,1781,3.466,1782,3.474,1783,2.744,1784,4.46,1785,3.69,1786,4.223,1787,3.875,1788,3.934,1789,2.484,1790,6.055,1791,3.934,1792,3.934,1793,3.934,1794,2.484,1795,3.934,1796,3.934,1797,2.928,1798,3.934,1799,3.934,1800,3.934,1801,3.934,1802,3.934,1803,3.934,1804,3.934,1805,3.934,1806,2.484,1807,2.484,1808,3.466,1809,4.46,1810,4.46,1811,3.466,1812,2.912,1813,3.934,1814,3.934,1815,2.484,1816,2.484,1817,3.934,1818,3.466,1819,3.466,1820,2.484,1821,3.934,1822,3.934,1823,2.484,1824,2.189,1825,2.484,1826,2.484,1827,2.484,1828,3.934,1829,2.484,1830,2.484,1831,2.484,1832,3.934,1833,2.484,1834,2.484,1835,3.158,1836,2.912,1837,3.466,1838,3.466,1839,3.466,1840,3.158,1841,1.994,1842,2.189,1843,1.849,1844,6.165,1845,2.928,1846,2.591,1847,1.994,1848,2.484,1849,3.934,1850,2.189,1851,2.189,1852,2.484,1853,2.484]],["title/modules/LeftSidebarModule.html",[541,0.643,556,3.05]],["body/modules/LeftSidebarModule.html",[3,0.116,4,0.141,5,0.143,6,0.09,43,0.01,75,0.007,80,0.007,99,0.364,104,0.278,129,0.141,132,0.208,141,1.325,211,0.703,325,1.561,426,1.412,452,1.187,476,0.876,505,1.973,507,2.596,541,0.808,543,1.561,544,1.601,545,2.397,546,1.685,547,1.601,548,2.397,556,6.391,559,2.186,560,1.561,562,2.244,566,2.13,572,2.885,573,2.15,590,4.091,757,2.498,758,1.871,763,3.802,764,3.007,1244,4.091,1273,5.886,1305,4.091,1347,5.886,1643,4.091,1687,5.886,1696,3.621,1732,5.276,1740,4.413,1854,4.844,1855,4.844,1856,4.844,1857,4.844,1858,5.557,1859,5.886,1860,6.103,1861,4.844,1862,6.124,1863,4.844,1864,5.58,1865,4.413,1866,5.498,1867,5.498,1868,5.498,1869,5.498,1870,4.413,1871,5.58,1872,4.844,1873,3.621,1874,4.413,1875,6.124,1876,6.951,1877,4.091,1878,5.498,1879,4.091,1880,4.844,1881,5.498,1882,5.498]],["title/interfaces/Message.html",[128,0.281,799,1.932]],["body/interfaces/Message.html",[0,1.804,3,0.09,4,0.226,5,0.08,6,0.07,11,0.563,18,0.415,19,0.63,20,2.071,35,0.795,40,1.317,41,0.857,43,0.01,45,0.69,46,1.041,47,1.565,48,1.277,55,1.644,56,0.913,71,1.954,75,0.006,80,0.006,85,0.836,96,3.482,99,0.272,104,0.217,112,1.245,114,1.537,128,0.378,129,0.202,132,0.223,133,1.525,138,0.963,140,1.379,154,3.366,159,1.398,160,1.073,194,1.099,198,1.961,204,1.775,205,2.982,212,1.475,229,2.166,277,1.626,296,1.155,336,0.901,355,2.018,361,1.715,431,1.099,651,3.257,772,3.358,780,2.601,783,3.846,794,2.249,795,4.158,799,4.022,814,2.876,816,2.817,835,1.126,841,2.817,857,3.878,1016,2.817,1058,3.878,1076,4.485,1083,4.855,1095,2.339,1119,4.107,1282,2.674,1292,2.674,1293,3.682,1359,3.511,1366,3.472,1418,2.674,1495,4.211,1552,4.211,1605,2.983,1614,2.983,1617,2.983,1638,2.674,1883,2.817,1884,4.537,1885,3.674,1886,4.407,1887,3.878,1888,4.383,1889,2.55,1890,5.061,1891,2.089,1892,3.183,1893,3.183,1894,4.211,1895,3.183,1896,5.307,1897,4.107,1898,2.817,1899,2.817,1900,4.107,1901,2.983,1902,3.183,1903,4.383,1904,3.183,1905,2.674,1906,3.183,1907,3.183,1908,3.183,1909,4.383,1910,2.983,1911,3.183,1912,3.183,1913,3.183,1914,4.383,1915,3.183,1916,4.383,1917,2.983,1918,4.697,1919,3.183,1920,3.183,1921,3.183,1922,3.183,1923,2.674,1924,3.183,1925,3.183,1926,5.012,1927,3.183,1928,3.183,1929,3.183,1930,3.183,1931,2.983,1932,3.183,1933,3.183,1934,3.183,1935,3.183]],["title/classes/MessageChannel.html",[132,0.165,814,2.136]],["body/classes/MessageChannel.html",[0,1.663,3,0.08,4,0.225,5,0.071,6,0.131,11,0.959,18,0.369,19,0.58,20,2.167,25,1.429,35,1.009,38,1.906,40,1.425,41,0.763,42,1.685,43,0.01,44,0.986,45,0.707,46,1.339,47,1.52,48,1.621,55,1.777,56,0.981,71,1.946,75,0.006,80,0.006,85,1.061,86,0.744,96,3.593,99,0.255,104,0.193,112,1.108,114,1.368,128,0.348,129,0.195,132,0.205,133,1.461,138,0.887,140,1.373,154,2.95,159,1.361,160,1.007,198,1.841,204,1.58,205,2.748,212,1.36,229,1.927,277,1.447,296,1.027,336,0.802,355,1.796,361,1.108,431,1.394,651,3.119,772,3.094,780,2.397,783,3.87,794,2.853,795,4.281,799,4.013,814,3.089,816,2.507,835,1.002,841,2.507,857,3.574,1016,3.574,1058,3.574,1076,4.546,1083,4.748,1095,2.968,1119,3.785,1282,3.393,1292,2.38,1293,3.393,1359,3.235,1366,3.325,1418,2.38,1478,3.055,1495,4.738,1552,4.738,1605,2.655,1614,3.785,1617,3.785,1638,3.954,1883,2.507,1884,4.557,1885,3.69,1886,4.265,1887,2.507,1888,2.832,1889,2.269,1890,5.439,1891,1.859,1892,2.832,1893,2.832,1894,3.954,1895,2.832,1896,5.083,1897,3.785,1898,2.507,1899,2.507,1900,3.785,1901,2.655,1902,4.038,1903,5.424,1904,4.038,1905,3.393,1906,4.038,1907,2.832,1908,2.832,1909,4.038,1910,3.785,1911,4.038,1912,5.13,1913,2.832,1914,5.13,1915,4.038,1916,4.038,1917,3.785,1918,5.285,1919,4.038,1920,2.832,1921,5.13,1922,2.832,1923,2.38,1924,2.832,1925,2.832,1926,4.706,1927,2.832,1928,2.832,1929,2.832,1930,2.832,1931,2.655,1932,2.832,1933,2.832,1934,2.832,1935,2.832,1936,5.426,1937,5.426,1938,5.426,1939,3.806,1940,5.426,1941,3.806,1942,3.806,1943,3.806,1944,3.806,1945,3.806]],["title/injectables/MessageService.html",[0,1.34,780,1.932]],["body/injectables/MessageService.html",[0,1.734,2,2.408,3,0.085,4,0.223,5,0.076,6,0.127,11,0.86,18,0.392,19,0.605,20,2.194,25,1.49,35,1.052,38,1.822,40,1.384,41,1.134,42,1.383,43,0.01,44,0.81,45,0.676,46,1.251,47,1.621,48,1.206,55,1.713,56,1.013,71,1.678,75,0.006,80,0.006,85,1.106,86,0.79,96,3.474,99,0.264,104,0.205,112,1.176,114,1.451,128,0.363,129,0.199,132,0.214,133,1.494,138,0.925,140,1.438,154,2.796,159,1.38,160,1.04,198,1.902,204,1.676,205,2.865,212,1.418,229,3.584,277,2.151,296,1.09,336,0.851,355,1.905,361,1.176,431,1.037,651,3.19,772,3.725,780,3.292,783,3.935,794,2.123,795,4.212,799,4.015,814,3.191,816,3.727,835,1.064,841,3.727,857,3.727,1016,2.66,1058,3.727,1076,4.405,1083,4.615,1095,2.209,1119,3.947,1282,2.525,1292,2.525,1293,3.538,1359,3.373,1366,3.524,1418,4.085,1495,4.085,1552,4.085,1605,3.947,1614,2.817,1617,2.817,1638,2.525,1883,2.66,1884,4.085,1885,3.308,1886,4.076,1887,2.66,1888,3.006,1889,2.408,1890,5.198,1891,1.973,1892,3.006,1893,3.006,1894,4.66,1895,3.006,1896,5.645,1897,3.947,1898,2.66,1899,2.66,1900,3.947,1901,2.817,1902,3.006,1903,4.211,1904,3.006,1905,2.525,1906,3.006,1907,3.006,1908,3.006,1909,4.211,1910,2.817,1911,3.006,1912,3.006,1913,3.006,1914,4.211,1915,3.006,1916,4.211,1917,2.817,1918,4.556,1919,3.006,1920,3.006,1921,3.006,1922,3.006,1923,3.538,1924,3.006,1925,3.006,1926,4.861,1927,3.006,1928,3.006,1929,3.006,1930,3.006,1931,3.947,1932,3.006,1933,4.211,1934,4.211,1935,3.006,1946,4.986,1947,4.039,1948,5.659,1949,4.039,1950,4.039,1951,4.039]],["title/interfaces/MessageServiceConfig.html",[128,0.281,1894,2.735]],["body/interfaces/MessageServiceConfig.html",[0,1.818,3,0.091,4,0.223,5,0.081,6,0.071,11,0.569,18,0.42,19,0.634,20,2.078,35,0.804,40,1.324,41,0.867,43,0.01,45,0.661,46,1.048,47,1.592,48,1.291,55,1.65,56,0.92,71,1.74,75,0.006,80,0.006,85,0.845,96,3.488,99,0.273,104,0.219,112,1.259,114,1.554,128,0.381,129,0.203,132,0.224,133,1.531,138,0.97,140,1.385,154,2.899,159,1.401,160,1.079,194,1.111,198,1.972,204,1.795,205,3.004,212,1.487,229,2.189,277,1.643,296,1.167,336,1.427,355,2.799,361,1.259,431,1.111,651,3.269,772,3.383,780,2.621,783,3.81,794,2.273,795,4.2,799,4.004,814,2.898,816,2.848,835,1.562,841,2.848,857,3.907,1016,2.848,1058,3.907,1076,4.356,1083,4.693,1095,2.365,1119,4.138,1282,2.704,1292,2.704,1293,3.71,1359,3.537,1366,3.6,1418,2.704,1495,4.235,1552,4.235,1605,3.016,1614,3.016,1617,3.016,1638,2.704,1883,2.848,1884,4.235,1885,3.43,1886,4.178,1887,2.848,1888,3.218,1889,2.578,1890,5.084,1891,2.112,1892,3.218,1893,3.218,1894,4.558,1895,4.415,1896,5.503,1897,5.328,1898,2.848,1899,2.848,1900,4.138,1901,3.016,1902,3.218,1903,4.415,1904,3.218,1905,2.704,1906,3.218,1907,3.218,1908,3.218,1909,4.415,1910,3.016,1911,3.218,1912,3.218,1913,3.218,1914,4.415,1915,3.218,1916,4.415,1917,3.016,1918,4.724,1919,3.218,1920,3.218,1921,3.218,1922,3.218,1923,2.704,1924,3.218,1925,3.218,1926,5.041,1927,3.218,1928,3.218,1929,3.218,1930,3.218,1931,3.016,1932,3.218,1933,3.218,1934,3.218,1935,3.218]],["title/interfaces/MetaDataField.html",[128,0.281,1952,3.255]],["body/interfaces/MetaDataField.html",[3,0.144,4,0.176,5,0.128,6,0.112,18,0.663,19,0.848,43,0.01,45,0.76,69,1.202,75,0.008,80,0.008,86,1.686,128,0.439,129,0.204,155,3.474,194,1.755,207,1.94,1952,6.237,1953,5.486,1954,5.486]],["title/interfaces/ModelStateModel.html",[128,0.281,1955,2.88]],["body/interfaces/ModelStateModel.html",[0,1.093,3,0.046,4,0.057,5,0.041,6,0.036,8,1.003,11,0.289,15,2.065,16,0.86,18,0.213,19,0.381,20,1.762,22,2.565,23,0.86,29,0.971,35,0.409,37,2.781,40,0.43,41,0.441,43,0.01,44,1.017,45,0.764,46,1.077,47,0.68,48,0.657,49,1.311,50,1.203,53,4.021,56,1.228,65,0.971,69,1.081,71,1.156,75,0.004,80,0.004,88,0.886,90,2.16,91,1.318,96,3.243,99,0.313,102,1.282,104,0.111,105,2.367,106,1.576,107,0.971,108,0.971,109,0.913,112,0.64,113,1.527,114,0.79,119,1.375,121,1.437,122,1.437,123,0.86,124,0.836,125,1.395,127,1.683,128,0.289,129,0.165,131,0.941,132,0.083,133,1.341,138,1.317,140,1.288,141,0.68,148,3.394,154,3.112,155,2.587,159,1.315,160,1.282,161,0.971,162,1.037,172,1.448,173,1.448,176,1.534,181,0.769,183,1.534,194,0.565,211,0.456,244,1.247,245,1.437,255,1.57,256,2.468,268,2.35,280,1.254,286,1.938,296,1.398,298,3.084,300,3.696,302,1.254,303,1.113,307,0.902,325,0.624,336,1.2,352,1.951,361,1.658,384,2.485,389,2.705,392,2.96,402,0.624,407,1.663,411,1.499,431,1.719,437,2.199,447,1.437,452,1.317,455,1.317,459,0.963,496,1.914,519,1.842,522,0.988,536,0.594,620,1.576,668,3.66,675,2.127,680,1.437,681,0.86,682,0.836,683,0.836,686,2.683,692,1.927,696,0.886,697,3.226,700,1.074,776,1.203,783,2.054,807,2.931,835,1.185,870,2.164,917,4.546,918,1.806,955,2.965,965,5.334,966,4.407,968,1.448,969,1.448,970,1.448,972,2.35,977,1.311,988,2.217,1038,3.495,1138,0.812,1248,2.567,1260,1.203,1269,1.156,1297,3.335,1300,3.972,1302,3.822,1357,2.231,1360,3.14,1361,4.073,1362,3.66,1363,3.513,1366,2.782,1410,1.113,1782,3.239,1783,3.14,1785,3.513,1786,4.253,1787,2.488,1797,1.636,1812,1.311,1836,3.635,1885,2.279,1886,2.462,1891,1.074,1923,1.375,1955,2.35,1956,1.448,1957,2.864,1958,4.123,1959,4.554,1960,4.823,1961,4.823,1962,4.823,1963,4.298,1964,5.037,1965,4.554,1966,2.35,1967,4.158,1968,4.253,1969,1.806,1970,2.231,1971,2.655,1972,1.375,1973,1.375,1974,1.765,1975,1.636,1976,1.765,1977,1.448,1978,1.765,1979,1.375,1980,2.127,1981,1.765,1982,1.765,1983,1.534,1984,1.683,1985,1.074,1986,1.311,1987,1.254,1988,1.254,1989,1.636,1990,2.815,1991,1.765,1992,2.231,1993,1.636,1994,1.765,1995,1.765,1996,1.765,1997,2.815,1998,2.231,1999,4.899,2000,1.765,2001,1.765,2002,1.765,2003,1.765,2004,1.765,2005,1.765,2006,1.765,2007,1.765,2008,1.765,2009,1.765,2010,1.765,2011,1.765,2012,1.765,2013,1.765,2014,1.765,2015,1.765,2016,1.765,2017,1.765,2018,1.765,2019,1.765,2020,1.765,2021,1.765,2022,1.765,2023,1.765,2024,1.765,2025,1.765,2026,1.636,2027,1.765,2028,1.765,2029,1.448,2030,1.534,2031,1.448,2032,1.765,2033,1.765,2034,1.765,2035,5.156,2036,2.864,2037,1.765,2038,4.158,2039,1.765,2040,2.864,2041,3.613,2042,1.765,2043,5.106,2044,1.765,2045,1.765,2046,1.765,2047,1.765,2048,1.765,2049,1.765,2050,1.765,2051,1.765,2052,1.765,2053,1.765,2054,1.765,2055,1.765,2056,1.765,2057,1.765,2058,1.765,2059,1.765,2060,1.765,2061,1.765,2062,3.613,2063,4.158,2064,1.765,2065,1.765,2066,1.765,2067,1.765,2068,1.765,2069,1.765,2070,1.765,2071,1.765,2072,1.765,2073,2.864,2074,1.765,2075,1.765,2076,1.765,2077,1.765,2078,1.765,2079,1.765,2080,1.765,2081,1.765,2082,1.765,2083,1.765,2084,1.765,2085,1.765,2086,1.765,2087,1.765,2088,1.765,2089,2.864,2090,1.311,2091,1.534,2092,1.765,2093,1.448,2094,1.534,2095,2.864,2096,3.14,2097,2.864,2098,2.127,2099,2.864,2100,1.765,2101,1.765,2102,1.765,2103,1.765,2104,1.765,2105,1.765,2106,1.765,2107,1.375,2108,1.765,2109,1.765,2110,1.765,2111,1.765,2112,1.765,2113,1.765,2114,1.765,2115,1.765,2116,1.765,2117,1.765,2118,1.765,2119,2.127,2120,1.765,2121,1.765,2122,1.765,2123,1.311,2124,1.765,2125,4.158,2126,1.765,2127,1.311,2128,1.765,2129,1.765,2130,1.765,2131,1.765,2132,1.765,2133,1.765,2134,2.864,2135,2.655,2136,1.765,2137,1.765,2138,1.765,2139,1.765]],["title/components/NameInputComponent.html",[195,0.453,509,1.242]],["body/components/NameInputComponent.html",[3,0.076,4,0.093,5,0.098,6,0.137,11,0.807,12,1.307,18,0.35,19,0.557,20,1.614,25,1.373,32,2.742,35,0.669,38,2.012,40,1.02,41,1.045,42,1.498,43,0.01,44,1.303,45,0.713,46,1.083,47,0.994,48,2.007,52,1.103,55,1.324,56,0.951,69,1.007,75,0.006,76,2.46,80,0.006,85,1.394,86,1.565,99,0.247,104,0.182,128,0.231,129,0.134,132,0.281,133,0.722,138,0.589,140,1.451,141,0.994,159,1.029,160,1.136,195,0.794,196,0.997,197,1.339,198,1.048,199,1.162,200,1.162,201,1.132,207,1.022,208,1.408,209,1.408,210,2.306,211,1.155,212,0.902,213,1.443,215,1.443,255,0.88,258,2.667,259,1.726,299,1.575,307,1.045,308,0.902,320,0.972,332,2.35,333,3.75,334,3.75,361,1.048,401,1.259,402,1.022,403,1.59,407,1.33,411,0.948,416,1.103,429,2.232,431,0.925,446,1.643,452,1.126,455,1.126,459,0.972,470,1.823,471,1.823,472,2.147,476,0.574,477,1.832,478,1.162,479,2.169,480,1.162,481,1.162,482,1.048,483,1.162,484,1.022,485,1.979,486,1.048,487,1.162,488,1.443,489,1.979,490,1.048,491,1.103,492,1.162,493,1.048,494,1.162,495,1.048,496,0.997,497,1.162,498,1.048,499,1.162,500,1.048,501,1.075,502,1.162,503,1.048,504,1.132,505,1.022,506,1.162,507,1.048,508,1.683,509,1.908,510,1.048,511,1.048,512,1.979,513,1.048,514,1.557,515,1.683,516,1.022,517,1.048,518,1.022,519,0.88,520,1.162,521,1.022,522,0.997,523,1.048,524,1.162,525,1.048,526,1.162,527,1.075,528,1.162,529,1.048,530,1.373,531,1.048,532,1.518,533,1.048,534,1.162,535,1.048,536,1.408,537,1.162,538,1.048,539,1.162,540,1.162,571,3.91,603,1.45,614,2.164,671,2.147,677,2.624,678,1.048,679,2.232,680,2.707,681,1.408,682,1.369,683,2.33,688,3.434,689,4.037,690,1.518,691,1.979,696,2.469,697,2.232,698,4.46,699,3.109,700,3.632,704,2.511,705,2.371,706,2.251,708,2.68,717,2.64,718,1.775,719,1.893,721,3.172,722,4.594,724,3.172,739,2.89,740,2.68,741,2.511,1138,2.483,1318,3.403,1319,3.223,1766,3.901,1873,5.481,2140,6.194,2141,4.594,2142,4.594,2143,5.401,2144,5.401,2145,5.401,2146,5.214,2147,5.401,2148,5.214,2149,6.345,2150,5.214,2151,4.594,2152,3.601,2153,3.881,2154,6.284,2155,5.921,2156,5.921,2157,3.601,2158,4.067,2159,3.601,2160,3.601,2161,3.601,2162,3.172,2163,2.511,2164,4.186,2165,4.594,2166,3.172,2167,3.172,2168,3.172,2169,4.594,2170,3.172,2171,3.172,2172,3.172]],["title/modules/NameInputModule.html",[541,0.643,1858,2.88]],["body/modules/NameInputModule.html",[3,0.134,4,0.164,5,0.12,6,0.105,43,0.01,44,0.913,75,0.008,80,0.008,99,0.353,104,0.323,129,0.164,132,0.242,426,1.64,476,1.017,509,2.579,541,0.939,543,1.812,544,1.859,545,2.561,546,1.956,547,1.859,548,2.561,559,2.396,560,1.812,562,2.061,566,2.335,756,5.125,757,2.738,758,2.173,759,5.671,760,4.751,763,4.168,764,3.492,766,5.125,1858,5.824,1873,4.205,2140,4.751,2163,4.453,2173,5.625,2174,5.625,2175,5.625,2176,6.714,2177,6.714]],["title/interfaces/OrganConfig.html",[128,0.281,1357,2.735]],["body/interfaces/OrganConfig.html",[3,0.12,4,0.147,5,0.107,6,0.094,14,3.888,18,0.553,19,0.76,43,0.01,44,1.161,45,0.736,46,1.505,56,1.103,69,1.213,75,0.008,80,0.008,82,4.959,99,0.313,104,0.289,112,1.659,128,0.456,129,0.209,133,1.142,138,0.932,140,1.033,194,1.464,211,0.729,218,2.885,219,3.563,220,3.563,223,3.397,225,3.117,244,2.71,298,2.106,325,1.618,332,2.486,333,3.738,334,3.738,336,1.71,361,1.659,452,1.674,455,1.674,468,2.229,615,3.397,616,3.563,617,4.574,618,4.574,619,3.563,620,2.517,621,4.574,622,4.241,769,4.445,770,3.975,1038,3.473,1138,2.106,1172,5.767,1174,4.619,1178,5.767,1179,5.767,1219,5.767,1355,3.975,1356,3.753,1357,4.845,1359,4.238,1360,5.659,1361,4.266,1362,4.238,1363,4.238,1364,5.021,1365,4.241,1366,2.6,1367,4.574,1368,5.021]],["title/interfaces/OrganData.html",[128,0.281,2127,2.607]],["body/interfaces/OrganData.html",[0,1.653,3,0.079,4,0.097,5,0.071,6,0.062,15,2.17,16,1.477,18,0.366,19,0.577,20,1.809,22,1.285,29,1.667,35,0.702,43,0.01,44,0.772,45,0.571,46,1.214,47,0.72,55,1.165,56,0.586,65,1.667,69,1.163,71,1.764,75,0.006,80,0.006,85,0.738,90,2.032,96,2.173,99,0.344,102,2.262,104,0.191,106,2.383,107,1.667,108,1.667,109,1.567,112,1.099,113,1.616,114,1.357,118,2.153,121,2.173,122,2.173,123,1.477,124,1.435,125,2.11,127,2.545,128,0.346,129,0.177,131,1.616,132,0.143,133,1.647,138,1.432,148,5.006,159,1.153,160,0.601,161,1.667,162,1.781,187,2.143,194,0.97,211,0.805,244,1.886,245,2.173,256,1.218,261,2.25,277,2.05,298,3.208,300,3.565,325,1.072,361,1.571,380,1.912,382,3.188,384,2.262,386,3.59,389,2.462,391,2.153,392,2.694,402,1.072,407,1.395,452,1.632,455,1.632,468,1.477,615,2.25,644,1.912,645,1.985,648,1.912,649,1.912,700,1.844,769,3.373,776,2.065,870,3.077,913,1.844,918,1.912,919,3.373,925,2.486,953,2.361,976,2.809,978,2.809,1038,3.516,1174,2.25,1297,2.951,1361,4.319,1362,4.133,1363,4.133,1410,1.912,1777,2.809,1886,2.951,1958,3.216,1959,3.553,1965,3.076,1969,2.732,1970,2.361,1979,2.361,1984,1.781,1985,1.844,1987,2.153,1988,2.153,2090,4.094,2093,3.553,2098,2.25,2107,3.936,2127,3.753,2178,2.633,2179,2.633,2180,3.763,2181,2.809,2182,4.146,2183,2.633,2184,2.486,2185,5.513,2186,4.146,2187,2.809,2188,4.331,2189,2.809,2190,3.216,2191,2.486,2192,5.832,2193,3.03,2194,3.03,2195,2.809,2196,3.03,2197,3.03,2198,2.633,2199,3.03,2200,3.03,2201,2.633,2202,2.633,2203,3.03,2204,3.03,2205,3.03,2206,3.03,2207,2.633,2208,4.331,2209,4.331,2210,4.331,2211,4.331,2212,4.331,2213,4.331,2214,2.809,2215,3.03,2216,3.03,2217,3.03,2218,3.03,2219,3.03,2220,3.03,2221,3.03,2222,3.03,2223,3.03,2224,3.03,2225,3.03,2226,4.015,2227,3.03,2228,3.03,2229,3.03,2230,3.03,2231,5.053,2232,5.053,2233,3.03,2234,3.03,2235,3.03,2236,2.633,2237,2.809,2238,2.809,2239,2.809,2240,3.03,2241,2.633,2242,4.331,2243,4.015,2244,3.03,2245,3.03,2246,3.03,2247,3.03,2248,4.331,2249,3.03,2250,3.03,2251,3.03,2252,3.03,2253,3.03,2254,2.809,2255,3.03,2256,3.03,2257,3.03,2258,3.03,2259,3.03,2260,3.03,2261,3.03,2262,3.03,2263,2.25,2264,3.03,2265,3.03,2266,3.03,2267,3.03,2268,3.03,2269,3.03,2270,3.03,2271,3.03,2272,3.03,2273,3.03,2274,3.03,2275,3.03,2276,4.331,2277,3.03,2278,3.03]],["title/injectables/PageState.html",[0,1.34,91,1.616]],["body/injectables/PageState.html",[0,1.597,2,2.145,3,0.076,4,0.093,5,0.067,6,0.142,11,0.807,14,3.674,15,2.29,16,2.039,18,0.349,19,0.557,20,1.769,22,1.225,23,2.908,25,1.372,29,2.967,32,2.74,35,0.969,38,2.108,40,1.019,41,1.045,42,1.498,43,0.01,44,1.163,45,0.556,46,1.083,47,0.994,52,2.185,53,4.328,55,1.696,56,1.331,65,2.302,69,0.706,75,0.006,80,0.006,85,1.394,86,1.454,91,1.926,96,3.163,99,0.332,102,1.873,104,0.182,105,3.532,106,2.302,107,1.589,108,1.589,109,1.493,112,1.048,113,1.54,114,1.293,121,2.099,122,2.099,123,1.407,124,1.368,125,1.407,128,0.334,129,0.158,131,1.54,132,0.136,133,1.347,138,1.098,159,0.875,160,1.366,161,1.589,162,1.698,181,1.258,211,0.667,223,5.082,244,2.493,245,2.706,262,1.54,286,2.427,296,2.007,300,2.459,306,2.993,307,1.228,308,1.535,309,3.351,325,1.021,332,2.91,333,2.74,334,2.74,336,1.686,391,2.052,616,4.458,619,4.458,627,3.635,648,1.822,649,1.822,807,3.065,835,0.947,870,1.368,913,1.757,983,2.639,1356,2.37,1366,2.378,1410,1.822,1766,2.851,1891,1.757,1905,2.25,1969,3.103,1972,2.25,1973,2.25,1977,4.036,1980,2.145,1987,2.052,1988,2.052,1999,4.91,2043,3.832,2119,2.145,2158,2.972,2279,2.678,2280,4.184,2281,4.896,2282,6.424,2283,5.393,2284,5.393,2285,5.393,2286,5.212,2287,5.212,2288,6.68,2289,4.919,2290,6.524,2291,3.598,2292,3.598,2293,3.598,2294,3.598,2295,3.598,2296,3.598,2297,3.598,2298,3.598,2299,4.184,2300,3.598,2301,4.184,2302,4.274,2303,3.598,2304,5.306,2305,4.184,2306,3.598,2307,4.184,2308,3.598,2309,4.184,2310,3.598,2311,4.184,2312,4.184,2313,3.598,2314,4.184,2315,3.598,2316,3.598,2317,3.598,2318,3.598,2319,3.598,2320,3.598,2321,3.598,2322,2.888,2323,2.678,2324,2.678,2325,2.888,2326,2.51,2327,2.888,2328,3.832,2329,2.37,2330,2.888,2331,2.888,2332,2.888,2333,2.888,2334,2.888,2335,2.678,2336,2.678,2337,2.888,2338,2.888,2339,2.888,2340,2.888,2341,2.888,2342,4.184,2343,2.888,2344,4.56,2345,2.888,2346,2.888,2347,3.879,2348,4.184,2349,3.879,2350,2.888,2351,2.888,2352,2.888,2353,2.888,2354,2.888,2355,4.184,2356,2.888,2357,2.888,2358,2.888,2359,4.919,2360,2.888,2361,2.51,2362,4.184,2363,2.888,2364,2.888,2365,2.888]],["title/interfaces/PageStateModel.html",[128,0.281,2329,2.88]],["body/interfaces/PageStateModel.html",[0,1.754,3,0.086,4,0.106,5,0.077,6,0.068,11,0.541,14,3.131,15,2.319,16,1.606,18,0.399,19,0.612,20,1.507,22,1.949,23,2.933,29,1.814,35,0.763,40,0.803,41,0.823,43,0.01,44,1.02,45,0.723,46,1.012,47,0.783,53,4.083,56,1.261,65,1.814,69,0.775,75,0.006,80,0.006,86,0.803,91,1.517,96,3.128,99,0.341,102,2.057,104,0.208,105,3.749,106,2.529,107,1.814,108,1.814,109,1.704,112,1.196,113,1.758,114,1.476,121,2.306,122,2.306,123,1.606,124,1.561,125,1.606,128,0.367,129,0.169,131,1.758,132,0.155,133,1.429,138,1.166,159,0.961,160,1.237,161,1.814,162,1.937,181,1.436,194,1.055,211,0.732,223,5.082,244,2.493,245,2.306,262,1.758,286,2.552,296,2.024,300,3.364,306,3.219,307,1.321,308,1.651,309,3.605,325,1.166,332,2.981,333,3.01,334,3.01,336,1.849,391,2.342,616,3.58,619,4.855,627,3.993,648,2.079,649,2.079,807,2.612,835,1.507,870,1.561,913,2.006,983,2.079,1356,2.705,1366,1.874,1410,2.079,1766,2.246,1891,2.006,1905,2.568,1969,2.899,1972,2.568,1973,2.568,1977,4.341,1980,2.448,1987,2.342,1988,2.342,1999,4.458,2043,4.121,2119,2.448,2158,2.342,2279,3.056,2280,3.296,2281,5.248,2282,6.712,2283,3.296,2284,3.296,2285,3.296,2288,6.895,2289,3.296,2290,6.783,2299,3.296,2301,3.296,2302,2.864,2304,5.306,2305,3.296,2307,3.296,2309,3.296,2311,3.296,2312,3.296,2314,3.296,2322,3.296,2323,3.056,2324,3.056,2325,3.296,2326,2.864,2327,3.296,2328,4.688,2329,3.77,2330,3.296,2331,3.296,2332,3.296,2333,3.296,2334,3.296,2335,3.056,2336,3.056,2337,3.296,2338,3.296,2339,3.296,2340,3.296,2341,3.296,2342,4.596,2343,3.296,2344,4.905,2345,3.296,2346,3.296,2347,4.261,2348,4.596,2349,4.261,2350,3.296,2351,3.296,2352,3.296,2353,3.296,2354,3.296,2355,4.596,2356,3.296,2357,3.296,2358,3.296,2359,5.291,2360,3.296,2361,2.864,2362,4.596,2363,3.296,2364,3.296,2365,3.296]],["title/interfaces/Person.html",[128,0.281,2328,2.735]],["body/interfaces/Person.html",[0,1.797,3,0.089,4,0.109,5,0.08,6,0.07,11,0.56,14,3.208,15,2.268,16,1.663,18,0.413,19,0.627,20,1.544,22,1.447,23,2.831,29,1.878,35,0.791,40,0.831,41,0.853,43,0.01,44,1.036,45,0.532,47,0.811,53,4.127,56,1.272,65,1.878,69,1.063,75,0.006,80,0.006,86,0.831,91,1.571,96,3.162,99,0.343,102,2.108,104,0.215,105,3.805,106,2.591,107,1.878,108,1.878,109,1.765,112,1.238,113,1.82,114,1.528,121,2.363,122,2.363,123,1.663,124,1.616,125,1.663,128,0.376,129,0.173,131,1.82,132,0.161,133,1.451,138,1.183,159,0.984,160,1.25,161,1.878,162,2.006,181,1.487,194,1.092,211,0.75,223,4.96,244,2.531,245,2.363,262,1.82,286,2.584,296,2.05,300,2.767,306,2.865,307,1.176,308,1.47,309,3.208,325,1.207,332,2.866,333,3.992,334,3.992,336,1.695,391,2.425,616,3.667,619,4.198,627,4.091,648,2.153,649,2.153,807,2.676,835,1.12,870,1.616,913,2.865,983,2.153,1356,3.863,1366,1.94,1410,2.153,1766,2.326,1891,2.077,1905,3.667,1969,2.97,1972,2.659,1973,2.659,1977,4.422,1980,2.535,1987,2.425,1988,2.425,1999,4.526,2043,4.198,2119,2.535,2158,2.425,2279,3.165,2280,3.414,2281,4.767,2282,6.458,2283,3.414,2284,3.414,2285,3.414,2288,6.759,2289,3.414,2290,6.58,2299,3.414,2301,3.414,2302,2.966,2304,4.997,2305,3.414,2307,3.414,2309,3.414,2311,3.414,2312,3.414,2314,3.414,2322,3.414,2323,3.165,2324,3.165,2325,3.414,2326,2.966,2327,3.414,2328,4.748,2329,2.801,2330,3.414,2331,3.414,2332,3.414,2333,3.414,2334,3.414,2335,3.165,2336,3.165,2337,3.414,2338,3.414,2339,3.414,2340,3.414,2341,3.414,2342,4.708,2343,3.414,2344,4.997,2345,3.414,2346,3.414,2347,4.365,2348,4.708,2349,4.365,2350,3.414,2351,3.414,2352,3.414,2353,3.414,2354,3.414,2355,4.708,2356,3.414,2357,3.414,2358,3.414,2359,5.39,2360,3.414,2361,2.966,2362,4.708,2363,3.414,2364,3.414,2365,3.414]],["title/injectables/ReferenceDataState.html",[0,1.34,1984,2.063]],["body/injectables/ReferenceDataState.html",[0,1.517,2,2,3,0.071,4,0.086,5,0.063,6,0.127,11,0.775,15,2.24,16,1.937,18,0.326,20,2.028,22,1.685,25,1.304,29,2.87,35,0.92,38,1.834,42,1.694,43,0.01,44,1.073,45,0.629,46,1.225,47,0.944,55,1.663,56,0.768,65,2.187,69,1.199,71,1.669,75,0.005,80,0.005,85,0.656,90,2.237,96,2.37,99,0.337,102,2.115,104,0.17,106,2.187,107,1.482,108,1.482,109,1.392,112,0.977,113,1.436,114,1.205,118,1.913,121,1.994,122,1.994,123,1.312,124,1.275,125,1.937,127,2.336,128,0.318,129,0.167,131,1.436,132,0.127,133,1.603,138,1.41,148,5.116,159,1.09,160,0.534,161,1.482,162,1.582,187,2.003,211,0.753,244,2.272,245,2.617,256,1.083,261,2,277,2.47,298,3.213,300,3.633,325,0.952,361,1.892,380,1.698,382,2.98,384,2.115,386,3.356,389,2.302,391,1.913,392,2.519,402,1.405,407,1.239,452,1.62,455,1.62,468,1.312,615,2,644,1.698,645,1.764,648,1.698,649,1.698,700,1.638,769,4.063,776,2.708,870,3.203,913,2.418,918,2.507,919,4.063,925,2.209,953,2.097,976,2.496,978,2.496,1038,3.422,1174,2,1297,2.708,1361,4.204,1362,4.103,1363,4.103,1410,1.698,1777,2.496,1886,2.708,1958,2.951,1959,3.261,1965,2.823,1969,2.98,1970,2.097,1979,2.097,1984,2.336,1985,3.761,1987,1.913,1988,1.913,2090,3.873,2093,3.261,2098,2,2107,3.68,2127,3.508,2178,5.371,2179,2.34,2180,3.453,2181,2.496,2182,3.876,2183,2.34,2184,2.209,2185,6.022,2186,3.876,2187,2.496,2188,3.974,2189,2.496,2190,2.951,2191,2.209,2192,5.563,2193,2.693,2194,2.693,2195,2.496,2196,2.693,2197,2.693,2198,2.34,2199,2.693,2200,2.693,2201,2.34,2202,2.34,2203,2.693,2204,2.693,2205,2.693,2206,2.693,2207,2.34,2208,3.974,2209,3.974,2210,3.974,2211,3.974,2212,3.974,2213,3.974,2214,3.685,2215,2.693,2216,2.693,2217,2.693,2218,2.693,2219,2.693,2220,2.693,2221,2.693,2222,5.216,2223,2.693,2224,2.693,2225,2.693,2226,3.685,2227,2.693,2228,2.693,2229,2.693,2230,3.974,2231,4.724,2232,4.724,2233,2.693,2234,2.693,2235,2.693,2236,2.34,2237,2.496,2238,2.496,2239,2.496,2240,2.693,2241,2.34,2242,3.974,2243,4.38,2244,2.693,2245,2.693,2246,2.693,2247,2.693,2248,5.216,2249,3.974,2250,3.974,2251,2.693,2252,2.693,2253,2.693,2254,2.496,2255,2.693,2256,2.693,2257,2.693,2258,2.693,2259,2.693,2260,2.693,2261,2.693,2262,3.974,2263,2.951,2264,3.974,2265,2.693,2266,2.693,2267,2.693,2268,2.693,2269,2.693,2270,2.693,2271,2.693,2272,2.693,2273,2.693,2274,2.693,2275,3.974,2276,3.974,2277,2.693,2278,2.693,2366,4.951,2367,4.951,2368,4.951,2369,4.951,2370,3.354,2371,3.354,2372,3.354,2373,5.216,2374,3.354,2375,3.354,2376,3.354,2377,3.354,2378,3.354]],["title/interfaces/ReferenceDataStateModel.html",[128,0.281,2207,3.05]],["body/interfaces/ReferenceDataStateModel.html",[0,1.628,3,0.078,4,0.095,5,0.069,6,0.061,15,2.152,16,1.445,18,0.359,19,0.568,20,1.791,22,1.257,29,1.632,35,0.687,43,0.01,44,0.76,45,0.798,47,0.704,55,1.147,56,0.573,65,1.632,69,1.159,71,1.747,75,0.006,80,0.006,85,0.722,90,2.007,96,2.139,99,0.343,102,2.235,104,0.187,106,2.346,107,1.632,108,1.632,109,1.533,112,1.075,113,1.581,114,1.327,118,2.106,121,2.139,122,2.139,123,1.445,124,1.404,125,2.078,127,2.506,128,0.341,129,0.175,131,1.581,132,0.14,133,1.639,138,1.428,148,4.986,159,1.141,160,0.588,161,1.632,162,1.743,187,2.117,194,0.949,211,0.796,244,1.857,245,2.139,256,1.192,261,2.202,277,2.019,298,3.142,300,3.208,325,1.049,361,1.546,380,1.87,382,3.149,384,2.235,386,3.546,389,2.433,391,2.106,392,2.662,402,1.049,407,1.365,452,1.469,455,1.469,468,1.445,615,2.202,644,1.87,645,1.942,648,1.87,649,1.87,700,1.804,769,3.321,776,2.02,870,3.061,913,1.804,918,1.87,919,3.321,925,2.433,953,2.31,976,2.749,978,2.749,1038,3.308,1174,2.202,1297,2.905,1358,6.825,1361,4.063,1362,3.719,1363,3.719,1410,1.87,1777,2.749,1886,2.905,1958,4.295,1959,4.745,1965,3.029,1969,2.689,1970,2.31,1979,2.31,1984,1.743,1985,1.804,1987,2.106,1988,2.106,2090,4.054,2093,3.498,2098,2.202,2107,3.889,2127,3.166,2178,2.576,2179,2.576,2180,3.705,2181,2.749,2182,4.096,2183,2.576,2184,2.433,2185,5.459,2186,4.096,2187,2.749,2188,4.264,2189,2.749,2190,3.166,2191,2.433,2192,5.783,2193,2.965,2194,2.965,2195,2.749,2196,2.965,2197,2.965,2198,2.576,2199,2.965,2200,2.965,2201,2.576,2202,2.576,2203,2.965,2204,2.965,2205,2.965,2206,2.965,2207,3.705,2208,5.783,2209,4.264,2210,5.783,2211,5.783,2212,5.783,2213,5.783,2214,2.749,2215,2.965,2216,2.965,2217,2.965,2218,2.965,2219,2.965,2220,2.965,2221,2.965,2222,2.965,2223,2.965,2224,2.965,2225,2.965,2226,3.953,2227,2.965,2228,2.965,2229,2.965,2230,2.965,2231,4.992,2232,4.992,2233,2.965,2234,2.965,2235,2.965,2236,2.576,2237,2.749,2238,2.749,2239,2.749,2240,2.965,2241,2.576,2242,4.264,2243,3.953,2244,2.965,2245,2.965,2246,2.965,2247,2.965,2248,4.264,2249,2.965,2250,2.965,2251,2.965,2252,2.965,2253,2.965,2254,2.749,2255,2.965,2256,2.965,2257,2.965,2258,2.965,2259,2.965,2260,2.965,2261,2.965,2262,2.965,2263,2.202,2264,2.965,2265,2.965,2266,2.965,2267,2.965,2268,2.965,2269,2.965,2270,2.965,2271,2.965,2272,2.965,2273,2.965,2274,2.965,2275,2.965,2276,4.264,2277,2.965,2278,2.965]],["title/components/RegistrationContentComponent.html",[195,0.453,510,1.273]],["body/components/RegistrationContentComponent.html",[3,0.063,4,0.077,5,0.085,6,0.138,11,0.914,12,1.137,15,2.358,18,0.29,19,0.485,22,2.643,23,2.823,25,1.194,35,0.843,38,2.034,40,0.887,41,0.909,42,1.612,43,0.01,44,1.214,45,0.735,46,1.165,52,0.915,55,1.606,56,1.205,69,0.743,75,0.005,80,0.005,85,1.198,86,1.198,88,2.469,91,2.265,99,0.28,104,0.151,113,1.277,114,1.073,124,1.134,129,0.077,132,0.294,133,0.598,141,0.569,155,2.656,159,1.248,160,1.184,195,0.683,196,0.826,197,1.165,198,0.869,199,0.963,200,0.963,201,0.938,207,0.847,208,1.225,209,1.225,210,2.277,211,1.14,212,0.748,213,1.256,215,1.256,222,3.827,246,3.001,247,3.353,255,1.109,258,1.39,259,1.165,262,3.26,296,1.481,298,3.116,299,1.409,300,3.404,306,2.216,307,1.754,308,1.536,312,1.318,320,0.806,325,0.847,330,1.779,331,1.702,336,1.463,353,2.221,354,2.221,355,1.408,359,3.654,402,1.288,403,1.318,406,2.146,410,2.07,411,0.786,412,2.297,415,1.511,416,0.915,418,3.284,420,1.362,423,1.239,429,1.942,431,1.693,433,2.589,436,1.318,439,1.318,440,2.396,444,3.129,446,1.362,447,1.202,450,1.458,452,0.645,453,1.511,455,0.645,459,0.806,476,0.475,477,1.956,478,0.963,479,1.978,480,0.963,481,0.963,482,0.869,483,0.963,484,0.847,485,1.771,486,0.869,487,0.963,488,1.256,489,1.771,490,0.869,491,0.915,492,0.963,493,0.869,494,0.963,495,0.869,496,0.826,497,0.963,498,0.869,499,0.963,500,0.869,501,0.891,502,0.963,503,0.869,504,0.938,505,0.847,506,0.963,507,0.869,508,1.464,509,0.847,510,1.785,511,0.869,512,1.771,513,0.869,514,1.355,515,1.464,516,0.847,517,0.869,518,0.847,519,0.73,520,0.963,521,0.847,522,0.826,523,0.869,524,0.963,525,0.869,526,0.963,527,0.891,528,0.963,529,0.869,530,1.194,531,0.869,532,1.321,533,0.869,534,0.963,535,0.869,536,1.225,537,0.963,538,0.869,539,0.963,540,0.963,593,5.52,673,2.297,678,0.869,690,1.321,691,1.771,697,2.972,718,1.544,732,2.385,733,3.164,807,2.07,835,1.194,849,2.988,886,4.405,887,3.997,987,2.988,992,2.086,999,2.082,1030,3.997,1260,2.481,1286,4.115,1311,5.204,1319,4.083,1361,4.302,1362,3.797,1363,4.166,1372,2.396,1382,2.082,1391,3.997,1589,2.988,1665,4.275,1699,1.632,1703,2.082,1747,4.835,1749,4.835,1752,3.997,1766,2.481,1773,3.997,1812,3.271,1818,3.997,1819,3.997,1835,3.641,1843,2.221,1846,2.988,2123,2.704,2158,2.587,2302,3.827,2328,1.866,2361,2.082,2373,2.396,2379,5.846,2380,5.846,2381,2.63,2382,5.487,2383,5.487,2384,3.614,2385,4.842,2386,5.487,2387,5.487,2388,4.536,2389,6.13,2390,4.536,2391,3.997,2392,4.907,2393,4.536,2394,4.536,2395,4.536,2396,2.985,2397,3.641,2398,3.641,2399,2.985,2400,4.536,2401,4.536,2402,2.985,2403,3.997,2404,4.835,2405,2.985,2406,4.536,2407,2.985,2408,2.985,2409,2.985,2410,2.985,2411,2.985,2412,2.985,2413,2.985,2414,2.985,2415,1.632,2416,2.985,2417,2.985,2418,2.985,2419,5.487,2420,2.396,2421,2.985,2422,2.985,2423,2.985,2424,2.985,2425,2.985,2426,4.536,2427,2.985,2428,2.985,2429,2.985,2430,2.985,2431,2.985,2432,2.985,2433,2.985,2434,2.63,2435,2.985,2436,2.985,2437,2.63]],["title/modules/RegistrationContentModule.html",[541,0.643,2438,3.05]],["body/modules/RegistrationContentModule.html",[3,0.129,4,0.158,5,0.115,6,0.101,43,0.01,75,0.008,80,0.008,99,0.357,104,0.311,129,0.158,132,0.232,211,0.786,307,1.231,325,1.743,426,1.577,476,0.978,505,2.113,510,2.633,541,0.903,543,1.743,544,1.788,545,2.519,546,1.882,547,1.788,548,2.519,559,2.341,560,1.743,562,2.403,566,2.281,580,6.558,593,4.044,757,2.675,758,2.09,763,4.071,764,3.359,1693,5.192,1694,4.283,1696,4.044,1732,5.421,1858,5.71,1870,4.929,1871,4.929,1872,5.41,1873,4.044,1874,4.929,2379,4.283,2380,4.283,2438,6.283,2439,5.41,2440,5.41,2441,5.41,2442,6.141,2443,6.141,2444,5.41]],["title/components/RegistrationModalComponent.html",[195,0.453,511,1.273]],["body/components/RegistrationModalComponent.html",[3,0.084,4,0.103,5,0.106,6,0.133,11,0.742,12,1.412,14,2.197,18,0.39,19,0.603,20,1.859,22,2.403,23,2.548,25,1.484,35,1.048,38,1.936,40,1.102,41,1.13,42,0.982,43,0.01,44,1.133,45,0.641,46,0.71,52,1.231,55,1.218,56,1.095,69,0.544,75,0.006,80,0.006,85,1.273,86,1.273,88,2.844,91,2.609,99,0.336,102,1.444,104,0.203,111,2.197,112,1.169,114,1.444,121,1.618,122,1.618,123,1.571,124,1.527,129,0.103,132,0.292,133,1.416,141,1.242,159,0.674,160,1.261,195,0.799,196,1.112,197,1.448,198,1.169,200,1.296,201,1.263,204,2.34,206,4.289,207,1.14,210,2.326,211,1.165,212,1.006,215,1.56,230,4.651,244,2.469,245,2.844,255,0.982,257,1.833,259,1.448,286,2.217,296,1.084,299,1.673,307,1.755,308,2.159,325,1.14,328,2.802,330,2.395,331,2.291,361,1.169,411,1.058,431,1.032,452,0.868,455,0.868,459,1.084,476,0.64,477,1.91,478,1.296,479,2.279,480,1.296,481,1.296,482,1.169,483,1.296,484,1.14,485,2.102,486,1.169,487,1.296,488,1.56,489,2.102,490,1.169,491,1.231,492,1.296,493,1.169,494,1.296,495,1.169,496,1.112,497,1.296,498,1.169,499,1.296,500,1.169,501,1.2,502,1.296,503,1.169,504,1.263,505,1.14,506,1.296,507,1.169,508,1.82,509,1.14,510,1.641,511,2.056,512,2.102,513,1.169,514,1.684,515,1.82,516,1.14,517,1.169,518,1.14,519,0.982,520,1.296,521,1.14,522,1.112,523,1.169,524,1.296,525,1.169,526,1.296,527,1.2,528,1.296,529,1.169,530,1.484,531,1.169,532,1.641,533,1.169,534,1.296,535,1.169,536,1.522,537,1.296,538,1.169,539,1.296,540,1.296,593,5.738,678,1.169,690,1.641,691,2.102,718,1.919,803,2.645,984,3.713,1141,5.255,1286,4.842,1587,5.669,1980,2.395,1984,3.332,1985,1.962,1986,2.395,2029,4.289,2119,2.395,2254,2.989,2379,5.638,2380,2.802,2384,4.289,2415,2.197,2444,3.539,2445,2.802,2446,5.637,2447,4.195,2448,6.513,2449,7.062,2450,3.224,2451,5.97,2452,5.637,2453,4.967,2454,3.539,2455,4.195,2456,4.017,2457,4.017,2458,4.017,2459,4.017,2460,3.539,2461,3.539,2462,4.017,2463,4.017,2464,4.017,2465,5.637,2466,4.017,2467,4.017,2468,3.539,2469,3.539,2470,3.539,2471,4.017,2472,4.017,2473,4.017]],["title/modules/RegistrationModalModule.html",[541,0.643,557,3.05]],["body/modules/RegistrationModalModule.html",[3,0.133,4,0.163,5,0.118,6,0.104,43,0.01,75,0.008,80,0.008,99,0.352,104,0.32,129,0.163,132,0.239,307,1.519,426,1.624,476,1.007,511,2.642,541,0.929,543,1.795,544,1.841,545,2.551,546,1.937,547,1.841,548,2.551,557,6.247,559,2.382,560,1.795,562,2.445,566,2.321,572,3.144,573,2.473,593,4.989,757,2.722,758,2.152,2379,4.409,2380,4.409,2415,3.458,2438,6.089,2474,5.57,2475,5.57,2476,6.322,2477,5.57,2478,5.075,2479,4.409,2480,6.081,2481,6.322]],["title/interfaces/RegistrationStateModel.html",[128,0.281,2482,3.511]],["body/interfaces/RegistrationStateModel.html",[0,1.284,1,2.497,3,0.088,4,0.069,5,0.078,6,0.044,8,2.648,9,1.772,11,0.354,12,1.576,14,1.472,15,2.459,16,1.053,18,0.261,19,0.448,20,2.058,22,2.841,23,3.009,29,1.189,33,5.016,35,0.779,37,3.072,40,0.526,41,0.539,43,0.01,44,0.831,45,0.652,46,0.74,47,0.799,48,1.251,49,2.497,50,2.291,53,3.307,55,1.254,56,1.033,59,1.877,65,1.189,69,1.022,75,0.004,80,0.004,83,3.118,86,1.528,88,1.687,90,2.245,91,1.548,96,2.897,99,0.339,102,1.848,104,0.136,105,3.781,106,1.85,107,1.189,108,1.189,109,1.117,111,1.472,112,0.784,113,1.793,114,0.967,117,2.16,118,1.535,119,1.683,128,0.173,129,0.108,131,1.152,132,0.102,133,1.637,138,1.278,139,1.604,140,1.052,141,0.513,154,2.484,155,3.147,159,1.329,160,0.819,161,1.189,162,1.27,163,1.877,164,1.604,165,1.877,166,1.877,167,1.772,168,1.877,169,1.877,172,1.772,173,1.772,180,2.003,184,2.003,187,1.751,194,0.691,207,1.974,211,0.658,244,2.199,245,1.687,255,1.257,256,0.869,261,1.604,286,1.976,296,0.727,298,2.57,300,1.976,306,1.314,307,1.673,325,0.764,332,2.03,333,1.415,334,1.415,336,1.621,355,1.27,361,2.397,384,1.848,389,2.012,392,2.201,402,1.46,431,0.691,437,1.314,468,2.012,501,1.251,519,0.658,608,1.877,619,3.63,620,2.272,622,3.118,629,5.016,638,2.16,644,1.363,645,1.415,672,3.363,674,3.216,675,1.604,692,1.152,725,3.691,807,2.347,821,2.922,835,1.754,838,3.691,842,3.828,870,2.391,897,1.535,967,2.003,983,3.373,984,3.823,985,2.922,1138,0.994,1152,1.877,1248,3.31,1262,2.16,1308,2.16,1319,3.307,1356,4.143,1366,1.228,1378,2.003,1404,2.16,1410,1.363,1437,2.16,1484,2.371,1489,2.371,1766,1.472,1782,3.63,1812,2.497,1836,2.497,1885,1.363,1917,1.877,1955,1.772,1965,2.933,1969,2.121,1971,3.118,1972,1.683,1973,1.683,1979,1.683,1980,2.497,1984,1.976,1985,1.314,1986,1.604,1990,1.683,1992,1.683,1998,2.619,1999,1.683,2031,1.772,2043,3.63,2107,1.683,2119,2.497,2153,3.118,2158,2.389,2164,2.16,2180,5.016,2181,2.003,2190,1.604,2195,3.118,2226,2.003,2237,2.003,2238,2.003,2239,2.003,2243,2.003,2263,1.604,2323,2.003,2324,2.003,2326,1.877,2329,1.772,2335,2.003,2336,2.003,2344,3.118,2349,2.003,2434,2.371,2460,4.532,2461,3.691,2468,5.114,2469,5.114,2470,2.371,2482,3.363,2483,2.371,2484,6.336,2485,6.29,2486,6.778,2487,6.954,2488,2.691,2489,2.691,2490,2.371,2491,2.691,2492,4.189,2493,3.691,2494,2.691,2495,2.16,2496,2.691,2497,4.189,2498,4.189,2499,2.691,2500,5.114,2501,3.828,2502,2.691,2503,2.691,2504,4.189,2505,2.16,2506,2.691,2507,2.691,2508,2.691,2509,2.691,2510,2.691,2511,2.691,2512,2.691,2513,2.691,2514,2.691,2515,2.691,2516,2.691,2517,3.691,2518,2.691,2519,2.691,2520,2.691,2521,2.691,2522,2.371,2523,2.691,2524,2.691,2525,2.691,2526,2.691,2527,2.691,2528,2.691,2529,2.691,2530,2.691,2531,2.691,2532,2.691,2533,2.691,2534,2.691,2535,2.691,2536,2.691,2537,2.691,2538,2.691,2539,2.691,2540,2.691,2541,2.691,2542,2.691,2543,2.691,2544,2.691,2545,2.691,2546,2.691,2547,2.691,2548,2.691,2549,2.691,2550,2.691,2551,2.691,2552,2.691,2553,2.691,2554,2.691,2555,2.691,2556,2.691,2557,2.691,2558,2.691,2559,2.691,2560,2.16,2561,2.691,2562,2.16,2563,2.003,2564,2.371,2565,2.691,2566,2.691,2567,2.691,2568,2.691,2569,2.691,2570,5.805,2571,3.828,2572,2.691,2573,2.691,2574,2.691,2575,2.691,2576,2.691,2577,4.189,2578,2.691,2579,2.691,2580,2.691,2581,2.691,2582,2.691,2583,5.143,2584,2.691,2585,2.691,2586,2.691,2587,2.16,2588,2.691,2589,2.691,2590,2.691,2591,2.691,2592,2.691,2593,2.691,2594,2.691,2595,2.691,2596,2.691,2597,2.691,2598,2.691,2599,2.371,2600,2.691,2601,2.691,2602,2.691,2603,2.691,2604,2.691,2605,2.691,2606,2.371,2607,2.691,2608,2.691,2609,4.189,2610,2.691,2611,2.691,2612,2.691,2613,2.691,2614,2.691,2615,2.691,2616,5.143,2617,2.691,2618,2.691,2619,2.691,2620,2.691,2621,4.189,2622,3.118,2623,4.189,2624,4.189,2625,2.691,2626,2.691,2627,2.691,2628,2.691,2629,2.691,2630,2.691,2631,2.691,2632,2.691,2633,2.691,2634,2.691,2635,2.691,2636,2.691,2637,2.691,2638,2.691,2639,2.691,2640,2.691,2641,2.691,2642,2.691,2643,2.691,2644,2.691,2645,2.691,2646,2.691,2647,2.691,2648,2.691,2649,2.691,2650,2.691,2651,2.691,2652,2.691,2653,2.691,2654,2.691,2655,2.691,2656,2.691,2657,2.691,2658,2.691,2659,2.691,2660,2.691,2661,2.691,2662,4.189,2663,2.691,2664,2.691,2665,2.691,2666,2.691,2667,2.691,2668,2.691,2669,2.691,2670,2.691,2671,2.691,2672,2.691,2673,2.691,2674,2.691,2675,2.691,2676,2.691,2677,2.691,2678,2.691,2679,2.691,2680,2.691,2681,2.691,2682,2.691,2683,2.691]],["title/components/ReviewButtonComponent.html",[195,0.453,513,1.273]],["body/components/ReviewButtonComponent.html",[3,0.122,4,0.084,5,0.091,6,0.137,11,0.641,12,1.221,18,0.319,19,0.521,20,0.864,25,1.283,32,2.561,35,0.61,38,2.018,40,0.952,41,0.977,42,1.191,43,0.01,44,1.095,45,0.722,46,0.861,47,1.226,48,1.455,52,1.006,55,1.255,56,0.997,69,0.444,75,0.005,80,0.005,85,1.407,86,1.496,90,1.572,99,0.277,104,0.166,129,0.084,132,0.272,133,0.977,138,0.537,140,0.883,141,1.108,159,0.818,160,1.186,195,0.836,196,0.908,197,1.251,198,0.955,199,1.059,200,1.059,201,1.032,203,2.904,204,2.022,207,2.172,208,1.315,209,1.315,210,2.288,211,1.147,212,0.822,213,1.348,215,1.348,221,2.664,255,0.802,258,2.395,259,1.251,260,3.625,262,2.085,285,4.234,286,2.449,296,1.942,299,1.492,307,1.289,308,1.803,320,0.886,332,2.516,336,1.447,361,2.228,402,1.383,406,1.284,407,1.212,410,1.497,411,0.864,416,1.493,423,1.362,433,4.014,438,1.449,452,0.709,455,0.709,459,0.886,476,0.523,477,1.764,478,1.059,479,2.075,480,1.059,481,1.059,482,0.955,483,1.059,484,0.932,485,1.875,486,0.955,487,1.059,488,1.348,489,1.875,490,0.955,491,1.78,492,1.059,493,0.955,494,1.059,495,0.955,496,0.908,497,1.059,498,0.955,499,1.059,500,0.955,501,0.98,502,1.059,503,0.955,504,1.032,505,0.932,506,1.059,507,0.955,508,1.572,509,0.932,510,0.955,511,0.955,512,1.875,513,1.872,514,2.59,515,1.572,516,1.383,517,0.955,518,0.932,519,0.802,520,1.059,521,0.932,522,0.908,523,0.955,524,1.059,525,0.955,526,1.059,527,0.98,528,1.059,529,0.955,530,1.283,531,0.955,532,1.418,533,0.955,534,1.059,535,0.955,536,1.315,537,1.059,538,0.955,539,1.059,540,1.059,603,1.322,614,2.022,620,3.608,677,2.939,678,0.955,679,2.939,680,2.589,681,1.284,682,1.247,683,2.208,690,1.418,691,1.875,696,2.589,697,2.085,717,2.467,718,1.658,732,1.725,736,1.725,835,2.094,842,3.625,844,3.91,913,2.379,985,5.548,995,2.904,1031,3.91,1138,1.8,1144,3.91,1260,2.664,1272,2.052,1286,3.916,1318,2.467,1327,3.046,1587,3.91,1665,3.398,1686,2.634,1703,5.019,1730,2.634,2281,4.739,2361,2.289,2373,2.634,2385,2.289,2391,4.292,2403,4.292,2404,5.119,2415,1.795,2450,2.634,2451,5.16,2479,2.289,2484,5.119,2587,3.91,2684,5.487,2685,6.2,2686,2.634,2687,4.871,2688,4.871,2689,5.809,2690,5.119,2691,4.292,2692,6.428,2693,6.428,2694,6.868,2695,5.809,2696,5.809,2697,4.871,2698,4.871,2699,3.282,2700,7.195,2701,4.871,2702,3.282,2703,3.282,2704,3.282,2705,4.292,2706,4.871,2707,4.871,2708,4.292,2709,4.871,2710,4.292,2711,3.282,2712,3.91,2713,4.871,2714,3.282,2715,4.871,2716,4.292,2717,3.282,2718,4.871,2719,3.282,2720,3.282,2721,3.282,2722,2.634,2723,2.161,2724,5.809,2725,3.282,2726,2.442,2727,3.282,2728,3.282,2729,3.282,2730,3.282,2731,3.282,2732,4.871,2733,3.282,2734,3.282,2735,3.282,2736,3.282,2737,3.282,2738,2.634,2739,2.634,2740,3.282,2741,3.282,2742,3.282]],["title/modules/ReviewButtonModule.html",[541,0.643,2743,3.05]],["body/modules/ReviewButtonModule.html",[3,0.133,4,0.162,5,0.118,6,0.104,43,0.01,75,0.008,80,0.008,99,0.352,104,0.32,129,0.162,132,0.239,426,1.622,476,1.006,513,2.642,514,2.261,541,0.928,543,1.792,544,1.838,545,2.549,546,1.935,547,1.838,548,2.549,559,2.38,560,1.792,562,2.443,566,2.32,594,5.563,757,2.72,758,2.149,763,4.14,764,3.453,1296,5.563,1693,5.28,1694,4.404,2684,4.158,2685,4.699,2723,4.158,2743,6.246,2744,5.563,2745,5.563,2746,5.563,2747,5.563,2748,6.087,2749,6.314]],["title/components/ReviewModalComponent.html",[195,0.453,516,1.242]],["body/components/ReviewModalComponent.html",[3,0.129,4,0.092,5,0.098,6,0.132,11,0.686,12,1.305,18,0.349,19,0.557,25,1.877,35,0.968,38,1.919,40,1.394,41,1.044,42,0.879,43,0.01,44,1.097,45,0.696,46,0.635,48,1.829,52,1.596,55,0.777,56,0.808,69,0.487,75,0.006,76,2.89,80,0.006,85,1.018,86,1.018,90,1.977,99,0.247,104,0.182,128,0.231,129,0.092,132,0.281,141,1.28,155,1.448,159,0.874,160,0.976,195,0.842,196,0.995,197,1.338,198,1.047,199,1.161,200,1.161,201,1.131,207,2.271,208,1.406,209,1.406,210,2.306,211,1.156,212,0.901,213,1.442,215,1.442,255,0.879,258,1.102,259,1.338,299,1.573,307,1.65,308,2.121,312,1.588,320,0.971,336,1.291,361,2.465,401,1.257,402,1.906,403,2.706,407,1.329,410,3.064,411,1.613,412,3.763,413,1.89,416,1.877,418,2.706,420,2.795,423,1.492,426,0.924,429,3.051,431,1.338,432,5.184,433,1.696,435,3.257,436,1.588,438,1.588,439,1.588,440,2.886,443,1.539,446,2.795,448,2.368,449,2.508,451,2.739,452,1.323,455,1.54,459,0.971,463,2.638,476,0.573,477,1.831,478,1.161,479,2.168,480,1.161,481,1.161,482,1.047,483,1.161,484,1.021,485,1.977,486,1.047,487,1.161,488,1.442,489,1.977,490,1.047,491,1.102,492,1.161,493,1.047,494,1.161,495,1.047,496,0.995,497,1.161,498,1.047,499,1.161,500,1.047,501,1.074,502,1.161,503,1.047,504,1.131,505,1.021,506,1.161,507,1.047,508,1.681,509,1.021,510,1.047,511,1.047,512,1.977,513,1.047,514,2.619,515,1.681,516,1.906,517,1.047,518,1.021,519,0.879,520,1.161,521,1.021,522,0.995,523,1.047,524,1.161,525,1.047,526,1.161,527,1.074,528,1.161,529,1.047,530,1.372,531,1.047,532,1.517,533,1.047,534,1.161,535,1.047,536,1.406,537,1.161,538,1.047,539,1.161,540,1.161,571,1.89,620,2.301,673,3.102,678,1.047,690,1.517,691,1.977,718,1.773,731,2.248,732,2.739,743,1.641,835,1.613,913,2.992,984,4.034,985,4.272,986,3.257,992,2.709,995,3.652,1041,2.676,1138,2.263,1286,4.477,1287,4.559,1382,4.272,1394,3.633,1464,4.559,1586,2.676,1589,3.431,1686,4.182,1889,2.144,2281,4.895,2384,4.895,2385,4.972,2392,5.305,2415,1.967,2445,2.508,2447,3.877,2454,3.168,2455,4.559,2501,2.676,2684,5.27,2712,2.886,2722,2.886,2723,5.27,2738,2.886,2739,2.886,2750,4.59,2751,4.917,2752,3.596,2753,5.305,2754,5.209,2755,5.397,2756,4.559,2757,5.397,2758,5.209,2759,3.596,2760,4.182,2761,3.596,2762,3.168,2763,2.886,2764,3.168,2765,3.168,2766,3.168,2767,3.168,2768,3.168,2769,3.168,2770,2.886,2771,3.168,2772,4.59,2773,5.209,2774,5.209,2775,3.596,2776,3.596,2777,3.596,2778,5.209,2779,3.596,2780,3.596]],["title/interfaces/ReviewModalData.html",[128,0.281,2753,3.255]],["body/interfaces/ReviewModalData.html",[3,0.146,4,0.141,5,0.103,6,0.09,11,0.724,18,0.534,19,0.744,25,1.449,35,1.023,40,1.36,41,1.103,43,0.01,44,0.787,45,0.631,48,1.644,56,0.854,75,0.007,80,0.007,90,1.776,99,0.308,104,0.279,128,0.353,129,0.141,132,0.263,141,1.454,159,1.167,160,0.877,194,1.414,195,0.856,207,2.503,208,1.486,209,1.486,210,1.414,211,0.89,213,1.523,215,1.523,258,2.131,307,1.606,308,2.148,320,1.486,336,1.688,361,2.457,426,1.414,432,3.839,477,1.414,514,2.633,516,1.562,673,3.862,678,1.602,690,1.602,691,1.776,835,2.008,913,3.725,984,5.023,995,4.546,1041,4.096,1138,2.818,1286,4.349,1287,5.676,1464,4.096,1586,4.096,1589,3.625,1889,3.281,2281,5.443,2384,4.581,2385,4.852,2392,5.177,2415,3.01,2445,3.839,2447,4.096,2455,5.676,2501,5.177,2684,3.625,2712,5.584,2722,4.418,2723,3.625,2738,4.418,2739,4.418,2750,4.849,2751,4.418,2753,5.676,2755,4.849,2756,4.096,2757,4.849,2760,4.418,2763,4.418,2764,6.128,2765,4.849,2766,4.849,2767,4.849,2768,4.849,2769,4.849,2770,4.418,2771,4.849]],["title/modules/ReviewModalModule.html",[541,0.643,2748,3.05]],["body/modules/ReviewModalModule.html",[3,0.135,4,0.165,5,0.12,6,0.105,43,0.01,75,0.008,80,0.008,99,0.353,104,0.325,129,0.165,132,0.243,426,1.648,476,1.022,514,1.916,516,2.581,541,0.943,543,1.821,544,1.868,545,2.567,546,1.966,547,1.868,548,2.567,559,2.403,560,1.821,562,2.071,566,2.342,572,3.172,573,2.51,757,2.747,758,2.184,1693,5.331,1694,4.475,2415,3.509,2478,5.151,2479,4.475,2480,6.135,2684,4.226,2723,4.226,2748,6.174,2781,5.653,2782,5.653,2783,5.653]],["title/components/RightSidebarComponent.html",[195,0.453,517,1.273]],["body/components/RightSidebarComponent.html",[1,4,3,0.109,4,0.092,5,0.097,6,0.117,8,3.389,9,2.363,11,0.685,12,1.785,15,2.344,18,0.505,19,0.556,22,2.424,23,2.905,33,4.968,35,0.967,38,1.64,40,1.017,41,1.043,42,0.877,43,0.01,44,1.096,45,0.609,46,0.634,47,1.279,52,1.1,69,0.486,75,0.006,76,1.693,77,3.252,80,0.006,85,1.196,86,1.196,88,2.703,91,2.479,99,0.287,104,0.182,129,0.092,132,0.281,139,3.647,141,0.684,157,4.029,159,1.126,160,1.22,187,1.221,195,0.738,196,0.993,197,1.336,198,1.045,199,1.158,200,1.158,201,1.128,207,1.019,208,1.404,209,1.404,210,2.305,211,1.155,212,0.899,213,1.44,215,1.44,218,2.634,236,2.88,255,1.495,256,1.679,258,1.594,259,1.336,286,1.77,299,1.571,306,2.54,307,1.628,308,1.533,309,2.845,312,2.702,320,0.969,330,2.139,331,2.046,332,1.819,336,0.756,384,1.289,389,1.404,401,1.255,402,2.108,403,3.384,404,2.244,405,2.244,406,3.128,407,2.261,408,3.489,410,3.25,411,1.767,412,3.761,415,3.098,416,2.348,418,2.297,420,3.25,429,2.619,430,3.647,431,1.829,433,2.454,434,2.363,435,3.252,436,2.702,444,2.966,446,2.373,447,2.095,450,2.54,451,2.735,452,1.655,453,1.817,455,1.894,459,0.969,461,2.363,463,3.397,466,1.887,470,1.817,471,1.817,474,2.363,475,2.67,476,0.828,477,1.829,478,1.158,479,2.166,480,1.158,481,1.158,482,1.045,483,1.158,484,1.019,485,1.975,486,1.045,487,1.158,488,1.44,489,1.975,490,1.045,491,1.1,492,1.158,493,1.045,494,1.158,495,1.045,496,0.993,497,1.158,498,1.045,499,1.158,500,1.045,501,1.072,502,1.158,503,1.045,504,1.128,505,1.019,506,1.158,507,1.045,508,1.679,509,1.019,510,1.045,511,1.045,512,1.975,513,1.045,514,1.827,515,1.679,516,1.019,517,1.953,518,1.019,519,0.877,520,1.158,521,1.019,522,0.993,523,1.045,524,1.158,525,1.045,526,1.158,527,1.072,528,1.158,529,1.045,530,1.37,531,1.045,532,1.514,533,1.045,534,1.158,535,1.045,536,1.404,537,1.158,538,1.045,539,1.158,540,1.158,596,5.301,614,2.159,644,1.817,678,1.045,684,2.67,690,1.514,691,1.975,718,1.77,728,2.503,732,2.735,741,2.503,743,3.061,746,2.363,750,2.363,751,2.363,835,1.37,850,2.363,882,3.871,897,3.826,960,2.88,991,2.503,992,3.127,995,2.139,999,2.503,1233,2.503,1284,4.267,1394,2.503,1667,2.67,1741,2.88,1742,7.156,1743,5.39,1744,4.583,1758,5.39,1785,1.963,1836,4,1838,4.583,1839,4.583,1840,4.175,1841,2.88,1842,3.161,1844,5.39,1846,3.426,1847,2.88,1850,3.161,1851,3.161,2495,2.88,2571,3.871,2784,5.717,2785,6.709,2786,5.201,2787,5.201,2788,3.588,2789,3.161,2790,3.588,2791,3.588,2792,3.588,2793,3.588,2794,3.588,2795,3.588,2796,3.588,2797,3.588,2798,3.588,2799,3.588,2800,6.118,2801,3.588,2802,3.588,2803,3.588,2804,3.588,2805,3.588]],["title/modules/RightSidebarModule.html",[541,0.643,558,3.05]],["body/modules/RightSidebarModule.html",[3,0.118,4,0.144,5,0.105,6,0.092,43,0.01,75,0.007,80,0.007,99,0.365,104,0.284,129,0.144,132,0.212,211,0.717,325,1.591,411,1.853,426,1.44,455,1.211,476,0.893,517,2.602,541,0.824,543,1.591,544,1.632,545,2.418,546,1.718,547,1.632,548,2.418,558,6.361,559,2.213,560,1.591,562,2.271,566,2.156,572,2.921,573,2.193,576,3.692,578,5.648,579,4.5,596,4.172,670,3.692,752,5.915,757,2.529,758,1.908,763,3.849,764,3.066,1861,4.939,1862,6.2,1863,4.939,1864,5.648,1865,4.5,1874,5.648,1880,4.939,2685,4.172,2743,5.915,2784,4.5,2806,4.939,2807,4.939,2808,4.939,2809,4.939,2810,5.915,2811,5.915,2812,5.915,2813,5.915,2814,5.605,2815,5.605,2816,3.692,2817,5.605,2818,5.605,2819,3.692,2820,7.037,2821,4.172,2822,5.605,2823,4.172,2824,5.605,2825,5.605,2826,5.605,2827,7.037]],["title/interfaces/Rotation.html",[128,0.281,519,1.069]],["body/interfaces/Rotation.html",[3,0.108,4,0.132,5,0.096,6,0.085,11,0.678,18,0.5,19,0.713,40,1.007,41,1.033,43,0.01,44,0.737,45,0.735,47,0.982,56,1.034,69,0.903,71,2.24,75,0.007,80,0.007,85,1.007,86,1.673,99,0.269,104,0.261,128,0.331,129,0.171,132,0.252,138,0.842,140,1.417,141,0.982,159,1.241,160,1.177,194,1.323,195,0.859,208,1.391,209,1.391,210,1.323,211,0.853,213,1.426,215,1.426,257,2.35,258,2.396,320,1.391,384,3.075,389,3.347,392,3.662,431,2.08,468,2.608,477,1.323,518,1.462,519,2.18,560,1.462,603,2.075,677,2.854,678,1.5,679,3.164,680,2.686,681,2.015,682,1.958,683,2.534,690,1.5,691,1.663,692,3.164,696,2.686,701,3.392,865,3.647,910,3.071,1138,1.903,1260,2.817,1318,2.608,1326,3.392,1552,3.221,1556,3.392,1655,3.392,1699,4.73,1843,5.502,2726,3.833,2816,3.392,2828,3.593,2829,3.833,2830,5.874,2831,4.962,2832,4.538,2833,4.135,2834,4.135,2835,4.538,2836,4.135,2837,4.538,2838,4.538,2839,3.833,2840,4.135,2841,4.538,2842,4.135,2843,6.513,2844,7.309,2845,4.135,2846,4.538,2847,6.888,2848,4.538,2849,5.874,2850,5.874,2851,4.135,2852,4.538,2853,4.538,2854,4.538,2855,4.538]],["title/components/RotationSliderComponent.html",[195,0.453,518,1.242]],["body/components/RotationSliderComponent.html",[3,0.069,4,0.084,5,0.091,6,0.126,11,0.763,12,1.218,18,0.318,19,0.52,25,1.28,35,0.609,38,1.819,40,0.951,41,0.975,42,1.418,43,0.01,44,1.118,45,0.694,46,1.025,47,0.927,52,1.003,55,1.05,56,0.996,69,1.008,71,1.846,75,0.005,76,2.294,80,0.005,85,1.255,86,1.577,99,0.196,104,0.166,128,0.21,129,0.125,132,0.272,138,0.535,140,1.349,141,1.106,155,1.958,159,0.973,160,1.093,187,1.655,195,0.835,196,0.906,197,1.249,198,0.953,199,1.056,200,1.056,201,1.029,207,0.929,208,1.313,209,1.313,210,2.288,211,1.147,212,0.82,213,1.346,215,1.346,218,1.657,255,1.418,257,2.218,258,2.203,259,1.249,282,3.04,299,1.49,307,0.975,308,0.82,312,2.562,320,0.884,384,2.748,389,2.991,392,3.272,401,1.145,402,1.647,403,3.03,406,2.911,407,1.796,410,2.218,411,1.28,412,3.251,415,1.657,416,2.102,418,2.562,420,2.647,423,1.359,429,2.936,430,1.951,431,1.846,433,1.544,434,2.156,435,3.627,436,2.562,438,1.446,439,1.446,446,2.647,447,1.958,450,1.599,451,1.721,452,1.253,453,1.657,455,1.253,456,2.283,459,0.884,460,2.283,463,1.657,468,2.511,470,2.462,471,2.462,474,2.156,476,0.521,477,1.762,478,1.056,479,2.072,480,1.056,481,1.056,482,0.953,483,1.056,484,0.929,485,1.872,486,0.953,487,1.056,488,1.346,489,1.872,490,0.953,491,1.003,492,1.056,493,0.953,494,1.056,495,0.953,496,0.906,497,1.056,498,0.953,499,1.056,500,0.953,501,0.978,502,1.056,503,0.953,504,1.029,505,0.929,506,1.056,507,0.953,508,1.569,509,0.929,510,0.953,511,0.953,512,1.872,513,0.953,514,1.452,515,1.569,516,0.929,517,0.953,518,1.823,519,2.177,520,1.056,521,0.929,522,0.906,523,0.953,524,1.056,525,0.953,526,1.056,527,0.978,528,1.056,529,0.953,530,1.28,531,0.953,532,1.416,533,0.953,534,1.056,535,0.953,536,1.313,537,1.056,538,0.953,539,1.056,540,1.056,560,1.647,603,1.318,614,2.018,674,3.04,677,2.483,678,0.953,679,2.748,680,2.586,681,1.28,682,1.244,683,2.205,690,1.416,691,1.872,692,2.081,696,2.337,701,3.202,717,2.462,718,1.655,719,1.721,726,4.902,731,2.047,732,1.721,733,2.283,734,3.04,735,2.283,736,1.721,737,2.283,743,3.28,750,2.156,751,2.156,850,2.156,865,3.512,910,2.898,986,3.04,991,2.283,992,1.848,1138,1.796,1260,2.659,1318,2.462,1326,3.202,1381,3.202,1382,3.391,1552,3.04,1556,3.202,1655,3.202,1699,4.723,1843,4.317,2726,3.618,2816,5.035,2828,5.333,2829,2.436,2830,2.884,2831,4.317,2832,4.284,2833,3.903,2834,3.903,2835,4.284,2836,3.903,2837,4.284,2838,5.111,2839,3.618,2840,3.903,2841,5.111,2842,3.903,2843,5.657,2844,7.004,2845,3.903,2846,4.284,2847,5.657,2848,2.884,2849,4.284,2850,4.284,2851,3.903,2852,4.284,2853,4.284,2854,4.284,2855,2.884,2856,4.862,2857,4.862,2858,4.862,2859,3.273,2860,4.862,2861,3.273,2862,3.273,2863,4.862,2864,3.903,2865,4.862,2866,3.273,2867,3.273,2868,2.884,2869,4.862,2870,4.284,2871,3.273,2872,6.42,2873,3.273,2874,4.862]],["title/modules/RotationSliderModule.html",[541,0.643,2810,3.05]],["body/modules/RotationSliderModule.html",[3,0.133,4,0.163,5,0.119,6,0.104,43,0.01,75,0.008,80,0.008,99,0.356,104,0.321,129,0.163,132,0.24,426,1.628,476,1.009,518,2.577,519,1.549,541,0.932,543,1.799,544,1.845,545,2.553,546,1.942,547,1.845,548,2.553,559,2.386,560,1.799,562,2.045,566,2.325,572,3.149,573,2.479,757,2.726,758,2.157,761,5.292,762,4.42,763,4.149,764,3.466,1699,3.466,2810,6.159,2816,4.174,2828,4.42,2875,5.584,2876,5.584,2877,5.584,2878,6.337,2879,6.337,2880,6.337,2881,7.587,2882,6.337]],["title/injectables/SceneState.html",[0,1.34,92,2.494]],["body/injectables/SceneState.html",[0,1.377,2,1.758,3,0.062,4,0.076,5,0.055,6,0.138,11,0.592,15,2.413,16,1.758,18,0.286,19,0.48,20,2.127,22,2.583,23,2.131,24,4.551,25,1.184,29,3.052,32,2.363,35,1.013,36,2.598,37,3.707,38,2.03,40,0.879,41,0.901,42,1.099,43,0.01,44,0.779,45,0.702,46,0.794,47,1.161,48,1.342,49,3.247,50,2.979,55,1.176,56,0.697,65,1.985,69,0.888,71,1.775,75,0.005,80,0.005,85,0.879,86,0.577,88,2.194,90,2.117,92,2.563,96,3.288,99,0.329,102,1.615,104,0.149,105,4.071,106,1.985,107,1.302,108,1.302,109,1.224,111,2.458,112,0.858,113,1.262,114,1.06,118,1.681,121,1.188,122,1.188,123,1.153,124,1.121,125,1.153,126,2.194,127,1.391,128,0.288,129,0.116,131,1.262,132,0.112,133,1.714,137,3.135,138,1.266,140,1.376,154,2.607,159,0.495,160,0.97,161,1.302,162,1.391,163,2.057,164,1.758,165,2.057,166,2.057,167,1.942,168,2.057,169,2.057,187,2.446,204,1.224,211,0.377,256,0.952,286,1.53,296,1.47,298,1.089,307,1.092,336,0.621,352,3.332,380,1.493,382,2.758,386,3.474,387,2.057,407,2.737,413,3.895,431,1.775,437,3.375,447,2.454,452,0.637,455,0.637,468,1.153,519,1.892,629,3.135,644,1.493,645,1.55,648,1.493,649,1.493,651,1.262,668,1.613,743,1.345,870,1.121,897,3.106,918,3.32,925,4.551,953,1.844,964,5.768,966,2.96,967,2.194,968,2.96,969,2.96,970,2.96,971,3.608,977,1.758,988,2.958,990,4.88,1038,1.262,1138,1.661,1188,5.858,1269,1.55,1302,3.448,1543,2.367,1570,2.367,1891,1.44,1958,2.679,1960,3.135,1961,4.249,1962,3.135,1964,2.96,1969,2.758,1983,2.057,1984,2.57,1985,1.44,1986,1.758,1997,2.81,2029,3.587,2030,2.057,2031,1.942,2090,2.679,2091,2.057,2094,3.135,2096,2.057,2098,1.758,2182,1.942,2183,2.057,2184,1.942,2186,5.544,2190,3.631,2191,1.942,2198,2.057,2201,2.057,2202,2.057,2236,3.135,2241,2.057,2420,2.367,2505,2.367,2560,3.608,2562,3.608,2563,3.345,2622,3.345,2864,2.367,2883,2.194,2884,4.495,2885,4.799,2886,4.799,2887,4.799,2888,4.799,2889,4.799,2890,6.088,2891,4.495,2892,3.96,2893,2.949,2894,2.949,2895,3.96,2896,3.96,2897,3.96,2898,5.778,2899,3.96,2900,3.96,2901,5.367,2902,3.96,2903,3.96,2904,3.96,2905,7.674,2906,2.949,2907,2.949,2908,2.949,2909,2.949,2910,2.949,2911,2.949,2912,2.949,2913,2.949,2914,2.949,2915,3.608,2916,2.949,2917,2.949,2918,2.949,2919,2.949,2920,2.949,2921,2.949,2922,4.495,2923,2.949,2924,2.949,2925,2.949,2926,2.949,2927,4.372,2928,2.598,2929,2.367,2930,2.367,2931,2.367,2932,2.194,2933,3.96,2934,2.367,2935,2.598,2936,3.96,2937,2.598,2938,3.96,2939,2.598,2940,2.598,2941,2.598,2942,2.598,2943,2.598,2944,2.598,2945,2.598,2946,3.96,2947,2.598,2948,2.598,2949,2.598,2950,2.598,2951,2.598,2952,3.96,2953,2.598,2954,2.598,2955,2.598,2956,2.598,2957,2.598,2958,2.598,2959,3.96,2960,2.598,2961,2.598,2962,3.96,2963,2.598,2964,2.598,2965,2.598,2966,3.608,2967,6.527,2968,4.799,2969,2.598,2970,3.96,2971,3.96,2972,2.598,2973,2.598,2974,3.96,2975,3.96,2976,2.598,2977,2.598,2978,2.598,2979,2.598,2980,2.598,2981,2.598,2982,2.598,2983,2.598,2984,2.598,2985,2.598,2986,2.598,2987,2.598,2988,2.598,2989,2.598,2990,2.598,2991,2.598,2992,2.598,2993,2.598,2994,2.598,2995,2.598,2996,3.96,2997,2.598,2998,2.598,2999,2.598,3000,2.598,3001,2.598,3002,2.598,3003,2.598,3004,3.96,3005,2.598,3006,2.598,3007,2.598,3008,2.598,3009,2.598,3010,2.598,3011,2.598,3012,2.598,3013,2.598,3014,2.598,3015,2.598,3016,2.598,3017,2.598,3018,2.598,3019,2.598,3020,2.598,3021,2.598,3022,2.598,3023,2.598,3024,2.598,3025,2.598,3026,2.598,3027,2.598,3028,2.598,3029,2.598]],["title/interfaces/SceneStateModel.html",[128,0.281,2932,3.255]],["body/interfaces/SceneStateModel.html",[0,1.508,3,0.07,4,0.086,5,0.062,6,0.055,11,0.438,15,2.343,16,1.302,18,0.323,19,0.526,20,1.819,22,2.461,23,1.926,24,4.55,29,2.587,35,0.915,37,3.374,40,0.651,41,0.667,43,0.01,44,0.476,45,0.587,47,0.939,48,0.994,49,2.935,50,2.692,56,0.516,65,1.47,69,0.793,71,1.858,75,0.005,80,0.005,85,0.651,88,1.983,90,1.891,92,1.898,96,3.261,99,0.337,102,1.769,104,0.169,105,4.196,106,2.174,107,1.47,108,1.47,109,1.381,111,2.692,112,0.969,113,1.424,114,1.196,118,1.898,121,1.341,122,1.341,123,1.302,124,1.265,125,1.302,126,2.477,127,1.57,128,0.316,129,0.127,131,1.424,132,0.126,133,1.742,137,3.433,138,1.305,140,1.393,154,2.507,159,0.559,160,0.784,161,1.47,162,1.57,163,2.321,164,1.984,165,2.321,166,2.321,167,2.192,168,2.321,169,2.321,187,2.461,194,0.855,204,1.381,211,0.426,256,1.074,286,1.133,296,1.329,298,1.23,307,0.667,336,1.234,352,3.204,380,1.685,382,2.966,386,3.691,387,2.321,407,2.839,413,3.934,431,1.858,437,3.374,447,1.983,452,0.719,455,0.719,468,1.302,519,1.878,629,3.433,644,1.685,645,1.75,648,1.685,649,1.685,651,1.424,668,1.82,743,1.519,870,1.265,897,2.807,918,2.966,925,4.763,953,2.081,964,6.007,966,3.242,967,2.477,968,3.242,969,3.242,970,3.242,971,3.951,977,1.984,988,2.957,990,3.663,1038,1.424,1138,1.23,1188,5.718,1269,1.75,1302,3.08,1543,2.672,1570,2.672,1891,1.626,1958,2.935,1960,3.433,1961,4.086,1962,3.433,1964,3.242,1969,2.493,1983,2.321,1984,2.322,1985,1.626,1986,1.984,1997,3.078,2029,2.192,2030,2.321,2031,2.192,2090,2.935,2091,2.321,2094,3.433,2096,2.321,2098,1.984,2182,2.192,2183,2.321,2184,2.192,2186,5.582,2190,3.859,2191,2.192,2198,2.321,2201,2.321,2202,2.321,2236,3.433,2241,2.321,2420,2.672,2505,2.672,2560,3.951,2562,3.951,2563,3.663,2622,2.477,2864,2.672,2883,2.477,2885,2.932,2886,2.932,2887,2.932,2888,2.932,2889,2.932,2890,4.337,2892,2.932,2895,2.932,2896,2.932,2897,2.932,2898,5.703,2899,2.932,2900,2.932,2901,5.161,2902,2.932,2903,2.932,2904,2.932,2905,7.683,2915,2.672,2927,4.702,2928,2.932,2929,2.672,2930,2.672,2931,2.672,2932,3.663,2933,6.087,2934,2.672,2935,2.932,2936,4.337,2937,2.932,2938,4.337,2939,2.932,2940,2.932,2941,2.932,2942,2.932,2943,2.932,2944,2.932,2945,2.932,2946,4.337,2947,2.932,2948,2.932,2949,2.932,2950,2.932,2951,2.932,2952,4.337,2953,2.932,2954,2.932,2955,2.932,2956,2.932,2957,2.932,2958,2.932,2959,4.337,2960,2.932,2961,2.932,2962,4.337,2963,2.932,2964,2.932,2965,2.932,2966,3.951,2967,6.769,2968,5.161,2969,2.932,2970,4.337,2971,4.337,2972,2.932,2973,2.932,2974,4.337,2975,4.337,2976,2.932,2977,2.932,2978,2.932,2979,2.932,2980,2.932,2981,2.932,2982,2.932,2983,2.932,2984,2.932,2985,2.932,2986,2.932,2987,2.932,2988,2.932,2989,2.932,2990,2.932,2991,2.932,2992,2.932,2993,2.932,2994,2.932,2995,2.932,2996,4.337,2997,2.932,2998,2.932,2999,2.932,3000,2.932,3001,2.932,3002,2.932,3003,2.932,3004,4.337,3005,2.932,3006,2.932,3007,2.932,3008,2.932,3009,2.932,3010,2.932,3011,2.932,3012,2.932,3013,2.932,3014,2.932,3015,2.932,3016,2.932,3017,2.932,3018,2.932,3019,2.932,3020,2.932,3021,2.932,3022,2.932,3023,2.932,3024,2.932,3025,2.932,3026,2.932,3027,2.932,3028,2.932,3029,2.932]],["title/interfaces/SlicesConfig.html",[128,0.281,1963,2.494]],["body/interfaces/SlicesConfig.html",[0,1.157,3,0.05,4,0.061,5,0.044,6,0.039,8,1.077,11,0.311,15,2.052,16,0.923,18,0.229,19,0.404,20,1.809,22,2.411,23,0.923,29,1.043,35,0.439,37,2.883,40,0.461,41,0.473,43,0.01,44,1.014,45,0.673,47,0.72,48,0.705,49,1.407,50,1.291,53,4.09,56,1.246,65,1.043,69,0.984,71,1.765,75,0.004,80,0.004,88,0.951,90,2.032,91,1.396,96,3.287,99,0.318,102,1.357,104,0.12,105,2.483,106,1.668,107,1.043,108,1.043,109,0.98,112,0.687,113,1.617,114,0.848,119,1.476,121,1.521,122,1.521,123,0.923,124,0.897,125,1.477,127,1.782,128,0.303,129,0.17,131,1.01,132,0.089,133,1.377,138,1.334,140,1.317,141,0.72,148,3.217,154,2.94,155,1.902,159,1.335,160,1.3,161,1.043,162,1.114,172,1.554,173,1.554,176,1.646,181,0.825,183,1.646,194,0.606,211,0.483,244,1.321,245,1.521,255,1.616,256,2.345,268,2.488,280,1.346,286,2.009,296,1.457,298,2.992,300,3.67,302,1.346,303,1.195,307,0.757,325,0.67,336,0.995,352,2.066,361,1.571,384,2.546,389,2.771,392,3.032,402,0.67,407,1.745,411,1.421,431,1.765,437,2.306,447,1.521,452,1.166,455,1.166,459,0.637,496,1.83,519,1.732,522,1.494,536,0.637,620,1.668,668,3.229,675,1.407,680,1.521,681,0.923,682,0.897,683,0.897,686,2.815,692,2.021,696,0.951,697,3.285,700,1.153,776,1.291,783,2.154,807,2.873,835,0.995,870,2.244,917,4.43,918,1.912,955,3.11,965,4.942,966,3.888,968,1.554,969,1.554,970,1.554,972,2.488,977,1.407,988,2.31,1038,3.405,1138,0.872,1248,2.693,1260,1.291,1269,1.241,1297,2.952,1300,3.764,1302,3.476,1357,2.362,1360,3.293,1361,3.902,1362,3.444,1363,3.229,1366,2.873,1410,1.195,1782,2.952,1783,2.634,1785,3.444,1786,4.117,1787,2.634,1797,1.756,1812,1.407,1836,3.519,1885,1.912,1886,2.583,1891,1.153,1923,1.476,1955,1.554,1956,1.554,1957,1.895,1958,3.754,1959,4.147,1960,4.392,1961,4.392,1962,4.392,1963,4.04,1964,4.666,1965,4.144,1966,1.554,1967,3.032,1968,4.392,1969,1.912,1970,2.362,1971,2.811,1972,1.476,1973,1.476,1974,1.895,1975,1.756,1976,1.895,1977,1.554,1978,1.895,1979,1.476,1980,2.252,1981,1.895,1982,1.895,1983,1.646,1984,1.782,1985,1.153,1986,1.407,1987,1.346,1988,1.346,1989,1.756,1990,4.134,1991,3.032,1992,3.691,1993,1.756,1994,1.895,1995,1.895,1996,1.895,1997,2.952,1998,2.362,1999,4.974,2000,1.895,2001,1.895,2002,1.895,2003,1.895,2004,1.895,2005,1.895,2006,1.895,2007,1.895,2008,1.895,2009,1.895,2010,1.895,2011,1.895,2012,1.895,2013,1.895,2014,1.895,2015,1.895,2016,1.895,2017,1.895,2018,1.895,2019,1.895,2020,1.895,2021,1.895,2022,1.895,2023,1.895,2024,1.895,2025,1.895,2026,1.756,2027,1.895,2028,1.895,2029,1.554,2030,1.646,2031,1.554,2032,1.895,2033,1.895,2034,1.895,2035,5.308,2036,3.032,2037,1.895,2038,4.332,2039,1.895,2040,3.032,2041,3.79,2042,1.895,2043,5.169,2044,1.895,2045,1.895,2046,1.895,2047,1.895,2048,1.895,2049,1.895,2050,1.895,2051,1.895,2052,1.895,2053,1.895,2054,1.895,2055,1.895,2056,1.895,2057,1.895,2058,1.895,2059,1.895,2060,1.895,2061,1.895,2062,3.79,2063,4.332,2064,1.895,2065,1.895,2066,1.895,2067,1.895,2068,1.895,2069,1.895,2070,1.895,2071,1.895,2072,1.895,2073,3.032,2074,1.895,2075,1.895,2076,1.895,2077,1.895,2078,1.895,2079,1.895,2080,1.895,2081,1.895,2082,1.895,2083,1.895,2084,1.895,2085,1.895,2086,1.895,2087,1.895,2088,1.895,2089,3.032,2090,1.407,2091,1.646,2092,1.895,2093,1.554,2094,1.646,2095,3.032,2096,3.293,2097,3.032,2098,2.252,2099,3.032,2100,1.895,2101,1.895,2102,1.895,2103,1.895,2104,1.895,2105,1.895,2106,1.895,2107,1.476,2108,1.895,2109,1.895,2110,1.895,2111,1.895,2112,1.895,2113,1.895,2114,1.895,2115,1.895,2116,1.895,2117,1.895,2118,1.895,2119,2.252,2120,1.895,2121,1.895,2122,1.895,2123,1.407,2124,1.895,2125,4.332,2126,1.895,2127,1.407,2128,1.895,2129,1.895,2130,1.895,2131,1.895,2132,1.895,2133,1.895,2134,3.032,2135,2.811,2136,1.895,2137,1.895,2138,1.895,2139,1.895]],["title/interfaces/SlicesConfig-1.html",[128,0.234,187,1.241,1963,2.08]],["body/interfaces/SlicesConfig-1.html",[3,0.109,4,0.133,5,0.097,6,0.085,11,0.682,18,0.503,19,0.716,40,1.013,41,1.039,43,0.01,44,0.958,45,0.607,47,0.988,55,1.119,56,1.038,69,0.702,71,2.2,75,0.007,80,0.007,85,1.013,86,1.45,99,0.27,104,0.262,127,2.445,128,0.476,129,0.172,132,0.253,133,1.039,138,1.094,140,1.213,159,1.244,160,1.181,181,1.812,194,1.331,195,0.812,208,1.399,209,1.399,210,1.331,211,0.856,213,1.434,215,1.434,255,2.031,258,2.653,259,1.331,320,1.399,336,1.092,361,2.362,477,1.331,521,1.471,522,2.433,603,2.087,671,3.089,673,3.389,674,4.9,675,3.089,677,2.865,678,1.509,679,2.865,680,2.696,681,2.027,682,1.97,683,2.544,687,3.857,688,3.413,689,3.413,690,1.509,691,1.673,692,3.556,693,3.857,694,3.413,696,2.696,697,2.218,698,4.185,699,3.089,700,3.827,701,3.413,702,3.413,705,3.413,706,3.24,713,3.857,772,2.955,835,1.365,1282,4.185,1963,4.468,1968,5.465,1990,5.357,1992,5.073,1998,4.636,2263,3.089,2398,4.16,2819,3.413,3030,3.614,3031,5.518,3032,4.566,3033,4.566,3034,4.566,3035,4.566,3036,4.566,3037,4.16,3038,4.566,3039,6.532,3040,6.532,3041,4.566,3042,5.897,3043,4.566,3044,5.897,3045,4.566,3046,4.566]],["title/components/SlicesInputComponent.html",[195,0.453,521,1.242]],["body/components/SlicesInputComponent.html",[3,0.073,4,0.089,5,0.095,6,0.13,11,0.791,12,1.274,18,0.337,19,0.543,25,1.338,32,2.672,35,0.646,38,1.901,40,0.994,41,1.019,42,1.242,43,0.01,44,1.154,45,0.666,46,0.898,47,0.969,52,1.065,55,1.519,56,1.025,69,0.895,71,1.543,75,0.005,76,2.398,80,0.005,85,1.292,86,1.521,99,0.205,104,0.176,127,2.398,128,0.326,129,0.131,132,0.278,133,0.697,138,0.831,140,1.089,141,0.663,159,1.008,160,1.12,181,1.777,187,1.73,195,0.786,196,0.962,197,1.306,198,1.012,199,1.122,200,1.122,201,1.093,207,0.987,208,1.372,209,1.372,210,2.3,211,1.152,212,0.871,213,1.407,215,1.407,218,1.76,255,1.855,258,2.655,259,1.698,299,1.543,306,1.698,307,1.019,308,0.871,320,0.939,336,1.071,361,2.209,401,1.216,402,1.876,403,2.654,406,1.988,410,1.586,411,0.915,415,1.76,416,1.065,423,1.443,429,2.829,431,1.806,436,2.245,438,1.536,439,1.536,443,1.488,446,2.319,447,1.4,450,1.698,451,1.828,452,0.751,453,1.76,455,1.098,456,2.425,459,0.939,463,2.574,470,1.76,471,1.76,472,3.582,476,0.554,477,1.806,478,1.122,479,2.134,480,1.122,481,1.122,482,1.012,483,1.122,484,0.987,485,1.939,486,1.012,487,1.122,488,1.407,489,1.939,490,1.012,491,1.065,492,1.122,493,1.012,494,1.122,495,1.012,496,0.962,497,1.122,498,1.012,499,1.122,500,1.012,501,1.038,502,1.122,503,1.012,504,1.093,505,0.987,506,1.122,507,1.012,508,1.641,509,0.987,510,1.012,511,1.012,512,1.939,513,1.012,514,1.518,515,1.641,516,0.987,517,1.012,518,0.987,519,0.85,520,1.122,521,1.876,522,2.409,523,1.012,524,1.122,525,1.012,526,1.122,527,1.038,528,1.122,529,1.012,530,1.338,531,1.012,532,1.48,533,1.012,534,1.122,535,1.012,536,1.372,537,1.122,538,1.012,539,1.122,540,1.122,571,3.475,603,1.4,614,2.494,671,2.073,673,1.76,674,4.133,675,3.03,677,2.572,678,1.012,679,2.176,680,2.663,681,1.36,682,1.321,683,2.284,687,3.783,688,3.348,689,3.957,690,1.48,691,1.939,692,3.498,693,3.783,694,3.348,696,2.42,697,2.176,698,4.397,699,3.03,700,3.588,701,3.348,702,3.348,705,2.29,706,2.174,713,3.783,717,2.574,718,1.73,719,1.828,726,3.957,727,3.063,728,2.425,729,3.063,730,3.063,731,2.174,732,1.828,733,2.425,734,2.174,735,2.425,736,1.828,737,2.425,738,3.063,739,2.791,740,2.587,741,2.425,742,5.294,743,2.741,744,3.783,745,3.063,746,2.29,747,2.791,750,2.29,751,2.29,772,1.983,835,1.338,1282,2.174,1963,4.189,1968,4.905,1990,4.744,1992,3.178,1998,3.757,2263,3.03,2398,4.08,2819,5.226,2868,3.063,3030,5.534,3031,4.919,3032,5.294,3033,5.294,3034,3.063,3035,4.479,3036,4.479,3037,4.08,3038,4.479,3039,5.294,3040,5.294,3041,3.063,3042,4.479,3043,3.063,3044,4.479,3045,5.824,3046,3.063,3047,5.083,3048,3.477,3049,3.477,3050,3.477,3051,5.083,3052,3.477,3053,3.477,3054,3.477,3055,3.477,3056,6.61,3057,5.083,3058,3.477]],["title/modules/SlicesInputModule.html",[541,0.643,2811,3.05]],["body/modules/SlicesInputModule.html",[3,0.131,4,0.161,5,0.117,6,0.103,43,0.01,75,0.008,80,0.008,99,0.361,104,0.316,129,0.161,132,0.236,211,0.799,325,1.773,426,1.604,476,0.995,521,2.572,522,1.729,541,0.918,543,1.773,544,1.818,545,2.537,546,1.914,547,1.818,548,2.537,559,2.365,560,1.773,562,2.016,566,2.304,570,4.648,571,3.283,572,3.121,573,2.443,756,5.013,757,2.702,758,2.125,759,5.596,760,4.648,761,5.245,762,4.356,763,4.113,764,3.416,765,6.036,766,5.013,2811,6.141,2819,4.113,3030,4.356,3059,5.502,3060,5.502,3061,5.502,3062,7.52]],["title/components/StageNavComponent.html",[195,0.453,523,1.273]],["body/components/StageNavComponent.html",[3,0.056,4,0.068,5,0.078,6,0.138,11,0.872,12,1.04,18,0.403,19,0.444,20,1.093,25,1.093,32,2.182,35,0.494,38,2.036,40,0.811,41,0.832,42,1.62,43,0.01,44,1.115,45,0.733,46,1.171,47,0.791,52,1.767,55,1.432,56,1.074,61,4.023,69,0.36,75,0.004,80,0.004,85,1.296,86,1.4,99,0.167,104,0.135,124,1.011,129,0.107,132,0.251,133,0.832,138,0.435,140,1.045,141,0.791,155,2.789,159,0.968,160,1.056,181,1.451,187,0.905,195,0.818,196,0.736,197,1.066,198,0.774,199,0.858,200,0.858,201,0.836,207,0.755,208,1.12,209,1.12,210,2.242,211,1.127,212,0.666,213,1.149,215,1.149,227,3.657,232,3.657,233,3.657,243,3.729,249,1.979,250,3.56,251,2.343,252,4.717,255,0.65,256,0.858,257,1.894,258,2.387,259,1.891,261,3.043,262,3.222,271,3.089,272,3.089,285,2.733,286,2.256,296,2.032,299,1.311,307,0.832,308,0.666,320,0.718,321,1.855,323,4.119,332,2.187,336,1.586,355,3.676,384,0.956,400,3.657,401,0.93,402,2.033,403,3.387,404,2.595,405,2.595,406,1.997,409,3.567,411,0.7,412,1.346,415,1.346,416,0.815,420,2.329,423,1.723,429,1.138,430,3.043,431,1.607,436,2.255,438,1.175,439,1.175,443,1.138,444,1.516,446,2.631,447,2.323,449,1.855,450,2.027,451,2.182,452,1.432,453,1.346,455,1.495,459,2.218,463,2.101,466,1.398,470,1.346,471,1.346,472,1.585,476,0.424,477,1.607,478,0.858,479,1.862,480,0.858,481,0.858,482,0.774,483,0.858,484,0.755,485,1.648,486,0.774,487,0.858,488,1.149,489,1.648,490,0.774,491,0.815,492,0.858,493,0.774,494,0.858,495,0.774,496,0.736,497,0.858,498,0.774,499,0.858,500,0.774,501,0.794,502,0.858,503,0.774,504,0.836,505,0.755,506,0.858,507,0.774,508,1.34,509,0.755,510,0.774,511,0.774,512,1.648,513,0.774,514,1.24,515,1.34,516,0.755,517,0.774,518,0.755,519,0.65,520,0.858,521,0.755,522,0.736,523,1.679,524,0.858,525,0.774,526,0.858,527,0.794,528,0.858,529,0.774,530,1.093,531,0.774,532,1.208,533,0.774,534,0.858,535,0.774,536,1.789,537,0.858,538,0.774,539,0.858,540,0.858,603,1.071,614,1.723,620,2.255,677,2.677,678,0.774,679,2.963,680,2.323,681,1.04,682,1.011,683,1.94,690,1.208,691,1.648,692,1.138,694,3.798,696,2.056,717,2.101,718,1.413,719,1.398,737,1.855,740,3.089,743,2.631,835,1.823,849,1.751,917,4.479,918,3.727,934,3.331,972,4.119,977,3.043,983,2.585,986,1.663,988,2.185,992,2.798,1038,3.542,1057,2.27,1107,5.844,1260,3.154,1307,6.632,1311,2.595,1318,2.92,1319,3.485,1341,2.343,1342,1.979,1380,1.979,1381,1.751,1556,3.798,1589,3.362,1638,3.606,1655,4.365,1665,3.56,1672,2.343,1699,2.27,1710,6.34,1766,1.454,1781,3.657,1785,1.454,1809,3.331,1810,3.331,1841,3.331,1845,5.153,2158,1.516,2263,1.585,2599,5.081,2839,5.153,2842,4.63,3063,6.236,3064,2.135,3065,3.657,3066,4.15,3067,4.15,3068,7.527,3069,5.104,3070,4.15,3071,5.104,3072,6.255,3073,5.104,3074,5.104,3075,4.15,3076,4.15,3077,5.767,3078,5.104,3079,5.104,3080,5.104,3081,5.767,3082,5.767,3083,2.659,3084,2.659,3085,4.15,3086,4.15,3087,5.104,3088,5.104,3089,4.497,3090,2.659,3091,2.659,3092,2.659,3093,4.15,3094,4.15,3095,5.104,3096,4.097,3097,5.84,3098,5.104,3099,5.104,3100,4.15,3101,2.659,3102,5.767,3103,4.15,3104,2.659,3105,2.659,3106,2.659,3107,4.15,3108,2.659,3109,4.15,3110,2.659,3111,2.659,3112,2.659,3113,2.659,3114,5.081,3115,5.767,3116,2.659,3117,2.659,3118,2.659,3119,2.659,3120,5.104,3121,2.659,3122,2.659,3123,2.659,3124,2.659,3125,2.659,3126,4.15,3127,2.659,3128,2.659,3129,2.659,3130,2.659,3131,2.659,3132,2.659,3133,2.659,3134,5.767,3135,4.15,3136,2.343,3137,2.659,3138,2.659,3139,5.104,3140,2.659,3141,2.659]],["title/modules/StageNavModule.html",[541,0.643,1102,3.05]],["body/modules/StageNavModule.html",[3,0.13,4,0.158,5,0.115,6,0.101,43,0.01,75,0.008,80,0.008,99,0.36,104,0.312,129,0.158,132,0.233,426,1.583,459,1.664,476,0.982,505,2.118,523,2.634,541,0.906,543,1.749,544,1.794,545,2.523,546,1.888,547,1.794,548,2.523,559,2.346,560,1.749,562,2.408,566,2.286,572,3.096,573,2.411,757,2.681,758,2.097,763,4.08,764,3.371,1102,6.222,1107,4.298,1352,6.573,1353,5.43,1696,4.059,1732,5.426,1864,5.988,1865,4.947,1870,4.947,1871,4.947,3063,4.586,3142,5.43,3143,5.43,3144,6.163,3145,5.43,3146,6.163,3147,7.46,3148,6.163,3149,6.163]],["title/modules/StoreModule.html",[541,0.643,1114,3.05]],["body/modules/StoreModule.html",[1,4.319,3,0.124,4,0.151,5,0.11,6,0.097,8,3.305,9,3.869,43,0.01,75,0.008,80,0.008,88,2.918,90,1.896,91,2.677,92,4.131,99,0.365,102,2.111,104,0.297,109,2.438,118,3.35,119,3.673,120,4.715,129,0.186,132,0.222,138,0.961,164,3.502,203,3.502,211,0.751,245,2.918,325,2.057,361,2.109,443,2.514,541,0.864,543,1.668,562,1.896,566,2.22,648,2.974,649,2.974,700,2.869,897,4.131,953,4.53,997,5.176,1114,5.053,1147,4.097,1402,4.372,1413,4.771,1703,4.097,1836,3.502,1910,4.097,1984,3.418,1985,2.869,1986,3.502,2158,3.35,2495,4.715,2756,4.372,2833,4.715,2931,4.715,3150,4.715,3151,5.874,3152,5.176,3153,5.874,3154,5.176,3155,7.422,3156,5.874,3157,5.176,3158,5.874,3159,5.874,3160,5.176,3161,4.715,3162,5.874,3163,5.874,3164,5.874,3165,5.874,3166,5.874,3167,5.874,3168,5.874,3169,5.874,3170,5.874,3171,5.874,3172,5.874,3173,5.176,3174,5.874,3175,5.176,3176,5.874,3177,5.874,3178,5.874,3179,5.874]],["title/interfaces/Tag.html",[12,1.096,128,0.281]],["body/interfaces/Tag.html",[3,0.131,4,0.16,5,0.117,6,0.102,8,2.839,11,0.819,12,2.204,18,0.604,19,0.802,43,0.01,45,0.805,69,1.132,70,4.34,71,2.069,75,0.008,77,3.891,80,0.009,84,4.34,115,5.509,116,3.891,128,0.482,129,0.207,139,5.104,142,5.306,154,3.58,155,3.503,157,5.306,188,4.34,194,1.598,277,2.365,402,2.13,1884,4.692,1885,3.799,1966,4.098,3180,4.631,3181,4.631,3182,5.482,3183,5.482]],["title/components/TagListComponent.html",[195,0.453,525,1.273]],["body/components/TagListComponent.html",[3,0.081,4,0.099,5,0.103,6,0.136,8,1.763,11,0.913,12,2.298,18,0.375,19,0.586,25,1.444,30,4.832,33,5.678,35,0.718,38,1.99,40,1.072,41,1.099,42,1.696,43,0.01,44,1.181,45,0.739,46,1.226,47,1.046,52,1.184,55,1.377,56,0.851,66,4.402,69,0.863,71,1.638,75,0.006,80,0.006,85,1.072,86,1.072,99,0.257,104,0.196,115,3.612,129,0.099,132,0.288,133,1.099,139,3.269,140,1.258,141,0.737,142,4.571,144,3.101,155,1.556,157,2.544,159,1.165,160,1.213,180,2.875,195,0.759,196,1.069,197,1.409,198,1.125,199,1.247,200,1.247,201,1.215,207,1.097,208,1.481,209,1.481,210,2.319,211,1.161,212,0.968,213,1.518,215,1.518,255,1.34,258,1.68,259,1.409,299,1.638,307,1.099,308,0.968,320,1.043,389,1.511,392,1.653,401,1.351,402,1.097,408,3.127,409,2.203,410,1.763,411,1.444,431,0.992,452,0.834,455,0.834,459,1.043,460,2.694,470,1.956,471,1.956,472,3.269,476,0.615,477,1.883,478,1.247,479,2.24,480,1.247,481,1.247,482,1.125,483,1.247,484,1.097,485,2.058,486,1.125,487,1.247,488,1.518,489,2.058,490,1.125,491,1.184,492,1.247,493,1.125,494,1.247,495,1.125,496,1.069,497,1.247,498,1.125,499,1.247,500,1.125,501,1.154,502,1.247,503,1.125,504,1.215,505,1.097,506,1.247,507,1.125,508,1.77,509,1.097,510,1.125,511,1.125,512,2.058,513,1.125,514,1.638,515,1.77,516,1.097,517,1.125,518,1.097,519,0.944,520,1.247,521,1.097,522,1.069,523,1.125,524,1.247,525,2.021,526,1.247,527,1.154,528,1.247,529,1.125,530,1.444,531,1.125,532,1.597,533,1.125,534,1.247,535,1.125,536,1.481,537,1.247,538,1.125,539,1.247,540,1.247,603,1.556,614,2.276,651,1.653,677,3.137,678,1.125,679,2.729,680,2.796,681,1.511,682,1.468,683,2.423,690,1.597,691,2.058,696,2.568,717,2.777,718,1.866,719,2.031,987,2.544,992,1.468,1248,3.127,1318,3.514,1495,3.429,1884,3.429,1885,3.228,2455,4.081,2522,3.404,2571,6.276,2821,6.144,3184,5.758,3185,3.404,3186,5.484,3187,6.376,3188,5.484,3189,5.484,3190,6.376,3191,6.376,3192,5.484,3193,3.863,3194,3.863,3195,5.484,3196,3.863,3197,4.402,3198,4.832,3199,5.484,3200,3.863,3201,5.484,3202,3.863,3203,4.832,3204,5.484,3205,3.863,3206,3.863,3207,3.863,3208,3.863,3209,3.863,3210,6.376,3211,3.863,3212,3.863,3213,4.832,3214,3.404,3215,3.863,3216,3.404,3217,3.404]],["title/modules/TagListModule.html",[541,0.643,2812,3.05]],["body/modules/TagListModule.html",[3,0.136,4,0.166,5,0.121,6,0.106,12,1.616,43,0.01,75,0.008,80,0.008,99,0.349,104,0.327,129,0.166,132,0.244,426,1.656,476,1.027,525,2.648,541,0.948,543,1.831,544,1.877,545,2.572,546,1.976,547,1.877,548,2.572,559,2.41,560,1.831,562,2.081,566,2.349,572,3.182,573,2.522,757,2.755,758,2.195,2812,6.18,2821,4.799,3184,4.498,3218,5.682,3219,5.682,3220,5.682,3221,6.449,3222,6.754,3223,5.682,3224,6.449]],["title/modules/TagSearchModule.html",[541,0.643,2813,3.05]],["body/modules/TagSearchModule.html",[3,0.131,4,0.16,5,0.117,6,0.103,12,1.563,43,0.01,75,0.008,80,0.008,99,0.361,104,0.316,129,0.16,132,0.236,426,1.602,476,0.993,527,2.706,541,0.917,543,1.771,544,1.816,545,2.536,546,1.911,547,1.816,548,2.536,559,2.363,560,1.771,562,2.013,566,2.303,570,4.642,571,3.279,572,3.119,573,2.44,757,2.7,758,2.123,759,5.592,760,4.642,765,6.032,1693,5.241,1694,4.351,2163,4.351,2176,6.621,2177,6.621,2813,6.139,2823,4.642,3184,4.351,3225,5.496,3226,5.496,3227,5.496,3228,6.237,3229,7.514,3230,6.237,3231,6.237]],["title/interfaces/TagSearchResult.html",[116,2.735,128,0.281]],["body/interfaces/TagSearchResult.html",[3,0.133,4,0.162,5,0.118,6,0.104,8,2.881,11,0.831,12,2.187,18,0.613,19,0.809,43,0.01,45,0.763,69,1.025,70,5.28,71,2.241,75,0.008,77,4.733,80,0.01,84,5.28,115,4.985,116,4.733,128,0.486,129,0.208,139,4.513,142,4.158,154,2.702,155,3.049,157,4.158,188,5.863,194,1.622,277,2.877,402,1.792,1884,3.948,1885,3.197,1966,4.985,3180,4.699,3181,4.699,3182,6.669,3183,6.669]],["title/modules/ThemingModule.html",[541,0.643,1115,3.05]],["body/modules/ThemingModule.html",[3,0.14,4,0.171,5,0.124,6,0.109,43,0.01,75,0.008,80,0.008,99,0.315,104,0.337,129,0.171,132,0.252,241,5.263,296,1.795,426,1.708,476,1.059,541,0.977,543,1.887,544,1.936,545,2.091,546,2.037,547,2.412,548,2.091,559,2.454,560,1.887,566,2.392,598,4.948,599,5.337,1115,6.158,3232,5.858,3233,5.858,3234,6.649,3235,7.805,3236,6.649,3237,6.649,3238,6.649]],["title/injectables/ThemingService.html",[0,1.34,241,2.607]],["body/injectables/ThemingService.html",[0,1.765,2,2.47,3,0.087,4,0.107,5,0.078,6,0.14,11,0.942,18,0.402,19,0.616,20,2.292,25,1.517,35,0.77,37,4.292,38,2.069,40,1.126,42,1.839,43,0.01,44,1.076,45,0.75,46,1.439,47,1.485,55,1.682,56,1.299,59,4.018,69,1.179,75,0.006,80,0.006,85,1.593,86,0.81,99,0.232,104,0.21,129,0.148,132,0.325,133,1.435,138,1.332,140,1.2,141,1.098,159,1.262,195,0.807,197,1.48,212,1.038,225,4.963,240,5.571,241,3.434,243,4.642,252,2.729,259,2.052,277,2.189,346,5.327,420,1.89,546,1.765,586,3.083,606,3.65,613,2.47,807,2.628,822,3.65,835,1.517,843,3.65,844,3.326,910,4.484,914,4.287,1129,3.083,1327,5.093,1345,5.075,1359,2.47,1418,4.475,1447,3.326,1496,4.624,1638,4.141,1889,2.47,1898,2.729,1899,2.729,2304,6.062,2705,5.075,3197,4.624,3198,6.861,3239,3.326,3240,5.76,3241,7.988,3242,5.76,3243,7.157,3244,7.157,3245,7.157,3246,5.76,3247,4.143,3248,4.143,3249,5.76,3250,8.145,3251,4.143,3252,7.522,3253,4.143,3254,5.76,3255,7.157,3256,4.143,3257,5.76,3258,5.075,3259,5.76,3260,4.143,3261,5.76,3262,4.143,3263,5.76,3264,4.143,3265,4.143,3266,4.143,3267,4.143,3268,4.143,3269,4.143,3270,4.143,3271,3.65,3272,3.65,3273,3.65,3274,4.143,3275,4.143,3276,4.143,3277,4.143,3278,4.143,3279,4.143,3280,4.143,3281,3.65,3282,4.143,3283,4.143,3284,5.76,3285,4.143,3286,4.143,3287,4.143,3288,4.143,3289,4.143,3290,4.143,3291,4.143,3292,4.143]],["title/components/ToggleButtonComponent.html",[195,0.453,529,1.273]],["body/components/ToggleButtonComponent.html",[3,0.068,4,0.083,5,0.09,6,0.137,11,0.756,12,1.204,15,1.435,18,0.313,19,0.514,20,2.085,25,1.265,32,2.526,35,0.599,38,2.011,40,0.94,41,0.963,42,1.175,43,0.01,44,1.059,45,0.648,46,0.849,47,0.916,48,1.435,52,0.987,55,1.599,56,1.109,65,2.123,69,0.778,75,0.005,80,0.005,85,1.332,86,1.332,90,1.551,99,0.257,104,0.163,112,0.938,129,0.083,132,0.27,133,1.277,138,0.94,140,0.871,141,0.614,159,1.069,160,0.915,195,0.806,196,0.892,197,1.234,198,0.938,199,1.04,200,1.04,201,1.013,204,2.644,205,2.91,207,0.915,208,1.297,209,1.297,210,2.285,211,1.149,212,0.807,213,1.33,215,1.33,224,4.63,229,3.226,246,3.484,247,3.484,255,0.788,256,2.556,257,2.907,259,1.234,262,3.059,276,3.005,277,1.826,286,1.956,296,1.551,299,2.285,307,0.963,308,0.807,310,3.593,311,3.005,320,0.87,336,1.436,359,1.921,397,2.015,401,1.127,402,1.364,406,1.26,409,1.837,411,0.848,412,1.631,416,0.987,420,2.622,421,5.072,423,1.995,427,2.74,428,2.839,429,2.057,431,0.828,433,4.026,438,1.423,439,1.423,441,5.737,442,5.737,443,3.257,444,1.837,450,2.347,452,1.376,453,2.433,455,1.544,459,0.87,466,2.526,476,0.513,477,1.75,478,1.04,479,2.056,480,1.04,481,1.04,482,0.938,483,1.04,484,0.915,485,1.855,486,0.938,487,1.04,488,1.33,489,1.855,490,0.938,491,0.987,492,1.04,493,1.984,494,1.04,495,0.938,496,0.892,497,1.04,498,0.938,499,1.04,500,0.938,501,0.962,502,1.04,503,0.938,504,1.013,505,0.915,506,1.04,507,0.938,508,1.551,509,0.915,510,0.938,511,0.938,512,1.855,513,0.938,514,1.435,515,1.551,516,0.915,517,0.938,518,0.915,519,0.788,520,1.04,521,0.915,522,0.892,523,0.938,524,1.04,525,0.938,526,1.04,527,0.962,528,1.04,529,1.855,530,2.303,531,0.938,532,1.399,533,0.938,534,1.04,535,0.938,536,1.297,537,1.04,538,0.938,539,1.04,540,1.04,603,1.298,678,0.938,690,1.399,697,2.057,718,1.635,736,1.694,743,1.47,777,4.613,780,3.362,783,1.47,784,4.277,787,2.865,788,3.857,789,5.114,794,2.526,795,2.807,796,3.352,799,3.157,803,3.165,804,3.576,805,3.576,835,1.794,840,2.398,849,4.196,850,5.36,858,2.586,860,2.398,866,2.839,988,1.379,1016,3.165,1024,3.857,1026,3.857,1027,3.857,1033,4.63,1038,3.059,1052,2.586,1057,1.762,1295,6.665,1338,2.839,1379,2.586,1381,4.488,1495,3.005,1532,2.839,1537,2.839,1538,5.063,1539,5.063,1558,4.234,1586,2.398,1592,4.234,2686,2.586,2690,5.063,2691,4.234,3293,7.315,3294,4.805,3295,3.222,3296,4.805,3297,7.147,3298,4.805,3299,4.805,3300,5.747,3301,3.222,3302,3.222,3303,3.222,3304,3.222,3305,3.222,3306,3.222,3307,3.222,3308,3.222,3309,3.222,3310,5.747,3311,5.747,3312,3.222,3313,3.222,3314,3.222,3315,3.222,3316,3.222,3317,3.222,3318,3.222,3319,3.222,3320,4.805,3321,3.222,3322,4.805,3323,3.222,3324,3.222,3325,3.222]],["title/interfaces/User.html",[128,0.281,332,1.529]],["body/interfaces/User.html",[3,0.088,4,0.107,5,0.078,6,0.069,16,1.631,18,0.405,19,0.619,20,1.524,22,1.419,23,1.631,35,0.775,37,3.506,43,0.01,45,0.525,56,1.17,69,1.18,75,0.006,80,0.006,85,0.815,88,2.331,91,2.138,99,0.334,104,0.211,111,2.281,112,1.214,128,0.371,129,0.149,132,0.158,133,1.16,138,1.086,140,1.049,141,0.795,159,0.971,160,1.361,181,1.458,194,1.071,195,0.688,196,1.154,202,3.103,203,2.486,204,1.731,205,2.93,206,3.811,208,1.126,209,1.126,210,1.707,211,0.85,212,1.045,213,1.154,214,3.347,215,1.154,216,3.347,217,3.347,218,2.93,219,4.155,220,4.155,221,3.165,222,2.908,223,3.449,224,4.155,225,4.376,226,3.347,229,2.111,230,2.746,231,3.347,235,3.347,237,5.334,238,4.645,239,4.645,240,2.908,241,3.449,242,3.347,243,3.449,244,2.323,245,2.331,246,2.281,247,3.165,250,2.908,252,2.746,254,4.645,255,1.624,256,2.145,257,1.903,258,1.773,259,1.486,260,4.306,261,3.449,262,2.477,264,3.347,266,3.347,267,3.347,268,2.746,269,3.347,270,3.103,271,3.103,272,3.103,273,3.347,274,3.347,276,2.607,277,1.585,280,2.378,281,3.347,282,2.607,283,4.945,284,4.645,285,4.376,286,2.443,288,3.347,291,3.347,294,3.347,296,1.794,298,2.138,299,1.071,300,3.135,302,2.378,303,2.111,305,2.908,306,2.037,307,0.836,308,1.045,309,2.281,310,3.618,311,2.607,312,1.842,314,3.347,316,3.347,320,1.126,321,2.908,322,3.103,323,2.746,324,3.347,325,1.184,326,3.103,327,3.347,328,2.908,329,3.103,330,2.486,331,2.378,332,2.023,333,3.774,334,3.774,335,2.908,336,1.219,337,3.347,338,3.347,339,4.645,340,3.347,341,3.347,342,3.347,343,3.347,344,4.645,345,3.347,346,3.103,347,3.347,348,3.347,349,2.607,350,3.347,351,3.347,352,2.281,353,3.103,354,3.103,355,1.967,356,3.347,357,3.347,358,3.347,359,2.486,360,3.347,361,1.214,362,3.347,363,3.347,364,2.908,365,3.347,366,3.347,367,3.347,368,3.347,369,3.347,370,3.347,371,6.549,372,3.347,373,5.334,374,3.347,375,6.423,376,3.347,377,3.103,378,3.347,379,5.955,380,2.111,381,3.347,382,3.951,383,3.347,384,2.079,385,4.645,386,4.563,387,2.908,388,3.347,389,2.263,390,4.645,391,2.378,392,2.477,393,4.645,394,3.347,395,3.103,396,3.347,397,2.607]],["title/interfaces/UserName.html",[128,0.281,2149,3.255]],["body/interfaces/UserName.html",[3,0.11,4,0.134,5,0.098,6,0.086,11,0.688,18,0.508,19,0.72,20,1.377,40,1.022,41,1.048,43,0.01,44,1.291,45,0.611,47,0.997,48,2.011,56,0.811,69,1.147,75,0.007,80,0.007,86,1.316,99,0.3,104,0.265,128,0.336,129,0.173,132,0.255,133,1.048,138,0.855,140,1.475,141,0.997,159,1.25,160,1.186,194,1.343,195,0.814,208,1.412,209,1.412,210,1.343,211,0.861,213,1.448,215,1.448,258,2.657,259,1.343,320,1.412,332,2.604,333,4.379,334,4.379,361,1.96,477,1.343,509,1.484,571,3.54,603,2.106,671,3.117,677,2.882,678,1.523,679,2.882,680,2.712,681,2.046,682,1.988,683,2.559,688,3.444,689,3.444,690,1.523,691,1.688,696,2.712,697,2.238,698,4.21,699,3.117,700,3.84,704,3.647,705,3.444,706,3.27,708,3.892,1138,2.488,1318,3.409,1319,2.749,1766,4.073,1873,3.444,2140,3.892,2141,4.607,2142,4.607,2143,4.607,2144,4.607,2145,4.607,2147,4.607,2149,6.388,2151,4.607,2153,3.892,2154,6.561,2155,5.932,2156,5.932,2158,4.246,2162,4.607,2163,3.647,2164,6.312,2165,5.932,2166,4.607,2167,4.607,2168,4.607,2169,5.932,2170,4.607,2171,4.607,2172,4.607]],["title/components/VideoModalComponent.html",[195,0.453,531,1.273]],["body/components/VideoModalComponent.html",[3,0.083,4,0.101,5,0.104,6,0.134,11,0.517,12,1.39,18,0.381,19,0.593,20,1.461,25,1.461,35,1.032,38,1.964,40,1.085,41,1.112,42,0.96,43,0.01,44,1.126,45,0.634,46,0.694,50,3.035,52,1.7,55,1.39,56,1.188,69,0.532,75,0.006,80,0.006,85,1.085,86,1.085,99,0.26,102,1.994,104,0.199,129,0.101,132,0.29,138,0.642,141,0.749,160,1.025,195,0.847,196,1.087,197,1.425,198,1.144,199,1.268,200,1.268,201,1.235,204,2.303,206,4.238,207,1.115,208,1.498,209,1.498,210,2.322,211,1.162,212,0.984,213,1.536,215,1.536,230,4.605,255,1.356,256,1.791,259,1.425,299,1.653,307,1.112,308,2.136,312,2.451,320,1.06,361,2.147,401,1.373,402,1.115,406,2.171,408,2.24,410,1.792,411,1.461,413,2.065,416,2.143,418,3.258,419,2.587,420,1.792,421,2.923,423,1.63,429,2.993,430,2.342,431,1.425,432,5.144,438,1.735,439,1.735,443,1.681,444,2.24,450,1.918,452,0.848,453,1.989,455,1.199,459,1.06,466,2.065,470,1.989,471,1.989,476,0.626,477,1.894,478,1.268,479,2.257,480,1.268,481,1.268,482,1.144,483,1.268,484,1.115,485,2.077,486,1.144,487,1.268,488,1.536,489,2.077,490,1.144,491,1.204,492,1.268,493,1.144,494,1.268,495,1.144,496,1.087,497,1.268,498,1.144,499,1.268,500,1.144,501,1.173,502,1.268,503,1.144,504,1.235,505,1.115,506,1.268,507,1.144,508,1.791,509,1.115,510,1.144,511,1.144,512,2.077,513,1.144,514,1.657,515,1.791,516,1.115,517,1.144,518,1.115,519,0.96,520,1.268,521,1.115,522,1.087,523,1.144,524,1.268,525,1.144,526,1.268,527,1.173,528,1.268,529,1.144,530,1.461,531,2.036,532,2.57,533,1.144,534,1.268,535,1.144,536,1.498,537,1.268,538,1.144,539,1.268,540,1.268,651,1.681,678,1.144,690,1.616,691,2.077,718,1.889,743,2.532,758,1.337,987,3.655,992,1.493,995,3.308,998,3.153,999,2.74,1073,3.461,1109,5.772,1286,3.164,1287,4.13,1342,4.788,1388,3.87,1589,3.655,1889,2.342,2384,5.042,2385,5.144,2392,5.489,2415,2.148,2445,2.74,2447,4.13,2453,3.461,2751,5.165,2760,4.454,2762,3.461,2763,3.153,2770,3.153,2772,4.889,3096,6.317,3271,6.745,3326,5.7,3327,6.745,3328,6.992,3329,3.928,3330,6.434,3331,3.928,3332,3.928,3333,5.549,3334,5.549,3335,5.613,3336,5.613,3337,4.889,3338,5.549,3339,5.549,3340,3.928,3341,3.928,3342,3.928,3343,5.549,3344,3.928,3345,3.928,3346,3.928,3347,3.928,3348,3.928,3349,3.928,3350,5.669,3351,3.928]],["title/components/VideoModalLauncherComponent.html",[195,0.453,533,1.273]],["body/components/VideoModalLauncherComponent.html",[3,0.088,4,0.108,5,0.109,6,0.129,11,0.765,12,1.455,18,0.564,19,0.621,25,1.53,35,0.78,38,1.847,40,1.136,41,1.165,42,1.025,43,0.01,44,1.147,45,0.653,46,0.741,48,1.735,52,1.285,55,0.906,56,0.901,69,0.568,75,0.006,76,1.978,80,0.006,85,1.303,86,1.303,99,0.269,102,2.088,104,0.212,128,0.373,129,0.108,132,0.296,141,0.8,160,1.146,187,1.427,195,0.859,196,1.161,197,1.492,198,1.221,199,1.354,200,1.354,201,1.319,207,1.19,208,1.568,209,1.568,210,2.333,211,1.167,212,1.051,213,1.608,215,1.608,255,1.025,256,1.354,258,2.205,259,1.492,296,1.568,299,1.712,307,1.442,308,2.273,320,1.132,332,2.031,336,0.884,361,1.221,384,1.507,401,1.466,402,1.19,403,2.566,404,2.622,405,2.622,410,1.913,411,1.53,412,2.123,416,2.042,420,1.913,433,1.978,436,2.566,438,1.852,439,1.852,443,1.795,446,2.65,447,1.689,451,3.054,452,1.255,455,0.906,459,1.132,463,2.123,466,2.205,476,0.668,477,1.941,478,1.354,479,2.322,480,1.354,481,1.354,482,1.221,483,1.354,484,1.19,485,2.151,486,1.221,487,1.354,488,1.608,489,2.151,490,1.221,491,1.285,492,1.354,493,1.221,494,1.354,495,1.221,496,1.161,497,1.354,498,1.221,499,1.354,500,1.221,501,1.252,502,1.354,503,1.221,504,1.319,505,1.19,506,1.354,507,1.221,508,1.875,509,1.19,510,1.221,511,1.221,512,2.151,513,1.221,514,1.735,515,1.875,516,1.19,517,1.221,518,1.19,519,1.025,520,1.354,521,1.19,522,1.161,523,1.221,524,1.354,525,1.221,526,1.354,527,1.252,528,1.354,529,1.221,530,1.895,531,1.691,532,2.581,533,2.095,534,1.354,535,1.221,536,1.568,537,1.354,538,1.221,539,1.354,540,1.354,600,4.052,603,1.689,614,2.411,678,1.221,690,1.691,691,2.151,718,1.977,731,2.622,734,2.622,983,2.941,992,2.208,998,4.663,1109,5.278,1110,5.817,1286,3.313,1388,4.052,1394,5.018,1785,3.645,2415,2.294,2450,3.366,2451,5.776,2479,2.925,3326,5.452,3352,3.695,3353,5.809,3354,8.397,3355,6.665,3356,5.809,3357,7.195,3358,5.809,3359,5.809,3360,4.194,3361,5.809,3362,4.194,3363,4.194,3364,5.809,3365,5.809,3366,4.194,3367,4.194,3368,4.194]],["title/modules/VideoModalLauncherModule.html",[541,0.643,1103,3.05]],["body/modules/VideoModalLauncherModule.html",[3,0.135,4,0.165,5,0.12,6,0.106,43,0.01,75,0.008,80,0.008,99,0.341,104,0.326,129,0.165,132,0.243,308,2.047,426,1.652,476,1.025,532,1.873,533,2.648,541,0.946,543,1.826,544,1.873,545,2.57,546,1.971,547,1.873,548,2.57,559,2.407,560,1.826,562,2.076,566,2.345,572,3.177,573,2.516,757,2.751,758,2.189,1103,6.177,1109,4.236,1110,4.787,3326,4.487,3369,5.667,3370,5.667,3371,5.667,3372,6.432,3373,6.432]],["title/modules/VideoModalModule.html",[541,0.643,3374,3.255]],["body/modules/VideoModalModule.html",[3,0.134,4,0.163,5,0.119,6,0.104,43,0.01,75,0.008,80,0.008,99,0.353,104,0.322,129,0.163,132,0.24,426,1.632,476,1.012,531,2.644,532,1.85,541,0.934,543,1.803,544,1.85,545,2.556,546,1.947,547,1.85,548,2.556,559,2.389,560,1.803,562,2.051,566,2.328,572,3.154,573,2.485,757,2.73,758,2.162,1109,5.004,2415,3.475,2478,5.1,2479,4.431,2480,6.099,3326,4.431,3335,5.1,3374,6.574,3375,5.597,3376,5.597,3377,5.597,3378,7.598,3379,5.597]],["title/interfaces/VisibilityItem.html",[128,0.281,1302,2.299]],["body/interfaces/VisibilityItem.html",[3,0.13,4,0.159,5,0.116,6,0.102,11,0.813,18,0.6,19,0.799,43,0.01,44,1.242,45,0.775,46,1.474,69,1.208,71,2.23,75,0.008,76,3.525,80,0.008,86,1.461,128,0.479,129,0.159,154,3.716,194,1.587,303,3.783,336,1.692,352,4.749,361,1.799,459,2.017,536,1.668,835,1.967,988,3.716,1269,4.618,1302,3.928,1327,4.671,1785,4.564,3380,5.443,3381,5.443,3382,6.582]],["title/components/VisibilityMenuComponent.html",[195,0.453,535,1.273]],["body/components/VisibilityMenuComponent.html",[3,0.059,4,0.072,5,0.081,6,0.134,11,0.928,12,1.08,18,0.575,19,0.461,25,1.135,35,0.519,38,1.973,40,0.843,41,0.864,42,1.653,43,0.01,44,1.142,45,0.715,46,1.195,47,0.822,52,0.855,55,1.648,56,1.223,69,0.713,71,1.995,75,0.005,76,1.317,80,0.005,85,0.843,86,1.594,99,0.212,104,0.141,129,0.072,132,0.256,133,0.864,138,0.705,140,1.073,141,0.532,154,3.116,159,1.222,160,1.077,181,1.507,187,2.015,195,0.663,196,0.773,197,1.107,198,0.813,199,0.901,200,0.901,201,0.878,207,0.793,208,1.164,209,1.164,210,2.254,211,1.132,212,0.7,213,1.193,215,1.193,255,0.682,256,1.699,257,1.967,258,1.613,259,1.107,280,2.458,296,1.164,299,1.352,303,2.182,307,0.864,308,0.7,320,0.754,332,0.976,355,2.033,364,3.672,384,1.003,389,1.092,401,0.976,402,1.224,403,2.615,404,1.746,405,1.746,406,1.686,408,3.002,409,3.002,411,0.735,415,1.414,416,1.613,419,1.839,420,1.274,423,3.223,425,3.672,426,1.643,429,1.195,430,1.664,431,1.643,436,1.233,438,1.904,439,1.904,443,1.845,444,1.592,446,1.274,447,3.216,449,1.947,450,2.571,452,1.279,453,2.666,455,0.931,456,4.462,459,0.754,461,2.839,466,2.266,467,4.226,468,2.059,469,3.672,476,0.445,477,1.643,478,0.901,479,1.911,480,0.901,481,0.901,482,0.813,483,0.901,484,0.793,485,1.699,486,0.813,487,0.901,488,1.193,489,1.699,490,0.813,491,0.855,492,0.901,493,0.813,494,0.901,495,0.813,496,0.773,497,0.901,498,0.813,499,0.901,500,0.813,501,0.834,502,0.901,503,0.813,504,0.878,505,0.793,506,0.901,507,0.813,508,1.391,509,0.793,510,0.813,511,0.813,512,1.699,513,0.813,514,1.287,515,1.391,516,0.793,517,0.813,518,0.793,519,0.682,520,0.901,521,0.793,522,0.773,523,0.813,524,0.901,525,0.813,526,0.901,527,0.834,528,0.901,529,0.813,530,1.135,531,0.813,532,1.255,533,0.813,534,0.901,535,1.724,536,2.311,537,0.901,538,0.813,539,0.901,540,0.901,560,0.793,603,1.125,614,1.789,677,2.738,678,0.813,679,2.253,680,2.385,681,1.092,682,1.061,683,2.001,690,1.255,691,1.699,696,2.121,697,1.845,702,3.899,717,2.182,718,1.467,719,1.468,726,2.839,734,1.746,735,1.947,736,2.266,737,3.006,807,1.967,870,2.9,914,3.208,986,1.746,987,1.839,988,3.679,992,2.001,995,2.569,999,3.006,1057,2.357,1233,1.947,1248,1.592,1269,4.713,1272,1.746,1302,4.245,1311,4.228,1318,3.863,1319,3.112,1325,3.006,1326,3.899,1327,4.228,1342,2.078,1378,3.208,1381,2.839,1382,3.006,1556,2.839,1699,1.527,1710,5.658,1782,2.695,1785,3.981,1787,3.672,1811,5.216,1824,2.46,1840,2.241,1845,6.167,1846,1.839,1877,6.068,1989,3.208,2153,2.078,2563,4.761,2564,3.798,2966,4.226,3136,2.46,3203,2.46,3383,5.687,3384,2.46,3385,5.265,3386,4.31,3387,4.31,3388,5.92,3389,4.31,3390,5.92,3391,4.31,3392,3.798,3393,4.31,3394,5.265,3395,4.31,3396,2.792,3397,2.792,3398,2.792,3399,4.31,3400,4.31,3401,2.792,3402,2.792,3403,4.31,3404,4.31,3405,4.31,3406,4.31,3407,2.792,3408,3.798,3409,2.792,3410,4.31,3411,2.792,3412,3.798,3413,4.31,3414,2.792,3415,4.31,3416,4.31,3417,2.792,3418,7.883,3419,2.792,3420,2.46,3421,5.92,3422,2.792,3423,2.792,3424,2.792,3425,6.762,3426,5.265,3427,4.31,3428,5.92,3429,2.792,3430,2.792,3431,5.265,3432,2.792,3433,2.792,3434,2.792,3435,2.792,3436,2.792,3437,2.792,3438,2.792,3439,2.792,3440,2.792]],["title/modules/VisibilityMenuModule.html",[541,0.643,1859,3.05]],["body/modules/VisibilityMenuModule.html",[3,0.135,4,0.165,5,0.12,6,0.105,43,0.01,75,0.008,80,0.008,99,0.353,104,0.324,129,0.165,132,0.242,211,0.82,325,1.819,426,1.646,476,1.021,535,2.646,536,1.73,541,0.942,543,1.819,544,1.866,545,2.566,546,1.964,547,1.866,548,2.566,559,2.402,560,1.819,562,2.068,566,2.34,572,3.17,573,2.507,757,2.745,758,2.181,761,5.327,762,4.47,1859,6.172,1875,6.729,1877,4.769,3383,4.47,3441,5.646,3442,5.646,3443,5.646,3444,6.408,3445,6.408]],["title/components/VisibilityToggleComponent.html",[195,0.453,538,1.273]],["body/components/VisibilityToggleComponent.html",[3,0.076,4,0.093,5,0.098,6,0.132,11,0.69,12,1.314,15,2.014,18,0.352,19,0.561,25,1.381,35,0.675,38,1.924,40,1.025,41,1.051,42,0.887,43,0.01,44,1.1,45,0.697,46,0.641,47,1,52,1.112,55,0.784,56,0.813,69,0.71,75,0.006,80,0.006,85,1.399,86,1.503,99,0.212,104,0.184,129,0.093,132,0.282,140,1.297,141,1.364,155,3.003,159,0.609,160,1.139,181,1.834,195,0.831,196,1.004,197,1.347,198,1.056,199,1.171,200,1.171,201,1.141,207,1.03,208,1.416,209,1.416,210,2.308,211,1.156,212,0.909,213,1.452,215,1.452,255,1.282,256,1.171,258,2.285,259,1.347,277,1.993,280,2.99,286,2.295,299,1.581,307,1.051,308,0.909,320,0.98,332,1.834,336,1.105,401,1.269,402,1.915,403,2.979,406,2.408,407,1.341,409,2.069,410,2.392,411,1.381,413,1.908,415,3.118,416,2.067,418,2.316,420,1.656,423,2.176,425,2.531,426,0.932,429,3.062,430,2.163,431,1.581,434,2.39,435,3.279,436,3.16,438,2.72,439,2.72,443,2.244,444,2.069,446,2.809,447,2.48,448,3.453,450,3.294,452,1.33,453,2.655,455,1.133,459,0.98,460,3.657,463,3.118,466,1.908,470,1.837,471,1.837,472,3.67,476,0.578,477,1.838,478,1.171,479,2.177,480,1.171,481,1.171,482,1.056,483,1.171,484,1.03,485,1.987,486,1.056,487,1.171,488,1.452,489,1.987,490,1.056,491,1.112,492,1.171,493,1.056,494,1.171,495,1.056,496,1.004,497,1.171,498,1.056,499,1.171,500,1.056,501,1.084,502,1.171,503,1.056,504,1.141,505,1.03,506,1.171,507,1.056,508,1.692,509,1.03,510,1.056,511,1.056,512,1.987,513,1.056,514,1.566,515,1.692,516,1.03,517,1.056,518,1.03,519,0.887,520,1.171,521,1.03,522,1.004,523,1.056,524,1.171,525,1.056,526,1.171,527,1.084,528,1.171,529,1.056,530,2.274,531,1.056,532,1.527,533,1.056,534,1.171,535,1.056,536,2.385,537,1.171,538,1.964,539,1.171,540,1.171,603,1.462,614,2.176,677,2.635,678,1.056,679,2.244,680,2.717,681,1.419,682,1.379,683,2.34,690,1.527,691,1.987,694,3.453,696,2.48,717,3.415,718,1.785,719,1.908,728,2.531,732,1.908,736,1.908,743,1.656,835,1.381,882,2.701,988,1.553,992,1.379,1042,2.701,1246,4.62,1272,2.269,1318,2.655,1319,2.757,1325,3.657,1380,2.701,1381,2.39,1556,3.453,1655,3.453,1697,2.913,1699,2.868,1700,5.425,1701,4.62,1703,5.2,1707,3.197,1711,3.197,1730,2.913,1784,4.209,1785,3.368,1809,4.209,1810,4.209,1846,3.453,1847,2.913,1879,5.968,2437,3.197,2839,3.902,2851,4.209,2870,3.197,3213,4.62,3214,3.197,3216,3.197,3217,3.197,3383,5.594,3392,6.569,3420,3.197,3446,5.244,3447,5.244,3448,5.244,3449,7.154,3450,6.157,3451,5.244,3452,3.629,3453,5.244,3454,3.629,3455,6.157,3456,3.629,3457,3.629,3458,4.62,3459,3.629,3460,3.629,3461,3.629,3462,3.629,3463,3.629,3464,5.244,3465,3.629]],["title/modules/VisibilityToggleModule.html",[541,0.643,1860,3.05]],["body/modules/VisibilityToggleModule.html",[3,0.135,4,0.165,5,0.12,6,0.106,43,0.01,75,0.008,80,0.008,99,0.349,104,0.326,129,0.165,132,0.243,426,1.652,476,1.025,536,1.737,538,2.648,541,0.946,543,1.826,544,1.873,545,2.57,546,1.971,547,1.873,548,2.57,559,2.407,560,1.826,562,2.076,566,2.345,572,3.177,573,2.516,757,2.751,758,2.189,1736,5.667,1739,5.667,1860,6.177,1879,4.787,3222,6.744,3223,5.667,3383,4.487,3466,5.667,3467,5.667,3468,5.667]],["title/interfaces/XYZTriplet.html",[128,0.281,1965,2.494]],["body/interfaces/XYZTriplet.html",[0,1.152,3,0.049,4,0.06,5,0.044,6,0.039,8,1.071,11,0.309,15,2.048,16,0.918,18,0.228,19,0.402,20,1.805,22,2.407,23,0.918,29,1.037,35,0.436,37,2.875,40,0.459,41,0.471,43,0.01,44,1.012,45,0.695,47,0.717,48,0.701,49,1.399,50,1.284,53,4.085,56,1.244,65,1.037,69,0.982,71,1.208,75,0.004,80,0.004,88,0.946,90,2.027,91,1.389,96,3.283,99,0.317,102,1.351,104,0.119,105,2.473,106,1.661,107,1.037,108,1.037,109,0.974,112,0.683,113,1.609,114,0.844,119,1.468,121,1.515,122,1.515,123,0.918,124,0.892,125,1.471,127,1.774,128,0.302,129,0.17,131,1.005,132,0.089,133,1.374,138,1.333,140,1.315,141,0.717,148,3.207,154,2.934,155,1.895,159,1.334,160,1.298,161,1.037,162,1.107,172,1.546,173,1.546,176,1.637,181,0.821,183,1.637,194,0.603,211,0.481,244,1.315,245,1.515,255,1.535,256,2.341,268,2.477,280,1.339,286,2.004,296,1.452,298,2.989,300,3.666,302,1.339,303,1.189,307,0.754,325,0.666,336,0.991,352,2.057,361,1.566,384,2.792,389,3.039,392,3.326,402,0.666,407,1.738,411,1.417,431,1.761,437,2.298,447,1.515,452,1.162,455,1.162,459,0.634,496,1.826,519,1.729,522,1.041,536,0.634,620,1.661,668,3.22,675,1.399,680,1.515,681,0.918,682,0.892,683,0.892,686,2.805,692,2.014,696,0.946,697,3.281,700,1.146,776,1.284,783,2.866,807,2.866,835,0.99,870,2.237,917,4.422,918,1.904,955,3.098,965,4.932,966,3.877,968,1.546,969,1.546,970,1.546,972,2.477,977,1.399,988,2.303,1038,3.401,1138,1.389,1248,2.683,1260,1.284,1269,1.234,1297,2.942,1300,3.752,1302,3.469,1357,2.351,1360,3.281,1361,3.896,1362,3.436,1363,3.22,1366,2.686,1410,1.189,1782,2.942,1783,2.623,1785,3.436,1786,4.106,1787,2.623,1797,1.747,1812,1.399,1836,3.509,1885,1.904,1886,3.868,1891,1.146,1923,2.351,1955,1.546,1956,1.546,1957,1.884,1958,3.745,1959,4.137,1960,4.381,1961,4.381,1962,4.381,1963,3.91,1964,4.657,1965,4.226,1966,1.546,1967,3.019,1968,4.106,1969,1.904,1970,2.351,1971,2.799,1972,1.468,1973,1.468,1974,1.884,1975,1.747,1976,1.884,1977,1.546,1978,1.884,1979,1.468,1980,2.242,1981,1.884,1982,1.884,1983,1.637,1984,1.774,1985,1.146,1986,1.399,1987,1.339,1988,1.339,1989,2.799,1990,2.942,1991,1.884,1992,2.351,1993,1.747,1994,1.884,1995,1.884,1996,1.884,1997,2.942,1998,2.351,1999,4.969,2000,1.884,2001,1.884,2002,1.884,2003,1.884,2004,1.884,2005,1.884,2006,1.884,2007,1.884,2008,1.884,2009,1.884,2010,1.884,2011,1.884,2012,1.884,2013,1.884,2014,1.884,2015,1.884,2016,1.884,2017,1.884,2018,1.884,2019,1.884,2020,1.884,2021,1.884,2022,1.884,2023,1.884,2024,1.884,2025,1.884,2026,1.747,2027,1.884,2028,1.884,2029,1.546,2030,1.637,2031,1.546,2032,1.884,2033,1.884,2034,1.884,2035,5.296,2036,3.019,2037,1.884,2038,4.319,2039,1.884,2040,3.019,2041,3.776,2042,1.884,2043,5.164,2044,1.884,2045,1.884,2046,1.884,2047,1.884,2048,1.884,2049,1.884,2050,1.884,2051,1.884,2052,1.884,2053,1.884,2054,1.884,2055,1.884,2056,1.884,2057,1.884,2058,1.884,2059,1.884,2060,1.884,2061,1.884,2062,3.776,2063,4.319,2064,1.884,2065,1.884,2066,1.884,2067,1.884,2068,1.884,2069,1.884,2070,1.884,2071,1.884,2072,1.884,2073,3.019,2074,1.884,2075,1.884,2076,1.884,2077,1.884,2078,1.884,2079,1.884,2080,1.884,2081,1.884,2082,1.884,2083,1.884,2084,1.884,2085,1.884,2086,1.884,2087,1.884,2088,1.884,2089,3.019,2090,1.399,2091,1.637,2092,1.884,2093,1.546,2094,1.637,2095,3.019,2096,3.281,2097,3.019,2098,2.242,2099,3.019,2100,1.884,2101,1.884,2102,1.884,2103,1.884,2104,1.884,2105,1.884,2106,1.884,2107,1.468,2108,1.884,2109,1.884,2110,1.884,2111,1.884,2112,1.884,2113,1.884,2114,1.884,2115,1.884,2116,1.884,2117,1.884,2118,1.884,2119,2.242,2120,1.884,2121,1.884,2122,1.884,2123,1.399,2124,1.884,2125,4.319,2126,1.884,2127,1.399,2128,1.884,2129,1.884,2130,1.884,2131,1.884,2132,1.884,2133,1.884,2134,3.019,2135,2.799,2136,1.884,2137,1.884,2138,1.884,2139,1.884]],["title/changelog.html",[2123,2.174,3469,2.928,3470,2.928]],["body/changelog.html",[3,0.132,5,0.039,8,1.564,19,0.224,24,4.476,38,0.512,43,0.008,45,0.19,46,0.37,48,1.024,50,2.751,59,2.39,60,1.46,71,0.538,74,1.68,75,0.004,77,4.844,80,0.007,83,2.551,85,0.409,90,2.527,102,1.994,123,2.461,125,1.341,128,0.421,137,1.46,139,5.414,140,1.298,141,0.959,142,2.257,154,0.896,167,1.379,181,1.759,187,1.166,194,0.538,195,0.521,197,0.88,199,0.676,201,0.658,207,1.428,210,0.88,211,1.098,212,0.524,225,1.874,240,1.46,244,0.732,255,1.064,256,0.676,257,0.955,259,0.538,270,1.558,277,2.265,282,1.309,285,2.257,298,3.076,302,4.366,303,1.735,305,2.39,306,2.911,307,0.872,308,0.524,312,0.925,325,0.594,332,2.376,355,1.617,361,2.4,377,4.886,380,1.06,401,0.732,402,1.575,409,1.194,413,2.645,416,0.641,427,2.482,433,1.617,437,2.457,443,0.896,448,1.379,452,0.452,455,0.74,459,1.358,474,2.257,491,0.641,496,0.949,501,0.625,530,0.902,532,0.609,544,1.465,547,0.609,571,1.101,577,2.143,582,3.925,600,4.877,608,6.07,616,1.309,644,3.441,645,3.765,653,2.551,674,4.723,682,0.796,683,0.796,686,3.75,697,2.55,702,5.398,726,3.313,744,1.558,772,1.194,804,2.551,821,1.46,826,1.68,864,1.309,865,2.38,913,1.674,914,1.558,917,3.726,918,3.923,934,2.751,937,4.889,944,1.844,955,2.257,958,1.68,983,2.203,984,1.379,985,2.39,988,0.896,990,1.558,995,1.248,1026,1.68,1031,1.68,1038,1.467,1084,1.309,1091,1.46,1095,1.145,1140,1.844,1141,1.558,1144,1.68,1147,3.035,1148,1.844,1153,1.379,1154,1.68,1174,2.594,1209,1.68,1216,1.68,1217,1.68,1269,1.101,1283,4.156,1284,1.46,1285,1.68,1286,2.482,1300,2.39,1308,2.751,1311,2.143,1325,4.156,1326,1.379,1327,2.721,1346,1.844,1361,1.802,1366,2.532,1384,3.02,1392,4.454,1455,1.68,1496,2.751,1511,2.751,1637,1.844,1653,1.844,1655,1.379,1665,1.46,1667,1.558,1668,5.25,1709,1.844,1713,3.02,1729,3.02,1766,1.145,1771,1.844,1782,2.143,1783,3.508,1784,1.68,1786,3.508,1835,2.751,1836,2.594,1837,3.02,1845,1.558,1846,1.379,1887,1.379,1891,2.457,1896,1.46,1918,1.46,1931,1.46,1946,1.844,1966,1.379,1997,1.309,2123,2.594,2135,2.551,2187,4.13,2190,2.043,2191,1.379,2302,1.46,2326,1.46,2347,2.551,2384,1.379,2397,3.493,2486,3.834,2501,1.558,2571,2.551,2606,1.844,2708,1.844,2710,3.02,2716,3.834,2726,2.551,2756,1.558,2789,1.844,2834,5.05,2836,1.68,2840,1.68,2845,3.493,2915,4.038,3037,1.68,3065,1.844,3089,1.844,3097,1.844,3114,1.844,3173,1.844,3197,1.68,3258,3.02,3273,3.02,3281,3.02,3327,1.844,3336,6.063,3337,5.25,3350,3.834,3382,1.844,3408,1.844,3412,1.844,3458,1.844,3470,2.751,3471,3.834,3472,3.834,3473,4.432,3474,3.02,3475,3.427,3476,5.959,3477,5.784,3478,1.844,3479,1.844,3480,2.093,3481,7.438,3482,2.093,3483,3.427,3484,5.03,3485,3.427,3486,4.352,3487,2.093,3488,3.427,3489,2.093,3490,7.438,3491,2.093,3492,3.427,3493,1.844,3494,2.093,3495,3.02,3496,3.02,3497,3.427,3498,6.565,3499,2.093,3500,2.093,3501,2.093,3502,4.352,3503,3.427,3504,7.161,3505,2.093,3506,3.02,3507,2.093,3508,5.987,3509,3.427,3510,5.549,3511,4.352,3512,2.093,3513,3.427,3514,3.427,3515,2.093,3516,2.093,3517,4.352,3518,3.427,3519,4.352,3520,4.352,3521,3.427,3522,2.093,3523,3.427,3524,3.427,3525,6.291,3526,5.959,3527,6.291,3528,3.427,3529,2.093,3530,2.093,3531,2.093,3532,3.427,3533,4.352,3534,4.889,3535,2.093,3536,2.093,3537,2.093,3538,2.093,3539,4.352,3540,2.093,3541,2.093,3542,7.161,3543,3.427,3544,5.549,3545,2.093,3546,3.427,3547,5.959,3548,3.02,3549,2.093,3550,2.093,3551,2.093,3552,3.427,3553,2.093,3554,7.397,3555,2.093,3556,2.093,3557,3.427,3558,2.093,3559,5.03,3560,3.427,3561,4.352,3562,2.093,3563,2.093,3564,2.093,3565,2.093,3566,2.093,3567,7.553,3568,2.093,3569,1.844,3570,2.093,3571,3.427,3572,1.68,3573,2.093,3574,3.427,3575,5.03,3576,5.03,3577,4.352,3578,2.093,3579,2.093,3580,2.093,3581,2.093,3582,4.889,3583,3.834,3584,4.889,3585,2.093,3586,4.352,3587,5.784,3588,7.438,3589,2.093,3590,2.093,3591,3.427,3592,3.834,3593,2.093,3594,2.093,3595,5.549,3596,2.093,3597,2.093,3598,2.093,3599,2.093,3600,3.427,3601,3.02,3602,6.291,3603,5.27,3604,2.093,3605,2.093,3606,2.093,3607,2.093,3608,4.889,3609,2.093,3610,3.427,3611,3.427,3612,2.093,3613,3.427,3614,3.427,3615,3.427,3616,2.093,3617,2.093,3618,2.093,3619,2.093,3620,1.844,3621,3.427,3622,3.427,3623,3.427,3624,2.093,3625,2.093,3626,2.093,3627,2.093,3628,3.427,3629,2.093,3630,2.093,3631,3.427,3632,3.427,3633,5.03,3634,2.093,3635,4.352,3636,3.427,3637,5.959,3638,3.427,3639,5.03,3640,2.093,3641,2.093,3642,3.427,3643,2.093,3644,2.093,3645,3.427,3646,2.093,3647,2.093,3648,2.093,3649,3.427,3650,2.093,3651,2.093,3652,2.093,3653,2.093,3654,2.093,3655,2.093,3656,2.093,3657,2.093,3658,3.427,3659,2.093,3660,2.093,3661,2.093,3662,4.352,3663,4.352,3664,3.427,3665,1.844,3666,2.093,3667,2.093,3668,2.093,3669,2.093,3670,2.093,3671,3.427,3672,3.427,3673,3.427,3674,4.352,3675,2.093,3676,2.093,3677,2.093,3678,2.093,3679,3.427,3680,5.03,3681,2.093,3682,2.093,3683,4.352,3684,3.427,3685,2.093,3686,2.093,3687,3.427,3688,3.427,3689,5.03,3690,2.093,3691,2.093,3692,2.093,3693,3.427,3694,2.093,3695,2.093,3696,2.093,3697,2.093,3698,2.093,3699,5.03,3700,4.352,3701,5.03,3702,2.093,3703,4.352,3704,5.549,3705,3.427,3706,3.427,3707,3.427,3708,4.352,3709,5.03,3710,5.549,3711,3.427,3712,4.352,3713,2.093,3714,2.093,3715,6.291,3716,5.03,3717,6.796,3718,2.093,3719,2.093,3720,2.093,3721,3.427,3722,2.093,3723,2.093,3724,2.093,3725,2.093,3726,3.427,3727,2.093,3728,2.093,3729,3.834,3730,3.427,3731,4.352,3732,2.093,3733,2.093,3734,2.093,3735,2.093,3736,2.093,3737,2.093,3738,2.093,3739,2.093,3740,2.093,3741,5.959,3742,4.352,3743,3.427,3744,2.093,3745,2.093,3746,2.093,3747,2.093,3748,4.352,3749,2.093,3750,2.093,3751,3.427,3752,3.427,3753,3.427,3754,4.352,3755,2.093,3756,2.093,3757,2.093,3758,2.093,3759,2.093,3760,2.093,3761,1.844,3762,2.093,3763,2.093,3764,2.093,3765,2.093,3766,2.093,3767,2.093,3768,2.093,3769,2.093,3770,2.093,3771,2.093,3772,2.093,3773,2.093,3774,2.093,3775,2.093,3776,6.565,3777,2.093,3778,4.352,3779,4.352,3780,5.03,3781,3.427,3782,4.352,3783,2.093,3784,2.093,3785,3.427,3786,3.427,3787,2.093,3788,2.093,3789,2.093,3790,3.427,3791,2.093,3792,3.834,3793,2.093,3794,2.093,3795,2.093,3796,2.093,3797,2.093,3798,2.093,3799,2.093,3800,2.093,3801,2.093,3802,2.093,3803,2.093,3804,2.093,3805,2.093,3806,2.093,3807,2.093,3808,2.093,3809,2.093,3810,2.093,3811,2.093,3812,2.093,3813,2.093,3814,3.427,3815,2.093,3816,3.427,3817,2.093,3818,3.427,3819,5.03,3820,5.03,3821,3.427,3822,3.427,3823,2.093,3824,2.093,3825,2.093,3826,4.352,3827,2.093,3828,1.844,3829,2.093,3830,2.093,3831,2.093,3832,2.093,3833,3.427,3834,6.992,3835,4.352,3836,2.093,3837,3.427,3838,2.093,3839,2.093,3840,2.093,3841,2.093,3842,2.093,3843,2.093,3844,3.427,3845,5.543,3846,3.427,3847,2.093,3848,2.093,3849,2.093,3850,2.093,3851,2.093,3852,4.038,3853,2.093,3854,3.427,3855,2.093,3856,2.093,3857,2.093,3858,3.427,3859,2.093,3860,2.093,3861,2.093,3862,3.427,3863,3.427,3864,3.02,3865,2.093,3866,2.093,3867,2.093,3868,2.093,3869,2.093,3870,2.093,3871,2.093,3872,2.093,3873,2.093,3874,1.844,3875,2.093,3876,2.093,3877,2.093,3878,2.093,3879,2.093,3880,2.093,3881,2.093,3882,1.844,3883,2.093,3884,3.427,3885,2.093,3886,2.093,3887,2.093,3888,2.093,3889,2.093,3890,2.093,3891,2.093,3892,2.093,3893,2.093,3894,2.093,3895,1.844,3896,3.427,3897,2.093,3898,2.093,3899,2.093,3900,2.093,3901,3.427,3902,1.844,3903,2.093,3904,2.093,3905,2.093,3906,2.093,3907,2.093,3908,2.093,3909,2.093]],["title/coverage.html",[3852,4.8]],["body/coverage.html",[0,2.423,1,2.045,5,0.112,6,0.153,7,4.04,8,3.336,9,3.315,10,4.04,12,0.859,43,0.01,45,0.311,75,0.005,80,0.005,88,1.382,91,1.267,92,1.956,116,2.145,128,0.576,130,2.553,132,0.19,140,0.622,141,0.96,195,0.923,196,0.95,202,4.437,241,2.045,244,1.199,308,1.261,332,1.199,335,2.393,407,3.389,411,1.925,431,2.157,468,2.736,482,0.999,484,0.974,486,0.999,488,1.393,490,0.999,493,0.999,495,0.999,498,0.999,500,0.999,503,0.999,505,1.429,507,0.999,509,0.974,510,0.999,511,0.999,513,0.999,516,0.974,517,0.999,518,0.974,519,0.838,521,0.974,523,0.999,525,0.999,527,1.024,529,0.999,531,0.999,533,0.999,535,0.999,538,0.999,582,3.315,586,2.553,590,2.553,593,3.927,596,2.553,609,3.746,610,3.746,665,2.754,668,1.876,669,4.158,670,3.927,671,4.62,685,2.553,770,2.393,771,2.754,775,4.04,780,2.223,799,1.515,814,1.675,885,3.022,897,1.956,1001,3.022,1074,2.145,1075,4.374,1081,2.145,1088,2.145,1089,2.145,1107,2.393,1109,3.927,1110,2.553,1134,2.553,1135,4.581,1136,4.04,1137,4.04,1155,2.393,1243,2.754,1244,2.553,1245,3.022,1279,2.754,1280,3.022,1283,2.393,1292,2.145,1293,2.145,1295,2.754,1297,1.876,1298,3.022,1299,3.022,1302,1.803,1304,2.754,1305,2.553,1306,3.022,1355,4.879,1357,2.145,1365,2.553,1369,3.022,1394,4.158,1401,2.553,1402,3.746,1403,4.04,1413,2.259,1477,2.754,1479,4.437,1513,2.754,1642,2.754,1643,2.553,1644,3.022,1695,2.754,1696,2.259,1697,4.04,1740,2.754,1741,4.04,1808,7.502,1812,2.045,1873,3.315,1877,2.553,1879,2.553,1883,4.815,1885,1.737,1894,2.145,1952,2.553,1953,2.754,1954,2.754,1955,2.259,1956,4.607,1963,2.87,1965,1.956,1984,1.618,1985,3.208,1997,3.147,2127,2.045,2140,3.746,2149,2.553,2178,4.581,2179,4.581,2207,2.393,2279,4.437,2328,2.145,2329,2.259,2379,3.511,2380,2.393,2381,3.022,2445,4.581,2482,2.754,2483,4.435,2684,3.927,2685,2.553,2686,4.04,2723,3.315,2753,2.553,2784,2.754,2816,3.927,2819,3.927,2821,2.553,2823,4.888,2828,4.158,2829,4.437,2831,2.553,2883,4.437,2932,2.553,3030,4.158,3031,2.553,3063,2.553,3064,2.754,3150,2.754,3161,2.754,3180,3.746,3181,3.746,3184,4.879,3185,3.022,3239,4.04,3293,3.022,3326,3.511,3352,3.022,3380,3.022,3381,3.022,3383,3.511,3384,3.022,3548,3.022,3852,2.754,3895,5.253,3910,3.43,3911,3.43,3912,7.311,3913,3.43,3914,3.43,3915,5.033,3916,5.033,3917,7.311,3918,7.749,3919,6.568,3920,3.43,3921,3.43,3922,3.43,3923,8.515,3924,3.43,3925,3.43,3926,6.995,3927,3.43,3928,3.43,3929,5.033,3930,3.43,3931,3.43,3932,3.43,3933,3.43,3934,3.022,3935,3.43,3936,5.033,3937,3.43,3938,3.43,3939,3.022,3940,3.43,3941,3.43,3942,3.022,3943,3.43,3944,3.43,3945,3.43,3946,3.43,3947,3.43,3948,3.43,3949,3.43,3950,3.43,3951,3.43,3952,3.43,3953,3.43,3954,3.43,3955,3.43,3956,5.033,3957,6.568,3958,6.568,3959,3.022,3960,3.43,3961,3.43,3962,5.033,3963,3.43,3964,3.43,3965,3.43,3966,5.033,3967,5.787,3968,3.43,3969,3.022,3970,3.022,3971,3.022,3972,3.43,3973,3.43,3974,3.43]],["title/dependencies.html",[544,1.532,3572,2.928]],["body/dependencies.html",[5,0.099,22,1.806,43,0.01,72,4.258,75,0.007,80,0.007,102,2.841,104,0.269,109,2.202,110,5.454,112,1.545,259,1.745,544,1.545,568,4.674,576,4.475,577,4.249,620,2.343,644,2.686,681,2.933,682,2.016,683,2.016,758,1.806,957,4.674,958,4.258,1044,4.258,1138,1.96,1152,3.7,1358,4.258,1699,3.716,1975,3.948,2026,3.948,2163,3.7,2184,3.494,2490,4.674,2493,4.674,2500,4.674,2929,4.258,2930,4.258,3096,4.258,3152,4.674,3154,4.674,3155,5.987,3157,4.674,3175,4.674,3335,4.258,3379,4.674,3479,4.674,3506,4.674,3584,5.987,3729,4.674,3975,5.305,3976,5.305,3977,5.305,3978,5.305,3979,5.305,3980,5.305,3981,5.305,3982,8.764,3983,5.305,3984,5.305,3985,6.795,3986,5.305,3987,5.305,3988,5.305,3989,5.305,3990,5.305,3991,5.305,3992,5.305,3993,7.905,3994,5.305,3995,6.795,3996,5.305,3997,5.305,3998,5.305,3999,7.497,4000,5.305,4001,5.305,4002,5.305,4003,5.305,4004,5.305,4005,5.305,4006,5.305,4007,5.305,4008,6.795,4009,7.497,4010,5.305,4011,5.305,4012,5.305,4013,5.305,4014,5.305,4015,6.795,4016,5.305,4017,6.795,4018,5.305,4019,5.305,4020,5.305,4021,5.305,4022,5.305,4023,5.305,4024,5.305,4025,5.305,4026,5.305,4027,5.305,4028,4.674,4029,5.305,4030,5.305,4031,5.305,4032,5.305,4033,5.305,4034,6.795,4035,5.305,4036,5.305,4037,5.305,4038,5.305,4039,5.305,4040,5.305,4041,5.305,4042,5.305,4043,5.305,4044,5.305,4045,5.305,4046,5.305,4047,5.305,4048,5.305,4049,5.305,4050,5.305,4051,5.305,4052,5.305,4053,5.305,4054,5.305,4055,5.305,4056,5.305,4057,5.305,4058,5.305,4059,5.305,4060,5.305,4061,5.305,4062,5.305,4063,5.305,4064,5.305,4065,6.795,4066,5.305,4067,5.305,4068,5.305,4069,5.305,4070,5.305,4071,5.305,4072,5.305,4073,5.305,4074,5.305,4075,5.305,4076,5.305,4077,5.305,4078,5.305]],["title/miscellaneous/functions.html",[4079,2.402,4080,4.637]],["body/miscellaneous/functions.html",[6,0.141,11,0.829,18,0.611,22,2.144,42,2.1,43,0.01,44,1.229,45,0.735,46,1.518,55,1.855,61,4.393,69,0.853,75,0.008,80,0.008,86,1.231,244,2.202,256,2.44,298,2.327,299,1.941,468,2.464,582,4.978,609,4.687,610,5.625,652,5.549,665,6.068,769,4.726,771,6.068,775,5.056,841,4.148,842,4.687,848,5.549,851,5.549,1355,4.393,1367,5.056,1985,3.076,2178,4.393,2179,5.272,2180,5.272,2182,5.334,2186,4.978,2189,4.687,2190,4.506,2214,4.687,2883,4.687,2927,5.056,2934,5.056,3939,6.66,3942,6.66,3959,6.66,4079,4.148,4080,5.549,4081,6.299,4082,6.299,4083,5.549,4084,5.549,4085,6.299,4086,6.299]],["title/index.html",[18,0.354,2123,2.174,3469,2.928]],["body/index.html",[3,0.176,43,0.008,75,0.008,80,0.008,90,2.293,102,2.046,125,2.227,128,0.456,194,1.462,195,0.59,211,1.154,257,2.597,298,2.862,307,1.141,332,2.708,382,3.597,436,2.514,448,3.749,600,5.657,608,4.955,645,2.993,673,2.882,913,3.47,983,3.597,1283,3.97,1325,4.955,1326,3.749,1392,4.569,2397,5.703,2622,5.764,3336,7.115,3470,4.569,3471,6.26,3472,6.26,3473,7.756,3477,5.015,3478,7.146,3493,6.26,3495,6.26,3496,7.146,3534,5.015,3554,6.824,3569,5.015,3582,7.354,3583,7.354,3587,6.26,3592,5.015,3601,6.26,3603,4.569,3620,5.015,3665,6.26,3864,5.015,3874,5.015,3902,5.015,4087,7.105,4088,5.692,4089,5.692,4090,5.692,4091,6.26,4092,5.692,4093,5.692,4094,5.692,4095,7.105,4096,7.105,4097,7.105,4098,7.745,4099,5.692,4100,5.692,4101,7.745,4102,5.692,4103,5.692,4104,7.105,4105,5.692,4106,5.692,4107,5.692,4108,7.105,4109,5.692,4110,5.692,4111,5.692,4112,5.692,4113,5.692,4114,7.105,4115,5.692,4116,5.692,4117,7.105,4118,5.692,4119,7.105,4120,7.105,4121,5.692,4122,5.692,4123,5.692,4124,5.692,4125,5.692,4126,5.692,4127,5.692,4128,5.692,4129,5.692,4130,5.692,4131,5.692,4132,5.692,4133,5.692,4134,5.692,4135,5.692,4136,5.692]],["title/license.html",[2123,2.174,3469,2.928,4137,3.213]],["body/license.html",[43,0.008,75,0.008,80,0.008,262,2.729,426,1.638,600,4.448,821,4.448,826,6.535,835,1.679,919,3.987,983,3.856,1283,4.448,1657,5.618,1887,4.2,1890,4.448,2328,3.987,2587,5.119,3608,6.709,3761,6.709,3828,5.618,3845,5.618,3882,5.618,4028,5.618,4091,7.902,4137,5.618,4138,6.377,4139,8.141,4140,6.377,4141,6.377,4142,7.615,4143,6.377,4144,6.377,4145,6.377,4146,6.377,4147,6.377,4148,7.615,4149,6.377,4150,6.377,4151,6.377,4152,6.377,4153,6.377,4154,6.377,4155,6.377,4156,6.377,4157,6.377,4158,6.377,4159,6.377,4160,7.615,4161,6.377,4162,6.377,4163,6.377,4164,6.377,4165,6.377,4166,7.615,4167,6.377,4168,6.377,4169,6.377,4170,6.377,4171,6.377,4172,6.377,4173,6.377,4174,6.377,4175,6.377,4176,6.377,4177,6.377,4178,6.377,4179,6.377,4180,6.377,4181,6.377,4182,6.377,4183,6.377,4184,6.377,4185,6.377,4186,6.377,4187,6.377,4188,6.377,4189,6.377]],["title/modules.html",[543,1.697]],["body/modules.html",[43,0.008,75,0.008,80,0.008,542,4.463,543,1.703,552,4.183,553,4.183,554,4.183,555,4.183,556,4.183,557,4.183,558,4.183,577,5.785,752,4.183,767,4.183,1102,4.183,1103,4.183,1114,4.183,1115,4.183,1150,6.885,1273,4.183,1347,4.183,1687,4.183,1732,3.75,1858,3.95,1859,4.183,1860,4.183,2438,4.183,2743,4.183,2748,4.183,2810,4.183,2811,4.183,2812,4.183,2813,4.183,3374,4.463,3508,8.151,3792,6.465,4190,9.265,4191,7.338]],["title/overview.html",[4192,5.268]],["body/overview.html",[2,2.298,43,0.01,75,0.006,80,0.006,194,0.99,196,1.763,197,0.99,241,3.796,426,0.99,437,1.883,476,0.614,482,1.854,484,2.222,486,2.279,488,2.214,490,2.279,493,2.279,495,2.279,498,2.279,500,2.279,503,2.279,507,2.279,509,2.222,510,2.279,511,2.279,513,2.279,516,2.222,517,2.279,518,2.222,521,2.222,523,2.279,525,2.279,527,2.337,529,2.279,531,2.279,533,2.279,535,2.279,538,2.279,541,0.567,542,6.556,543,1.094,544,1.122,545,1.212,546,1.181,547,1.122,548,1.212,549,3.396,550,3.396,551,3.396,552,5.755,553,5.675,554,5.971,555,5.307,556,6.183,557,5.578,558,6.099,559,1.722,560,1.094,752,5.307,753,3.396,754,3.396,755,3.396,767,4.442,1098,3.396,1099,3.396,1100,3.396,1101,3.396,1102,5.578,1103,5.307,1112,3.396,1113,3.396,1114,4.442,1115,5.108,1273,5.307,1274,3.396,1275,3.396,1276,3.396,1288,3.396,1289,3.396,1290,3.396,1347,5.307,1348,3.396,1349,3.396,1350,3.396,1396,3.396,1397,3.396,1398,3.396,1478,3.094,1687,5.307,1688,3.396,1689,3.396,1690,3.396,1732,5.001,1733,3.396,1734,3.396,1735,3.396,1854,3.396,1855,3.396,1856,3.396,1857,3.396,1858,5.154,1859,5.307,1860,5.459,2173,3.396,2174,3.396,2175,3.396,2438,5.755,2439,3.396,2440,3.396,2441,3.396,2474,3.396,2475,3.396,2477,3.396,2743,5.578,2744,3.396,2745,3.396,2746,3.396,2747,3.396,2748,5.307,2781,3.396,2782,3.396,2783,3.396,2806,3.396,2807,3.396,2808,3.396,2809,3.396,2810,5.307,2811,5.307,2812,5.307,2813,5.307,2875,3.396,2876,3.396,2877,3.396,3059,3.396,3060,3.396,3061,3.396,3142,3.396,3143,3.396,3145,3.396,3218,3.396,3219,3.396,3220,3.396,3225,3.396,3226,3.396,3227,3.396,3232,3.396,3233,3.396,3369,3.396,3370,3.396,3371,3.396,3374,5.45,3375,3.396,3376,3.396,3377,3.396,3441,3.396,3442,3.396,3443,3.396,3466,3.396,3467,3.396,3468,3.396,3934,3.396,4192,3.396,4193,5.475,4194,3.854]],["title/properties.html",[19,0.563,3572,2.928]],["body/properties.html",[19,0.766,43,0.009,75,0.009,80,0.009,3474,6.315,3603,5.753]],["title/miscellaneous/typealiases.html",[4079,2.402,4195,5.263]],["body/miscellaneous/typealiases.html",[6,0.142,8,3.215,12,1.408,15,2.299,18,0.545,22,2.398,43,0.01,45,0.781,47,1.071,69,0.761,71,1.443,75,0.007,80,0.007,115,4.641,197,1.443,207,2,221,4.415,298,2.604,299,1.977,309,3.854,312,2.481,332,2.464,419,3.7,427,3.203,452,1.522,455,1.522,468,3.011,582,5.588,609,4.181,610,6.314,620,2.481,627,4.915,631,6.208,638,5.656,650,6.208,692,2.404,780,3.112,783,2.563,787,3.349,795,3.442,799,3.401,814,3.442,917,3.513,918,3.568,965,4.915,972,4.641,977,4.201,1038,3.455,1074,3.513,1075,3.513,1076,4.018,1077,3.918,1078,3.918,1079,3.7,1081,3.513,1083,4.741,1084,4.406,1085,5.37,1088,3.513,1089,3.513,1092,5.37,1093,3.918,1094,3.918,1095,4.211,1107,3.918,1479,4.181,1501,4.95,1502,6.208,1503,6.208,1504,4.95,1505,6.208,1506,4.95,1507,6.208,1508,4.95,1509,4.95,1510,4.95,1511,4.509,1952,4.181,1953,4.509,1954,5.656,1956,3.7,1964,4.641,1993,4.181,2263,3.349,3063,4.181,3064,5.656,3180,4.181,3181,5.244,4079,3.7,4084,7.326,4196,5.618,4197,7.475,4198,6.783,4199,5.618,4200,5.618,4201,5.618,4202,6.208,4203,5.618]],["title/miscellaneous/variables.html",[4079,2.402,4204,4.637]],["body/miscellaneous/variables.html",[1,2.01,6,0.135,14,1.844,18,0.327,42,0.824,43,0.01,44,1.301,45,0.737,47,1.242,70,2.352,71,1.277,75,0.005,77,3.691,80,0.007,84,2.352,85,1.708,86,1.649,88,1.358,90,1.604,91,1.246,92,1.923,116,2.108,127,1.591,131,1.443,132,0.223,140,1.07,164,2.01,188,2.352,203,5.425,212,0.845,225,2.718,244,1.179,245,1.358,255,0.824,296,0.91,302,5.176,303,1.707,325,0.957,349,5.686,384,1.786,389,1.944,392,2.127,407,1.246,411,1.554,416,1.033,431,1.93,452,1.5,455,1.5,519,1.215,522,0.933,586,3.699,668,1.844,669,2.352,670,2.221,671,3.883,684,2.509,685,3.699,686,3.519,692,2.127,770,3.467,772,1.923,776,1.844,780,2.195,799,2.607,897,1.923,988,1.443,992,1.282,1075,2.108,1079,2.221,1134,2.509,1135,2.352,1136,2.707,1137,3.99,1138,2.181,1141,2.509,1149,6.767,1153,2.221,1154,2.707,1155,3.467,1156,2.971,1157,7.983,1158,2.971,1159,2.971,1160,2.971,1161,4.379,1162,2.971,1163,2.971,1164,2.971,1165,2.971,1166,2.971,1167,2.971,1168,5.739,1169,5.739,1170,6.119,1171,6.119,1172,2.509,1173,2.971,1174,4.14,1175,2.971,1176,2.971,1177,2.971,1178,3.699,1179,3.699,1180,4.379,1181,2.971,1182,2.971,1183,2.971,1184,2.971,1185,6.119,1186,2.971,1187,4.379,1188,2.509,1189,2.971,1190,2.971,1191,2.971,1192,2.971,1193,2.971,1194,2.971,1195,2.971,1196,2.971,1197,2.971,1198,2.971,1199,2.971,1200,5.739,1201,4.379,1202,2.971,1203,2.971,1204,2.971,1205,2.971,1206,4.379,1207,2.971,1208,2.971,1209,2.707,1210,2.971,1211,2.971,1212,2.971,1213,2.971,1214,2.971,1215,4.379,1216,3.99,1217,2.707,1218,2.971,1219,2.509,1220,2.971,1221,2.971,1222,2.971,1223,2.971,1224,2.971,1225,2.971,1226,2.971,1227,5.739,1228,2.971,1229,2.971,1230,5.739,1231,2.971,1232,2.971,1233,2.352,1234,2.971,1235,2.971,1236,5.201,1237,2.971,1238,4.379,1239,2.971,1240,2.971,1241,2.971,1242,2.971,1292,3.108,1293,3.691,1355,2.352,1359,2.963,1365,3.699,1366,2.972,1413,2.221,1479,2.509,1512,2.971,1513,3.99,1514,2.971,1515,2.971,1812,2.963,1883,2.221,1894,2.108,1897,2.352,1898,3.273,1899,3.273,1900,2.352,1901,2.352,1956,2.221,1963,1.923,1970,2.108,1984,1.591,1990,2.108,1992,2.108,1998,3.108,2517,2.971,2816,2.221,2819,2.221,2823,2.509,2828,2.352,2829,3.699,2831,3.699,3030,2.352,3031,3.699,3150,2.707,3160,2.971,3161,3.99,3184,2.352,3239,2.707,3272,2.971,3967,5.739,3969,4.379,3970,4.379,3971,4.379,4079,2.221,4083,4.379,4197,2.971,4198,2.971,4202,2.971,4204,2.971,4205,3.372,4206,3.372,4207,3.372,4208,5.903,4209,3.372,4210,3.372,4211,4.97,4212,3.372,4213,3.372,4214,3.372,4215,3.372]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.075rem",{"_index":3462,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.1.0",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["0.13.1",{"_index":4078,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1339,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["0.1s",{"_index":3440,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.2.0",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":4017,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1381,"title":{},"body":{"components/HeaderComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.25s",{"_index":3139,"title":{},"body":{"components/StageNavComponent.html":{}}}],["0.2rem",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2s",{"_index":3463,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.375rem",{"_index":1839,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["0.3rem",{"_index":1338,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.3s",{"_index":3439,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.4s",{"_index":3438,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.5",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["0.5.0",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.5s",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["0.6.0",{"_index":3864,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.625rem",{"_index":2872,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["0.6s",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{}}}],["0.75rem",{"_index":741,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{}}}],["0.7rem",{"_index":2791,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["0.875rem",{"_index":3141,"title":{},"body":{"components/StageNavComponent.html":{}}}],["0.9rem",{"_index":1850,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["0/1",{"_index":3912,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3920,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3911,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3916,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3937,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3915,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3938,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["05rem",{"_index":3325,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["06",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":748,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["0rem",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{}}}],["1",{"_index":187,"title":{"components/ContentComponent-1.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["1.0",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["1.0.0",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":4014,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4021,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":4073,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":3320,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":3465,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["1.14.10",{"_index":4025,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4050,"title":{},"body":{"dependencies.html":{}}}],["1.1875rem",{"_index":2802,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1.2.0",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":4024,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":4016,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":2870,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.2rem",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["1.3.1",{"_index":4061,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":3729,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":4037,"title":{},"body":{"dependencies.html":{}}}],["1.4rem",{"_index":2790,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1.5.0",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.6.0",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["1.9375rem",{"_index":2801,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1/1",{"_index":3923,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3941,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3935,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":686,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":4048,"title":{},"body":{"dependencies.html":{}}}],["10.5rem",{"_index":1343,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["10/12",{"_index":3922,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":925,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["10x",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":4033,"title":{},"body":{"dependencies.html":{}}}],["118",{"_index":3002,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["12",{"_index":3477,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12/12",{"_index":3963,"title":{},"body":{"coverage.html":{}}}],["12/19",{"_index":3951,"title":{},"body":{"coverage.html":{}}}],["12/22",{"_index":3914,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":2873,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["13",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["13/13",{"_index":3956,"title":{},"body":{"coverage.html":{}}}],["13/16",{"_index":3944,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":4051,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":3979,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":3976,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":3217,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["14rem",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["15",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["15.313.0",{"_index":3978,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":3972,"title":{},"body":{"coverage.html":{}}}],["15rem",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["16",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":4053,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":4054,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":3982,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":3985,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":4027,"title":{},"body":{"dependencies.html":{}}}],["16.5rem",{"_index":3138,"title":{},"body":{"components/StageNavComponent.html":{}}}],["16/17",{"_index":3953,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["17/17",{"_index":3945,"title":{},"body":{"coverage.html":{}}}],["17/20",{"_index":3940,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":3929,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":3025,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["18rem",{"_index":3435,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["1px",{"_index":1379,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["1s",{"_index":989,"title":{},"body":{"components/ContentComponent.html":{}}}],["2",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":4011,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":3981,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":4030,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":3319,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.06rem",{"_index":3464,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["2.1.0",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["2.25rem",{"_index":1272,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["2.3.0",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["2.5rem",{"_index":1342,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2.6.1",{"_index":4075,"title":{},"body":{"dependencies.html":{}}}],["2.688rem",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["2.75rem",{"_index":2866,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["2.8.0",{"_index":4013,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3991,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":4023,"title":{},"body":{"dependencies.html":{}}}],["2.9rem",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["2/2",{"_index":3962,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1787,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["200",{"_index":3004,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2019",{"_index":3845,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["210",{"_index":3003,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["21rem",{"_index":1853,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["22",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["23rem",{"_index":2792,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["24",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1849,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["24px.svg",{"_index":1236,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":3001,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25.5rem",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["250",{"_index":2771,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["255",{"_index":2905,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25rem",{"_index":749,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{}}}],["25s",{"_index":3321,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["26",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["27rem",{"_index":1852,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["29",{"_index":4193,"title":{},"body":{"overview.html":{}}}],["29/29",{"_index":3968,"title":{},"body":{"coverage.html":{}}}],["2]).rotatey(toradians(0",{"_index":2900,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2px",{"_index":737,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2rem",{"_index":1382,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["3",{"_index":2726,"title":{},"body":{"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["3).every(entry",{"_index":2728,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["3.0.0",{"_index":3584,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":3999,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":4056,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":4006,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":1341,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["3.6",{"_index":4114,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":4004,"title":{},"body":{"dependencies.html":{}}}],["3.625rem",{"_index":2800,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3.7.0",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":3474,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3.75rem",{"_index":2794,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3.8.1",{"_index":4009,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3918,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":3933,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1729,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["3000",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["30rem",{"_index":3367,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["31",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["32rem",{"_index":2803,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["33",{"_index":3934,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["33.33",{"_index":738,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["34/40",{"_index":3928,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":3932,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":918,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["3px",{"_index":1842,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["3rem",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["4",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":4096,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":4046,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":4029,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":4019,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":4066,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3917,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":3949,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":3936,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":924,"title":{},"body":{"components/ContentComponent.html":{}}}],["400",{"_index":1851,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["42/44",{"_index":3960,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":3930,"title":{},"body":{"coverage.html":{}}}],["46rem",{"_index":3363,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["47rem",{"_index":2436,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["4px",{"_index":2435,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["4rem",{"_index":991,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{}}}],["4th",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":4213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":4008,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":993,"title":{},"body":{"components/ContentComponent.html":{}}}],["5.688rem",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["5/5",{"_index":3926,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1394,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalLauncherComponent.html":{},"coverage.html":{}}}],["500",{"_index":1686,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{}}}],["54",{"_index":3913,"title":{},"body":{"coverage.html":{}}}],["55rem",{"_index":1000,"title":{},"body":{"components/ContentComponent.html":{}}}],["58",{"_index":3924,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":998,"title":{},"body":{"components/ContentComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["5s",{"_index":1073,"title":{},"body":{"components/ContentComponent-1.html":{},"components/VideoModalComponent.html":{}}}],["5th",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["6.11.2",{"_index":4059,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":4044,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3919,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":3927,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":733,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["60rem",{"_index":2737,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["63",{"_index":3950,"title":{},"body":{"coverage.html":{}}}],["65vh",{"_index":3349,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["66",{"_index":3948,"title":{},"body":{"coverage.html":{}}}],["675rem",{"_index":3324,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["6s",{"_index":736,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["7.0.0",{"_index":4039,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":4067,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":3925,"title":{},"body":{"coverage.html":{}}}],["7/15",{"_index":3931,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":3961,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":3955,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":3947,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":3946,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":4070,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":4045,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":4003,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":3993,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3958,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":3965,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":3943,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":3921,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":3895,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["87",{"_index":3954,"title":{},"body":{"coverage.html":{}}}],["875rem",{"_index":3140,"title":{},"body":{"components/StageNavComponent.html":{}}}],["88",{"_index":3964,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":4194,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":4076,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":3966,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":3957,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1997,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{}}}],["94",{"_index":3952,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3548,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["999",{"_index":2793,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["9e9e9e",{"_index":1340,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["9th",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["_blocksize",{"_index":3012,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_error",{"_index":1454,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":1551,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":3203,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["_latesttags",{"_index":21,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["_lighting",{"_index":2902,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_measuredmargin",{"_index":1582,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":1576,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":802,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_name",{"_index":2143,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["_opened",{"_index":1547,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":1543,"title":{},"body":{"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_rotation",{"_index":3013,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["aabb",{"_index":2927,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["ability",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":2775,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["above",{"_index":3882,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["acc.concat(nodes",{"_index":2975,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["accepting",{"_index":1636,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessible",{"_index":2220,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["accessing",{"_index":3115,"title":{},"body":{"components/StageNavComponent.html":{}}}],["accessors",{"_index":32,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["accordingly",{"_index":2070,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["accurate",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":2587,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"license.html":{}}}],["actions",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":2304,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ThemingService.html":{}}}],["actual_component",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["add",{"_index":3250,"title":{},"body":{"injectables/ThemingService.html":{}}}],["addclass",{"_index":3289,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":139,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{}}}],["added.add(id",{"_index":146,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.add(iri",{"_index":152,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.has(iri",{"_index":151,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addeventlistener('beforeunload",{"_index":2365,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["adding",{"_index":3446,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["additional",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["addregistration(registration",{"_index":2568,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["addressed",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":59,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["addsvgicon",{"_index":1458,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["addtag",{"_index":26,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtag(tag",{"_index":51,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtagraw",{"_index":27,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["addtagraw(tag",{"_index":57,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtags",{"_index":28,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtags(tags",{"_index":62,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["adjusting",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":777,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["again",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1625,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["alert",{"_index":2345,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["aliases",{"_index":4196,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["alignment",{"_index":2617,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["all_organs",{"_index":1970,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["all_organs.find((o",{"_index":2036,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["all_organs.find(info",{"_index":2268,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["allow",{"_index":2795,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["allowed",{"_index":1730,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["allows",{"_index":1655,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["along",{"_index":1797,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["alpha",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":822,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["alt",{"_index":4100,"title":{},"body":{"index.html":{}}}],["always",{"_index":846,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analytics",{"_index":683,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1121,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1125,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":1836,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["anatomicalstructures",{"_index":1958,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["anatomicalstructuretagstate",{"_index":1,"title":{"injectables/AnatomicalStructureTagState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["anatomicalstructuretagstatemodel",{"_index":130,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["and/or",{"_index":4158,"title":{},"body":{"license.html":{}}}],["angle",{"_index":3066,"title":{},"body":{"components/StageNavComponent.html":{}}}],["angular",{"_index":102,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1044,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3983,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":1500,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":3270,"title":{},"body":{"injectables/ThemingService.html":{}}}],["angular/common",{"_index":758,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"components/VideoModalComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1118,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":3984,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":104,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2163,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3986,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1694,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationContentModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/checkbox",{"_index":3230,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["angular/material/chips",{"_index":3223,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/core",{"_index":762,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["angular/material/dialog",{"_index":2415,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["angular/material/divider",{"_index":1865,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/expansion",{"_index":1863,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["angular/material/form",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/icon",{"_index":573,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/input",{"_index":760,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/legacy",{"_index":2882,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["angular/material/radio",{"_index":3148,"title":{},"body":{"modules/StageNavModule.html":{}}}],["angular/material/select",{"_index":1353,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/slide",{"_index":1738,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["angular/material/snack",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["angular/material/tooltip",{"_index":764,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["angular/platform",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/RightSidebarModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":3988,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":3379,"title":{},"body":{"modules/VideoModalModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1041,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animate('.5s",{"_index":1528,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":1049,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["animate(0",{"_index":1527,"title":{},"body":{"classes/InitializationState.html":{}}}],["animated",{"_index":2736,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":2768,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animation",{"_index":1512,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":1003,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":1004,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["anterior",{"_index":972,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":3336,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":584,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app.component.scss",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app_bootstrap_listener",{"_index":3235,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":196,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":729,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["appears",{"_index":2446,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["appelement",{"_index":604,"title":{},"body":{"modules/AppModule.html":{}}}],["applicable",{"_index":1967,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["application",{"_index":2708,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["application/json",{"_index":2597,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["applied",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["applyspatialplacement",{"_index":3939,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyspatialplacement(new",{"_index":2235,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["applyspatialplacement(tx",{"_index":2189,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["applythemeclass",{"_index":3242,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":3249,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":542,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1128,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":335,"title":{"interfaces/AppOptions.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["appropriate",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":482,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":943,"title":{},"body":{"components/ContentComponent.html":{}}}],["arg",{"_index":1450,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":1451,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter(value",{"_index":1466,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":1463,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/StageNavComponent.html":{}}}],["arising",{"_index":4187,"title":{},"body":{"license.html":{}}}],["around",{"_index":2778,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["array",{"_index":1248,"title":{},"body":{"components/DetailsLabelComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["array.isarray(entity.placement",{"_index":2989,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["array.isarray(reg.placement",{"_index":2533,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["arraytostring",{"_index":1255,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(details",{"_index":1271,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(inputarray",{"_index":1258,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arrow_drop_down",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["arrow_drop_up",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["arrow_left",{"_index":3311,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":3310,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["as.id",{"_index":191,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name",{"_index":192,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name.tolowercase().indexof(text.tolowercase",{"_index":186,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["asct+b",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["aslookup",{"_index":2092,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["aslookup[iri",{"_index":2097,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assertions",{"_index":1995,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assets/icons/ico",{"_index":1241,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1235,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organs/ico",{"_index":1157,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1238,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/reference",{"_index":2225,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["assigned",{"_index":157,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["assignment/selection",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1887,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"license.html":{}}}],["astags",{"_index":2785,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["async",{"_index":1484,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["async)?.x",{"_index":980,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.y",{"_index":981,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.z",{"_index":982,"title":{},"body":{"components/ContentComponent.html":{}}}],["asynchronously",{"_index":3338,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["atlas",{"_index":3472,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attach",{"_index":3300,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["attempts",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":4179,"title":{},"body":{"license.html":{}}}],["auto",{"_index":987,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["autofocus",{"_index":2473,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["automatic",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":3792,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":1490,"title":{},"body":{"classes/InitializationState.html":{}}}],["awaited",{"_index":1480,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":4135,"title":{},"body":{"index.html":{}}}],["axis",{"_index":2844,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["b",{"_index":974,"title":{},"body":{"components/ContentComponent.html":{}}}],["back",{"_index":1378,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["backbutton",{"_index":1387,"title":{},"body":{"components/HeaderComponent.html":{}}}],["backend",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":1441,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["base",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1031,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["basehref",{"_index":615,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["basewebcomponent",{"_index":611,"title":{},"body":{"components/AppWebComponent.html":{}}}],["basic",{"_index":3665,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bbox",{"_index":1570,"title":{},"body":{"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.left",{"_index":1573,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.overlaps(getnodebbox(model",{"_index":2983,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.right",{"_index":1572,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1147,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["beforeunloadevent",{"_index":2360,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["beforeunloadlistener",{"_index":2359,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["begin",{"_index":2709,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["being",{"_index":2756,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["belong",{"_index":1301,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["belonging",{"_index":1303,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["beta",{"_index":3587,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["bind",{"_index":72,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"dependencies.html":{}}}],["binds",{"_index":3261,"title":{},"body":{"injectables/ThemingService.html":{}}}],["black",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["bladder",{"_index":1156,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1158,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blob([json",{"_index":2596,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["block",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["block.x",{"_index":2056,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["block_size_input",{"_index":710,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocks",{"_index":1783,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["blocksize",{"_index":668,"title":{"interfaces/BlockSize.html":{}},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blocksize.y",{"_index":3020,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.z].map(n",{"_index":3021,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksizechange",{"_index":695,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocksizeinputcomponent",{"_index":484,"title":{"components/BlockSizeInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blocksizeinputmodule",{"_index":752,"title":{"modules/BlockSizeInputModule.html":{}},"body":{"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["blood",{"_index":1159,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1160,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":644,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyuimodule",{"_index":1105,"title":{},"body":{"modules/ContentModule.html":{}}}],["bold",{"_index":1847,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["bone",{"_index":1161,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["booleaninput",{"_index":1498,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["border",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["both",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["bottom",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["bounds",{"_index":888,"title":{},"body":{"components/ContentComponent.html":{}}}],["box",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["bp",{"_index":656,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.boolean",{"_index":663,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.function",{"_index":666,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.json",{"_index":664,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.stringarray",{"_index":667,"title":{},"body":{"components/AppWebComponent.html":{}}}],["brain",{"_index":1164,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1165,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["breaking",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["breaks",{"_index":165,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["breast.svg",{"_index":1195,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bringing",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["bronchus",{"_index":1190,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bronchus.svg",{"_index":1192,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":4190,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":579,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browseranimationsmodule",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browserify",{"_index":4068,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":575,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":4092,"title":{},"body":{"index.html":{}}}],["buildjsonld",{"_index":2620,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["buildmetadata",{"_index":2607,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["builds",{"_index":2606,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["builtin_parsers",{"_index":646,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.json(value",{"_index":654,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["button.component",{"_index":1296,"title":{},"body":{"modules/DrawerModule.html":{},"modules/ReviewButtonModule.html":{}}}],["button.component.html",{"_index":2691,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":2690,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":2686,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:101",{"_index":2714,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:19",{"_index":3298,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:20",{"_index":2713,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:22",{"_index":3299,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:25",{"_index":2703,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:27",{"_index":3309,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2702,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:36",{"_index":2699,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:38",{"_index":3306,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3305,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:42",{"_index":3296,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:43",{"_index":2704,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:48",{"_index":2711,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:55",{"_index":2697,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:65",{"_index":3302,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:69",{"_index":2717,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:75",{"_index":3303,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:79",{"_index":2721,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:85",{"_index":3301,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:86",{"_index":2719,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:97",{"_index":3304,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.module",{"_index":2826,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["button.module.ts",{"_index":2749,"title":{},"body":{"modules/ReviewButtonModule.html":{}}}],["button/review",{"_index":2685,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["button/toggle",{"_index":1295,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["buttons",{"_index":956,"title":{},"body":{"components/ContentComponent.html":{}}}],["c",{"_index":4140,"title":{},"body":{"license.html":{}}}],["cache",{"_index":3479,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cacheable",{"_index":4072,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":1574,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":3323,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["calc(50",{"_index":1532,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":1566,"title":{},"body":{"classes/InitializationState.html":{}}}],["call",{"_index":1464,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["callback",{"_index":984,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{}}}],["callbackset",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["called",{"_index":1496,"title":{},"body":{"classes/InitializationState.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["calling",{"_index":3102,"title":{},"body":{"components/StageNavComponent.html":{}}}],["calls",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["cancel",{"_index":2455,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/TagListComponent.html":{}}}],["cancelregistration",{"_index":616,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"changelog.html":{}}}],["cancelregistrationcallback",{"_index":627,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"miscellaneous/typealiases.html":{}}}],["candidate",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2929,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["capitalize",{"_index":1770,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capitalized",{"_index":1772,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capitalizefirstletter",{"_index":1751,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capitalizefirstletter(inputstring",{"_index":1763,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capitalizes",{"_index":1765,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capturing",{"_index":1795,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["card",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{},"index.html":{}}}],["cases",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":655,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["catcherror",{"_index":2188,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["ccf",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":2633,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ccfdrawer",{"_index":1520,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":779,"title":{},"body":{"components/ContainerComponent.html":{}}}],["cdk",{"_index":1344,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["cdr",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cdr.markforcheck",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cell",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["centimeter",{"_index":2194,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["certain",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["cff",{"_index":1072,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["change",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":865,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectorref",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["changelog",{"_index":3470,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changerotation",{"_index":2856,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["changerotation(newrotation",{"_index":2846,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changes",{"_index":181,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["changing",{"_index":3085,"title":{},"body":{"components/StageNavComponent.html":{}}}],["channel",{"_index":783,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["channels",{"_index":1923,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["charge",{"_index":4146,"title":{},"body":{"license.html":{}}}],["check",{"_index":2134,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["checknamevalid",{"_index":2388,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["checknamevalid(event",{"_index":2395,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["checks",{"_index":1030,"title":{},"body":{"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{}}}],["chevron_left",{"_index":1377,"title":{},"body":{"components/HeaderComponent.html":{}}}],["child",{"_index":740,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["chip",{"_index":3214,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["chip__action",{"_index":3459,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["chip__text",{"_index":3216,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["choose",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":4182,"title":{},"body":{"license.html":{}}}],["class",{"_index":132,"title":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":3294,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":1011,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["classend",{"_index":1538,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1478,"title":{},"body":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"overview.html":{}}}],["classname",{"_index":784,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["clean",{"_index":1931,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["cleans",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cleanup",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":2772,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["clearhaschanges",{"_index":2283,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["clears",{"_index":3403,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["click",{"_index":1665,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{}}}],["clicking",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":3098,"title":{},"body":{"components/StageNavComponent.html":{}}}],["client",{"_index":3478,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["close",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["closed",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["closedialog",{"_index":2389,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["closeexpanded",{"_index":1601,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeopendone",{"_index":1608,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1589,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{}}}],["cls",{"_index":3252,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":691,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["cluster_appmodule",{"_index":549,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":550,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":551,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule",{"_index":753,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_declarations",{"_index":754,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_exports",{"_index":755,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_contentmodule",{"_index":1098,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_declarations",{"_index":1099,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_exports",{"_index":1101,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_imports",{"_index":1100,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1112,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1113,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule",{"_index":1274,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_declarations",{"_index":1275,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_exports",{"_index":1276,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":1288,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":1289,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":1290,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule",{"_index":1348,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule_declarations",{"_index":1349,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule_exports",{"_index":1350,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":1396,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1398,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1397,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule",{"_index":1688,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule_declarations",{"_index":1689,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule_exports",{"_index":1690,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule",{"_index":1733,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_declarations",{"_index":1734,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_exports",{"_index":1735,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule",{"_index":1854,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_declarations",{"_index":1856,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_exports",{"_index":1855,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_imports",{"_index":1857,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule",{"_index":2173,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_declarations",{"_index":2174,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_exports",{"_index":2175,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule",{"_index":2439,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_declarations",{"_index":2440,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_exports",{"_index":2441,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_imports",{"_index":2442,"title":{},"body":{"modules/RegistrationContentModule.html":{}}}],["cluster_registrationmodalmodule",{"_index":2474,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_declarations",{"_index":2477,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_exports",{"_index":2475,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_imports",{"_index":2476,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["cluster_reviewbuttonmodule",{"_index":2744,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_declarations",{"_index":2747,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_exports",{"_index":2746,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_imports",{"_index":2745,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule",{"_index":2781,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule_declarations",{"_index":2782,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule_exports",{"_index":2783,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule",{"_index":2806,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_declarations",{"_index":2807,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_exports",{"_index":2809,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_imports",{"_index":2808,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule",{"_index":2875,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_declarations",{"_index":2877,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_exports",{"_index":2876,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule",{"_index":3059,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_declarations",{"_index":3061,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_exports",{"_index":3060,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule",{"_index":3142,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_declarations",{"_index":3143,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_exports",{"_index":3145,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_imports",{"_index":3144,"title":{},"body":{"modules/StageNavModule.html":{}}}],["cluster_taglistmodule",{"_index":3218,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_taglistmodule_declarations",{"_index":3219,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_taglistmodule_exports",{"_index":3220,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule",{"_index":3225,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule_declarations",{"_index":3227,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule_exports",{"_index":3226,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":3232,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":3233,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule",{"_index":3369,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule_declarations",{"_index":3371,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule_exports",{"_index":3370,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule",{"_index":3375,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule_declarations",{"_index":3376,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule_exports",{"_index":3377,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule",{"_index":3441,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule_declarations",{"_index":3442,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule_exports",{"_index":3443,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule",{"_index":3466,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule_declarations",{"_index":3468,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule_exports",{"_index":3467,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["coalescing",{"_index":2256,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["code",{"_index":3337,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["code.touppercase().endswith(lookup",{"_index":2259,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["codebase",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":1499,"title":{},"body":{"classes/InitializationState.html":{}}}],["collaboration",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["collapse",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":1508,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":1600,"title":{},"body":{"classes/InitializationState.html":{}}}],["collection",{"_index":13,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["collisions",{"_index":137,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["color",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["combination",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["combined",{"_index":1093,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":111,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["combinelatest([regs",{"_index":2512,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.entities",{"_index":134,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["combinelatest([this.model.anatomicalstructures",{"_index":2959,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.organiri",{"_index":2984,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.viewtype",{"_index":3006,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.page.state",{"_index":2460,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.referenceorgansimplenodes",{"_index":2976,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.rotation",{"_index":2954,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["come",{"_index":3173,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["coming",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":4018,"title":{},"body":{"dependencies.html":{}}}],["comma",{"_index":1266,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["commas",{"_index":1252,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["common",{"_index":3620,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":757,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["compatibility",{"_index":3170,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1616,"title":{},"body":{"classes/InitializationState.html":{}}}],["completion",{"_index":1606,"title":{},"body":{"classes/InitializationState.html":{}}}],["complexity",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":195,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":900,"title":{},"body":{"components/ContentComponent.html":{}}}],["component.component",{"_index":583,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":610,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["component.component.ts:34",{"_index":626,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":642,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":643,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":636,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:38",{"_index":630,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":639,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":628,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:41",{"_index":632,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":640,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:43",{"_index":641,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:44",{"_index":633,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:45",{"_index":634,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:46",{"_index":635,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:47",{"_index":637,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:49",{"_index":624,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["componentref",{"_index":3255,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["computed",{"_index":105,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["comunica/query",{"_index":3989,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":4020,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":4165,"title":{},"body":{"license.html":{}}}],["config",{"_index":772,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.cancelregistration",{"_index":2340,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.isolated",{"_index":1925,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.register",{"_index":2339,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.user",{"_index":2342,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["configmodule",{"_index":767,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["configstore",{"_index":625,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":1366,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["confirm('changes",{"_index":2346,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["confirmation",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":1946,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["connect(source",{"_index":1934,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":816,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connection",{"_index":4188,"title":{},"body":{"license.html":{}}}],["connects",{"_index":1933,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["consider",{"_index":3169,"title":{},"body":{"modules/StoreModule.html":{}}}],["consortium",{"_index":4141,"title":{},"body":{"license.html":{}}}],["const",{"_index":138,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor(@inject(message_service_config",{"_index":1924,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1129,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":1947,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":623,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(defaulttheme",{"_index":3247,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(dialog",{"_index":2450,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["constructor(dialogref",{"_index":2752,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["constructor(drawer",{"_index":3295,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(ga",{"_index":719,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(globalconfig",{"_index":2291,"title":{},"body":{"injectables/PageState.html":{}}}],["constructor(globals",{"_index":2370,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["constructor(injector",{"_index":36,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/SceneState.html":{}}}],["constructor(messageservice",{"_index":792,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["constructor(model",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/RightSidebarComponent.html":{}}}],["constructor(page",{"_index":1372,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["constructor(private",{"_index":603,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(readonly",{"_index":1376,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(registry",{"_index":1468,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(renderer2",{"_index":3329,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["constructor(source",{"_index":1939,"title":{},"body":{"classes/MessageChannel.html":{}}}],["contain",{"_index":1082,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["contained",{"_index":1957,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["container",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["container.component.html",{"_index":782,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":781,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1294,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":486,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerpayload",{"_index":1085,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":864,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["containing",{"_index":673,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"index.html":{}}}],["contains",{"_index":699,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ExtractionSet.html":{},"classes/InitializationState.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["content",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content'},{'name",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content.component",{"_index":2444,"title":{},"body":{"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{}}}],["content.component.html",{"_index":887,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.scss",{"_index":886,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.ts",{"_index":2381,"title":{},"body":{"components/RegistrationContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:102",{"_index":2402,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:113",{"_index":2405,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:127",{"_index":2399,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:21",{"_index":2394,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:24",{"_index":2413,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:29",{"_index":2411,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:32",{"_index":2414,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:35",{"_index":2412,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:38",{"_index":2409,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:41",{"_index":2408,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:43",{"_index":2393,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:56",{"_index":2410,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:83",{"_index":2407,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:93",{"_index":2396,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.module",{"_index":2481,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["content.module.ts",{"_index":2443,"title":{},"body":{"modules/RegistrationContentModule.html":{}}}],["content/content.component",{"_index":839,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{}}}],["content/registration",{"_index":2380,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["content1",{"_index":785,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":786,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":836,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":818,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":828,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":488,"title":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":1074,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["contentmodule",{"_index":552,"title":{"modules/ContentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"modules.html":{},"overview.html":{}}}],["context",{"_index":2621,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["context.jsonld",{"_index":2624,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["contract",{"_index":4185,"title":{},"body":{"license.html":{}}}],["control",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["convention",{"_index":1097,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["converting",{"_index":1261,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["converts",{"_index":2619,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["coordinate",{"_index":4122,"title":{},"body":{"index.html":{}}}],["copies",{"_index":4160,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4148,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4139,"title":{},"body":{"license.html":{}}}],["cord",{"_index":1217,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cord.svg",{"_index":1218,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":1130,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/anatomical",{"_index":3205,"title":{},"body":{"components/TagListComponent.html":{}}}],["core/models/extraction",{"_index":1328,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["core/models/meta",{"_index":2722,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["core/models/visibility",{"_index":1824,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["core/services/config/config",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{}}}],["core/services/theming/theming.service",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["core/store/anatomical",{"_index":2788,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["core/store/model/model.state",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/page/page.state",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/reference",{"_index":2458,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["core/store/registration/registration.state",{"_index":960,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["core/store/scene/scene.state",{"_index":961,"title":{},"body":{"components/ContentComponent.html":{}}}],["coremodule",{"_index":553,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":1391,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["cors",{"_index":4022,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":1903,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["coverage",{"_index":3852,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createcustomelement",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["createentitycollections",{"_index":100,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["creates",{"_index":40,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["createscenenodes",{"_index":2884,"title":{},"body":{"injectables/SceneState.html":{}}}],["createscenenodes(organiri",{"_index":2892,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["creating",{"_index":841,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["creation",{"_index":2698,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["creation_date",{"_index":2632,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator",{"_index":2627,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_first_name",{"_index":2628,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_last_name",{"_index":2629,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_orcid",{"_index":2630,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["credits",{"_index":4126,"title":{},"body":{"index.html":{}}}],["crosshairs",{"_index":911,"title":{},"body":{"components/ContentComponent.html":{}}}],["css",{"_index":957,"title":{},"body":{"components/ContentComponent.html":{},"dependencies.html":{}}}],["cube.svg",{"_index":1242,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["cuboid",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":1319,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["currentdate",{"_index":2519,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["currentidentifier",{"_index":2516,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["currently",{"_index":1327,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["currentorgan",{"_index":2382,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["currentsex",{"_index":2383,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["cursor",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["customelements.define('ccf",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["customizable",{"_index":3447,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["customized",{"_index":1656,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["cyberinfrastructure",{"_index":4128,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["damages",{"_index":4183,"title":{},"body":{"license.html":{}}}],["dark",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["dark/light",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["data.alignment_operator_orcid",{"_index":2631,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.json",{"_index":2226,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.label",{"_index":2773,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["data.metadata",{"_index":2765,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.push",{"_index":2609,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.registrationcallbackset",{"_index":2766,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.sex",{"_index":2541,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.side",{"_index":2543,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.state",{"_index":1986,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["data.state.ts",{"_index":2179,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["data.state.ts:100",{"_index":2376,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:110",{"_index":2378,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:135",{"_index":2375,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:155",{"_index":2374,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:176",{"_index":2372,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:75",{"_index":2371,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:87",{"_index":2377,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.ts",{"_index":1954,"title":{},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.value",{"_index":2774,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["data/reference",{"_index":1985,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataaction",{"_index":53,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["database",{"_index":2187,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"changelog.html":{}}}],["datasets",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["datatype",{"_index":1712,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["date().toisostring().split('t')[0",{"_index":2520,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["db",{"_index":2090,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.anatomicalstructures[organiri",{"_index":2094,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.extractionsets[organiri",{"_index":2101,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.organirilookup[key",{"_index":2261,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.organspatialentities[organiri",{"_index":2108,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.placementpatches[place?.target",{"_index":2233,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.scenenodelookup[item.id",{"_index":2968,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.scenenodelookup[node['@id",{"_index":3029,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[item.id",{"_index":2969,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[node['@id",{"_index":2973,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["deal",{"_index":4149,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4189,"title":{},"body":{"license.html":{}}}],["debug",{"_index":936,"title":{},"body":{"components/ContentComponent.html":{}}}],["debugmode",{"_index":889,"title":{},"body":{"components/ContentComponent.html":{}}}],["december",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":2700,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["deck.gl/core",{"_index":3992,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":3994,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":3996,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":3997,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":545,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["declare",{"_index":1364,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["decoration",{"_index":1385,"title":{},"body":{"components/HeaderComponent.html":{}}}],["decorator",{"_index":110,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"dependencies.html":{}}}],["decorators",{"_index":52,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deep",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deeply",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":1424,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.html",{"_index":1422,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.url",{"_index":1436,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def?.url",{"_index":1433,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default",{"_index":85,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_block_size",{"_index":685,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1155,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons.find",{"_index":1430,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default_rotation",{"_index":2831,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_search_limit",{"_index":3969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_search_throttle",{"_index":3970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_slices_config",{"_index":3031,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_theme",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1134,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultposition",{"_index":2052,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["defaults",{"_index":131,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["defaulttheme",{"_index":3241,"title":{},"body":{"injectables/ThemingService.html":{}}}],["deferred",{"_index":1481,"title":{},"body":{"classes/InitializationState.html":{}}}],["define",{"_index":1281,"title":{},"body":{"interfaces/DocumentationContent.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["definition",{"_index":1139,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":1446,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":1445,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["degree",{"_index":2664,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["delay",{"_index":1976,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delay(0",{"_index":2116,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delta",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["demo",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":1420,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["dependencies",{"_index":544,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":774,"title":{},"body":{"modules/ConfigModule.html":{}}}],["depth",{"_index":676,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["descendants",{"_index":819,"title":{},"body":{"components/ContainerComponent.html":{}}}],["descrepancies",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":11,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["detaches",{"_index":906,"title":{},"body":{"components/ContentComponent.html":{}}}],["details",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["detailslabelcomponent",{"_index":490,"title":{"components/DetailsLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detailslabelmodule",{"_index":1273,"title":{"modules/DetailsLabelModule.html":{}},"body":{"modules/DetailsLabelModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["detailslabels",{"_index":1745,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["detection",{"_index":803,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":796,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determines",{"_index":1324,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{}}}],["dev",{"_index":996,"title":{},"body":{"components/ContentComponent.html":{}}}],["developed",{"_index":4127,"title":{},"body":{"index.html":{}}}],["development",{"_index":2217,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["developmentmode",{"_index":3168,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":3874,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":1286,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{}}}],["dialog's",{"_index":2755,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["dialogopen",{"_index":2448,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["dialogref",{"_index":2385,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":2740,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["dialogref.disableclose",{"_index":2423,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["dialogue",{"_index":2715,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["different",{"_index":1637,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{}}}],["digits",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["dimension",{"_index":701,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["dimension_units",{"_index":2645,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["dimensions",{"_index":675,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["dims",{"_index":968,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.x",{"_index":2055,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.y",{"_index":2057,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.z",{"_index":2058,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims[0",{"_index":973,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[1",{"_index":975,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[2",{"_index":979,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[i",{"_index":2996,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["direct",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["directive",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directives",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directly",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":122,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["disabled",{"_index":1703,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"components/VisibilityToggleComponent.html":{}}}],["disablepositionchange",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["disables",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["disableslider",{"_index":1757,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["display",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displayed",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":2484,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["displaying",{"_index":995,"title":{},"body":{"components/ContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["distinctuntilchanged",{"_index":1977,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged((v1",{"_index":2025,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilkeychanged",{"_index":959,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('x",{"_index":930,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('y",{"_index":931,"title":{},"body":{"components/ContentComponent.html":{}}}],["distribute",{"_index":4156,"title":{},"body":{"license.html":{}}}],["div",{"_index":3461,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["divider",{"_index":1841,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["dobootstrap",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":3096,"title":{},"body":{"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"dependencies.html":{}}}],["document.getelementsbyclassname('modal",{"_index":2767,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["document:click",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["document:click(target",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["document:keydown",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["document:keydown(target",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1283,"title":{},"body":{"interfaces/DocumentationContent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentationcontent",{"_index":1279,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{},"coverage.html":{}}}],["dom",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["domsanitizer",{"_index":1408,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["don't",{"_index":1419,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["done",{"_index":3458,"title":{},"body":{"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["donor",{"_index":1835,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"changelog.html":{}}}],["donors",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":2804,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["dotenv",{"_index":4026,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":3088,"title":{},"body":{"components/StageNavComponent.html":{}}}],["download",{"_index":985,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"changelog.html":{}}}],["downloads",{"_index":2582,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["draft",{"_index":3022,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draftplacement",{"_index":3014,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draggable",{"_index":2835,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["drawer",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["drawer.close",{"_index":3317,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":3316,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":1521,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":1522,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":3318,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":874,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":840,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":1059,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["drawercontainerschanged",{"_index":1081,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawerinitialized",{"_index":1088,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":554,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":1092,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":787,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":873,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":1089,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drop",{"_index":3087,"title":{},"body":{"components/StageNavComponent.html":{}}}],["dropdown",{"_index":1307,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["dropdown'},{'name",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["dropdown.component",{"_index":1354,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown.component.html",{"_index":1310,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1309,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":1306,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:18",{"_index":1320,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":1317,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":1316,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":1315,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:47",{"_index":1322,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":1323,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.module",{"_index":1869,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["dropdown.module.ts",{"_index":1351,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown/extraction",{"_index":1305,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["dropdowncontainer",{"_index":3137,"title":{},"body":{"components/StageNavComponent.html":{}}}],["duration",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent-1.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{}}}],["during",{"_index":3258,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["dynamic",{"_index":3987,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["each",{"_index":1282,"title":{},"body":{"interfaces/DocumentationContent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["ease",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["easier",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["easily",{"_index":2851,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ececec",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["editregistration",{"_index":617,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["editregistration(reg",{"_index":2531,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["effect",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["element",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["element's",{"_index":1664,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["element.getboundingclientrect",{"_index":1571,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":3286,"title":{},"body":{"injectables/ThemingService.html":{}}}],["elementref",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["ellipsis",{"_index":3437,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["embedded",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":2853,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["emits",{"_index":1318,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitted",{"_index":693,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["emitter",{"_index":694,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitting",{"_index":1552,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["empty",{"_index":127,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["empty_result",{"_index":3971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":1021,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enables",{"_index":2832,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["end",{"_index":850,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["end?.expanded",{"_index":1070,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["end?.opened",{"_index":1069,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enddrawers",{"_index":875,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":878,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":881,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":1068,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["endings",{"_index":2598,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["entered",{"_index":2398,"title":{},"body":{"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entererrormode",{"_index":2695,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["entering",{"_index":687,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entire",{"_index":3160,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":2093,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.comment",{"_index":2099,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.label",{"_index":2098,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.placement",{"_index":2991,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.placement[0",{"_index":2990,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.representation_of",{"_index":2095,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.sex?.tolowercase",{"_index":2273,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side",{"_index":2270,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side.tolowercase",{"_index":2271,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side?.tolowercase",{"_index":2274,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.y_dimension",{"_index":2999,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.z_dimension].map(n",{"_index":3000,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity['@id",{"_index":2096,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entitycollections",{"_index":101,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["entry",{"_index":2153,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{}}}],["entry.value",{"_index":2729,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["environment",{"_index":648,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.customization",{"_index":661,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":659,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.googleanalyticstoken",{"_index":1127,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":953,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.skipunsavedchangesconfirmation",{"_index":2333,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["environments/environment",{"_index":649,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":844,"title":{},"body":{"components/ContainerComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["error('the",{"_index":1131,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":853,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":842,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":2930,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["eslint",{"_index":121,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/consistent",{"_index":1994,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/member",{"_index":1987,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/naming",{"_index":1096,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["eslint/no",{"_index":126,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["eslint/prefer",{"_index":2254,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{}}}],["etc",{"_index":1091,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["eui",{"_index":3554,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"license.html":{}}}],["event.firstname.length",{"_index":2427,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["event.lastname.length",{"_index":2428,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["event.preventdefault",{"_index":2361,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["event.returnvalue",{"_index":2362,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["event.target",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["eventemitter",{"_index":677,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["eventemitter(true",{"_index":1554,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":2437,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["evolution",{"_index":3213,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["except",{"_index":1910,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/StoreModule.html":{}}}],["executionstrategy",{"_index":3171,"title":{},"body":{"modules/StoreModule.html":{}}}],["expand",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":1610,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":1513,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":1612,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":1549,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":1504,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":1555,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":1505,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":1507,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":1561,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":1597,"title":{},"body":{"classes/InitializationState.html":{}}}],["expansion",{"_index":1844,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["expected",{"_index":2764,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["experimentation",{"_index":2799,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["explicit",{"_index":2584,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["exploration",{"_index":4094,"title":{},"body":{"index.html":{}}}],["export",{"_index":129,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["exportas",{"_index":778,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":548,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["express",{"_index":4028,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":1973,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extended",{"_index":1510,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":16,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["external",{"_index":83,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["extra",{"_index":4032,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["extraction_set_dropdown",{"_index":1331,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionset",{"_index":1297,"title":{"interfaces/ExtractionSet.html":{}},"body":{"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["extractionsetchanged",{"_index":1312,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetchanged(value",{"_index":1321,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetdropdowncomponent",{"_index":495,"title":{"components/ExtractionSetDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["extractionsetdropdownmodule",{"_index":1347,"title":{"modules/ExtractionSetDropdownModule.html":{}},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["extractionsets",{"_index":1959,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsites",{"_index":1960,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsitetooltip",{"_index":1746,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["extrapulmonary",{"_index":1191,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye",{"_index":1166,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1167,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1207,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f.svg",{"_index":1208,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factor",{"_index":2192,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["factory",{"_index":1901,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":2769,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["faded",{"_index":1005,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fadeinout",{"_index":1010,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fail",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["fallopian",{"_index":1168,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["false=right",{"_index":1718,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["favor",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":1363,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["fetch",{"_index":1152,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["fetched",{"_index":2509,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["fetched]).pipe",{"_index":2513,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["fetchpreviousregistrations",{"_index":618,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["fetchpreviousregistrationscallback",{"_index":631,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewModalComponent.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{},"changelog.html":{}}}],["fields",{"_index":2779,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["fileinput",{"_index":1648,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement",{"_index":1673,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement.click",{"_index":1675,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader",{"_index":1678,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.onload",{"_index":1679,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.readastext(file",{"_index":1685,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["files",{"_index":1657,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"license.html":{}}}],["fill",{"_index":1389,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filler",{"_index":750,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["filter",{"_index":1891,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["filter(([_nodes",{"_index":2978,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter((node",{"_index":2970,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(as",{"_index":185,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["filter(def",{"_index":1421,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["filter(e",{"_index":3005,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(item",{"_index":2560,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(key",{"_index":2019,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filter(started",{"_index":2122,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filtered",{"_index":1914,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["filternulls",{"_index":1971,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filters",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["finished",{"_index":1086,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["finishing",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["fired",{"_index":3099,"title":{},"body":{"components/StageNavComponent.html":{}}}],["first",{"_index":1766,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"changelog.html":{}}}],["firstname",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["firstnamevalidator",{"_index":2144,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["fit",{"_index":3350,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["fitness",{"_index":4175,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2789,"title":{},"body":{"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["flexible",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":2776,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["floatlabel",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["fly",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":2868,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["following",{"_index":4164,"title":{},"body":{"license.html":{}}}],["font",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["footer",{"_index":2780,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["foreach(def",{"_index":1426,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["form",{"_index":744,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["format",{"_index":2501,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{}}}],["formatted",{"_index":1263,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["formsmodule",{"_index":2176,"title":{},"body":{"modules/NameInputModule.html":{},"modules/TagSearchModule.html":{}}}],["found",{"_index":2798,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["frame",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":4123,"title":{},"body":{"index.html":{}}}],["free",{"_index":4145,"title":{},"body":{"license.html":{}}}],["from(fetch(url)).pipe",{"_index":2228,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["fs",{"_index":4031,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":1511,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":4080,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":4133,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":4163,"title":{},"body":{"license.html":{}}}],["further",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":696,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["gatoken",{"_index":1126,"title":{},"body":{"modules/CoreModule.html":{}}}],["general",{"_index":2280,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["generate",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":1698,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["genericmessage",{"_index":1077,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":1078,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":1079,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getarguments",{"_index":1465,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":1470,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getclassend",{"_index":3307,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcontent",{"_index":830,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getdisabled",{"_index":2720,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["getglobalskipconfirmation",{"_index":2318,"title":{},"body":{"injectables/PageState.html":{}}}],["gethaschanges",{"_index":2320,"title":{},"body":{"injectables/PageState.html":{}}}],["gethasthicknessvalue",{"_index":3054,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["gethaswrappedcontent",{"_index":833,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":3308,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getid",{"_index":3387,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getid(_index",{"_index":3400,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getislighttheme",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["getlabelel",{"_index":3112,"title":{},"body":{"components/StageNavComponent.html":{}}}],["getlatestiri",{"_index":2366,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getlatestiri(organ",{"_index":2275,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getlatesttags",{"_index":97,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getleft",{"_index":1719,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["getmessages",{"_index":1912,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":1936,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":1915,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":1937,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":1919,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":1456,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":1472,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getname",{"_index":2159,"title":{},"body":{"components/NameInputComponent.html":{}}}],["getnodebbox",{"_index":3942,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(model",{"_index":2934,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(placement[0",{"_index":2981,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getnodecollisions",{"_index":2918,"title":{},"body":{"injectables/SceneState.html":{}}}],["getnodes",{"_index":2909,"title":{},"body":{"injectables/SceneState.html":{}}}],["getoptionsel",{"_index":3116,"title":{},"body":{"components/StageNavComponent.html":{}}}],["getorgandata",{"_index":2367,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getorgandata(iri",{"_index":2264,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getplacementcube",{"_index":2922,"title":{},"body":{"injectables/SceneState.html":{}}}],["getpreviousregistrationnodes",{"_index":2920,"title":{},"body":{"injectables/SceneState.html":{}}}],["getreferenceorganiri",{"_index":2368,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getreferenceorganiri(organ",{"_index":2250,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getreferenceorgannodes",{"_index":2913,"title":{},"body":{"injectables/SceneState.html":{}}}],["getreferenceorgansimplenodes",{"_index":2916,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotatednodes",{"_index":2911,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotation",{"_index":2925,"title":{},"body":{"injectables/SceneState.html":{}}}],["gets",{"_index":1495,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["getskipconfirmation",{"_index":2316,"title":{},"body":{"injectables/PageState.html":{}}}],["getsourcedb",{"_index":2222,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["gettags",{"_index":94,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getter/setter",{"_index":1542,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":3243,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3469,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":1904,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":1262,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["gizmo",{"_index":990,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["gland",{"_index":1194,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":14,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["global.editregistration",{"_index":2466,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["global_config",{"_index":770,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":244,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalconfig.getoption('fetchpreviousregistrations').pipe",{"_index":2510,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["globalconfigfactory",{"_index":771,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["globalconfigfactory(globals",{"_index":1367,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/functions.html":{}}}],["globalconfigstate",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["globally",{"_index":2219,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["globals",{"_index":2214,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globals.get('ruiconfig",{"_index":1368,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["globalskipconfirmation",{"_index":2289,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["globalsservice",{"_index":769,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":1579,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['ruiconfig",{"_index":660,"title":{},"body":{"components/AppWebComponent.html":{}}}],["good",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":682,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":680,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["granted",{"_index":4144,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4191,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":4034,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":3135,"title":{},"body":{"components/StageNavComponent.html":{}}}],["grow",{"_index":751,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["gtex",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["half",{"_index":1509,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1148,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["handleclick",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["handleclick(target",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["handlefile",{"_index":1649,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlefile(event",{"_index":1660,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlekey",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["handlekey(target",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["handlemessage",{"_index":788,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":798,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":1024,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handlenodedrag",{"_index":894,"title":{},"body":{"components/ContentComponent.html":{}}}],["handlenodedrag(event",{"_index":902,"title":{},"body":{"components/ContentComponent.html":{}}}],["handler",{"_index":1666,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["handles",{"_index":1260,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["handling",{"_index":1411,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["happen",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":3164,"title":{},"body":{"modules/StoreModule.html":{}}}],["haschanges",{"_index":2290,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["hash",{"_index":4057,"title":{},"body":{"dependencies.html":{}}}],["hasthicknessvalue",{"_index":3033,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["haswrappedcontent",{"_index":791,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganConfig.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{}}}],["header'},{'name",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["header.component",{"_index":1400,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1371,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1370,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":498,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":555,"title":{"modules/HeaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heart",{"_index":1172,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1173,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["helmet",{"_index":4038,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":61,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":167,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["hereby",{"_index":4143,"title":{},"body":{"license.html":{}}}],["hex",{"_index":4040,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["hiderequiredmarker",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["hides",{"_index":935,"title":{},"body":{"components/ContentComponent.html":{}}}],["highlight",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":3382,"title":{},"body":{"interfaces/VisibilityItem.html":{},"changelog.html":{}}}],["highlights",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["hint",{"_index":81,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["holders",{"_index":4180,"title":{},"body":{"license.html":{}}}],["home",{"_index":1386,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/User.html":{}}}],["hooked",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":2871,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["host",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["hostbinding",{"_index":678,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":1560,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":1039,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('@openclose",{"_index":1559,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":690,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('class.ccf",{"_index":1537,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":1035,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('style.margin",{"_index":1040,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbindings",{"_index":718,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostlistener",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":1611,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":1607,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["hostlistener('document:keydown",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["hostlisteners",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["hover",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovered",{"_index":1811,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovering",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":3473,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["html",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["htmlelement",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["htmlinputelement",{"_index":706,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["htmlscriptelement",{"_index":3345,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier",{"_index":2625,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier}_placement",{"_index":2646,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmaleorgans_vhm_spleen_colic_surface",{"_index":2895,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":1117,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":4108,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":4097,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":4101,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":2622,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"index.html":{}}}],["https://humanatlas.io",{"_index":4124,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":4119,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":4103,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":4099,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":3172,"title":{},"body":{"modules/StoreModule.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":3347,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["hubmap",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":3471,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["icon.add",{"_index":2796,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["icon.name",{"_index":1431,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icon.namespace",{"_index":1432,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icondefinition",{"_index":1401,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["iconregistry",{"_index":1412,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1413,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1153,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1137,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":154,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["idb",{"_index":4042,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1885,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["identifiers",{"_index":4203,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idmatches(ontologyid",{"_index":2034,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ids",{"_index":2570,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["iec",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":3334,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["ignoredkeys",{"_index":2017,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ignoredkeys.includes(key",{"_index":2020,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iif",{"_index":2322,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["iif(!!config.user",{"_index":2341,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["image",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":2180,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/functions.html":{}}}],["implementation",{"_index":60,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["implemented",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["implied",{"_index":4172,"title":{},"body":{"license.html":{}}}],["implies",{"_index":1090,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":99,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["imported",{"_index":1132,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["improve",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["in's",{"_index":1792,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["include",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":4167,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3608,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":4131,"title":{},"body":{"index.html":{}}}],["indicator",{"_index":1848,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["individual",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["infinity",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["infix",{"_index":745,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["info.side",{"_index":2272,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["infobuttonmodule",{"_index":2827,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["information",{"_index":913,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ExtractionSet.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":747,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/SlicesInputComponent.html":{}}}],["init",{"_index":3339,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["initial",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["initialconfig",{"_index":658,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":1583,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":1477,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{},"coverage.html":{}}}],["initialize",{"_index":3244,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":3254,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":3259,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":613,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":3257,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":65,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["initializing",{"_index":1087,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["initialregistration",{"_index":2485,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["initskipconfirmationlisteners",{"_index":2284,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["inject",{"_index":1889,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["inject(default_theme",{"_index":3276,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inject(document",{"_index":3341,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":2760,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"overview.html":{}}}],["injected",{"_index":2757,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["injecting",{"_index":163,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":1359,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('default",{"_index":3272,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":37,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["injector.get(overlaycontainer",{"_index":3287,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":3285,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":3274,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inline",{"_index":2805,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["input",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input'},{'name",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input.component",{"_index":766,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.component.html",{"_index":688,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.scss",{"_index":689,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.ts",{"_index":671,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input.component.ts:31",{"_index":3051,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:35",{"_index":722,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:36",{"_index":3049,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:40",{"_index":721,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:41",{"_index":3050,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:44",{"_index":2157,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:45",{"_index":720,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:46",{"_index":3055,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:48",{"_index":3048,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:50",{"_index":2150,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:54",{"_index":2161,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:60",{"_index":724,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:63",{"_index":3053,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:68",{"_index":2148,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:70",{"_index":723,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:73",{"_index":3052,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:83",{"_index":2152,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.module",{"_index":1874,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["input.module.ts",{"_index":756,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.target",{"_index":705,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input/block",{"_index":670,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input/name",{"_index":1873,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["input/slices",{"_index":2819,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input[type=number",{"_index":727,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["inputarray",{"_index":1264,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputarray.filter((item",{"_index":1268,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputevent",{"_index":698,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputs",{"_index":614,"title":{},"body":{"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["inputstring",{"_index":1768,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["inputstring.charat(0).touppercase",{"_index":1825,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["inputstring.slice(1",{"_index":1826,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["inputtarget",{"_index":704,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputtarget.files",{"_index":1676,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.files[0",{"_index":1677,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.value",{"_index":708,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputted",{"_index":2706,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["inputting",{"_index":2141,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["insertitem",{"_index":2488,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["insertitem(registration",{"_index":2569,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["inside",{"_index":1287,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["instance",{"_index":41,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instant",{"_index":1503,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":3089,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["instructions",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":128,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":194,"title":{},"body":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1179,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1180,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invisible",{"_index":1018,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["iri",{"_index":148,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iris",{"_index":2557,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["iris.has(item.id",{"_index":2561,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["is3dview",{"_index":890,"title":{},"body":{"components/ContentComponent.html":{}}}],["isdatavalid(page",{"_index":2575,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["isdropdownactive",{"_index":3071,"title":{},"body":{"components/StageNavComponent.html":{}}}],["isdropdownhidden",{"_index":3072,"title":{},"body":{"components/StageNavComponent.html":{}}}],["islighttheme",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["ismultiple",{"_index":1313,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["isnan(this.slicesconfig.thickness",{"_index":3034,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["isnarrowview",{"_index":891,"title":{},"body":{"components/ContentComponent.html":{}}}],["isolated",{"_index":1897,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["isvalid",{"_index":2580,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["it's",{"_index":1771,"title":{},"body":{"components/LeftSidebarComponent.html":{},"changelog.html":{}}}],["item",{"_index":1269,"title":{},"body":{"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["item.id",{"_index":2563,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.name",{"_index":2564,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.opacity",{"_index":2967,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["item.tooltip",{"_index":1829,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["item.ts",{"_index":3381,"title":{},"body":{"interfaces/VisibilityItem.html":{},"coverage.html":{}}}],["item.visible",{"_index":2966,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item?.tooltip",{"_index":1827,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["items",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["itemschange",{"_index":3394,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["iu",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":4120,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":3496,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["join",{"_index":1265,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["json",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["json.parse(filereader.result",{"_index":1680,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["json.stringify(jsonobj",{"_index":2593,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["json_file_reader",{"_index":1682,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["jsonfilereadercomponent",{"_index":500,"title":{"components/JsonFileReaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["jsonfilereadermodule",{"_index":1687,"title":{"modules/JsonFileReaderModule.html":{}},"body":{"modules/JsonFileReaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["jsonld",{"_index":2500,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["jsonobj",{"_index":2589,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["july",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["keeps",{"_index":1809,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["key",{"_index":700,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{}}}],["keyboard",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["keyboardevent",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["keys",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["keyval",{"_index":4043,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1174,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kidney.svg",{"_index":1175,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":4171,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1176,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1177,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":1776,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["label",{"_index":155,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["label'},{'name",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["label.component",{"_index":1278,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label.component.html",{"_index":1254,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.scss",{"_index":1253,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts",{"_index":1245,"title":{},"body":{"components/DetailsLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:15",{"_index":1257,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:20",{"_index":1256,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:29",{"_index":1259,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.module",{"_index":1867,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["label.module.ts",{"_index":1277,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label/details",{"_index":1244,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["labeled",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["labeledslidetogglecomponent",{"_index":503,"title":{"components/LabeledSlideToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labeledslidetogglemodule",{"_index":1732,"title":{"modules/LabeledSlideToggleModule.html":{}},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["labelel",{"_index":3081,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelel.contains(target",{"_index":3123,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelref",{"_index":3073,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labels",{"_index":1704,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0",{"_index":1728,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0]}}{{labels[1",{"_index":1731,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[1",{"_index":1721,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labs/dispatch",{"_index":4007,"title":{},"body":{"dependencies.html":{}}}],["landmark",{"_index":1335,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["landmarks",{"_index":1837,"title":{},"body":{"components/LeftSidebarComponent.html":{},"changelog.html":{}}}],["large",{"_index":1178,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["larynx",{"_index":1181,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["larynx.svg",{"_index":1182,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":2158,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{}}}],["lastname",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["lastnamevalidator",{"_index":2145,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["latest",{"_index":3534,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["latesttags",{"_index":34,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["launch",{"_index":2687,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launcher",{"_index":3354,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["launcher.component",{"_index":3373,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher.component.html",{"_index":3356,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":3355,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":3352,"title":{},"body":{"components/VideoModalLauncherComponent.html":{},"coverage.html":{}}}],["launcher.component.ts:17",{"_index":3359,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:22",{"_index":3358,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:32",{"_index":3360,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.module",{"_index":1111,"title":{},"body":{"modules/ContentModule.html":{}}}],["launcher.module.ts",{"_index":3372,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher/video",{"_index":1110,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"coverage.html":{}}}],["launches",{"_index":3361,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launching",{"_index":3353,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launchreviewmodal",{"_index":2692,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launchvideomodal",{"_index":3357,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["layers",{"_index":3995,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":49,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ld",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["leading",{"_index":2023,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["leak",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["left.px",{"_index":1013,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["left.svg",{"_index":1170,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["leftmargin",{"_index":1006,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["leftsidebarcomponent",{"_index":507,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leftsidebarmodule",{"_index":556,"title":{"modules/LeftSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["length",{"_index":3036,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["letter",{"_index":1767,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["level",{"_index":3281,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["levels",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":4184,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4181,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3569,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["library/assets/body4mesh_1338.glb",{"_index":2897,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["license",{"_index":4137,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["light",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["lighter",{"_index":1383,"title":{},"body":{"components/HeaderComponent.html":{}}}],["limit",{"_index":70,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":4151,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3828,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3035,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["line",{"_index":124,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["link",{"_index":1384,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["linkage",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":3592,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":2571,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"changelog.html":{}}}],["list'},{'name",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["list.component",{"_index":3224,"title":{},"body":{"modules/TagListModule.html":{}}}],["list.component.html",{"_index":3188,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.scss",{"_index":3187,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts",{"_index":3185,"title":{},"body":{"components/TagListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":3195,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:23",{"_index":3193,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:28",{"_index":3194,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:33",{"_index":3192,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:49",{"_index":3202,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:53",{"_index":3200,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:62",{"_index":3196,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.module",{"_index":2822,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["list.module.ts",{"_index":3221,"title":{},"body":{"modules/TagListModule.html":{}}}],["list/tag",{"_index":2821,"title":{},"body":{"modules/RightSidebarModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"coverage.html":{}}}],["listen",{"_index":1895,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1605,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listeners",{"_index":808,"title":{},"body":{"components/ContainerComponent.html":{}}}],["listens",{"_index":3095,"title":{},"body":{"components/StageNavComponent.html":{}}}],["literal",{"_index":1358,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ReferenceDataStateModel.html":{},"dependencies.html":{}}}],["little",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1183,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1184,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":50,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["loaded",{"_index":1140,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loaders.gl/core",{"_index":3998,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":4000,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":4001,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":3333,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["loadyoutubeplayerapi",{"_index":3328,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["local",{"_index":2515,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["located",{"_index":1536,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":3273,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["locations",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1975,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["log",{"_index":4125,"title":{},"body":{"index.html":{}}}],["logger",{"_index":3178,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":1518,"title":{},"body":{"classes/InitializationState.html":{}}}],["logo",{"_index":1393,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/User.html":{}}}],["longer",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1285,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["looks",{"_index":2248,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lookup",{"_index":2209,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lowerbound",{"_index":2936,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lowerbound[i",{"_index":2945,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lru",{"_index":4047,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":4002,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1185,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lung.svg",{"_index":1186,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1187,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":3057,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["made",{"_index":2347,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"changelog.html":{}}}],["main",{"_index":776,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":2218,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["makes",{"_index":3412,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["making",{"_index":1784,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["male",{"_index":1362,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["mammary",{"_index":1193,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["managers",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["manages",{"_index":3240,"title":{},"body":{"injectables/ThemingService.html":{}}}],["manually",{"_index":1671,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["map",{"_index":113,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map(([_viewtype",{"_index":3011,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([anatomicalstructures",{"_index":2962,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([entities",{"_index":136,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["map(([haschanges",{"_index":2358,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["map(([local",{"_index":2514,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["map(([nodes",{"_index":2980,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([organ",{"_index":1802,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(([organiri",{"_index":2987,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([page",{"_index":2498,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["map(([placement",{"_index":2951,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([rotation",{"_index":2956,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((item",{"_index":2562,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((node",{"_index":2972,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((set",{"_index":2102,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map((side",{"_index":3024,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(basehref",{"_index":2224,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["map(def",{"_index":1423,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["map(dims",{"_index":921,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(node",{"_index":3028,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(organ",{"_index":1814,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(p",{"_index":947,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(sex",{"_index":1819,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["map(side",{"_index":1822,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(type",{"_index":940,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(value",{"_index":2332,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["march",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":992,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":1515,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":4052,"title":{},"body":{"dependencies.html":{}}}],["marrow",{"_index":1162,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1163,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":743,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["mat.transformaspoint",{"_index":2937,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat.transformaspoint([1",{"_index":2939,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat_dialog_data",{"_index":2763,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["mat_form_field_default_options",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":1693,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationContentModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["match",{"_index":2135,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["matcheckboxmodule",{"_index":3229,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["matches",{"_index":183,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["matches.length",{"_index":189,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matches.map((as",{"_index":190,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matching",{"_index":75,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":3222,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["matdialog",{"_index":2451,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matdialogmodule",{"_index":2480,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["matdialogref",{"_index":2392,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["matdividermodule",{"_index":1864,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["material",{"_index":1388,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matexpansionmodule",{"_index":1862,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["matformfieldmodule",{"_index":765,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["math.floor(p.x",{"_index":948,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.y",{"_index":949,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.z",{"_index":950,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.gl/core",{"_index":2184,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":4005,"title":{},"body":{"dependencies.html":{}}}],["math.max(dims.x",{"_index":922,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.y",{"_index":926,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.z",{"_index":928,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(n",{"_index":2944,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.min(20",{"_index":2080,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["math.min(n",{"_index":2941,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.round(xyz.x",{"_index":2675,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.y",{"_index":2676,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.z",{"_index":2677,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["maticonmodule",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["maticonregistry",{"_index":1407,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":759,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["matlegacyslidermodule",{"_index":2880,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["matradiomodule",{"_index":3147,"title":{},"body":{"modules/StageNavModule.html":{}}}],["matripplemodule",{"_index":761,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["matrix",{"_index":2234,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix.transformaspoint",{"_index":2240,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix4",{"_index":2182,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["matrix4(matrix4.identity",{"_index":2236,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).rotatey(toradians(rotation)).multiplyright(n.transformmatrix",{"_index":2958,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).scale([2",{"_index":2899,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(model.transformmatrix",{"_index":2935,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matselectmodule",{"_index":1352,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["matslidermodule",{"_index":2881,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["matslidetogglemodule",{"_index":1737,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["matsnackbar",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["matsnackbarmodule",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":763,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["max",{"_index":999,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["maximum",{"_index":78,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["mc",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["mdc",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["measured",{"_index":1575,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":1577,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":1567,"title":{},"body":{"classes/InitializationState.html":{}}}],["memory",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1845,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["menu'},{'name",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["menu.component",{"_index":3445,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu.component.html",{"_index":3386,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.scss",{"_index":3385,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts",{"_index":3384,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:104",{"_index":3409,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:119",{"_index":3411,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:132",{"_index":3401,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:21",{"_index":3399,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:26",{"_index":3396,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":3397,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":3398,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":3395,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:55",{"_index":3414,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:70",{"_index":3407,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:80",{"_index":3402,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:90",{"_index":3417,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.module",{"_index":1878,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["menu.module.ts",{"_index":3444,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu/visibility",{"_index":1877,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"coverage.html":{}}}],["merchantability",{"_index":4174,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4154,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":1892,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":799,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1292,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1293,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":814,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":1935,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":1922,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":795,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":780,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":858,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":1050,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["messageserviceconfig",{"_index":1894,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":2718,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["metadata",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["metadatafield",{"_index":1952,"title":{"interfaces/MetaDataField.html":{}},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["meter",{"_index":2196,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["method",{"_index":910,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":1453,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":1447,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":25,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["millimeter",{"_index":2195,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["min",{"_index":746,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{}}}],["minor",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":4079,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":4138,"title":{},"body":{"license.html":{}}}],["mm",{"_index":725,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["mock",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["modal's",{"_index":2712,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["modal'},{'name",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["modal.component",{"_index":2479,"title":{},"body":{"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["modal.component.html",{"_index":2447,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.scss",{"_index":2751,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts",{"_index":2445,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:16",{"_index":3330,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:23",{"_index":3340,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:24",{"_index":2453,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:26",{"_index":2452,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:27",{"_index":2758,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:31",{"_index":2762,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:34",{"_index":2457,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:36",{"_index":2754,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:38",{"_index":3332,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:45",{"_index":2454,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{}}}],["modal.component.ts:46",{"_index":2761,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:47",{"_index":3331,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:55",{"_index":2759,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:69",{"_index":2456,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.module",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"modules/ReviewButtonModule.html":{}}}],["modal.module.ts",{"_index":2478,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["modal.wrapper",{"_index":3351,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal/registration",{"_index":593,"title":{},"body":{"modules/AppModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["modal/review",{"_index":2723,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"coverage.html":{}}}],["modal/video",{"_index":1109,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"coverage.html":{}}}],["modalclosed",{"_index":1758,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["mode",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["model",{"_index":22,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["model.blocksize.x.tofixed(3",{"_index":2640,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.y.tofixed(3",{"_index":2642,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.z.tofixed(3",{"_index":2644,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.label",{"_index":2626,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ$.subscribe(organ",{"_index":2418,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["model.organ.name",{"_index":2577,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ.organ",{"_index":2578,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ.src",{"_index":2470,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organiri",{"_index":2648,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.x.tofixed(3",{"_index":2666,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.y.tofixed(3",{"_index":2668,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.z.tofixed(3",{"_index":2670,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.representation_of",{"_index":149,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model.rotation.x.tofixed(3",{"_index":2656,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.y.tofixed(3",{"_index":2658,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.z.tofixed(3",{"_index":2660,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.numslices",{"_index":2638,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.thickness",{"_index":2636,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.snapshot",{"_index":2591,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.tooltip",{"_index":156,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model/model.state",{"_index":118,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["modelchanged",{"_index":2016,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/anatomical",{"_index":117,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["models/extraction",{"_index":1982,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/meta",{"_index":2494,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["models/visibility",{"_index":1983,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["modelstate",{"_index":88,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modelstatemodel",{"_index":1955,"title":{"interfaces/ModelStateModel.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["modification",{"_index":2518,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["modify",{"_index":4153,"title":{},"body":{"license.html":{}}}],["module",{"_index":541,"title":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["modules",{"_index":543,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/content/content.module",{"_index":587,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/header/header.module",{"_index":588,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/left",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/registration",{"_index":592,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/right",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["monorepo",{"_index":4088,"title":{},"body":{"index.html":{}}}],["more",{"_index":1325,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":3405,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseevent",{"_index":2404,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["mouseout",{"_index":3388,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover",{"_index":3389,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover(item",{"_index":3406,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1120,"title":{},"body":{"modules/CoreModule.html":{}}}],["moved",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["moz",{"_index":728,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ms",{"_index":4215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":1027,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":1060,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.drawers",{"_index":1054,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.opened",{"_index":3314,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":1052,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":1058,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["much",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":3238,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":4089,"title":{},"body":{"index.html":{}}}],["n",{"_index":964,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["n3",{"_index":4049,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name(value",{"_index":2166,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["name.endswith(info.organ",{"_index":2269,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["name_input",{"_index":2171,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["namechange",{"_index":2147,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["nameinputcomponent",{"_index":509,"title":{"components/NameInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameinputmodule",{"_index":1858,"title":{"modules/NameInputModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules.html":{},"overview.html":{}}}],["namematches(organname",{"_index":2039,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["names",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["namespace",{"_index":1149,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["namevalid",{"_index":2386,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["nan",{"_index":1998,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["narrow",{"_index":945,"title":{},"body":{"components/ContentComponent.html":{}}}],["native",{"_index":2599,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{}}}],["nav",{"_index":3068,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav'},{'name",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["nav.component",{"_index":3149,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav.component.html",{"_index":3070,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.scss",{"_index":3069,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts",{"_index":3064,"title":{},"body":{"components/StageNavComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["nav.component.ts:109",{"_index":3104,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:19",{"_index":3093,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:23",{"_index":3086,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:29",{"_index":3084,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:32",{"_index":3090,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:35",{"_index":3091,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:38",{"_index":3092,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:41",{"_index":3108,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:44",{"_index":3110,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:47",{"_index":3105,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:50",{"_index":3106,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:53",{"_index":3113,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:58",{"_index":3117,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:60",{"_index":3083,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:76",{"_index":3094,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:91",{"_index":3101,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.module",{"_index":1108,"title":{},"body":{"modules/ContentModule.html":{}}}],["nav.module.ts",{"_index":3146,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav/stage",{"_index":1107,"title":{},"body":{"modules/ContentModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["navigation",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":2705,"title":{},"body":{"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1144,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["needed",{"_index":3037,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["needs",{"_index":804,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["network",{"_index":4129,"title":{},"body":{"index.html":{}}}],["neuron",{"_index":1196,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neuron.svg",{"_index":1197,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":851,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":140,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newplacement",{"_index":2242,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.x_translation",{"_index":2245,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.y_translation",{"_index":2246,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.z_translation",{"_index":2247,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newposition",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["newrotation",{"_index":2843,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["newstructures",{"_index":2078,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["next",{"_index":123,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":1921,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ng",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ngacceptinputtype_expanded",{"_index":1641,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":1640,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":1639,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":789,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":566,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["ngonchanges",{"_index":2693,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ngondestroy",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["ngoninit",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["ngx",{"_index":681,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs",{"_index":3175,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":3154,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":3157,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":109,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs/store/operators",{"_index":2324,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":17,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":3151,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":3166,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1409,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsimmutabledatarepository",{"_index":1969,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsloggerpluginmodule",{"_index":3153,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":3179,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":3158,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":3167,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":29,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsstoragepluginmodule",{"_index":3156,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":3176,"title":{},"body":{"modules/StoreModule.html":{}}}],["nih",{"_index":4134,"title":{},"body":{"index.html":{}}}],["node",{"_index":4055,"title":{},"body":{"dependencies.html":{}}}],["node.representation_of",{"_index":2971,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodecollisions",{"_index":2888,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodedragevent",{"_index":903,"title":{},"body":{"components/ContentComponent.html":{}}}],["nodes",{"_index":1188,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["nodes.filter((model",{"_index":2982,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.map(n",{"_index":2957,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.svg",{"_index":1189,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["noninfringement",{"_index":4178,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":650,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normalizeplacement",{"_index":2369,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["normalizeplacement(place",{"_index":2230,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["not(.cdk",{"_index":2867,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["not(:last",{"_index":739,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["note",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":4115,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":2406,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["notice",{"_index":3761,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":3136,"title":{},"body":{"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["null",{"_index":1418,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["null)?.getcontainerelement",{"_index":3288,"title":{},"body":{"injectables/ThemingService.html":{}}}],["nullish",{"_index":2255,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["number",{"_index":71,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(value.slice(0",{"_index":1581,"title":{},"body":{"classes/InitializationState.html":{}}}],["numbersonlymodule",{"_index":3062,"title":{},"body":{"modules/SlicesInputModule.html":{}}}],["numeric",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["numslices",{"_index":1992,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["o.id",{"_index":2037,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.organ.tolowercase",{"_index":2040,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.side",{"_index":2038,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["obj",{"_index":3207,"title":{},"body":{"components/TagListComponent.html":{}}}],["object",{"_index":1138,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["object.entries(entities).foreach(([id",{"_index":143,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["object.keys(data.organirilookup).length",{"_index":2467,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["object.keys(db.organirilookup).find((code",{"_index":2258,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["object.keys(this.initialstate",{"_index":2018,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["object.values(aslookup",{"_index":2100,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["objects",{"_index":672,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["observable",{"_index":96,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["observableinput",{"_index":82,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["obtaining",{"_index":4147,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1062,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["offsets",{"_index":2797,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["old",{"_index":4102,"title":{},"body":{"index.html":{}}}],["oldposition",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.x",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.y",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.z",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["once",{"_index":1133,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2689,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ondestroy",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["one",{"_index":1326,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["online",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["onorganchange(organ",{"_index":2124,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["onorganirichange",{"_index":2083,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["onreferencedatachange",{"_index":2114,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ontological",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["ontology/ccf",{"_index":2623,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ontologyid",{"_index":1360,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["opacities",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":988,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":1875,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["open",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":1558,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["openapi",{"_index":3601,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":4111,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":4113,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":4112,"title":{},"body":{"index.html":{}}}],["opendialog",{"_index":2449,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["opened",{"_index":1033,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":1545,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":1501,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":1553,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":1502,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":1598,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening/closing/expanding",{"_index":1519,"title":{},"body":{"classes/InitializationState.html":{}}}],["opens",{"_index":1587,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["opposite",{"_index":1506,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["optimization",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1713,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["optionsel",{"_index":3082,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsel.contains(target",{"_index":3124,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsref",{"_index":3074,"title":{},"body":{"components/StageNavComponent.html":{}}}],["ordering",{"_index":1988,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["organ.id",{"_index":2682,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organ.name",{"_index":2061,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.name.tolowercase",{"_index":2131,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.ontologyid",{"_index":2132,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.sex?.tolowercase",{"_index":2133,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.side",{"_index":2062,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.src",{"_index":2420,"title":{},"body":{"components/RegistrationContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organ.touppercase",{"_index":2251,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organconfig",{"_index":1357,"title":{"interfaces/OrganConfig.html":{}},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["organdata",{"_index":2127,"title":{"interfaces/OrganData.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["organdata?.organ",{"_index":2130,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdata?.sex?.tolowercase",{"_index":2129,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions",{"_index":966,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.x",{"_index":969,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.y",{"_index":970,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z",{"_index":2111,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z].map(n",{"_index":971,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentry",{"_index":2276,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo.sex",{"_index":2253,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.sex",{"_index":2252,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.side?.tolowercase",{"_index":2138,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo?.side].join('|').touppercase",{"_index":2257,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organiri",{"_index":1961,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organirilookup",{"_index":2208,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organlist",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/User.html":{}}}],["organlistoptions(organoptions",{"_index":2679,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organname",{"_index":2041,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organoptions",{"_index":619,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["organoptions.includes(organ.id",{"_index":2683,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organoptions.length",{"_index":2680,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organs",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["organselect",{"_index":2390,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselect(organ",{"_index":2401,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselected",{"_index":1747,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["organselector.expanded",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["organselectormodule",{"_index":580,"title":{},"body":{"modules/AppModule.html":{},"modules/RegistrationContentModule.html":{}}}],["organsex",{"_index":2125,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organside",{"_index":2035,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organspatialentities",{"_index":2210,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["orthographic",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["ot",{"_index":1145,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["ot2od026671",{"_index":4136,"title":{},"body":{"index.html":{}}}],["other.expanded",{"_index":1627,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":1628,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":1633,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":1631,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":1630,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":1629,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":1632,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherwise",{"_index":919,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"license.html":{}}}],["out",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":679,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outputs",{"_index":717,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outside",{"_index":2839,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ovaries",{"_index":1198,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1199,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1200,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":3408,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["overall",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["overlay",{"_index":1345,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"injectables/ThemingService.html":{}}}],["overlaycontainer",{"_index":3269,"title":{},"body":{"injectables/ThemingService.html":{}}}],["overlays",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":2585,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["overview",{"_index":4192,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owning",{"_index":3297,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":2191,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["p.target",{"_index":2992,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.translation_units",{"_index":2193,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_rotation",{"_index":2200,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_scaling",{"_index":2203,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_translation",{"_index":2197,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_rotation",{"_index":2201,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.y_scaling",{"_index":2204,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_translation",{"_index":2198,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_rotation].map(toradians",{"_index":2202,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_scaling",{"_index":2205,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.z_translation].map((n",{"_index":2995,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_translation].map(t",{"_index":2199,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["package",{"_index":3572,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["page",{"_index":23,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["page.registrationcallbackset",{"_index":2608,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.registrationcallbackset$.subscribe((callbackset",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["page.registrationstarted$.subscribe((registrationstarted",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["page.user$.subscribe(user",{"_index":2416,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["page.user.firstname",{"_index":2468,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.lastname",{"_index":2469,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page/page.state",{"_index":119,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["pages",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["pagestate",{"_index":91,"title":{"injectables/PageState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagestatemodel",{"_index":2329,"title":{"interfaces/PageStateModel.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["pair",{"_index":1635,"title":{},"body":{"classes/InitializationState.html":{}}}],["paired",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["palatine",{"_index":1201,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas",{"_index":1204,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1205,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1346,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"changelog.html":{}}}],["panel",{"_index":1284,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":2735,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["param",{"_index":159,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":1514,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":1896,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["parent.messages.pipe(takewhile",{"_index":1928,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":662,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsed",{"_index":1662,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parsedjson",{"_index":1651,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parseorgan",{"_index":665,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseorgan(value",{"_index":652,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":4015,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":3183,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{}}}],["particular",{"_index":4176,"title":{},"body":{"license.html":{}}}],["partly",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":1457,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":1462,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":1461,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":1460,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":1459,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["pass",{"_index":2071,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["passed",{"_index":1791,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["passing",{"_index":1796,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["patch",{"_index":2323,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["patch(name",{"_index":2350,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["patchplacement",{"_index":2232,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["patchplacement.target",{"_index":2244,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["path",{"_index":4036,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":1083,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":2903,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pelvis",{"_index":1206,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":1991,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["performance",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":4142,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4161,"title":{},"body":{"license.html":{}}}],["person",{"_index":2328,"title":{"interfaces/Person.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"coverage.html":{},"license.html":{}}}],["persons",{"_index":4162,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2302,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"changelog.html":{}}}],["pipe",{"_index":2950,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pipe(filter(s",{"_index":2354,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["pipe(mergeall",{"_index":1930,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["place",{"_index":2243,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.x_rotation",{"_index":2550,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.x_translation",{"_index":2237,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.y_rotation",{"_index":2551,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.y_translation",{"_index":2238,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.z_rotation",{"_index":2552,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.z_translation",{"_index":2239,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["placed",{"_index":3165,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":1667,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["placement",{"_index":2190,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["placement.length",{"_index":2979,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placement_date",{"_index":2649,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["placementcube",{"_index":2890,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placementpatches",{"_index":2213,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["placenta",{"_index":1209,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["placenta.svg",{"_index":1210,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["play",{"_index":3368,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["play_circle_outline",{"_index":3365,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["player",{"_index":3335,"title":{},"body":{"components/VideoModalComponent.html":{},"modules/VideoModalModule.html":{},"dependencies.html":{}}}],["pluckunique",{"_index":2325,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["plugin",{"_index":3155,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":3174,"title":{},"body":{"modules/StoreModule.html":{}}}],["plus",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["populated",{"_index":2262,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["popup",{"_index":3097,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["portal",{"_index":1392,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":4169,"title":{},"body":{"license.html":{}}}],["position",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":1541,"title":{},"body":{"classes/InitializationState.html":{}}}],["position.x",{"_index":978,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["position.x.tofixed(1)}_${position.y.tofixed(1)}_${position.z.tofixed(1",{"_index":2048,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["position.y",{"_index":2241,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.z",{"_index":976,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["position.z].map((n",{"_index":3016,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["positions",{"_index":813,"title":{},"body":{"components/ContainerComponent.html":{}}}],["possible",{"_index":1966,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["posterior",{"_index":977,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["potential",{"_index":2249,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["pre",{"_index":3448,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["preclose",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["preferences",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["prevent",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":1782,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["previousitems",{"_index":2073,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previousitems.map(structure",{"_index":2079,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previously",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["previousregistrationnodes",{"_index":2889,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations",{"_index":2505,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations.map((entity",{"_index":2988,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousvisibility",{"_index":1817,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["previousvisibilityitems",{"_index":1748,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["prevnodes",{"_index":2952,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["primary",{"_index":3460,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["private",{"_index":20,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":1026,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processed",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":801,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["processing",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":3582,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2716,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["projected",{"_index":809,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects",{"_index":4090,"title":{},"body":{"index.html":{}}}],["projects/.../anatomical",{"_index":4201,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../app",{"_index":4084,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../block",{"_index":4205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../config.ts",{"_index":4083,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../container.component.ts",{"_index":4085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../default",{"_index":4206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../drawer.component.ts",{"_index":4198,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":4211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../messages.ts",{"_index":4197,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../meta",{"_index":4199,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../model.state.ts",{"_index":4202,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../reference",{"_index":4081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../rotation",{"_index":4207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../scene.state.ts",{"_index":4082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../slices",{"_index":4209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../stage",{"_index":4200,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":4212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tag",{"_index":4208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../theming.service.ts",{"_index":4210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":1489,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["promise(resolve",{"_index":1486,"title":{},"body":{"classes/InitializationState.html":{}}}],["properties",{"_index":19,"title":{"properties.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"properties.html":{}}}],["property",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["prostate",{"_index":1211,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1212,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":821,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":1900,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":547,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"changelog.html":{},"overview.html":{}}}],["provides",{"_index":2678,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["providing",{"_index":1002,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["public",{"_index":2384,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"changelog.html":{}}}],["publish",{"_index":4155,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":4177,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":938,"title":{},"body":{"components/ContentComponent.html":{},"components/JsonFileReaderComponent.html":{}}}],["push",{"_index":2459,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["pushed",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1533,"title":{},"body":{"classes/InitializationState.html":{}}}],["python",{"_index":3495,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["q",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["qs",{"_index":4058,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":958,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":817,"title":{},"body":{"components/ContainerComponent.html":{}}}],["quickly",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":1777,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["radius",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ratio",{"_index":2654,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rc.1",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":4060,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":3990,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":4010,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":4062,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2177,"title":{},"body":{"modules/NameInputModule.html":{},"modules/TagSearchModule.html":{}}}],["readable",{"_index":4064,"title":{},"body":{"dependencies.html":{}}}],["reader",{"_index":1645,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader'},{'name",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reader.component",{"_index":1692,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader.component.html",{"_index":1647,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.scss",{"_index":1646,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts",{"_index":1644,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"coverage.html":{}}}],["reader.component.ts:13",{"_index":1659,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:15",{"_index":1670,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:18",{"_index":1654,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:21",{"_index":1652,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:34",{"_index":1663,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:44",{"_index":1661,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.module",{"_index":1882,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["reader.module.ts",{"_index":1691,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader/json",{"_index":1643,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["readonly",{"_index":160,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["real",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":3163,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":1016,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":1902,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":1356,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rectify",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["reduce((acc",{"_index":2974,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reduction",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["refdata",{"_index":2521,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reference",{"_index":90,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["referencedata",{"_index":2029,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["referencedatastate",{"_index":1984,"title":{"injectables/ReferenceDataState.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["referencedatastatemodel",{"_index":2207,"title":{"interfaces/ReferenceDataStateModel.html":{}},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{}}}],["referenceorgannodes",{"_index":2886,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["referenceorgansimplenodes",{"_index":2887,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":1037,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["refernced",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":726,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["refreshblocksize",{"_index":714,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["refreshes",{"_index":713,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["refreshslices",{"_index":3045,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["reg",{"_index":2529,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_first_name",{"_index":2538,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_last_name",{"_index":2539,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.placement",{"_index":2535,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.placement[0",{"_index":2534,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_count",{"_index":2555,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_thickness",{"_index":2554,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.x_dimension",{"_index":2546,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.y_dimension",{"_index":2547,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.z_dimension",{"_index":2548,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["regions",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":620,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["register(usecallback",{"_index":2588,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["register/download",{"_index":2586,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["registerbuttonclick",{"_index":2391,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerbuttonclick(event",{"_index":2403,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerdata",{"_index":2696,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registered",{"_index":1154,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1442,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":1439,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":1467,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":1443,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1404,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registers",{"_index":1437,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registration",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["registration.registrations",{"_index":3177,"title":{},"body":{"modules/StoreModule.html":{}}}],["registration/registration.state",{"_index":2931,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["registrationcallback",{"_index":638,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["registrationcallback?.(json",{"_index":2595,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["registrationcallbackset",{"_index":2281,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["registrationcontentcomponent",{"_index":510,"title":{"components/RegistrationContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationcontentmodule",{"_index":2438,"title":{"modules/RegistrationContentModule.html":{}},"body":{"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules.html":{},"overview.html":{}}}],["registrationisvalid",{"_index":2694,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registrationmodalcomponent",{"_index":511,"title":{"components/RegistrationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationmodalmodule",{"_index":557,"title":{"modules/RegistrationModalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RegistrationModalModule.html":{},"modules.html":{},"overview.html":{}}}],["registrations",{"_index":2486,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["registrations#1",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["registrationstarted",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/User.html":{}}}],["registrationstate",{"_index":897,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registrationstated",{"_index":2311,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["registrationstatemodel",{"_index":2482,"title":{"interfaces/RegistrationStateModel.html":{}},"body":{"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["registry",{"_index":1414,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":3159,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1403,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["registry.state.ts:127",{"_index":1473,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:147",{"_index":1471,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:45",{"_index":1469,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:58",{"_index":1474,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:87",{"_index":1475,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:97",{"_index":1476,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1136,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1402,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["registry[methodname",{"_index":1449,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regs",{"_index":2506,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["related",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":1798,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["reliability",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["removable",{"_index":3186,"title":{},"body":{"components/TagListComponent.html":{}}}],["remove",{"_index":3198,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{}}}],["removeclass",{"_index":3290,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":142,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{}}}],["removed.add(id",{"_index":145,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removed.has(iri",{"_index":150,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removeeventlistener('beforeunload",{"_index":2364,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["removes",{"_index":3197,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["removetag",{"_index":30,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/TagListComponent.html":{}}}],["removetag(tag",{"_index":66,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["renderer",{"_index":3284,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":3271,"title":{},"body":{"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["renderer[methodname](overlay",{"_index":3292,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":3291,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":3067,"title":{},"body":{"components/StageNavComponent.html":{}}}],["renders",{"_index":1250,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["repeat",{"_index":1395,"title":{},"body":{"components/HeaderComponent.html":{}}}],["replaysubject",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["replaysubject(1",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["repository",{"_index":4087,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2673,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["required",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["requiredvalues",{"_index":2576,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["requiredvalues.every(value",{"_index":2579,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["researcher's",{"_index":2142,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["reset",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["resetitem",{"_index":3390,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["resetrotation",{"_index":2857,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["resetrotation(dimension",{"_index":2854,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["resets",{"_index":914,"title":{},"body":{"components/ContentComponent.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["resetstage",{"_index":895,"title":{},"body":{"components/ContentComponent.html":{}}}],["resettheme",{"_index":3245,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resize",{"_index":907,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor",{"_index":952,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor(this.rootref.nativeelement",{"_index":963,"title":{},"body":{"components/ContentComponent.html":{}}}],["resolve",{"_index":1482,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolved",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["resolver",{"_index":1428,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["resolves",{"_index":832,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["respond",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":3404,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["restriction",{"_index":4150,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":80,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retracted",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":133,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["returned",{"_index":79,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":1246,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reverted",{"_index":3415,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["review",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["review/review",{"_index":2825,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["review_button",{"_index":2732,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewbuttoncomponent",{"_index":513,"title":{"components/ReviewButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewbuttonmodule",{"_index":2743,"title":{"modules/ReviewButtonModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewing",{"_index":2750,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["reviewmodal",{"_index":2688,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewmodalcomponent",{"_index":516,"title":{"components/ReviewModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewmodaldata",{"_index":2753,"title":{"interfaces/ReviewModalData.html":{}},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"coverage.html":{}}}],["reviewmodalmodule",{"_index":2748,"title":{"modules/ReviewModalModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules.html":{},"overview.html":{}}}],["rgb",{"_index":4041,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["right.px",{"_index":1014,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["right.svg",{"_index":1171,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":1007,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rights",{"_index":4152,"title":{},"body":{"license.html":{}}}],["rightsidebarcomponent",{"_index":517,"title":{"components/RightSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rightsidebarmodule",{"_index":558,"title":{"modules/RightSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["root",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["root_states",{"_index":3161,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootref",{"_index":898,"title":{},"body":{"components/ContentComponent.html":{}}}],["rotatednodes",{"_index":2885,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotates",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["rotatexyz([p.x_rotation",{"_index":2997,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotatexyz([rotation.x",{"_index":3017,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation",{"_index":519,"title":{"interfaces/Rotation.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotation.x",{"_index":2863,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.y",{"_index":2864,"title":{},"body":{"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.z",{"_index":2865,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.z].map(toradians",{"_index":3018,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation_order",{"_index":2661,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rotation_slider",{"_index":2849,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotation_units",{"_index":2663,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rotationchange",{"_index":2841,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotations",{"_index":2852,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotationslidercomponent",{"_index":518,"title":{"components/RotationSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rotationslidermodule",{"_index":2810,"title":{"modules/RotationSliderModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["round",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["ru/cdk",{"_index":3975,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":3977,"title":{},"body":{"dependencies.html":{}}}],["ru/common/entity",{"_index":103,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ru/common/typings",{"_index":2181,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ru/ngxs",{"_index":3152,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ru/ngxs/decorators",{"_index":107,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ru/ngxs/repositories",{"_index":108,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["rui",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{},"index.html":{}}}],["rui/src/app/app",{"_index":609,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/app.component.ts",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["rui/src/app/app.component.ts:112",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:130",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:140",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:179",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:190",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:44",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:47",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:50",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:53",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:55",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:59",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:60",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:62",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:63",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:64",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:66",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:68",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:70",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:73",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.module.ts",{"_index":561,"title":{},"body":{"modules/AppModule.html":{}}}],["rui/src/app/app.module.ts:56",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["rui/src/app/core/core.module.ts",{"_index":1116,"title":{},"body":{"modules/CoreModule.html":{}}}],["rui/src/app/core/models/anatomical",{"_index":3180,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/core/models/documentation.ts",{"_index":1280,"title":{},"body":{"interfaces/DocumentationContent.html":{},"coverage.html":{}}}],["rui/src/app/core/models/extraction",{"_index":1298,"title":{},"body":{"interfaces/ExtractionSet.html":{},"coverage.html":{}}}],["rui/src/app/core/models/meta",{"_index":1953,"title":{},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/core/models/visibility",{"_index":3380,"title":{},"body":{"interfaces/VisibilityItem.html":{},"coverage.html":{}}}],["rui/src/app/core/services/config/config.module.ts",{"_index":768,"title":{},"body":{"modules/ConfigModule.html":{}}}],["rui/src/app/core/services/config/config.ts",{"_index":1355,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/services/theming/theming.module.ts",{"_index":3234,"title":{},"body":{"modules/ThemingModule.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts",{"_index":3239,"title":{},"body":{"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:13",{"_index":3266,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:14",{"_index":3267,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:16",{"_index":3265,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:18",{"_index":3268,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:21",{"_index":3256,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:25",{"_index":3248,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:39",{"_index":3253,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:48",{"_index":3264,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:60",{"_index":3262,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:71",{"_index":3260,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:83",{"_index":3251,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/store/anatomical",{"_index":7,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["rui/src/app/core/store/icon",{"_index":1135,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/model/model.state.ts",{"_index":1956,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/page/page.state.ts",{"_index":2279,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"coverage.html":{}}}],["rui/src/app/core/store/page/page.state.ts:112",{"_index":2293,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:127",{"_index":2300,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:137",{"_index":2303,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:147",{"_index":2297,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:154",{"_index":2298,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:164",{"_index":2294,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:170",{"_index":2295,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:57",{"_index":2315,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:59",{"_index":2310,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:60",{"_index":2313,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:61",{"_index":2308,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:62",{"_index":2306,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:65",{"_index":2317,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:70",{"_index":2319,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:78",{"_index":2321,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:80",{"_index":2292,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:96",{"_index":2296,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/reference",{"_index":2178,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts",{"_index":2483,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts",{"_index":2883,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:118",{"_index":2919,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:129",{"_index":2921,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:157",{"_index":2923,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:164",{"_index":2924,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:182",{"_index":2926,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:204",{"_index":2906,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:220",{"_index":2907,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:221",{"_index":2908,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:222",{"_index":2891,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:238",{"_index":2894,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:248",{"_index":2893,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:53",{"_index":2910,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:64",{"_index":2912,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:81",{"_index":2914,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:90",{"_index":2917,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/store.module.ts",{"_index":3150,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/modules/content/content.component.ts",{"_index":885,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["rui/src/app/modules/content/content.component.ts:106",{"_index":916,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:114",{"_index":909,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:124",{"_index":904,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:26",{"_index":901,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:28",{"_index":951,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:33",{"_index":941,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:37",{"_index":932,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:48",{"_index":942,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:53",{"_index":933,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:58",{"_index":954,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:61",{"_index":899,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:84",{"_index":908,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:97",{"_index":905,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.module.ts",{"_index":1104,"title":{},"body":{"modules/ContentModule.html":{}}}],["rui/src/app/modules/content/stage",{"_index":3063,"title":{},"body":{"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/modules/content/video",{"_index":3326,"title":{},"body":{"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/header/header.component.ts",{"_index":1369,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["rui/src/app/modules/header/header.component.ts:17",{"_index":1375,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.component.ts:19",{"_index":1374,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.component.ts:21",{"_index":1373,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.module.ts",{"_index":1399,"title":{},"body":{"modules/HeaderModule.html":{}}}],["rui/src/app/modules/left",{"_index":1740,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/registration",{"_index":2379,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/review/review",{"_index":2684,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/right",{"_index":2784,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/block",{"_index":669,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/details",{"_index":1243,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts",{"_index":775,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:105",{"_index":810,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:115",{"_index":800,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:124",{"_index":811,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":797,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":829,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":820,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":825,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":831,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":834,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":815,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:62",{"_index":793,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:83",{"_index":806,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts",{"_index":1001,"title":{},"body":{"components/ContentComponent-1.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:103",{"_index":1034,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:116",{"_index":1029,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":1019,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":1020,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":1022,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":1023,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":1017,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":1036,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":1015,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:60",{"_index":1028,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:70",{"_index":1025,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer.module.ts",{"_index":1291,"title":{},"body":{"modules/DrawerModule.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":1479,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":1491,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":1488,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:41",{"_index":1492,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:46",{"_index":1493,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:56",{"_index":1497,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:65",{"_index":1494,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/messages.ts",{"_index":1075,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/drawer/toggle",{"_index":3293,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/extraction",{"_index":1304,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/json",{"_index":1642,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/labeled",{"_index":1695,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/name",{"_index":2140,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/rotation",{"_index":2828,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/slices",{"_index":3030,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/tag",{"_index":3184,"title":{},"body":{"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/visibility",{"_index":3383,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/services/message/message.service.ts",{"_index":1883,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:103",{"_index":1943,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:112",{"_index":1944,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:128",{"_index":1951,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:130",{"_index":1948,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:153",{"_index":1950,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:163",{"_index":1949,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:50",{"_index":1940,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:70",{"_index":1945,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:83",{"_index":1941,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:93",{"_index":1942,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui_locations.jsonld",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["rui_organs",{"_index":1812,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui_organs.filter(organ",{"_index":2681,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ruiconfig",{"_index":1365,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":805,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["runtime",{"_index":1143,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":112,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":114,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["s",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/User.html":{}}}],["safehtml",{"_index":1405,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1406,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["same",{"_index":1989,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sample",{"_index":3902,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1416,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1146,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["sanitizer",{"_index":1415,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saveas",{"_index":2489,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["saveas(data",{"_index":2600,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["saved",{"_index":2348,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["saver",{"_index":2490,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1390,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale([blocksize.x",{"_index":3019,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scale([entity.x_dimension",{"_index":2998,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scalex",{"_index":735,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scaling_units",{"_index":2653,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["scene",{"_index":24,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["scene/scene.state",{"_index":120,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"modules/StoreModule.html":{}}}],["scenegraph",{"_index":2896,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodelookup",{"_index":2211,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["scenestate",{"_index":92,"title":{"injectables/SceneState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenestatemodel",{"_index":2932,"title":{"interfaces/SceneStateModel.html":{}},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["scheduled",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["schemes",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":4130,"title":{},"body":{"index.html":{}}}],["script",{"_index":3343,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["script.src",{"_index":3346,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["scroll",{"_index":1838,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["scrollbar",{"_index":1840,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scrolling",{"_index":883,"title":{},"body":{"components/ContainerComponent.html":{}}}],["search",{"_index":77,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["search.component",{"_index":3231,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search.component.ts",{"_index":3967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.module",{"_index":2824,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["search.module.ts",{"_index":3228,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search/tag",{"_index":2823,"title":{},"body":{"modules/RightSidebarModule.html":{},"modules/TagSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searches",{"_index":74,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"changelog.html":{}}}],["searchexternal",{"_index":31,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["searchexternal(text",{"_index":68,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["section",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["sections",{"_index":3056,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["see",{"_index":2397,"title":{},"body":{"components/RegistrationContentComponent.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":1846,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["selected",{"_index":1311,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["selecting",{"_index":1308,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["selection",{"_index":1710,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["selector",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["selects",{"_index":1455,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["sell",{"_index":4159,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":794,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["sender",{"_index":1888,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":1617,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":1584,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":1938,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":1906,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1614,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sendtoggle",{"_index":1618,"title":{},"body":{"classes/InitializationState.html":{}}}],["sennet",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":892,"title":{},"body":{"components/ContentComponent.html":{}}}],["sent",{"_index":1076,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["separated",{"_index":1251,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["server",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":47,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":3275,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/config/config",{"_index":1410,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["services/config/config.module",{"_index":1122,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":1080,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1123,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":141,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{}}}],["set's",{"_index":2566,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["set(reg.ccf_annotations",{"_index":2558,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["set.label",{"_index":2103,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["set.name",{"_index":1336,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.sites.length",{"_index":1337,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.ts",{"_index":1299,"title":{},"body":{"interfaces/ExtractionSet.html":{},"coverage.html":{}}}],["set__chips",{"_index":3215,"title":{},"body":{"components/TagListComponent.html":{}}}],["setallopacity",{"_index":3391,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setallopacity(value",{"_index":3410,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setanatomicalstructures(anatomicalstructures",{"_index":2068,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setblocksize(blocksize",{"_index":2042,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setchange",{"_index":1314,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["setdisplayerrors(displayerrors",{"_index":2567,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setextractionsets(extractionsets",{"_index":2069,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setextractionsites(extractionsites",{"_index":2067,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sethaschanges",{"_index":2285,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setname(value",{"_index":2160,"title":{},"body":{"components/NameInputComponent.html":{}}}],["setorgan(organ",{"_index":2059,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setorganselection(ids",{"_index":2572,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setposition(position",{"_index":2045,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setrotation(rotation",{"_index":2044,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets",{"_index":807,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sets.length",{"_index":2105,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets[0].sites",{"_index":2106,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsex(sex",{"_index":2064,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsexfromlabel",{"_index":1752,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["setsexfromlabel(label",{"_index":1773,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["setshowprevious",{"_index":2072,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setshowprevious(showprevious",{"_index":2066,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setside(side",{"_index":2065,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsidefromlabel",{"_index":1753,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["setsidefromlabel(label",{"_index":1775,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["setslicesconfig(slicesconfig",{"_index":2049,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["settheme",{"_index":3246,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":3263,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":1586,"title":{},"body":{"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/ToggleButtonComponent.html":{}}}],["setting",{"_index":2833,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/StoreModule.html":{}}}],["settoinitialregistration",{"_index":2604,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setup",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["setusecancelregistrationcallback",{"_index":2286,"title":{},"body":{"injectables/PageState.html":{}}}],["setusecancelregistrationcallback(use",{"_index":2299,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setusedropdownmenu(value",{"_index":3111,"title":{},"body":{"components/StageNavComponent.html":{}}}],["setuseregistrationcallback(use",{"_index":2565,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setusername",{"_index":2287,"title":{},"body":{"injectables/PageState.html":{}}}],["setusername(name",{"_index":2301,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setviewside(viewside",{"_index":2051,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setviewtype",{"_index":896,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(is3dview",{"_index":915,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(viewtype",{"_index":2050,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sex",{"_index":1361,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["sexbylabel",{"_index":1749,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["sexes",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["sexselected",{"_index":2387,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["shadow",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["shall",{"_index":4166,"title":{},"body":{"license.html":{}}}],["shared",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"modules/RightSidebarModule.html":{},"interfaces/SlicesConfig.html":{},"modules/SlicesInputModule.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"modules/VisibilityMenuModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/User.html":{}}}],["shared/components/block",{"_index":2814,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/details",{"_index":1866,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/extraction",{"_index":1868,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/json",{"_index":1881,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/labeled",{"_index":1870,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/StageNavModule.html":{}}}],["shared/components/name",{"_index":1872,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{}}}],["shared/components/rotation",{"_index":2815,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/slices",{"_index":2818,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/tag",{"_index":2820,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/visibility",{"_index":1876,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/rxjs",{"_index":1972,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shared/web",{"_index":647,"title":{},"body":{"components/AppWebComponent.html":{}}}],["shifts",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["shortest",{"_index":4035,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":955,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["showcollisions",{"_index":2933,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["showdebugbuttons",{"_index":893,"title":{},"body":{"components/ContentComponent.html":{}}}],["showing",{"_index":2710,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["shown",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["showprevious",{"_index":1962,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shows",{"_index":934,"title":{},"body":{"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["shrink",{"_index":3436,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["side",{"_index":1038,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["sidebar",{"_index":1742,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["sidebar.component",{"_index":1880,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar.component.html",{"_index":1744,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1743,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":1741,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:102",{"_index":1774,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:111",{"_index":1778,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:123",{"_index":1780,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:136",{"_index":1794,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2787,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":2786,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":1762,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:26",{"_index":1760,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":1761,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1820,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":1823,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:39",{"_index":1815,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:43",{"_index":1806,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:54",{"_index":1807,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:60",{"_index":1816,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:62",{"_index":1759,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:75",{"_index":1764,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:89",{"_index":1789,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.module",{"_index":591,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.module.ts",{"_index":1861,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar/left",{"_index":590,"title":{},"body":{"modules/AppModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["sidebar/right",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["sidebylabel",{"_index":1750,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidechange",{"_index":3079,"title":{},"body":{"components/StageNavComponent.html":{}}}],["sides",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":2400,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["significant",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":3114,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["simplescenenodelookup",{"_index":2212,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["simplifies",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["single",{"_index":1905,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["site",{"_index":1790,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sites",{"_index":1300,"title":{},"body":{"interfaces/ExtractionSet.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["sizable",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sizes",{"_index":684,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/RightSidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["skin",{"_index":1213,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1214,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipconfirmation",{"_index":2288,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["skipself",{"_index":1119,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["skipunsavedchangesconfirmation",{"_index":621,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["skipuntil",{"_index":1978,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["skipuntil(this.page.registrationstarted$.pipe",{"_index":2121,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["slice",{"_index":1968,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["slice(0",{"_index":193,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["slice_count",{"_index":2637,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["slice_input",{"_index":3042,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slice_thickness",{"_index":2635,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["slices",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["slicesconfig",{"_index":1963,"title":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slicesconfigchange",{"_index":3032,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slicesinputcomponent",{"_index":521,"title":{"components/SlicesInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slicesinputmodule",{"_index":2811,"title":{"modules/SlicesInputModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/SlicesInputModule.html":{},"modules.html":{},"overview.html":{}}}],["slide",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{}}}],["slide_toggle",{"_index":1726,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["slider",{"_index":1699,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":520,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["slider.component",{"_index":2879,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider.component.html",{"_index":2837,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.scss",{"_index":2838,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts",{"_index":2829,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slider.component.ts:34",{"_index":2860,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":2859,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:44",{"_index":2858,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:59",{"_index":2861,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:68",{"_index":2862,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.module",{"_index":2817,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["slider.module.ts",{"_index":2878,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider/ngx",{"_index":3980,"title":{},"body":{"dependencies.html":{}}}],["slider/rotation",{"_index":2816,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sliders",{"_index":1843,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slightly",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1215,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar.dismiss",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar__surface",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["snapshot",{"_index":2344,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["snapshot.useregistrationcallback",{"_index":2594,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["software",{"_index":4091,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":1380,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["solved",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["sortby",{"_index":1974,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sortby(set.extractionsites.map((entity",{"_index":2104,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["sources",{"_index":1918,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["sources.includes(msg.source",{"_index":1920,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":986,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["sparc",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":3506,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":2915,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["spatialentity",{"_index":2107,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.x_dimension",{"_index":2109,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.y_dimension",{"_index":2110,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.z_dimension",{"_index":2112,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentityjsonld",{"_index":629,"title":{},"body":{"components/AppWebComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialplacement",{"_index":2647,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["spatialplacementjsonld",{"_index":2185,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["spatialscenenode",{"_index":2186,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["spec",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":4110,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1095,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":4109,"title":{},"body":{"index.html":{}}}],["specified",{"_index":1917,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/RegistrationStateModel.html":{}}}],["specifying",{"_index":1899,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":1216,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["spinning",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1219,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1220,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["sprint",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1996,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["stage",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["stage_nav",{"_index":3126,"title":{},"body":{"components/StageNavComponent.html":{}}}],["stagenavcomponent",{"_index":523,"title":{"components/StageNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stagenavmodule",{"_index":1102,"title":{"modules/StageNavModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["staging",{"_index":3583,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["stamp",{"_index":2615,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["standalone",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":4095,"title":{},"body":{"index.html":{}}}],["start",{"_index":849,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":1067,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["start?.opened",{"_index":1066,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["startdrawers",{"_index":872,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":876,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":880,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":2123,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["startexpanded",{"_index":1065,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["starts",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":1141,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/RegistrationModalComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":838,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["state",{"_index":15,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["state$.pipe(map(x",{"_index":2507,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["state('closed",{"_index":1525,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":1530,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":1534,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":1046,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state('full",{"_index":1535,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":1531,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('open",{"_index":1524,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":1047,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state.organspatialentities[updatediri",{"_index":2267,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["statechange",{"_index":1557,"title":{},"body":{"classes/InitializationState.html":{}}}],["statements",{"_index":3910,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":106,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["states",{"_index":164,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent-1.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":1638,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{}}}],["stay",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["stomach",{"_index":1221,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1222,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":997,"title":{},"body":{"components/ContentComponent.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1124,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored",{"_index":2830,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["storedebugmodule",{"_index":1106,"title":{},"body":{"modules/ContentModule.html":{}}}],["storemodule",{"_index":1114,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":3162,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":4065,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":4063,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":69,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":1249,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["structure",{"_index":8,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["structure.opacity",{"_index":2081,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["structures",{"_index":1786,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["strvalue",{"_index":3039,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["style",{"_index":1042,"title":{},"body":{"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/VisibilityToggleComponent.html":{}}}],["style.margin",{"_index":1012,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["styled",{"_index":2701,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["styles",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":1580,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["styling",{"_index":1668,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"changelog.html":{}}}],["sub",{"_index":1094,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":1890,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"license.html":{}}}],["sublicense",{"_index":4157,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2119,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["subscribe(updateskipconfirmation",{"_index":2355,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["subscription",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["subscriptions",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["substantial",{"_index":4168,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1438,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["suffix",{"_index":742,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["suffix.show",{"_index":3058,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["super",{"_index":161,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["super(configstore",{"_index":657,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super.ngxsoninit",{"_index":162,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["support",{"_index":3508,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1150,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swiper",{"_index":4069,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["switched",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":1979,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap(data",{"_index":2229,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["switchmap(fetch",{"_index":2511,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["switchmap(organ",{"_index":2117,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap(url",{"_index":2227,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["sync",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["syncexpanded(other",{"_index":1626,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":1623,"title":{},"body":{"classes/InitializationState.html":{}}}],["t",{"_index":1886,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["t.label).join",{"_index":2614,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["table",{"_index":3974,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3973,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":12,"title":{"interfaces/Tag.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tag.id",{"_index":180,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{}}}],["tag.label",{"_index":3210,"title":{},"body":{"components/TagListComponent.html":{}}}],["tag.ts",{"_index":3181,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tag.type",{"_index":144,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["tag_list",{"_index":3209,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagclasses",{"_index":3189,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagclasses(tag",{"_index":3199,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagging",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["tagid",{"_index":115,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["tagid(_index",{"_index":3201,"title":{},"body":{"components/TagListComponent.html":{}}}],["taglistcomponent",{"_index":525,"title":{"components/TagListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taglistmodule",{"_index":2812,"title":{"modules/TagListModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagListModule.html":{},"modules.html":{},"overview.html":{}}}],["tagremoved",{"_index":3190,"title":{},"body":{"components/TagListComponent.html":{}}}],["tags",{"_index":33,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{}}}],["tags.map(t",{"_index":2613,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["tags.map(tag",{"_index":2634,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["tags.push",{"_index":153,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.push(tag",{"_index":147,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.state",{"_index":2495,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{}}}],["tags.state.ts",{"_index":10,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["tags.state.ts:112",{"_index":63,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:119",{"_index":54,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:124",{"_index":67,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:140",{"_index":73,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:158",{"_index":58,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:38",{"_index":95,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:68",{"_index":87,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:70",{"_index":98,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:75",{"_index":89,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:77",{"_index":93,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:79",{"_index":39,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:95",{"_index":64,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags/anatomical",{"_index":9,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["tagschange",{"_index":3191,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagsearchcomponent",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"modules/TagSearchModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tagsearchmodule",{"_index":2813,"title":{"modules/TagSearchModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsearchresult",{"_index":116,"title":{"interfaces/TagSearchResult.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["take",{"_index":2326,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["take(1",{"_index":2336,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["takes",{"_index":1247,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["takewhile",{"_index":1893,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tap",{"_index":1980,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["tap(([page",{"_index":2464,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["tap(config",{"_index":2337,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["tap(reg",{"_index":2528,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["target",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["target.key",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.nodename",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.preventdefault",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.repeat",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["technologies",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["templateurl",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["temporary",{"_index":994,"title":{},"body":{"components/ContentComponent.html":{}}}],["terms",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":937,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{}}}],["text",{"_index":76,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{}}}],["textfield",{"_index":730,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["theme",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["themes",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["theming.initialize(el",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["theming.service",{"_index":3236,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1115,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":241,"title":{"injectables/ThemingService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":3237,"title":{},"body":{"modules/ThemingModule.html":{}}}],["thick",{"_index":1231,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1232,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thickness",{"_index":1990,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1233,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1234,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":166,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._expanded",{"_index":1548,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._latesttags",{"_index":158,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this._measuredmargin",{"_index":1578,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":1568,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._name",{"_index":2165,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this._opened",{"_index":1544,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":1540,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.addentityone",{"_index":182,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.addregistration(jsonobj",{"_index":2601,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.addtagraw(tag",{"_index":177,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.animationsenabled",{"_index":1056,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.applythemeclass(theme",{"_index":3279,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":3283,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":3278,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.blocksize",{"_index":707,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksize[key",{"_index":711,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksizechange.emit(this.blocksize",{"_index":712,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.buildjsonld(page",{"_index":2502,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.buildjsonld(page.snapshot",{"_index":2590,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.buildmetadata(page",{"_index":2499,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.capitalizefirstletter(organ?.organ",{"_index":1803,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.capitalizefirstletter(sex",{"_index":1805,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.capitalizefirstletter(side",{"_index":1804,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.cdr.markforcheck",{"_index":866,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.channel",{"_index":857,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":1927,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":1929,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":1932,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":1907,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":863,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checknamevalid(user",{"_index":2417,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.closedialog",{"_index":2430,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.consentservice.consent",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.content",{"_index":868,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":867,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":854,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":856,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":855,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.createscenenodes(organiri",{"_index":2963,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.ctx.patchstate",{"_index":2043,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ctx.setstate(patch",{"_index":2349,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentdate",{"_index":2616,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.currentidentifier",{"_index":2618,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.currentorgan",{"_index":2429,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.currentsex",{"_index":2424,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.defaultposition",{"_index":2113,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.defaulttheme",{"_index":3277,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":1517,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.dialog.open(registrationcontentcomponent",{"_index":2472,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialog.open(reviewmodalcomponent",{"_index":2734,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.dialog.open(videomodalcomponent",{"_index":3362,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["this.dialogopen",{"_index":2465,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialogref.close",{"_index":2770,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["this.dialogref.close(true",{"_index":2433,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.disablepositionchange",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.drawer",{"_index":3315,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":3313,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":1053,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":861,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":871,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.editregistration(reg",{"_index":2530,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.editregistration(this.getstate().initialregistration",{"_index":2605,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.element",{"_index":3282,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":1569,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.entererrormode.emit",{"_index":2730,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.entities$.subscribe",{"_index":175,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.expanded",{"_index":1604,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":1613,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":1594,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":1562,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.extractionsitetooltip",{"_index":1828,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.faded",{"_index":1071,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.fileinput.nativeelement",{"_index":1674,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.firstnamevalidator.setvalue(value?.firstname",{"_index":2167,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('all_items_opacity_update",{"_index":3434,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('block_size_change",{"_index":709,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('block_size_reset",{"_index":715,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('item_reset",{"_index":3432,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('json_file_load_end",{"_index":1681,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('json_file_load_start",{"_index":1684,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('name_updated",{"_index":2170,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('opacity_update",{"_index":3429,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('organ_select",{"_index":2060,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('placement",{"_index":2046,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('register",{"_index":2741,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('review_start",{"_index":2731,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('rotation_reset",{"_index":2855,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.ga.event('rotation_update",{"_index":2848,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.ga.event('selected_extraction_set_change",{"_index":1330,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.ga.event('side_update",{"_index":3125,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('slice_config_reset",{"_index":3046,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slice_config_update",{"_index":3041,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slide_toggle_toggled",{"_index":1725,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.ga.event('tag_removed",{"_index":3208,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.ga.event('view_update",{"_index":3132,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('visibility_toggled",{"_index":3420,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["this.getarguments(definition",{"_index":1452,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getlatestiri(iri",{"_index":2266,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getlatestiri(key",{"_index":2260,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getlatestiri(organentry.target",{"_index":2278,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":1916,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":1448,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getsourcedb().subscribe(db",{"_index":2215,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalconfig.config$.pipe",{"_index":2335,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.getoption('basehref').pipe",{"_index":2223,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalconfig.getoption('editregistration').pipe",{"_index":2527,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.getoption('header",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl').subscribe((url",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip').subscribe((tooltip",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('organ').pipe",{"_index":2115,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.globalconfig.getoption('skipunsavedchangesconfirmation').pipe",{"_index":2331,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.globalconfig.getoption('theme",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.snapshot.basehref",{"_index":1434,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.globalconfig.state$]).pipe",{"_index":2463,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.globals.set('db",{"_index":2221,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalskipconfirmation",{"_index":2353,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.handlemessage(msg",{"_index":860,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.haschanges$.pipe",{"_index":2356,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.homeurl",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.hover.emit(item",{"_index":3423,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.hover.emit(undefined",{"_index":3424,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.idmatches(ontologyid",{"_index":2136,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.initialized",{"_index":1516,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":1585,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":1595,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":1619,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initskipconfirmationlisteners",{"_index":2343,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.injector",{"_index":606,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(anatomicalstructuretagstate",{"_index":2523,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.injector.get(modelstate",{"_index":169,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(pagestate",{"_index":173,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(referencedatastate",{"_index":2031,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(registrationstate",{"_index":3027,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(scenestate",{"_index":171,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.isdatavalid(this.page.snapshot",{"_index":2581,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.isdropdownactive",{"_index":3119,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isdropdownhidden",{"_index":3120,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isvalid",{"_index":2504,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.items",{"_index":3426,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map(i",{"_index":3433,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map(item",{"_index":3427,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.itemschange.emit(this.items",{"_index":3431,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.labelref.nativeelement",{"_index":3121,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.labels[0",{"_index":1723,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.labels[1",{"_index":1724,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.lastnamevalidator.setvalue(value?.lastname",{"_index":2168,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.launchreviewmodal",{"_index":2733,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.leftmargin",{"_index":1063,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.loadyoutubeplayerapi",{"_index":3342,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.logotooltip",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.margin2",{"_index":1565,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":1564,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":1620,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":1926,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":1913,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.metadata",{"_index":2739,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.metadata.length",{"_index":2725,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadata.slice(0",{"_index":2727,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.model",{"_index":168,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.blocksize",{"_index":3007,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.defaultposition.x",{"_index":923,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.y",{"_index":927,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.z",{"_index":929,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.extractionsites",{"_index":2960,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organ",{"_index":1799,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.organ$.pipe",{"_index":1813,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.organ$]).pipe",{"_index":3010,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organdimensions$.pipe",{"_index":920,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.organiri",{"_index":2964,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organiri$]).pipe",{"_index":2961,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position",{"_index":3009,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position$.pipe",{"_index":946,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.rotation",{"_index":3008,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.setblocksize",{"_index":2545,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(data.organ",{"_index":2540,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(this.currentorgan",{"_index":2432,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setposition",{"_index":2556,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setposition(newposition",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["this.model.setrotation",{"_index":2549,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(data.sex",{"_index":2542,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(label",{"_index":1830,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.setsex(this.currentsex",{"_index":2431,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setside(data.side",{"_index":2544,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setside(label",{"_index":1831,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.setslicesconfig",{"_index":2553,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.sex$.pipe",{"_index":1818,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["this.model.sex$]).pipe",{"_index":1801,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.showprevious",{"_index":2985,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.side",{"_index":1800,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.side$.pipe",{"_index":1821,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.snapshot",{"_index":967,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.anatomicalstructures",{"_index":184,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.snapshot.organdimensions",{"_index":2993,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.position",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.model.state",{"_index":2461,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.state$]).pipe",{"_index":2503,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.toggleregistrationblocksvisibility(visible",{"_index":1833,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.viewside$.pipe",{"_index":3023,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.viewtype$.pipe",{"_index":939,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.modelchanged$.pipe",{"_index":2120,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.name",{"_index":2169,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namechange.emit(this.name",{"_index":2172,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namematches(organname",{"_index":2137,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.namevalid",{"_index":2426,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.nextmessageid",{"_index":1908,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodecollisions",{"_index":2949,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.nodes$]).pipe",{"_index":2955,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.onorganchange(organ",{"_index":2118,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.onorganirichange",{"_index":2063,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.onreferencedatachange",{"_index":2033,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.open",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.opendialog",{"_index":2471,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.opened",{"_index":1592,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":1609,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":1593,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.optionsref.nativeelement",{"_index":3122,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.organlist",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/RegistrationContentComponent.html":{},"interfaces/User.html":{}}}],["this.organlistoptions(ids",{"_index":2574,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.organselected",{"_index":2419,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.page",{"_index":172,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.clearhaschanges",{"_index":2603,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.page.organoptions$.subscribe((options",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/RegistrationContentComponent.html":{},"interfaces/User.html":{}}}],["this.page.patchstate",{"_index":2573,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.page.registrationstarted",{"_index":2434,"title":{},"body":{"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.page.sethaschanges",{"_index":176,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.setusername",{"_index":2537,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.parsedjson.emit(json",{"_index":1683,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.patchstate",{"_index":2352,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.placementcube",{"_index":2946,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.placementcube$]).pipe",{"_index":2977,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.position",{"_index":1539,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.previousregistrationnodes",{"_index":2948,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.previousvisibilityitems",{"_index":1832,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.refdata",{"_index":2524,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.getorgandata(place.target",{"_index":2536,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.normalizeplacement",{"_index":2532,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.state$.subscribe",{"_index":2525,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.referencedata",{"_index":2030,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getorgandata(organ",{"_index":2128,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getreferenceorganiri",{"_index":2084,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.snapshot",{"_index":2091,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state",{"_index":2462,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.referencedata.state$.pipe",{"_index":2139,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$.subscribe",{"_index":2032,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$]).pipe",{"_index":2965,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.referenceorgannodes",{"_index":2947,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registerdata.emit",{"_index":2742,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registericonimpl(def",{"_index":1427,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(definition",{"_index":1440,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registration",{"_index":3026,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registration.editregistration(event",{"_index":1834,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.registration.previousregistrations$]).pipe",{"_index":2986,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registrationcallbackset",{"_index":2738,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.registrationisvalid",{"_index":2724,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registrationstarted",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.registry",{"_index":1444,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry?.addsvgiconresolver((name",{"_index":1429,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.renderer2.appendchild(this.document.body",{"_index":3348,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.renderer2.createelement('script",{"_index":3344,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.resolve",{"_index":1487,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.rightmargin",{"_index":1064,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.rotation",{"_index":2847,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.rotationchange.emit(this.rotation",{"_index":2850,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(def.html",{"_index":1425,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(basehref",{"_index":1435,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.scene",{"_index":170,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.scene.nodecollisions$]).pipe",{"_index":135,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.selected",{"_index":1329,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.selection",{"_index":3418,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.selection.id",{"_index":3419,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.sendtoggle",{"_index":1596,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.sensor",{"_index":962,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.setanatomicalstructures(newstructures",{"_index":2082,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setanatomicalstructures(previousitems",{"_index":2077,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setchange.emit(value",{"_index":1333,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setdisplayerrors(false",{"_index":2602,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.setorganselection(organoptions",{"_index":2526,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.sets.length",{"_index":1334,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setsexfromlabel(sex",{"_index":2422,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.setshowprevious(visible",{"_index":2076,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setstate(db",{"_index":2216,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.setstate(patch",{"_index":2338,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.settheme(this.defaulttheme",{"_index":3280,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sexbylabel$.subscribe(sex",{"_index":2421,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.sexselected",{"_index":2425,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.side",{"_index":3129,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.sidechange.emit(this.side",{"_index":3130,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.skipconfirmation$.subscribe(skipconfirmation",{"_index":2363,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.slicesconfig",{"_index":3040,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfig[key",{"_index":3043,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfigchange.emit(this.slicesconfig",{"_index":3044,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.snapshot",{"_index":2231,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.blocksize",{"_index":2054,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.entities[tag.id",{"_index":178,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.snapshot.organ",{"_index":2088,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.name}_placement",{"_index":2047,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.organ",{"_index":2085,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.sex",{"_index":2089,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organdimensions",{"_index":2053,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.placementpatches[organ",{"_index":2277,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.sex",{"_index":2086,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.showcollisions",{"_index":2953,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.snapshot.side",{"_index":2087,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.source",{"_index":1909,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.state$.pipe",{"_index":2021,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(map(x",{"_index":1999,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluckunique('haschanges",{"_index":2334,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('registrationstarted",{"_index":2309,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('skipconfirmation",{"_index":2330,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.statechange.emit",{"_index":1621,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.subscriptions.add",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":3312,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":1051,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":859,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["this.syncexpanded(other",{"_index":1622,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tagremoved.emit(tag",{"_index":3211,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags",{"_index":2522,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{}}}],["this.tags$.subscribe((tags",{"_index":174,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.tags.addtags",{"_index":2559,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tags.filter(obj",{"_index":3206,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags.latesttags",{"_index":2592,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tags.tags$]).pipe",{"_index":2497,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tagschange.emit(this.tags",{"_index":3212,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.theme",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["this.theme$.subscribe((theme",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next('light",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$]).subscribe",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${theme",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${this.theme",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":1546,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":1590,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":1588,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":1550,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":1602,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":1599,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.updateentitiesmany",{"_index":179,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.updatefaded",{"_index":1055,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updatemargin(position",{"_index":1061,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updateopacity(item.opacity",{"_index":3422,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.updateview(false",{"_index":3128,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.updateview(true",{"_index":3127,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.validatedrawers",{"_index":862,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.value",{"_index":1722,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.valuechange.emit(this.value",{"_index":1727,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.view3d",{"_index":3131,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.view3dchange.emit(this.view3d",{"_index":3133,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.visibilitychanged.emit(this.visible",{"_index":3457,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.visible",{"_index":3455,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.width",{"_index":1563,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.xyztriplettostring(model.blocksize",{"_index":2610,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.position",{"_index":2611,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.rotation",{"_index":2612,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["those",{"_index":1911,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["throttle",{"_index":4214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throttletime",{"_index":1981,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["throttletime(0",{"_index":2022,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["through",{"_index":2836,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["throw",{"_index":852,"title":{},"body":{"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":3959,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":879,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":877,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":848,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":847,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":843,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumb",{"_index":2869,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["thumbnails",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1223,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1224,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ticks",{"_index":2874,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["tied",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":2517,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["timeouts",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["timing",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/VisibilityMenuComponent.html":{}}}],["tissue",{"_index":674,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["tissues",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":731,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/DocumentationContent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["tmc",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle(opened",{"_index":1591,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggle.component",{"_index":1739,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle.component.html",{"_index":1701,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.scss",{"_index":1700,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts",{"_index":1697,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{}}}],["toggle.component.ts:18",{"_index":3453,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:19",{"_index":1714,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:23",{"_index":3452,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:24",{"_index":1708,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:29",{"_index":1711,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:34",{"_index":1707,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:39",{"_index":1706,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:40",{"_index":3451,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:51",{"_index":1720,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:52",{"_index":3454,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:61",{"_index":1716,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.module",{"_index":1871,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/StageNavModule.html":{}}}],["toggle.module.ts",{"_index":1736,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle/labeled",{"_index":1696,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/StageNavModule.html":{},"coverage.html":{}}}],["toggle/visibility",{"_index":1879,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{}}}],["togglebuttoncomponent",{"_index":529,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":1057,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["toggleexpanded(expanded",{"_index":1603,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglelabel",{"_index":3449,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["togglepreviousregistrationblocks",{"_index":1754,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["togglepreviousregistrationblocks(visible",{"_index":1779,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["toggleregistrationblocksvisibility(visible",{"_index":2075,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["toggles",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["togglescheme",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["togglevisibility",{"_index":3392,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["togglevisibility(item",{"_index":3413,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["toggling",{"_index":1781,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["token",{"_index":1898,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["tonsil",{"_index":1202,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tonsil.svg",{"_index":1203,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}}}],["top",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toradians",{"_index":2183,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tort",{"_index":4186,"title":{},"body":{"license.html":{}}}],["total",{"_index":3182,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{}}}],["totalcount",{"_index":188,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":884,"title":{},"body":{"components/ContainerComponent.html":{}}}],["trachea",{"_index":1225,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["trachea.svg",{"_index":1226,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":1810,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["tracking/telemetry",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["trackingpopupcomponent",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["trackingpopupmodule",{"_index":581,"title":{},"body":{"modules/AppModule.html":{}}}],["trailing",{"_index":2024,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["transform",{"_index":734,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["transformmatrix",{"_index":2898,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["transition",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["transition('closed",{"_index":1526,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":1048,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["translate",{"_index":3366,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["translate([p.x_translation",{"_index":2994,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translate([position.x",{"_index":3015,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translation_units",{"_index":2671,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["transparency",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["trigger",{"_index":1043,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{}}}],["trigger('expandcollapse",{"_index":1529,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":1045,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["trigger('openclose",{"_index":1523,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggerfileinput",{"_index":1650,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["triplet",{"_index":2672,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["true",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["true=left",{"_index":1717,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["try",{"_index":653,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["ts",{"_index":4071,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":4074,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1169,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":869,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turn",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["turns",{"_index":2707,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["tutorial",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1709,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["tx",{"_index":4086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":2206,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4195,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2126,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["types",{"_index":1084,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":125,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":2777,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["ufl",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":645,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":4098,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":4107,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":4104,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":4106,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":4105,"title":{},"body":{"index.html":{}}}],["uis",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":870,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["under",{"_index":1151,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["unique",{"_index":1884,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["university",{"_index":4132,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":651,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{}}}],["unlike",{"_index":1142,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unnecessary",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":2901,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unselect",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":3322,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["untypedformcontrol",{"_index":2154,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["unused",{"_index":3204,"title":{},"body":{"components/TagListComponent.html":{}}}],["up",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["update",{"_index":2845,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["updateblocksizes",{"_index":716,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["updateblocksizes(input",{"_index":703,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["updated",{"_index":702,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["updatedarray",{"_index":1267,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["updatedarray.join",{"_index":1270,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["updatediri",{"_index":2265,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["updatedselection",{"_index":3425,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.id",{"_index":3428,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.opacity",{"_index":3430,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateextractionsitetooltip",{"_index":1755,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updateextractionsitetooltip(item",{"_index":1788,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updatefaded",{"_index":1008,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin",{"_index":1009,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin(position",{"_index":1032,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatename",{"_index":2146,"title":{},"body":{"components/NameInputComponent.html":{}}}],["updatename(input",{"_index":2151,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["updateopacity",{"_index":3393,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateopacity(value",{"_index":3416,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateregistration",{"_index":1756,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updateregistration(event",{"_index":1793,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updates",{"_index":697,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["updateside",{"_index":3075,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateside(selection",{"_index":3100,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateskipconfirmation",{"_index":2351,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["updateslicesdata",{"_index":3047,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["updateslicesdata(input",{"_index":3038,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["updatetoggle",{"_index":1702,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updatetoggle(selection",{"_index":1715,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updateview",{"_index":3076,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateview(selection",{"_index":3103,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updating",{"_index":2842,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["upgraded",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1653,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"changelog.html":{}}}],["uploaded",{"_index":1658,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["upperbound",{"_index":2938,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["upperbound[i",{"_index":2942,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ureter",{"_index":1227,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1417,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["usage",{"_index":3493,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":4116,"title":{},"body":{"index.html":{}}}],["use",{"_index":983,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usecallback",{"_index":2583,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["usecancelregistrationcallback",{"_index":2282,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["usecase",{"_index":4121,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":4118,"title":{},"body":{"index.html":{}}}],["used",{"_index":48,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["usedownload",{"_index":622,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{}}}],["usedropdownmenu",{"_index":3077,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usedropdownmenu(value",{"_index":3118,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usefactory",{"_index":773,"title":{},"body":{"modules/ConfigModule.html":{}}}],["useful",{"_index":845,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":332,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["user's",{"_index":2164,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{}}}],["user/os",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["useregistrationcallback",{"_index":2487,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["username",{"_index":2149,"title":{"interfaces/UserName.html":{}},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["users",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["usevalue",{"_index":599,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["uterus",{"_index":1228,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1229,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":2493,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2492,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["v1.1",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["v1[key",{"_index":2027,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v2",{"_index":2026,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["v2.1.0",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["v2[key",{"_index":2028,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v3",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":2491,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["valid",{"_index":2263,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validate",{"_index":2156,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["validatedrawers",{"_index":790,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":812,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validators",{"_index":2162,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["validators.required",{"_index":2155,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["value",{"_index":86,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":1332,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["valuechange",{"_index":1705,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["valueof",{"_index":1483,"title":{},"body":{"classes/InitializationState.html":{}}}],["values",{"_index":692,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["variable",{"_index":1808,"title":{},"body":{"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["variables",{"_index":4204,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1230,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["vec3",{"_index":2928,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...lowerbound.map((n",{"_index":2940,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...upperbound.map((n",{"_index":2943,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["version",{"_index":3603,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":944,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{}}}],["via",{"_index":2834,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["video",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["videomodalcomponent",{"_index":531,"title":{"components/VideoModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videomodallaunchercomponent",{"_index":533,"title":{"components/VideoModalLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videomodallaunchermodule",{"_index":1103,"title":{"modules/VideoModalLauncherModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules.html":{},"overview.html":{}}}],["videomodalmodule",{"_index":3374,"title":{"modules/VideoModalModule.html":{}},"body":{"modules/VideoModalModule.html":{},"modules.html":{},"overview.html":{}}}],["view",{"_index":917,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["view3d",{"_index":3078,"title":{},"body":{"components/StageNavComponent.html":{}}}],["view3dchange",{"_index":3080,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild",{"_index":1672,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{}}}],["viewchild('fileinput",{"_index":1669,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["viewchild('label",{"_index":3107,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild('options",{"_index":3109,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchildren",{"_index":837,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":824,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewed",{"_index":1993,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewer",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":3065,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["views",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["viewside",{"_index":965,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewtype",{"_index":1964,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["visibility",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["visibility_menu",{"_index":3421,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["visibility_off",{"_index":1239,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_off_cube",{"_index":1240,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1237,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_toggle",{"_index":3456,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilitychanged",{"_index":3450,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilityitem",{"_index":1302,"title":{"interfaces/VisibilityItem.html":{}},"body":{"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["visibilityitems",{"_index":2074,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["visibilitymenucomponent",{"_index":535,"title":{"components/VisibilityMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visibilitymenumodule",{"_index":1859,"title":{"modules/VisibilityMenuModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{},"modules.html":{},"overview.html":{}}}],["visibilitytogglecomponent",{"_index":538,"title":{"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{},"overview.html":{}}}],["visibilitytogglemodule",{"_index":1860,"title":{"modules/VisibilityToggleModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["visible",{"_index":1785,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["visual",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":56,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["wait",{"_index":1485,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":1615,"title":{},"body":{"classes/InitializationState.html":{}}}],["walkthrough",{"_index":4117,"title":{},"body":{"index.html":{}}}],["want",{"_index":1769,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["warming",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4173,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4170,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3364,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["wc",{"_index":612,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["web",{"_index":582,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["webcomponent",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":4012,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":882,"title":{},"body":{"components/ContainerComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["webpages",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":4093,"title":{},"body":{"index.html":{}}}],["week",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":732,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whenever",{"_index":1556,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whether",{"_index":835,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"license.html":{}}}],["white",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["whole",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":1624,"title":{},"body":{"classes/InitializationState.html":{}}}],["within",{"_index":2840,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["withlatestfrom",{"_index":2327,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["withlatestfrom(this.globalskipconfirmation",{"_index":2357,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["without",{"_index":826,"title":{},"body":{"components/ContainerComponent.html":{},"changelog.html":{},"license.html":{}}}],["workaround",{"_index":1634,"title":{},"body":{"classes/InitializationState.html":{}}}],["workflows",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":3134,"title":{},"body":{"components/StageNavComponent.html":{}}}],["wrapped",{"_index":823,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["wrapping",{"_index":827,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{}}}],["x",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["x,y,z",{"_index":912,"title":{},"body":{"components/ContentComponent.html":{}}}],["x?.anatomicalstructures",{"_index":2014,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.blocksize",{"_index":2001,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.displayerrors",{"_index":2496,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x?.extractionsets",{"_index":2015,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.extractionsites",{"_index":2013,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.id",{"_index":2000,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organ",{"_index":2007,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organdimensions",{"_index":2009,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organiri",{"_index":2008,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organoptions",{"_index":2305,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.position",{"_index":2003,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.registrationcallbackset",{"_index":2307,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.registrations",{"_index":2508,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x?.rotation",{"_index":2002,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.sex",{"_index":2010,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.showprevious",{"_index":2012,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.side",{"_index":2011,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.slicesconfig",{"_index":2004,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.usecancelregistrationcallback",{"_index":2312,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.user",{"_index":2314,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.viewside",{"_index":2006,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.viewtype",{"_index":2005,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x_dimension",{"_index":2639,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x_rotation",{"_index":2655,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x_scaling",{"_index":2650,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x_translation",{"_index":2665,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["xyz",{"_index":2662,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["xyztriplet",{"_index":1965,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["xyztriplettostring(xyz",{"_index":2674,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["y_dimension",{"_index":2641,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y_rotation",{"_index":2657,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y_scaling",{"_index":2651,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y_translation",{"_index":2667,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["yes",{"_index":2373,"title":{},"body":{"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["youtube",{"_index":3327,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":3378,"title":{},"body":{"modules/VideoModalModule.html":{}}}],["z",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["z_dimension",{"_index":2643,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["z_rotation",{"_index":2659,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["z_scaling",{"_index":2652,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["z_translation",{"_index":2669,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["zone.js",{"_index":4077,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":2904,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AnatomicalStructureTagState.html":{"url":"injectables/AnatomicalStructureTagState.html","title":"injectable - AnatomicalStructureTagState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnatomicalStructureTagState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag collection global state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _latestTags\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addTag\n                            \n                            \n                                    Private\n                                addTagRaw\n                            \n                            \n                                    \n                                addTags\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                removeTag\n                            \n                            \n                                    \n                                searchExternal\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tags$\n                                \n                                \n                                    latestTags\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:79\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addTagRaw\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTagRaw(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:158\n                        \n                    \n\n\n            \n                \n                        Adds a tag. Implementation helper for addTags and addTag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTags(tags: Tag[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Tag[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:95\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchExternal\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchExternal(text: string, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:140\n                        \n                    \n\n\n            \n                \n                        Searches for matching tags (not in the state)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Search text\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Maximum returned results hint\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ObservableInput\n\n                        \n                            \n                                external Search result\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _latestTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:75\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SceneState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:77\n                        \n                    \n\n            \n                \n                    Reference to the scene state\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tags$\n                    \n                \n\n                \n                    \n                        gettags$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:38\n                                \n                            \n                    \n                        \n                                Observable of tags\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        latestTags\n                    \n                \n\n                \n                    \n                        getlatestTags()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:70\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n\n/** Tag state model */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AnatomicalStructureTagStateModel {\n}\n\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections()\n  }\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned'\n            });\n          }\n        }\n        return tags;\n      })\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model: ModelState;\n  /** Reference to the scene state */\n  private scene: SceneState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures\n      .filter(as => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return [{\n      totalCount: matches.length,\n      results: matches.map((as): Tag => ({\n        id: as.id,\n        label: as.name,\n        type: 'added'\n      })).slice(0, limit)\n    }];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnatomicalStructureTagStateModel.html":{"url":"interfaces/AnatomicalStructureTagStateModel.html","title":"interface - AnatomicalStructureTagStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnatomicalStructureTagStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag state model\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n\n/** Tag state model */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AnatomicalStructureTagStateModel {\n}\n\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections()\n  }\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned'\n            });\n          }\n        }\n        return tags;\n      })\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model: ModelState;\n  /** Reference to the scene state */\n  private scene: SceneState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures\n      .filter(as => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return [{\n      totalCount: matches.length,\n      results: matches.map((as): Tag => ({\n        id: as.id,\n        label: as.name,\n        type: 'added'\n      })).slice(0, limit)\n    }];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disablePositionChange\n                            \n                            \n                                    Readonly\n                                header$\n                            \n                            \n                                homeUrl\n                            \n                            \n                                    Readonly\n                                homeUrl$\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                    Readonly\n                                logoTooltip$\n                            \n                            \n                                open\n                            \n                            \n                                organList\n                            \n                            \n                                registrationStarted\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                theme\n                            \n                            \n                                    Readonly\n                                theme$\n                            \n                            \n                                    Readonly\n                                themeMode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleClick\n                            \n                            \n                                    \n                                handleKey\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleScheme\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLightTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, consentService: ConsentService, snackbar: MatSnackBar, theming: ThemingService, el: ElementRef<>, injector: Injector, globalConfig: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/app.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                    ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theming\n                                                  \n                                                        \n                                                                        ThemingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Disables block position change if an input element is clicked\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(target: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Shifts block position when certain keys are pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Disables block position change if an input element is clicked\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKey(target: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Shifts block position when certain keys are pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:190\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleScheme\n                        \n                    \n                \n            \n            \n                \ntoggleScheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Toggles scheme between light and dark mode\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disablePositionChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:53\n                        \n                    \n\n            \n                \n                    Disables changes in block position\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        header$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('header')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        homeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        homeUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('homeUrl')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        logoTooltip$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('logoTooltip')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:47\n                        \n                    \n\n            \n                \n                    True if the organ selector drawer is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganInfo[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:44\n                        \n                    \n\n            \n                \n                    Organs to be displayed in the organ selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:50\n                        \n                    \n\n            \n                \n                    False until the initial registration modal is closed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:73\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('theme')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        themeMode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:60\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLightTheme\n                    \n                \n\n                \n                    \n                        getisLightTheme()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/app.component.ts:55\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, OrganInfo, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList: OrganInfo[];\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n    \n    \n  \n  \n    \n    \n  \n\n  \n    \n      \n      \n        \n          \n            {{ organSelector.expanded ? 'arrow_drop_up': 'arrow_drop_down' }}\n          \n        \n        \n          \n            {{ open ? 'arrow_drop_up': 'arrow_drop_down' }}\n          \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  font-size: 1rem;\n  color: black;\n\n  .header-hidden {\n    display: none;\n  }\n\n  ccf-drawer-container {\n    height: 100%;\n\n    ccf-drawer {\n      width: 25.5rem;\n    }\n\n    ccf-drawer-content {\n      position: relative;\n      z-index: 1;\n\n      .selector-drawer {\n        top: 0rem;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        height: 5.688rem;\n        transition: all 0.5s ease-in-out;\n\n        &.expanded {\n          height: 15rem;\n        }\n\n        ccf-organ-selector {\n          height: 100%;\n          padding-top: 0.5rem;\n          transition: all 0.5s;\n\n          &.closed {\n            padding-top: 0;\n          }\n        }\n\n        .close-button-wrapper {\n          display: flex;\n          justify-content: center;\n          height: 0;\n          z-index: 2;\n\n          .close-button {\n            cursor: pointer;\n            transition: 0.6s;\n\n            .expand-collapse-icon {\n              width: 3rem;\n              height: 1.2rem;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              cursor: pointer;\n              background-color: white;\n              border-bottom-left-radius: 0.2rem;\n              border-bottom-right-radius: 0.2rem;\n              transition: 0.6s;\n\n              &:hover {\n                background-color: #ececec;\n              }\n            }\n          }\n        }\n\n\n        &.closed {\n          height: 3rem;\n          top: -2.9rem;\n        }\n      }\n\n      .stage-content {\n        border-radius: 0.5rem !important;\n        height: calc(100% - 2.688rem - 3rem - 1.5rem);\n      }\n\n      .expanded-stage {\n        height: calc(100% - 1.5rem);\n        padding-bottom: 1rem;\n      }\n\n      .retracted-stage {\n        height: calc(100% - 2.688rem - 14rem);\n      }\n\n    }\n\n\n\n    ccf-content {\n      // top: 0rem;\n      position: absolute;\n      transition-duration: 0.5s;\n      transition-timing-function: ease-in-out;\n      transition-property: all;\n      bottom: 1.5rem;\n      z-index: 1;\n\n    }\n\n  }\n\n}\n\n::ng-deep .mdc-snackbar__surface {\n  box-shadow: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ organSelector.expanded ? \\'arrow_drop_up\\': \\'arrow_drop_down\\' }}                                                {{ open ? \\'arrow_drop_up\\': \\'arrow_drop_down\\' }}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContentModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            LeftSidebarModule\n                        \n                        \n                            RegistrationModalModule\n                        \n                        \n                            RightSidebarModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.module.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OrganSelectorModule, TrackingPopupModule } from 'ccf-shared';\n\nimport { AppWebComponent } from './app-web-component.component';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { DEFAULT_THEME } from './core/services/theming/theming.service';\nimport { ContentModule } from './modules/content/content.module';\nimport { HeaderModule } from './modules/header/header.module';\nimport { LeftSidebarModule } from './modules/left-sidebar/left-sidebar.module';\nimport { RegistrationModalModule } from './modules/registration-modal/registration-modal/registration-modal.module';\nimport { RightSidebarModule } from './modules/right-sidebar/right-sidebar.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    MatIconModule,\n    DrawerModule,\n    HeaderModule,\n    ContentModule,\n    LeftSidebarModule,\n    RightSidebarModule,\n    OrganSelectorModule,\n    RegistrationModalModule,\n    TrackingPopupModule,\n    MatSnackBarModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    {\n      provide: DEFAULT_THEME,\n      useValue: 'hubmap-theme-light'\n    },\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        floatLabel: true,\n        hideRequiredMarker: true\n      }\n    }\n  ]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-rui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GlobalConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, OrganInfo, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList: OrganInfo[];\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                baseHref\n                            \n                            \n                                cancelRegistration\n                            \n                            \n                                editRegistration\n                            \n                            \n                                fetchPreviousRegistrations\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                organ\n                            \n                            \n                                organOptions\n                            \n                            \n                                register\n                            \n                            \n                                skipUnsavedChangesConfirmation\n                            \n                            \n                                theme\n                            \n                            \n                                useDownload\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/app-web-component.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        baseHref\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cancelRegistration\n                    \n                \n                \n                    \n                        Type :     string | CancelRegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editRegistration\n                    \n                \n                \n                    \n                        Type :     string | SpatialEntityJsonLd\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fetchPreviousRegistrations\n                    \n                \n                \n                    \n                        Type :         string | FetchPreviousRegistrationsCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organ\n                    \n                \n                \n                    \n                        Type :         string | Organ\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organOptions\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        register\n                    \n                \n                \n                    \n                        Type :         string | RegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skipUnsavedChangesConfirmation\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDownload\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app-web-component.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS } from 'ccf-shared/web-components';\nimport { ObservableInput } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\n\nimport { environment } from '../environments/environment';\n\n\nexport type User = NonNullable;\nexport type Organ = NonNullable;\nexport type RegistrationCallback = (data: unknown) => void;\nexport type CancelRegistrationCallback = () => void;\nexport type FetchPreviousRegistrationsCallback = () => ObservableInput[]>;\n\n\nfunction parseOrgan(value: unknown): string | Organ {\n  try {\n    return BUILTIN_PARSERS.json(value) as Organ;\n  } catch {\n    return '' + value;\n  }\n}\n\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() baseHref: string;\n  @Input() useDownload: string | boolean;\n  @Input() user: string | User;\n  @Input() organ: string | Organ;\n  @Input() editRegistration: string | SpatialEntityJsonLd;\n  @Input() register: string | RegistrationCallback;\n  @Input() cancelRegistration: string | CancelRegistrationCallback;\n  @Input() fetchPreviousRegistrations: string | FetchPreviousRegistrationsCallback;\n  @Input() skipUnsavedChangesConfirmation: string | boolean;\n  @Input() theme: string;\n  @Input() header: string | boolean;\n  @Input() homeUrl: string;\n  @Input() logoTooltip: string;\n  @Input() organOptions: string | string[];\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    const BP = BUILTIN_PARSERS;\n\n    super(configStore, cdr, {\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['ruiConfig' as string],\n        ...environment.customization\n      },\n      parse: {\n        useDownload: BP.boolean,\n        user: BP.json,\n        organ: parseOrgan,\n        editRegistration: BP.json,\n        register: BP.function,\n        cancelRegistration: BP.function,\n        fetchPreviousRegistrations: BP.function,\n        skipUnsavedChangesConfirmation: BP.boolean,\n        header: BP.boolean,\n        organOptions: BP.stringArray\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockSize.html":{"url":"interfaces/BlockSize.html","title":"interface - BlockSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for objects containing tissue block dimensions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Depth of block\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockSizeInputComponent.html":{"url":"components/BlockSizeInputComponent.html","title":"component - BlockSizeInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockSizeInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering dimensions of the tissue block\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-block-size-input\n            \n\n\n\n            \n                styleUrls\n                ./block-size-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./block-size-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshBlockSize\n                            \n                            \n                                updateBlockSizes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSizeChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of block size input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blockSize\n                    \n                \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_BLOCK_SIZE\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:40\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blockSizeChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:45\n                            \n                        \n                \n                    \n                        Emitter for values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-block-size-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshBlockSize\n                        \n                    \n                \n            \n            \n                \nrefreshBlockSize()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Refreshes all block size values to 10\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBlockSizes\n                        \n                    \n                \n            \n            \n                \nupdateBlockSizes(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Updates values when an input changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the dimension to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Dimensions (mm)\n  \n  refresh\n\n\n\n  \n    Width (X)\n    \n  \n\n  \n    Height (Y)\n    \n  \n\n  \n    Depth (Z)\n    \n  \n\n\n    \n\n    \n                \n                    ./block-size-input.component.scss\n                \n                :host {\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: 600;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .size-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n\n        .mat-mdc-form-field-infix {\n          padding-bottom: 0;\n          min-height: inherit;\n        }\n\n        .mat-mdc-form-field-icon-suffix {\n          padding: 1rem 0 0px .25rem;\n        }\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Dimensions (mm)    refresh      Width (X)            Height (Y)            Depth (Z)      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockSizeInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockSizeInputModule.html":{"url":"modules/BlockSizeInputModule.html","title":"module - BlockSizeInputModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockSizeInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    MatFormFieldModule\n  ],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent]\n})\nexport class BlockSizeInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\n\nimport { GLOBAL_CONFIG, globalConfigFactory } from './config';\n\n\n@NgModule({\n  providers: [\n    {\n      provide: GLOBAL_CONFIG,\n      useFactory: globalConfigFactory,\n      deps: [GlobalsService]\n    }\n  ]\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n\n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    \n                                    Private\n                                content1\n                            \n                            \n                                    \n                                    Private\n                                content2\n                            \n                            \n                                    \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleMessage(_msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Processes event messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to be run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Sets up all listeners after all content has been projected.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateDrawers\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateDrawers()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Validates the number of drawers and their positions.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageChannel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                        \n                    \n\n            \n                \n                    The connected message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ContentComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:45\n                        \n                    \n\n            \n                \n                    Content component if provided already wrapped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(ContentComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:48\n                        \n                    \n\n            \n                \n                    Content component if provided without wrapping.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(DrawerComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:41\n                        \n                    \n\n            \n                \n                    Drawer components in this container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:62\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component.\n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main content component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-content\n            \n\n\n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bounds$\n                            \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                debugMode\n                            \n                            \n                                    Readonly\n                                is3DView$\n                            \n                            \n                                isNarrowView\n                            \n                            \n                                    Readonly\n                                position$\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                showDebugButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleNodeDrag\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetStage\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, registration: RegistrationState, scene: SceneState, rootRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:61\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The model state\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The registration state\n\n                                                        \n                                                \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                        SceneState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        rootRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Component's root element\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleNodeDrag\n                        \n                    \n                \n            \n            \n                \nhandleNodeDrag(event: NodeDragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        NodeDragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Detaches the resize sensor\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Sets up the resize sensor\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetStage\n                        \n                    \n                \n            \n            \n                \nresetStage()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Method to reset registration block, crosshairs, and x,y,z information.\nResets to initial registration state if provided\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(is3DView: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Sets view type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                is3DView\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Set view type to '3d' if this is true otherwise set it to 'register'\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bounds$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organDimensions$.pipe(\n    map(dims => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:53\n                        \n                    \n\n            \n                \n                    Shows / hides the state debug component for testing purposes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        is3DView$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.viewType$.pipe(\n    map(type => type === '3d')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:33\n                        \n                    \n\n            \n                \n                    Whether the view type is 3d or register\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNarrowView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:48\n                        \n                    \n\n            \n                \n                    Whether the content area is very narrow\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        position$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.position$.pipe(\n    map(p => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) }))\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sensor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResizeSensor\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:61\n                        \n                    \n\n            \n                \n                    Resize detection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDebugButtons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : !environment.production\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:58\n                        \n                    \n\n            \n                \n                    Show debug buttons of content component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy, OnInit\n} from '@angular/core';\nimport { NodeDragEvent } from 'ccf-body-ui';\nimport { ResizeSensor } from 'css-element-queries';\nimport { distinctUntilKeyChanged, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { SceneState } from '../../core/store/scene/scene.state';\n\n\n/**\n * Main content component\n */\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-content';\n\n  readonly position$ = this.model.position$.pipe(\n    map(p => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) }))\n  );\n\n  /** Whether the view type is 3d or register */\n  readonly is3DView$ = this.model.viewType$.pipe(\n    map(type => type === '3d')\n  );\n\n  readonly bounds$ = this.model.organDimensions$.pipe(\n    map(dims => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y')\n  );\n\n  /** Whether the content area is very narrow */\n  isNarrowView = false;\n\n  /**\n   * Shows / hides the state debug component for testing purposes.\n   */\n  debugMode = false;\n\n  /**\n   * Show debug buttons of content component\n   */\n  showDebugButtons = !environment.production;\n\n  /** Resize detection */\n  private sensor: ResizeSensor;\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param model The model state\n   * @param page The page state\n   * @param registration The registration state\n   * @param rootRef Component's root element\n   * @param cdr Change detector\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly registration: RegistrationState,\n    readonly scene: SceneState,\n    private readonly rootRef: ElementRef,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Sets up the resize sensor\n   */\n  ngOnInit(): void {\n    this.sensor = new ResizeSensor(this.rootRef.nativeElement, ({ width }) => {\n      const isNarrowView = width  n * 1000) as [number, number];\n        const { position, viewSide, organDimensions } = this.model.snapshot;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => n / 2);\n        let newPosition = position;\n        switch (viewSide) {\n          case 'anterior':\n            newPosition = { x: a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'posterior':\n            newPosition = { x: -a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'left':\n            newPosition = { x: position.x, y: b + dims[1], z: -a + dims[2] };\n            break;\n          case 'right':\n            newPosition = { x: position.x, y: b + dims[1], z: a + dims[2] };\n            break;\n        }\n        this.model.setPosition(newPosition);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  refresh\n\n\n\n  \n\n  \n\n  \n    \n      \n        X: {{ (position$ | async)?.x }}\n        Y: {{ (position$ | async)?.y }}\n        Z: {{ (position$ | async)?.z }}\n      \n    \n\n    \n  \n\n\n\n\n\n  State\n  Use callback\n  Use download\n\n\n    \n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n  height: 100%;\n  padding: 1.5rem;\n  overflow: hidden;\n\n  .top-bar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n    }\n  }\n\n  .main-content {\n    display: flex;\n    height: calc(100% - 1rem);\n\n    .body-ui {\n      flex: auto;\n      transition: opacity 1s;\n    }\n\n    .gizmo-area {\n      width: 4rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n      z-index: 10;\n      position: absolute;\n      right: 1.5rem;\n\n\n      .position-display {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 1.5rem;\n      }\n\n      .gizmo {\n        height: 5.5rem;\n        .hidden {\n          opacity: 0;\n          z-index: 0;\n        }\n      }\n    }\n  }\n\n  // Temporary for displaying dev information\n  .ccf-store-debug {\n    color: white;\n    position: absolute;\n    top: .5rem;\n    max-width: 55rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      refresh                        X: {{ (position$ | async)?.x }}        Y: {{ (position$ | async)?.y }}        Z: {{ (position$ | async)?.z }}                  State  Use callback  Use download'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-1.html":{"url":"components/ContentComponent-1.html","title":"component - ContentComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n\n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                animationsEnabled\n                            \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    \n                                faded\n                            \n                            \n                                    \n                                leftMargin\n                            \n                            \n                                    \n                                rightMargin\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleMessage(msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Process an event message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateFaded\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFaded()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Checks and updates the faded state based on the drawer states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateMargin\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Updates a margin.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                        \"start\" | \"end\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start (left) or end (right) margin.\n\n                                            \n                                        \n                                        \n                                                opened\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Whether the drawer is opened.\n\n                                            \n                                        \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The width of the drawer if opened.\n\n                                            \n                                        \n                                        \n                                                margin\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The margin size.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DrawerComponent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:39\n                        \n                    \n\n            \n                \n                    References to the side drawers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\n\nContentComponent\n\nContentComponent\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StageNavModule\n                        \n                        \n                            VideoModalLauncherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BodyUiModule, StoreDebugModule } from 'ccf-shared';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\nimport { VideoModalLauncherModule } from './video-modal/video-modal-launcher/video-modal-launcher.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StageNavModule,\n    MatIconModule,\n    StoreDebugModule,\n    VideoModalLauncherModule,\n    MatRippleModule,\n    BodyUiModule\n  ],\n  declarations: [ContentComponent],\n  exports: [ContentComponent]\n})\nexport class ContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigModule } from './services/config/config.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'rui'\n    }),\n    MousePositionTrackerModule,\n\n    ConfigModule,\n    StoreModule,\n    ThemingModule\n  ],\n  exports: []\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organs/ico-organs-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organs/ico-organs-extrapulmonary bronchus.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organs/ico-organs-breast.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organs/ico-organs-palatine tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organs/ico-organs-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organs/ico-organs-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organs/ico-organs-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' }\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsLabelComponent.html":{"url":"components/DetailsLabelComponent.html","title":"component - DetailsLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Reusable component that takes an array of strings and renders\nthat array as a string, separated by commas, in the icon color.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-details-label\n            \n\n\n\n            \n                styleUrls\n                ./details-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        details\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:20\n                            \n                        \n                \n                    \n                        The array of details to be displayed.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-details-label\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        arrayToString\n                        \n                    \n                \n            \n            \n                \narrayToString(inputArray: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Function that handles converting the array given\ninto a formatted string for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                inputArray\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    an array of strings to join.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the formatted string of items separated by a comma.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, HostBinding, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Reusable component that takes an array of strings and renders\n * that array as a string, separated by commas, in the icon color.\n */\n@Component({\n  selector: 'ccf-details-label',\n  templateUrl: './details-label.component.html',\n  styleUrls: ['./details-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsLabelComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-details-label';\n\n  /**\n   * The array of details to be displayed.\n   */\n  @Input() details: string[] = [];\n\n  /**\n   * Function that handles converting the array given\n   * into a formatted string for display.\n   *\n   * @param inputArray an array of strings to join.\n   * @returns the formatted string of items separated by a comma.\n   */\n  arrayToString(inputArray: string[]): string {\n    const updatedArray = inputArray.filter((item) => item !== '');\n    return updatedArray.join(', ');\n  }\n}\n\n    \n\n    \n        {{ arrayToString(details) }}\n    \n\n    \n                \n                    ./details-label.component.scss\n                \n                :host {\n    display: block;\n    height: 2.25rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ arrayToString(details) }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DetailsLabelModule.html":{"url":"modules/DetailsLabelModule.html","title":"module - DetailsLabelModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailsLabelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/details-label/details-label.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailsLabelComponent } from './details-label.component';\n\n@NgModule({\n  declarations: [DetailsLabelComponent],\n  imports: [CommonModule],\n  exports: [DetailsLabelComponent]\n})\nexport class DetailsLabelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/documentation.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractionSet.html":{"url":"interfaces/ExtractionSet.html","title":"interface - ExtractionSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractionSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/extraction-set.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains information for an extraction set\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            sites\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the set\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Organ that the extraction sites belong to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sites belonging to the organ in the extraction set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { VisibilityItem } from './visibility-item';\n\n/**\n * Contains information for an extraction set\n */\nexport interface ExtractionSet {\n  /** Name of the set */\n  name: string;\n\n  /** Organ that the extraction sites belong to */\n  organ?: string;\n\n  /** Extraction sites belonging to the organ in the extraction set */\n  sites: VisibilityItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtractionSetDropdownComponent.html":{"url":"components/ExtractionSetDropdownComponent.html","title":"component - ExtractionSetDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtractionSetDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown for selecting the extraction set\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-extraction-set-dropdown\n            \n\n\n\n            \n                styleUrls\n                ./extraction-set-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./extraction-set-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractionSetChanged\n                            \n                            \n                                isMultiple\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                setChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of extraction set dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sets\n                    \n                \n                \n                    \n                        Type :         ExtractionSet[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Extraction sets to be displayed as options\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        setChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current extraction set when selected\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-extraction-set-dropdown\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSetChanged\n                        \n                    \n                \n            \n            \n                \nextractionSetChanged(value: ExtractionSet)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Sets the selected extraction set and emits the extraction set\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            ExtractionSet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The extraction set selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMultiple\n                        \n                    \n                \n            \n            \n                \nisMultiple()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Determines whether there is more than one extraction set\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if there is more than one extraction set\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtractionSet\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:33\n                        \n                    \n\n            \n                \n                    The currently selected extraction set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ExtractionSet } from '../../../core/models/extraction-set';\n\n/**\n * Dropdown for selecting the extraction set\n */\n@Component({\n  selector: 'ccf-extraction-set-dropdown',\n  templateUrl: './extraction-set-dropdown.component.html',\n  styleUrls: ['./extraction-set-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExtractionSetDropdownComponent {\n\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-extraction-set-dropdown';\n\n  /**\n   * Emits the current extraction set when selected\n   */\n  @Output() readonly setChange = new EventEmitter();\n\n  /**\n   * Extraction sets to be displayed as options\n   */\n  @Input() sets: ExtractionSet[];\n\n  /**\n   * The currently selected extraction set\n   */\n  selected: ExtractionSet;\n\n  /**\n   * Creates an instance of extraction set dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Sets the selected extraction set and emits the extraction set\n   *\n   * @param value The extraction set selected\n   */\n  extractionSetChanged(value: ExtractionSet): void {\n    this.selected = value;\n    this.ga.event('selected_extraction_set_change', 'extraction_set_dropdown', value.name);\n    this.setChange.emit(value);\n  }\n\n  /**\n   * Determines whether there is more than one extraction set\n   *\n   * @returns true if there is more than one extraction set\n   */\n  isMultiple(): boolean {\n    return this.sets.length > 1;\n  }\n}\n\n    \n\n    \n        \n  Landmark Set\n  \n    \n      {{set.name}} ({{set.sites.length}})\n    \n  \n\n\n    \n\n    \n                \n                    ./extraction-set-dropdown.component.scss\n                \n                ::ng-deep .extraction-set-panel {\n  position: absolute !important;\n  box-shadow: 0rem 0rem 0.3rem 0.1rem #9e9e9e !important;\n  top: -3.5rem;\n\n  .extraction-set-options {\n    height: 2.5rem;\n    min-height: inherit;\n  }\n}\n\n:host {\n  ::ng-deep .mat-mdc-form-field {\n    width: 10.5rem;\n\n    .mat-mdc-text-field-wrapper {\n      padding: 0;\n    }\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Landmark Set            {{set.name}} ({{set.sites.length}})      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExtractionSetDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExtractionSetDropdownModule.html":{"url":"modules/ExtractionSetDropdownModule.html","title":"module - ExtractionSetDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    ExtractionSetDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ExtractionSetDropdownComponent } from './extraction-set-dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSelectModule],\n  declarations: [ExtractionSetDropdownComponent],\n  exports: [ExtractionSetDropdownComponent]\n})\nexport class ExtractionSetDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            baseHref\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cancelRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetchPreviousRegistrations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            register\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipUnsavedChangesConfirmation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useDownload\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHref\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseHref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cancelRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelRegistration:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editRegistration:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPreviousRegistrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetchPreviousRegistrations:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganConfig | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganConfig | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        register\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        register:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipUnsavedChangesConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipUnsavedChangesConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n}\n\nexport interface OrganConfig {\n  name: 'large intestine' | 'heart' | 'kidney' | 'spleen';\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken(\n  'Global configuration object'\n);\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page header\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of header component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-header\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  @Input() homeUrl: string;\n\n  @Input() logoTooltip: string;\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) { }\n}\n\n    \n\n    \n        \n\n\n\n  \n    chevron_left\n    BACK\n  \n\n\n\n  \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n\n  .text {\n    padding: 0.25rem 0;\n    height: 2rem;\n    display: flex;\n    align-items: center;\n    font-weight: lighter;\n    font-size: 1.5rem;\n  }\n\n\n  .link {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    text-decoration: none;\n    padding: 0.25rem 0;\n  }\n\n  .home {\n    * {\n      transition: color .6s;\n    }\n\n    .backbutton {\n      // Material icons do not always fill the space given\n      // Scale up size for icon to look correct\n      font-size: 2.25rem;\n      width: 2.25rem;\n      height: 2.25rem;\n    }\n  }\n\n  .portal {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left    BACK              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:     SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              private readonly sanitizer: DomSanitizer,\n              private readonly globalConfig: GlobalConfigState) {\n    super();\n  }\n\n  ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS\n      .filter(def => def.html !== undefined)\n      .map(def => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html!) }))\n      .forEach(def => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find(\n        icon => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace\n      );\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:147\n                        \n                    \n\n\n            \n                \n                        Selects the argument used to call the registration method.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of arguments.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getMethodName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:127\n                        \n                    \n\n\n            \n                \n                        Selects the MatIconRegistry method used to register the icon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the registry method.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:87\n                        \n                    \n\n\n            \n                \n                        Registers a svg icon for use in mat-icon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                definition\n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Icon to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if registration was successful, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerIconImpl\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:97\n                        \n                    \n\n\n            \n                \n                        Backing implementation of registerIcon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                definition\n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Icon to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if registration was successful, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              private readonly sanitizer: DomSanitizer,\n              private readonly globalConfig: GlobalConfigState) {\n    super();\n  }\n\n  ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS\n      .filter(def => def.html !== undefined)\n      .map(def => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html!) }))\n      .forEach(def => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find(\n        icon => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace\n      );\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deferred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Promise(resolve => {\n    this.resolve = resolve;\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                        \n                    \n\n            \n                \n                    Promise used to await on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether this state is true or false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:41\n                        \n                    \n\n            \n                \n                    Resolve function for the promise.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Sets the state to true and\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueOf\n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Gets the boolean state of this object.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if set has been called.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                        \n                    wait()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets a promise that resolves when this state is set to true.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state('open, open-instant', style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input()\n  @HostBinding('class.ccf-drawer-opened')\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input()\n  @HostBinding('class.ccf-drawer-expanded')\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    } };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done')\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done')\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled': {\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonFileReaderComponent.html":{"url":"components/JsonFileReaderComponent.html","title":"component - JsonFileReaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  JsonFileReaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-json-file-reader\n            \n\n\n\n            \n                styleUrls\n                ./json-file-reader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./json-file-reader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                fileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleFile\n                            \n                            \n                                triggerFileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parsedJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of json file reader component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Upload'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:18\n                            \n                        \n                \n                    \n                        Allows the label on the upload button to be customized.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parsedJson\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:21\n                            \n                        \n                \n                    \n                        Emits the json object of any files uploaded.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-json-file-reader\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:13\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleFile\n                        \n                    \n                \n            \n            \n                \nhandleFile(event: InputEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Takes in a json file and emits the parsed json object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerFileInput\n                        \n                    \n                \n            \n            \n                \ntriggerFileInput()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Method used to trigger the file input element's click handler\nfrom the placeholder button used for styling purposes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:13\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:15\n                        \n                    \n\n            \n                \n                    File Input element, used to manually trigger the click event.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n@Component({\n  selector: 'ccf-json-file-reader',\n  templateUrl: './json-file-reader.component.html',\n  styleUrls: ['./json-file-reader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class JsonFileReaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-json-file-reader';\n  /** File Input element, used to manually trigger the click event. */\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  /** Allows the label on the upload button to be customized. */\n  @Input() label = 'Upload';\n\n  /** Emits the json object of any files uploaded. */\n  @Output() readonly parsedJson = new EventEmitter();\n\n  /**\n   * Creates an instance of json file reader component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Method used to trigger the file input element's click handler\n   * from the placeholder button used for styling purposes.\n   */\n  triggerFileInput(): void {\n    const fileInputElement: HTMLElement = this.fileInput.nativeElement;\n    fileInputElement.click();\n  }\n\n  /**\n   * Takes in a json file and emits the parsed json object.\n   *\n   * @param event file input event\n   */\n  handleFile(event: InputEvent): void {\n    const inputTarget = event.target as HTMLInputElement;\n    if (!inputTarget.files) {\n      return;\n    }\n\n    const file = inputTarget.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const json = JSON.parse(fileReader.result as string) as unknown;\n      this.ga.event('json_file_load_end', 'json_file_reader');\n      this.parsedJson.emit(json);\n    };\n\n    this.ga.event('json_file_load_start', 'json_file_reader');\n    fileReader.readAsText(file);\n  }\n}\n\n    \n\n    \n        {{ label }}\n\n\n    \n\n    \n                \n                    ./json-file-reader.component.scss\n                \n                :host {\n  .upload-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: .6s;\n    cursor: pointer;\n    font-weight: 500;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonFileReaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonFileReaderModule.html":{"url":"modules/JsonFileReaderModule.html","title":"module - JsonFileReaderModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonFileReaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonFileReaderComponent } from './json-file-reader.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [JsonFileReaderComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  exports: [JsonFileReaderComponent]\n})\nexport class JsonFileReaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabeledSlideToggleComponent.html":{"url":"components/LabeledSlideToggleComponent.html","title":"component - LabeledSlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabeledSlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Generic toggle slider component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-labeled-slide-toggle\n            \n\n\n\n            \n                styleUrls\n                ./labeled-slide-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./labeled-slide-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                labels\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    left\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of labeled slide toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                \n                \n                    \n                        Type :     [string, string]\n\n                    \n                \n                \n                    \n                        Default value : ['Left', 'Right']\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:24\n                            \n                        \n                \n                    \n                        The two selection options to be toggled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Left'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input value for toggle slider\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:39\n                            \n                        \n                \n                    \n                        Emits the datatype with the currently selected option\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-labeled-slide-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateToggle\n                        \n                    \n                \n            \n            \n                \nupdateToggle(selection: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Updates and emits the currently selected option\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The current toggle state (true=left, false=right)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n\n                \n                    \n                        getleft()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:51\n                                \n                            \n                    \n                        \n                                Determines if left toggle option is selected\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Generic toggle slider component\n */\n@Component({\n  selector: 'ccf-labeled-slide-toggle',\n  templateUrl: './labeled-slide-toggle.component.html',\n  styleUrls: ['./labeled-slide-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class LabeledSlideToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-labeled-slide-toggle';\n\n  /**\n   * The two selection options to be toggled\n   */\n  @Input() labels: [string, string] = ['Left', 'Right'];\n\n  /**\n   * Input value for toggle slider\n   */\n  @Input() value = 'Left';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Emits the datatype with the currently selected option\n   */\n  @Output() readonly valueChange = new EventEmitter();\n\n  /**\n   * Creates an instance of labeled slide toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Determines if left toggle option is selected\n   */\n  get left(): boolean {\n    const { value, labels } = this;\n    return value !== labels[1];\n  }\n\n  /**\n   * Updates and emits the currently selected option\n   *\n   * @param selection The current toggle state (true=left, false=right)\n   */\n  updateToggle(selection: boolean): void {\n    this.value = selection ? this.labels[0] : this.labels[1];\n    this.ga.event('slide_toggle_toggled', 'slide_toggle', this.value);\n    this.valueChange.emit(this.value);\n  }\n}\n\n    \n\n    \n        {{labels[0]}}\n\n{{labels[1]}}\n\n    \n\n    \n                \n                    ./labeled-slide-toggle.component.scss\n                \n                :host{\n  .slide-label {\n    margin: 0 1rem;\n    transition: color .6s;\n    cursor: pointer;\n  }\n  \n  .disabled {\n    opacity: 30%;\n    cursor: not-allowed;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{labels[0]}}{{labels[1]}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabeledSlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabeledSlideToggleModule.html":{"url":"modules/LabeledSlideToggleModule.html","title":"module - LabeledSlideToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    LabeledSlideToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { LabeledSlideToggleComponent } from './labeled-slide-toggle.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [LabeledSlideToggleComponent],\n  exports: [LabeledSlideToggleComponent]\n})\nexport class LabeledSlideToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The left sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-left-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./left-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                detailsLabels$\n                            \n                            \n                                extractionSiteTooltip\n                            \n                            \n                                organList\n                            \n                            \n                                    Readonly\n                                organSelected$\n                            \n                            \n                                previousVisibilityItems\n                            \n                            \n                                    Readonly\n                                sexByLabel$\n                            \n                            \n                                    Readonly\n                                sideByLabel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                capitalizeFirstLetter\n                            \n                            \n                                setSexFromLabel\n                            \n                            \n                                setSideFromLabel\n                            \n                            \n                                togglePreviousRegistrationBlocks\n                            \n                            \n                                updateExtractionSiteTooltip\n                            \n                            \n                                updateRegistration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableSlider\n                            \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, registration: RegistrationState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableSlider\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:29\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-left-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \ncapitalizeFirstLetter(inputString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Takes the input string and capitalizes the first letter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                inputString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The string we want to capitalize it's first letter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                string with first letter capitalized.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Sets sex from sex toggle slider\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Selected sex\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSideFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSideFromLabel(label: \"L\" | \"R\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Sets side from side toggle slider\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"L\" | \"R\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Selected side\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePreviousRegistrationBlocks\n                        \n                    \n                \n            \n            \n                \ntogglePreviousRegistrationBlocks(visible: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Handles toggling previous registration blocks visibility.\nWhen making them visible, it updates current structures to 20%\nopacity; when making not visible it sets them back to their\nprevious opacity.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                visible\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the state to set the visibility to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateExtractionSiteTooltip\n                        \n                    \n                \n            \n            \n                \nupdateExtractionSiteTooltip(item: VisibilityItem | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Updates extraction site tooltip to either the VisibilityItem passed in's\ntooltip property, or an empty string if undefined.\nundefined.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The VisibilityItem which we want to show the tooltip of, or\nundefined.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRegistration\n                        \n                    \n                \n            \n            \n                \nupdateRegistration(event: SpatialEntityJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Event handler for capturing uploaded json and passing it along to\nthe relevant registration state method.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        SpatialEntityJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new registration state json\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        detailsLabels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : combineLatest(\n    [this.model.organ$, this.model.side$, this.model.sex$]).pipe(\n    map(([organ, side, sex]) => [\n      this.capitalizeFirstLetter(organ?.organ), this.capitalizeFirstLetter(side as string), this.capitalizeFirstLetter(sex as string)\n    ])\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSiteTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:54\n                        \n                    \n\n            \n                \n                    Variable that keeps track of the extraction site tooltip to display on\nthe stage when hovered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organSelected$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organ$.pipe(\n    map(organ => organ === undefined ? false : true)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousVisibilityItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [...this.model.snapshot.anatomicalStructures] as VisibilityItem[]\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:60\n                        \n                    \n\n            \n                \n                    Keeps track of the previousVisibility items so we can set the opacity\nback to what it was before we changed them to 20%\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sideByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.side$.pipe(\n    map(side => side === 'left' ? 'L' : 'R')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { VisibilityItem } from '../../core/models/visibility-item';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { RUI_ORGANS } from './../../core/store/model/model.state';\n\n\n/**\n * The left sidebar\n */\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-left-sidebar';\n\n  @Input() disableSlider = false;\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  readonly sexByLabel$ = this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  );\n\n  readonly sideByLabel$ = this.model.side$.pipe(\n    map(side => side === 'left' ? 'L' : 'R')\n  );\n\n  readonly organSelected$ = this.model.organ$.pipe(\n    map(organ => organ === undefined ? false : true)\n  );\n\n  readonly detailsLabels$: Observable = combineLatest(\n    [this.model.organ$, this.model.side$, this.model.sex$]).pipe(\n    map(([organ, side, sex]) => [\n      this.capitalizeFirstLetter(organ?.organ), this.capitalizeFirstLetter(side as string), this.capitalizeFirstLetter(sex as string)\n    ])\n  );\n\n  /**\n   * Variable that keeps track of the extraction site tooltip to display on\n   * the stage when hovered.\n   */\n  extractionSiteTooltip = '';\n\n  /**\n   * Keeps track of the previousVisibility items so we can set the opacity\n   * back to what it was before we changed them to 20%\n   */\n  previousVisibilityItems = [...this.model.snapshot.anatomicalStructures] as VisibilityItem[];\n\n  organList = RUI_ORGANS;\n\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    readonly registration: RegistrationState\n  ) { }\n\n  /**\n   * Takes the input string and capitalizes the first letter.\n   * @param inputString The string we want to capitalize it's first letter.\n   * @returns string with first letter capitalized.\n   */\n  capitalizeFirstLetter(inputString: string): string {\n    if (inputString) {\n      return inputString.charAt(0).toUpperCase() + inputString.slice(1);\n    }\n    return inputString;\n  }\n\n  /**\n   * Updates extraction site tooltip to either the VisibilityItem passed in's\n   * tooltip property, or an empty string if undefined.\n   *\n   * @param item The VisibilityItem which we want to show the tooltip of, or\n   * undefined.\n   */\n  updateExtractionSiteTooltip(item: VisibilityItem | undefined): void {\n    if (item?.tooltip) {\n      this.extractionSiteTooltip = item.tooltip;\n    } else {\n      this.extractionSiteTooltip = '';\n    }\n  }\n\n  /**\n   * Sets sex from sex toggle slider\n   *\n   * @param label Selected sex\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.model.setSex(label === 'Female' ? 'female' : 'male');\n  }\n\n  /**\n   * Sets side from side toggle slider\n   *\n   * @param label Selected side\n   */\n  setSideFromLabel(label: 'L' | 'R'): void {\n    this.model.setSide(label === 'L' ? 'left' : 'right');\n  }\n\n  /**\n   * Handles toggling previous registration blocks visibility.\n   * When making them visible, it updates current structures to 20%\n   * opacity; when making not visible it sets them back to their\n   * previous opacity.\n   *\n   * @param visible the state to set the visibility to.\n   */\n  togglePreviousRegistrationBlocks(visible: boolean): void {\n    if (visible) {\n      this.previousVisibilityItems = [...this.model.snapshot.anatomicalStructures];\n    }\n    this.model.toggleRegistrationBlocksVisibility(visible, this.previousVisibilityItems);\n  }\n\n  /**\n   * Event handler for capturing uploaded json and passing it along to\n   * the relevant registration state method.\n   *\n   * @param event the new registration state json\n   */\n  updateRegistration(event: SpatialEntityJsonLd): void {\n    this.registration.editRegistration(event);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n          Donor Sex:\n          \n          \n        \n\n        \n\n        \n          \n              Anatomical Structures\n          \n\n          \n              \n              \n          \n        \n\n        \n\n        \n            \n                Landmarks\n            \n            \n                \n                \n                \n                \n            \n        \n\n        \n\n        \n\n         0\">\n            {{ extractionSiteTooltip }}\n        \n\n        \n    \n\n\n    \n\n    \n                \n                    ./left-sidebar.component.scss\n                \n                :host {\n\n  display: block;\n  height: calc(100% - 3rem);\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n\n  .scroll-wrapper {\n    overflow-y: scroll;\n    height: 100%;\n    margin-right: 0.375rem;\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      margin-left: 1.5rem;\n      margin-right: 0.375rem;\n      min-height: 100%;\n\n      .space {\n        height: 3rem;\n      }\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      .ccf-organ-selector {\n        margin-top: 1.5rem;\n      }\n\n      .organ-sliders {\n        .slider-label {\n          font-weight: 600;\n        }\n\n        display: flex;\n        height: 3rem;\n        align-items: center;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n        mat-expansion-panel-header {\n          .expansion-title {\n            font-size: 1rem;\n            font-weight: 600;\n          }\n        }\n      }\n\n      ::ng-deep .mat-expansion-panel-body {\n        padding: 0;\n      }\n\n      .extraction-menu,\n      .anatomical-structures-menu {\n        ::ng-deep .expansion-header {\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          padding: 0;\n          font-weight: bold;\n          height: 3rem;\n\n          .mat-expansion-indicator {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 24px;\n            width: 24px;\n          }\n        }\n\n        .expansion-content {\n          margin-bottom: 0.75rem;\n          text-align: center;\n          margin-top: 2.25rem;\n          .expansion-placeholder {\n            width: 100%;\n            font-size: 0.9rem;\n            font-weight: 400;\n          }\n        }\n      }\n\n      .extraction-site-tooltip {\n        position: absolute;\n        top: 4rem;\n        left: 27rem;\n        width: 21rem;\n        padding: 1rem;\n        border-radius: 0.5rem;\n        border: 1px solid;\n        z-index: 2;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Donor Sex:                                                                    Anatomical Structures                                                                                                              Landmarks                                                                                                                                     0\">            {{ extractionSiteTooltip }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeftSidebarModule.html":{"url":"modules/LeftSidebarModule.html","title":"module - LeftSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    LeftSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nLeftSidebarModule -->\n\nDetailsLabelModule->LeftSidebarModule\n\n\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nLeftSidebarModule -->\n\nJsonFileReaderModule->LeftSidebarModule\n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLeftSidebarModule -->\n\nLabeledSlideToggleModule->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DetailsLabelModule\n                        \n                        \n                            ExtractionSetDropdownModule\n                        \n                        \n                            JsonFileReaderModule\n                        \n                        \n                            LabeledSlideToggleModule\n                        \n                        \n                            NameInputModule\n                        \n                        \n                            VisibilityMenuModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { DetailsLabelModule } from '../../shared/components/details-label/details-label.module';\nimport { ExtractionSetDropdownModule } from '../../shared/components/extraction-set-dropdown/extraction-set-dropdown.module';\nimport { LabeledSlideToggleModule } from '../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\nimport { NameInputModule } from '../../shared/components/name-input/name-input.module';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { VisibilityMenuModule } from '../../shared/components/visibility-menu/visibility-menu.module';\nimport { VisibilityToggleModule } from '../../shared/components/visibility-toggle/visibility-toggle.module';\nimport { LeftSidebarComponent } from './left-sidebar.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { JsonFileReaderModule } from '../../shared/components/json-file-reader/json-file-reader.module';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatTooltipModule,\n\n    MatDividerModule,\n    DetailsLabelModule,\n    LabeledSlideToggleModule,\n    NameInputModule,\n    VisibilityToggleModule,\n    ExtractionSetDropdownModule,\n    OpacitySliderModule,\n    VisibilityMenuModule,\n    VisibilityToggleModule,\n    JsonFileReaderModule\n  ],\n  declarations: [LeftSidebarComponent],\n  exports: [LeftSidebarComponent]\n})\nexport class LeftSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:50\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:50\n                        \n                    \n\n            \n                \n                    Counter used to give each message a unique id.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting all messages except for those sent by this source.\n\n\n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting messages sent from a specific source.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source messages are filtered on.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting messages sent from any of the specified sources.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sources\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The sources messages are filtered on.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextMessageId\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextMessageId()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Creates a unique message identifier.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The identifier number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Sends a single message with a payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message payload.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Connects to a message channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source of messages sent.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MessageChannel\n\n                        \n                            \n                                A new connected message channel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Clean up.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                        \n                    \n\n            \n                \n                    The message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:130\n                        \n                    \n\n            \n                \n                    The message listener.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MetaDataField.html":{"url":"interfaces/MetaDataField.html","title":"interface - MetaDataField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MetaDataField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/meta-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MetaDataField {\n  label: string;\n  value: string;\n}\n\nexport type MetaData = MetaDataField[];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelStateModel.html":{"url":"interfaces/ModelStateModel.html","title":"interface - ModelStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModelStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data contained in the stage state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            blockSize\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            extractionSites\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            organDimensions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organIri\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            showPrevious\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slicesConfig\n                                        \n                                \n                                \n                                        \n                                            viewSide\n                                        \n                                \n                                \n                                        \n                                            viewType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Anatomical structures for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockSize:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Block size\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:         ExtractionSet[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtractionSet[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sets\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Possible extraction sites\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organDimensions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organDimensions:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference Organ Dimensions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reference Organ IRI\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model position\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model rotation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sex if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPrevious\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPrevious:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether previous registration blocks are visible\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\" | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\" | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Side if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slicesConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slicesConfig:         SlicesConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SlicesConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Slice configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewSide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewSide:         ViewSide\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewSide\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View side\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewType:         ViewType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right' | '';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    side: '',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: Object.values(asLookup) });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: false,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name')\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameInputComponent.html":{"url":"components/NameInputComponent.html","title":"component - NameInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NameInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for inputting the researcher's name\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-name-input\n            \n\n\n\n            \n                styleUrls\n                ./name-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                firstNameValidator\n                            \n                            \n                                lastNameValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:68\n                            \n                        \n\n                \n                    \n                            Creates an instance of name input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:50\n                            \n                        \n                \n                    \n                        Current user name\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nameChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:68\n                            \n                        \n                \n                    \n                        Emits a UserName object\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-name-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateName\n                        \n                    \n                \n            \n            \n                \nupdateName(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Updates username with a new entry and emits the UserName object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    firstName or lastName\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                \n                    \n                        Default value : {\n    firstName: '',\n    lastName: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:40\n                        \n                    \n\n            \n                \n                    Used to validate the first name input field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:44\n                        \n                    \n\n            \n                \n                    Used to validate the last name input field.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:50\n                                \n                            \n                    \n                        \n                                Current user name\n\n\n                                \n                                    Returns :         UserName\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: UserName)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:54\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            UserName\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n    \n        \n  First Name \n  \n\n\n\n  Last Name \n  \n\n\n    \n\n    \n                \n                    ./name-input.component.scss\n                \n                :host {\n  display: flex;\n\n  .field {\n    &:not(:last-child) {\n      padding-right: 0.75rem;\n    }\n\n    .input {\n      text-align: left;\n      width: 100%;\n    }\n\n    ::ng-deep .mdc-text-field {\n      padding: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  First Name     Last Name   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NameInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NameInputModule.html":{"url":"modules/NameInputModule.html","title":"module - NameInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NameInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\n\n\nNameInputModule\n\nNameInputModule\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NameInputComponent } from './name-input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule\n  ],\n  declarations: [NameInputComponent],\n  exports: [NameInputComponent]\n})\nexport class NameInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganConfig.html":{"url":"interfaces/OrganConfig.html","title":"interface - OrganConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \"large intestine\" | \"heart\" | \"kidney\" | \"spleen\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"large intestine\" | \"heart\" | \"kidney\" | \"spleen\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n}\n\nexport interface OrganConfig {\n  name: 'large intestine' | 'heart' | 'kidney' | 'spleen';\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken(\n  'Global configuration object'\n);\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganData.html":{"url":"interfaces/OrganData.html","title":"interface - OrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageState.html":{"url":"injectables/PageState.html","title":"injectable - PageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                General page global state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                organOptions$\n                            \n                            \n                                    Readonly\n                                registrationCallbackSet$\n                            \n                            \n                                    Readonly\n                                registrationStarted$\n                            \n                            \n                                    Readonly\n                                useCancelRegistrationCallback$\n                            \n                            \n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelRegistration\n                            \n                            \n                                    \n                                clearHasChanges\n                            \n                            \n                                    Private\n                                initSkipConfirmationListeners\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                registrationStarted\n                            \n                            \n                                    \n                                setHasChanges\n                            \n                            \n                                    \n                                setUseCancelRegistrationCallback\n                            \n                            \n                                    \n                                setUserName\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skipConfirmation$\n                                \n                                \n                                    globalSkipConfirmation$\n                                \n                                \n                                    hasChanges$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:80\n                            \n                        \n\n                \n                    \n                            Creates an instance of page state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelRegistration\n                        \n                    \n                \n            \n            \n                \ncancelRegistration()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clearHasChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSkipConfirmationListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSkipConfirmationListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:170\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:96\n                        \n                    \n\n\n            \n                \n                        Initializes this service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registrationStarted\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrationStarted()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:147\n                        \n                    \n\n\n            \n                \n                        Sets registrationStarted to true (when initial registration modal is closed)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setHasChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    setHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUseCancelRegistrationCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUseCancelRegistrationCallback(use: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                use\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUserName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserName(name: Pick)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:137\n                        \n                    \n\n\n            \n                \n                        Sets the name of the active user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The first and last name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.organOptions))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationCallbackSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.registrationCallbackSet))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationStarted$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluckUnique('registrationStarted'))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:59\n                        \n                    \n\n            \n                \n                    RegistrationStated observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useCancelRegistrationCallback$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.useCancelRegistrationCallback))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.user))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:57\n                        \n                    \n\n            \n                \n                    Active user observable\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skipConfirmation$\n                    \n                \n\n                \n                    \n                        getskipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        globalSkipConfirmation$\n                    \n                \n\n                \n                    \n                        getglobalSkipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasChanges$\n                    \n                \n\n                \n                    \n                        gethasChanges$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:78\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: []\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageStateModel.html":{"url":"interfaces/PageStateModel.html","title":"interface - PageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Page state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hasChanges\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organOptions\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                                \n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                        \n                                            skipConfirmation\n                                        \n                                \n                                \n                                        \n                                            useCancelRegistrationCallback\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasChanges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasChanges:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organOptions:         OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the initial registration modal has been closed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useCancelRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useCancelRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Active user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: []\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A record with information about a single person\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: []\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferenceDataState.html":{"url":"injectables/ReferenceDataState.html","title":"injectable - ReferenceDataState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReferenceDataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data for the main 3d model display\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLatestIri\n                            \n                            \n                                getOrganData\n                            \n                            \n                                getReferenceOrganIri\n                            \n                            \n                                    Private\n                                getSourceDB\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                normalizePlacement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globals: GlobalsService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globals\n                                                  \n                                                        \n                                                                    GlobalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLatestIri\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatestIri(organ?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganData\n                        \n                    \n                \n            \n            \n                \ngetOrganData(iri: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:155\n                        \n                    \n\n\n            \n                \n                        Looks up organ information from an IRI\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                iri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The IRI\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OrganData | undefined\n\n                        \n                            \n                                A populated organ data if the IRI is valid, otherwise undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganIri\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganIri(organ: string, sex?: \"Male\" | \"Female\" | string, side?: \"Left\" | \"Right\" | string, organInfo?: OrganInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:135\n                        \n                    \n\n\n            \n                \n                        Looks up an IRI for a potential reference organ.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the organ\n\n                                            \n                                        \n                                        \n                                                sex\n                                            \n                                                        \"Male\" | \"Female\" | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    the sex: male, female, or undefined\n\n                                            \n                                        \n                                        \n                                                side\n                                            \n                                                        \"Left\" | \"Right\" | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    the side: left, right, or undefined\n\n                                            \n                                        \n                                        \n                                                organInfo\n                                            \n                                                            OrganInfo\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                An IRI if there is a reference organ for this state, otherwise undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSourceDB\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceDB()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:87\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizePlacement\n                        \n                    \n                \n            \n            \n                \nnormalizePlacement(place: SpatialPlacementJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                place\n                                            \n                                                        SpatialPlacementJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialPlacementJsonLd\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReferenceDataStateModel.html":{"url":"interfaces/ReferenceDataStateModel.html","title":"interface - ReferenceDataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReferenceDataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            organIRILookup\n                                        \n                                \n                                \n                                        \n                                            organSpatialEntities\n                                        \n                                \n                                \n                                        \n                                            placementPatches\n                                        \n                                \n                                \n                                        \n                                            sceneNodeLookup\n                                        \n                                \n                                \n                                        \n                                            simpleSceneNodeLookup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIRILookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIRILookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organSpatialEntities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organSpatialEntities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placementPatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placementPatches:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        simpleSceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        simpleSceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationContentComponent.html":{"url":"components/RegistrationContentComponent.html","title":"component - RegistrationContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing content of the initial registration modal\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-content\n            \n\n\n\n            \n                styleUrls\n                ./registration-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                currentOrgan\n                            \n                            \n                                currentSex\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                nameValid\n                            \n                            \n                                organList\n                            \n                            \n                                organSelected\n                            \n                            \n                                    Readonly\n                                sexByLabel$\n                            \n                            \n                                sexSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameValid\n                            \n                            \n                                closeDialog\n                            \n                            \n                                organSelect\n                            \n                            \n                                registerButtonClick\n                            \n                            \n                                setSexFromLabel\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, dialogRef: MatDialogRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of the registration dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page state\n\n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration dialog\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameValid\n                        \n                    \n                \n            \n            \n                \ncheckNameValid(event: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Checks to see if a first and last name has been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Closes the dialog and sets the correct sex and organ in the model state\nUpdates page state to signal registration has started\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelect\n                        \n                    \n                \n            \n            \n                \norganSelect(organ: OrganInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Updates current organ selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            OrganInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Organ selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Handles button click\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                Returns nothing is no organ is selected\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Updates current sex selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Sex selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentOrgan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganInfo\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:41\n                        \n                    \n\n            \n                \n                    Current organ selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:38\n                        \n                    \n\n            \n                \n                    Current sex selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:56\n                        \n                    \n\n            \n                \n                    Registration dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:29\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether  an organ has been selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:24\n                        \n                    \n\n            \n                \n                    Current sex in the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sexSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:32\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OrganInfo } from 'ccf-shared';\nimport { map } from 'rxjs/operators';\n\nimport { ModelState, RUI_ORGANS } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\n\n\n/**\n * Component containing content of the initial registration modal\n */\n@Component({\n  selector: 'ccf-registration-content',\n  templateUrl: './registration-content.component.html',\n  styleUrls: ['./registration-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegistrationContentComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-content';\n\n  /** Current sex in the model state */\n  readonly sexByLabel$ = this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  );\n\n  /** HTML class name */\n  organList = RUI_ORGANS;\n\n  /** HTML class name */\n  sexSelected: boolean;\n\n  /** Whether  an organ has been selected */\n  organSelected: boolean;\n\n  /** Current sex selected */\n  currentSex: string;\n\n  /** Current organ selected */\n  currentOrgan: OrganInfo;\n\n  nameValid: boolean;\n\n  /**\n   * Creates an instance of the registration dialog\n   *\n   * @param page Page state\n   * @param model Model state\n   * @param registration Registration state\n   * @param dialogRef Registration dialog\n   */\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    public dialogRef: MatDialogRef,\n    cdr: ChangeDetectorRef\n  ) {\n    page.user$.subscribe(user => {\n      this.checkNameValid(user);\n      cdr.markForCheck();\n    });\n    model.organ$.subscribe(organ => {\n      this.organSelected = organ.src !== '';\n      cdr.markForCheck();\n    });\n    this.sexByLabel$.subscribe(sex => {\n      this.setSexFromLabel(sex);\n      cdr.markForCheck();\n    });\n    dialogRef.disableClose = true;\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n      cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Updates current sex selected\n   *\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.currentSex = label;\n    this.sexSelected = true;\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   *\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current organ selected\n   *\n   * @param organ Organ selected\n   */\n  organSelect(organ: OrganInfo): void {\n    this.currentOrgan = organ;\n    this.organSelected = true;\n  }\n\n  /**\n   * Handles button click\n   *\n   * @param [event] The click event\n   * @returns  Returns nothing is no organ is selected\n   */\n  registerButtonClick(event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.organSelected || !this.nameValid) {\n      return;\n    }\n    this.closeDialog();\n  }\n\n  /**\n   * Closes the dialog and sets the correct sex and organ in the model state\n   * Updates page state to signal registration has started\n   */\n  closeDialog(): void {\n    this.model.setSex(this.currentSex === 'Female' ? 'female' : 'male');\n    this.model.setOrgan(this.currentOrgan);\n    this.dialogRef.close(true);\n    this.page.registrationStarted();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n\n    \n      Donor Sex:\n      \n      \n    \n\n    Select an organ\n\n    \n      \n    \n  \n  START REGISTRATION\n\n\n    \n\n    \n                \n                    ./registration-content.component.scss\n                \n                .modal {\n  padding: 1rem;\n  border-radius: 4px;\n  max-width: 47rem;\n\n  .organ-sliders {\n    .slider-label {\n      font-weight: 600;\n    }\n\n    display: flex;\n    height: 3rem;\n    align-items: center;\n  }\n\n  .selector-label {\n    font-weight: 600;\n    height: 3rem;\n    line-height: 3rem;\n  }\n\n  .selector-container {\n    margin: 0 auto;\n  }\n\n  .registration-button {\n    display: block;\n    margin: 0 auto;\n    margin-top: 2rem;\n    transition: 0.6s;\n    padding: 0 1rem;\n\n    &.disabled {\n      pointer-events: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Donor Sex:                    Select an organ                  START REGISTRATION'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationContentModule.html":{"url":"modules/RegistrationContentModule.html","title":"module - RegistrationContentModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationContentModule_imports\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nRegistrationContentModule -->\n\nLabeledSlideToggleModule->RegistrationContentModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nRegistrationContentModule -->\n\nNameInputModule->RegistrationContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LabeledSlideToggleModule\n                        \n                        \n                            NameInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RegistrationContentComponent } from './registration-content.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NameInputModule } from '../../../shared/components/name-input/name-input.module';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\nimport { OrganSelectorModule } from 'ccf-shared';\n\n\n@NgModule({\n  declarations: [RegistrationContentComponent],\n  imports: [CommonModule, MatButtonModule, MatTooltipModule, NameInputModule, LabeledSlideToggleModule, OrganSelectorModule],\n  exports: [RegistrationContentComponent]\n})\nexport class RegistrationContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationModalComponent.html":{"url":"components/RegistrationModalComponent.html","title":"component - RegistrationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Registration modal that appears on startup\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-modal\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./registration-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, page: PageState, model: ModelState, referenceData: ReferenceDataState, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog for the modal\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        referenceData\n                                                  \n                                                        \n                                                                        ReferenceDataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Opens the dialog on startup (but not if cancel registration callback is set)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Opens dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:34\n                        \n                    \n\n            \n                \n                    Dialog for the modal\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { GlobalConfig } from '../../../core/services/config/config';\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState } from '../../../core/store/page/page.state';\nimport { ReferenceDataState } from '../../../core/store/reference-data/reference-data.state';\nimport { RegistrationContentComponent } from '../registration-content/registration-content.component';\n\n\n/**\n * Registration modal that appears on startup\n */\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  selector: 'ccf-registration-modal',\n  templateUrl: './registration-modal.component.html'\n})\nexport class RegistrationModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-modal';\n\n  dialogOpen = false;\n\n  /**\n   * Creates an instance of registration modal component.\n   *\n   * @param dialog Dialog for the modal\n   */\n  constructor(\n    public dialog: MatDialog,\n    private readonly page: PageState,\n    private readonly model: ModelState,\n    private readonly referenceData: ReferenceDataState,\n    private readonly globalConfig: GlobalConfigState\n\n  ) {}\n\n  /**\n   * Opens the dialog on startup (but not if cancel registration callback is set)\n   */\n  ngOnInit(): void {\n    combineLatest([this.page.state$, this.model.state$, this.referenceData.state$, this.globalConfig.state$]).pipe(\n      tap(([page, model, data, global]) => {\n        if (this.dialogOpen) {\n          return;\n        }\n        if (global.editRegistration) {\n          return;\n        }\n        if (Object.keys(data.organIRILookup).length === 0) {\n          return;\n        }\n        if (page.user.firstName !== '' && page.user.lastName !== '' && model.organ.src !== '') {\n          return;\n        }\n        this.dialogOpen = true;\n        this.openDialog();\n      })\n    ).subscribe();\n  }\n\n  /**\n   * Opens dialog\n   */\n  openDialog(): void {\n    this.dialog.open(RegistrationContentComponent, {\n      autoFocus: false,\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationModalModule.html":{"url":"modules/RegistrationModalModule.html","title":"module - RegistrationModalModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_RegistrationModalModule_imports\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegistrationContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationModalComponent } from './registration-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RegistrationContentModule } from '../registration-content/registration-content.module';\n\n@NgModule({\n  declarations: [RegistrationModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, RegistrationContentModule],\n  exports: [RegistrationModalComponent]\n})\nexport class RegistrationModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationStateModel.html":{"url":"interfaces/RegistrationStateModel.html","title":"interface - RegistrationStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Registration state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayErrors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            initialRegistration\n                                        \n                                \n                                \n                                        \n                                            registrations\n                                        \n                                \n                                \n                                        \n                                            useRegistrationCallback\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayErrors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not to display user registration errors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialRegistration:     SpatialEntityJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntityJsonLd\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Registration provided by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrations:     Record[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Previous registrations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to use the registration callback function\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { insertItem, patch } from '@ngxs/store/operators';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { saveAs } from 'file-saver';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, startWith, switchMap, take, tap } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { Tag } from '../../models/anatomical-structure-tag';\nimport { MetaData } from '../../models/meta-data';\nimport { GlobalConfig } from '../../services/config/config';\nimport { AnatomicalStructureTagState } from '../anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState, ModelStateModel, RUI_ORGANS, XYZTriplet } from '../model/model.state';\nimport { PageState, PageStateModel } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/**\n * Registration state model\n */\nexport interface RegistrationStateModel {\n  /** Whether to use the registration callback function */\n  useRegistrationCallback: boolean;\n  /** Whether or not to display user registration errors */\n  displayErrors: boolean;\n  /** Previous registrations */\n  registrations: Record[];\n  /** Registration provided by user */\n  initialRegistration?: SpatialEntityJsonLd;\n}\n\n\n/**\n * Data for model registrations\n */\n@StateRepository()\n@State({\n  name: 'registration',\n  defaults: {\n    useRegistrationCallback: false,\n    displayErrors: false,\n    registrations: []\n  }\n})\n@Injectable()\nexport class RegistrationState extends NgxsImmutableDataRepository {\n  readonly displayErrors$ = this.state$.pipe(map(x => x?.displayErrors));\n\n  /** Observable of registration metadata */\n  @Computed()\n  get metadata$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildMetadata(page, model, tags))\n    );\n  }\n\n  /** Observable of registration data in jsonld format */\n  @Computed()\n  get jsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags))\n    );\n  }\n\n  @Computed()\n  get valid$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$]).pipe(\n      map(() => this.isValid)\n    );\n  }\n\n  /**\n   * Observable of previous registrations\n   */\n  @Computed()\n  get previousRegistrations$(): Observable[]> {\n    const { globalConfig, state$ } = this;\n    const regs = state$.pipe(map(x => x?.registrations));\n    const fetched = globalConfig.getOption('fetchPreviousRegistrations').pipe(\n      switchMap(fetch => fetch?.() ?? [[]]),\n      startWith([])\n    );\n\n    return combineLatest([regs, fetched]).pipe(\n      map(([local, external]) => [...local, ...external])\n    );\n  }\n\n  /** Current uuid identifier used when registering */\n  @Computed()\n  private get currentIdentifier(): string {\n    return uuidV4();\n  }\n\n  /** Time of last modification to registration data */\n  @Computed()\n  private get currentDate(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /** Reference to the page state */\n  private page: PageState;\n\n  /** Reference to the model state */\n  private model: ModelState;\n\n  /** Reference to the AS Tag state */\n  private tags: AnatomicalStructureTagState;\n\n  /** Reference to the reference data state */\n  private refData: ReferenceDataState;\n\n  /**\n   * Creates an instance of registration state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.page = this.injector.get(PageState);\n    this.model = this.injector.get(ModelState);\n    this.tags = this.injector.get(AnatomicalStructureTagState);\n    this.refData = this.injector.get(ReferenceDataState);\n\n    this.refData.state$.subscribe(() => {\n      this.globalConfig.config$.pipe(\n        take(1),\n        tap(({ useDownload, register, organOptions }) => {\n          this.ctx.patchState({\n            useRegistrationCallback: !!(!useDownload && register),\n          });\n          this.setOrganSelection(organOptions as string[]);\n        })\n      ).subscribe();\n\n      this.globalConfig.getOption('editRegistration').pipe(\n        filterNulls(),\n        tap(reg => {\n          this.ctx.patchState({ initialRegistration: reg as SpatialEntityJsonLd });\n          this.editRegistration(reg as SpatialEntityJsonLd);\n        })\n      ).subscribe();\n    });\n  }\n\n  async editRegistration(reg: SpatialEntityJsonLd): Promise {\n    const place = this.refData.normalizePlacement(\n      Array.isArray(reg.placement) ? reg.placement[0] : reg.placement\n    );\n    const data = this.refData.getOrganData(place.target);\n\n    this.page.setUserName({ firstName: reg.creator_first_name, lastName: reg.creator_last_name });\n\n    if (data) {\n      this.model.setOrgan(data.organ);\n      if (data.sex) {\n        this.model.setSex(data.sex);\n      }\n      if (data.side) {\n        this.model.setSide(data.side);\n      }\n    }\n\n    this.model.setBlockSize({ x: reg.x_dimension, y: reg.y_dimension, z: reg.z_dimension });\n    this.model.setRotation({ x: place.x_rotation, y: place.y_rotation, z: place.z_rotation });\n    this.model.setSlicesConfig({ thickness: reg.slice_thickness || NaN, numSlices: reg.slice_count || NaN });\n\n    this.model.setPosition({ x: place.x_translation, y: place.y_translation, z: place.z_translation });\n    const iris = new Set(reg.ccf_annotations);\n    this.tags.addTags(\n      this.model.snapshot.anatomicalStructures\n        .filter(item => iris.has(item.id as string))\n        .map((item) => ({ id: item.id, label: item.name, type: 'added' }))\n    );\n\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets whether to use the registration callback function or download.\n   *\n   * @param use True to use the callback, false to download\n   */\n  @DataAction()\n  setUseRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useRegistrationCallback: use });\n  }\n\n  /**\n   * Set's whether or not we should display the user's registration errors\n   *\n   * @param displayErrors the value to set it to\n   */\n  @DataAction()\n  setDisplayErrors(displayErrors: boolean): void {\n    this.ctx.patchState({ displayErrors });\n  }\n\n  /**\n   * Adds an entry to the previous registrations\n   *\n   * @param registration The new entry\n   */\n  @DataAction()\n  addRegistration(registration: Record): void {\n    this.ctx.setState(patch({\n      registrations: insertItem(registration as Immutable>)\n    }));\n  }\n\n  /**\n   * Sets organ options in the RUI\n   * @param ids list of organ ids\n   */\n  @DataAction()\n  setOrganSelection(ids: string[] = []): void {\n    this.page.patchState({ organOptions: this.organListOptions(ids) });\n  }\n\n  isDataValid(page: Immutable, model: Immutable): boolean {\n    const requiredValues = [\n      page.user.firstName,\n      page.user.lastName,\n      model.organ.src,\n      model.organ.name,\n      model.organ.organ\n    ];\n\n    return requiredValues.every(value => !!value);\n  }\n\n  @Computed()\n  get isValid(): boolean {\n    return this.isDataValid(this.page.snapshot, this.model.snapshot);\n  }\n\n  /**\n   * Registers or downloads json data.\n   *\n   * @param [useCallback] Explicit override selecting the register/download action\n   */\n  register(useCallback?: boolean): void {\n    if (!this.isValid) {\n      return;\n    }\n\n    const {\n      globalConfig: { snapshot: { register: registrationCallback } },\n      page, model, snapshot\n    } = this;\n    const jsonObj = this.buildJsonLd(page.snapshot, model.snapshot, this.tags.latestTags);\n    const json = JSON.stringify(jsonObj, undefined, 2);\n\n    if (useCallback ?? (useCallback === undefined && snapshot.useRegistrationCallback)) {\n      registrationCallback?.(json);\n    } else {\n      const data = new Blob([json], {\n        type: 'application/json',\n        endings: 'native'\n      });\n\n      saveAs(data, 'registration-data.json');\n    }\n\n    this.addRegistration(jsonObj);\n    this.setDisplayErrors(false);\n    this.page.clearHasChanges();\n  }\n\n  /**\n   * Sets the state back to the initial registration\n   */\n  setToInitialRegistration() {\n    this.editRegistration(this.getState().initialRegistration as SpatialEntityJsonLd);\n  }\n\n  /**\n   * Builds a metadata array from the specified data.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns metadata An array of label-value objects\n   */\n  private buildMetadata(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): MetaData {\n    const data: MetaData = [];\n\n    if (!page.registrationCallbackSet) {\n      data.push(\n        { label: 'First Name', value: page.user.firstName },\n        { label: 'Last Name', value: page.user.lastName }\n      );\n    }\n\n    data.push(\n      { label: 'Reference Organ Name', value: model.organ.name },\n      { label: 'Tissue Block Dimensions (mm)', value: this.xyzTripletToString(model.blockSize) },\n      { label: 'Tissue Block Position (mm)', value: this.xyzTripletToString(model.position) },\n      { label: 'Tissue Block Rotation', value: this.xyzTripletToString(model.rotation) },\n      { label: 'Anatomical Structure Tags', value: tags.map(t => t.label).join(', ') },\n      { label: 'Time Stamp', value: this.currentDate },\n      { label: 'Alignment ID', value: this.currentIdentifier }\n    );\n\n    return data;\n  }\n\n  /**\n   * Converts the registration data into jsonld format.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns A jsonld object\n   */\n  private buildJsonLd(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): Record {\n    return {\n      '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n      '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}`,\n      '@type': 'SpatialEntity',\n      label: model.label || undefined,\n      creator: `${page.user.firstName} ${page.user.lastName}`,\n      creator_first_name: page.user.firstName,\n      creator_last_name: page.user.lastName,\n      // creator_orcid: data.alignment_operator_orcid,\n      creation_date: this.currentDate,\n      ccf_annotations: tags.map(tag => tag.id),\n      slice_thickness: model.slicesConfig?.thickness || undefined,\n      slice_count: model.slicesConfig?.numSlices || undefined,\n\n      x_dimension: +model.blockSize.x.toFixed(3),\n      y_dimension: +model.blockSize.y.toFixed(3),\n      z_dimension: +model.blockSize.z.toFixed(3),\n      dimension_units: 'millimeter',\n\n      placement: {\n        '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}_placement`,\n        '@type': 'SpatialPlacement',\n        target: model.organIri as string,\n        placement_date: this.currentDate,\n\n        x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n\n        x_rotation: +model.rotation.x.toFixed(3),\n        y_rotation: +model.rotation.y.toFixed(3),\n        z_rotation: +model.rotation.z.toFixed(3),\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n\n        x_translation: +model.position.x.toFixed(3),\n        y_translation: +model.position.y.toFixed(3),\n        z_translation: +model.position.z.toFixed(3),\n        translation_units: 'millimeter'\n      }\n    };\n  }\n\n  /**\n   * Format a XYZTriplet as a string.\n   *\n   * @param xyz The triplet values\n   * @returns The string representation\n   */\n  private xyzTripletToString(xyz: XYZTriplet): string {\n    return `${Math.round(xyz.x)}, ${Math.round(xyz.y)}, ${Math.round(xyz.z)}`;\n  }\n\n  /**\n   * Provides list of organ objects given an array of organ ids\n   * @param organOptions array of organ ids\n   * @returns list of organ info\n   */\n  private organListOptions(organOptions?: string[]): OrganInfo[] {\n    if (organOptions && organOptions.length > 0) {\n      return RUI_ORGANS.filter(organ => {\n        if (!organ.id) {\n          return false;\n        } else {\n          return organOptions.includes(organ.id);\n        }\n      });\n    } else {\n      return RUI_ORGANS;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewButtonComponent.html":{"url":"components/ReviewButtonComponent.html","title":"component - ReviewButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to launch the ReviewModal component.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-button\n            \n\n\n\n            \n                styleUrls\n                ./review-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchReviewModal\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrors\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                            \n                                registrationIsValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                enterErrorMode\n                            \n                            \n                                registerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of review button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayErrors\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:36\n                            \n                        \n                \n                    \n                        Whether or not the app is currently displaying errors\nDecides how the button should be styled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metaData\n                    \n                \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:30\n                            \n                        \n                \n                    \n                        Input object of information to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registrationCallbackSet\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:25\n                            \n                        \n                \n                    \n                        Input to set whether the component should be in register (true) or download (false) mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registrationIsValid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:43\n                            \n                        \n                \n                    \n                        Whether or not all the necessary data has been inputted from\nthe user.  Decides whether or not to let the user open the\nregistration / download modal\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        enterErrorMode\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:55\n                            \n                        \n                \n                    \n                        Turns on the 'error mode' for the application.\nUsed to begin showing the user what they need to\ndo to be able to register / download.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registerData\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:48\n                            \n                        \n                \n                    \n                        Output that emits when the modal's register button was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchReviewModal\n                        \n                    \n                \n            \n            \n                \nlaunchReviewModal()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Opens the info dialogue with the project details\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Updates the value of registrationIsValid based on the\nmeta data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Handles the click action for the register button.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:79\n                                \n                            \n                    \n                        \n                                Decides whether or not the download / register button should\nbe disabled.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { MetaData } from '../../../core/models/meta-data';\nimport { ReviewModalComponent } from '../review-modal/review-modal.component';\n\n\n/**\n * Component to launch the ReviewModal component.\n */\n@Component({\n  selector: 'ccf-review-button',\n  templateUrl: './review-button.component.html',\n  styleUrls: ['./review-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewButtonComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-button';\n\n  /**\n   * Input to set whether the component should be in register (true) or download (false) mode\n   */\n  @Input() registrationCallbackSet = true;\n\n  /**\n   * Input object of information to display in the modal\n   */\n  @Input() metaData: MetaData = [];\n\n  /**\n   * Whether or not the app is currently displaying errors\n   * Decides how the button should be styled\n   */\n  @Input() displayErrors = true;\n\n  /**\n   * Whether or not all the necessary data has been inputted from\n   * the user.  Decides whether or not to let the user open the\n   * registration / download modal\n   */\n  @Input() registrationIsValid = false;\n\n  /**\n   * Output that emits when the modal's register button was clicked\n   */\n  @Output() readonly registerData = new EventEmitter();\n\n  /**\n   * Turns on the 'error mode' for the application.\n   * Used to begin showing the user what they need to\n   * do to be able to register / download.\n   */\n  @Output() readonly enterErrorMode = new EventEmitter();\n\n  /**\n   * Creates an instance of review button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param ga Analytics service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates the value of registrationIsValid based on the\n   * meta data.\n   */\n  ngOnChanges(): void {\n    this.registrationIsValid =\n      this.metaData.length >= 3 &&\n      this.metaData.slice(0, 3).every(entry => entry.value);\n  }\n\n  /**\n   * Decides whether or not the download / register button should\n   * be disabled.\n   */\n  get disabled(): boolean {\n    return !this.registrationIsValid;\n  }\n\n  /**\n   * Handles the click action for the register button.\n   */\n  registerButtonClick(event?: MouseEvent): false {\n    if (event) {\n      event.preventDefault();\n    }\n    this.enterErrorMode.emit();\n    if (this.registrationIsValid) {\n      this.ga.event('review_start', 'review_button');\n      this.launchReviewModal();\n    }\n    return false;\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchReviewModal(): void {\n    const dialogRef = this.dialog.open(ReviewModalComponent, {\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        registrationCallbackSet: this.registrationCallbackSet,\n        metaData: this.metaData\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      data => {\n        if (data) {\n          this.ga.event('register', 'review_button');\n          this.registerData.emit();\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    {{ registrationCallbackSet ? 'Review and Register' : 'Review and Download' }}\n\n\n    \n\n    \n                \n                    ./review-button.component.scss\n                \n                .review-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: .6s;\n    font-weight: 500;\n\n    &.disabled {\n        cursor: not-allowed;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ registrationCallbackSet ? \\'Review and Register\\' : \\'Review and Download\\' }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewButtonModule.html":{"url":"modules/ReviewButtonModule.html","title":"module - ReviewButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-button/review-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReviewModalModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewButtonComponent } from './review-button.component';\nimport { ReviewModalModule } from '../review-modal/review-modal.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [ReviewButtonComponent],\n  imports: [\n    CommonModule,\n    ReviewModalModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  exports: [ReviewButtonComponent]\n})\nexport class ReviewButtonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewModalComponent.html":{"url":"components/ReviewModalComponent.html","title":"component - ReviewModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal for reviewing the registration\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-modal\n            \n\n\n\n            \n                styleUrls\n                ./review-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ReviewModalData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of the review modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ReviewModalData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Closes info dialog component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewModalData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:46\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:36\n                        \n                    \n\n            \n                \n                    The object containing all of the review information for displaying inside the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationCallbackSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:31\n                        \n                    \n\n            \n                \n                    Whether or not the cancel registration callback is set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, HostBinding, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(()=>{\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      Registration Review\n\n      \n        \n          \n            {{ data.label }}\n            {{ data.value }}\n          \n        \n      \n\n      \n        {{ registrationCallbackSet ? 'REGISTER' : 'DOWNLOAD REGISTRATION DATA' }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./review-modal.component.scss\n                \n                :host {\n  .ccf-about.wrapper {\n    .container {\n      .close {\n        .close-icon {\n          float: right;\n          margin-top: 1rem;\n          margin-right: 1rem;\n          cursor: pointer;\n        }\n      }\n\n      .content {\n        padding: 2rem;\n        background-color: white;\n\n        .title {\n          text-align: center;\n          font-size: 1.5rem;\n          margin-bottom: 0;\n          font-weight: 500;\n        }\n\n        .mat-typography {\n          justify-content: space-around;\n          display: flex;\n          font-weight: 500;\n          font-size: 1rem;\n\n          .display-fields {\n            margin-top: 2rem;\n            margin-bottom: 2rem;\n            width: 100%;\n\n            .field {\n              display: flex;\n\n              .label {\n                width: 50%;\n                text-align: right;\n                padding-right: 1rem;\n              }\n\n              .data {\n                width: 50%;\n                text-align: left;\n                padding-left: 1rem;\n              }\n            }\n          }\n        }\n      }\n\n      .footer {\n        padding-top: 1.5rem;\n        display: flex;\n        justify-content: space-around;\n\n        .download-button {\n          padding: 0 1rem;\n          transition: 0.6s;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              Registration Review                                    {{ data.label }}            {{ data.value }}                                      {{ registrationCallbackSet ? \\'REGISTER\\' : \\'DOWNLOAD REGISTRATION DATA\\' }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewModalData.html":{"url":"interfaces/ReviewModalData.html","title":"interface - ReviewModalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewModalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n        \n\n\n            \n                Description\n            \n            \n                The expected format of the review modal's data input.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metaData\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metaData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metaData:         MetaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MetaData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The object containing all of the review information for displaying inside the modal\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the cancel registration callback is set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, HostBinding, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(()=>{\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewModalModule.html":{"url":"modules/ReviewModalModule.html","title":"module - ReviewModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-modal/review-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewModalComponent } from './review-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [ReviewModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatButtonModule],\n  exports: [ReviewModalComponent]\n})\nexport class ReviewModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RightSidebarComponent.html":{"url":"components/RightSidebarComponent.html","title":"component - RightSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RightSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The right sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-right-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./right-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./right-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, registration: RegistrationState, page: PageState, astags: AnatomicalStructureTagState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of right sidebar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state service\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration state service\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        astags\n                                                  \n                                                        \n                                                                        AnatomicalStructureTagState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The anatomical structure tags state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-right-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { ModelState } from '../../core/store/model/model.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { AnatomicalStructureTagState } from '../../core/store/anatomical-structure-tags/anatomical-structure-tags.state';\n\n\n/**\n * The right sidebar\n */\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RightSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-right-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  /**\n   * Creates an instance of right sidebar component.\n   *\n   * @param model Model state service\n   * @param registration Registration state service\n   * @param page The page state\n   * @param astags The anatomical structure tags state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n    readonly astags: AnatomicalStructureTagState\n  ) { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n    \n\n\n    \n    \n\n    \n    \n\n    \n    \n      \n        Anatomical Structure Tags\n      \n\n      \n      \n\n      \n      \n      \n      \n\n      \n        \n        Assigned\n        \n        Added\n      \n    \n    \n\n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./right-sidebar.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 3rem);\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n\n  .scroll-wrapper {\n    // overflow-y: scroll;\n    height: 100%;\n    margin-right: 0.375rem;\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      min-height: 100%;\n      margin-left: 1.5rem;\n      margin-right: 0.375rem;\n\n      .review-button {\n        position: fixed;\n        bottom: 1.4rem;\n        right: 0.7rem;\n        width: 23rem;\n        z-index: 999;\n      }\n\n      .info-button-container {\n        height: 3.75rem;\n        display: flex;\n        justify-content: flex-end;\n      }\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n\n        mat-expansion-panel-header {\n          padding: 0 0.5rem 0 0;\n          font-weight: bold;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          font-size: 1rem;\n        }\n      }\n\n      .tags-container {\n        // Allow tag search to overflow when displaying results\n        overflow: visible;\n\n        ::ng-deep .mat-expansion-panel-body {\n          padding-left: 0;\n          padding-right: 0;\n        }\n\n        .header {\n          height: 3rem;\n        }\n\n        .search {\n          margin-top: 1rem;\n\n          .icon.add {\n            position: absolute;\n            // Sizes and offsets found by experimentation\n            width: 3.625rem;\n            height: 3.625rem;\n            font-size: 3.625rem;\n            top: -1.9375rem;\n            right: -1.1875rem;\n          }\n        }\n\n        .tag-list {\n          max-height: 32rem;\n          margin-left: -1rem;\n        }\n\n        .tag-list-placeholder {\n          display: flex;\n          height: 4rem;\n          align-items: center;\n          justify-content: center;\n          font-weight: 400;\n        }\n\n        .legend {\n          display: flex;\n          width: 100%;\n          margin-top: 1.5rem;\n          align-items: center;\n          font-size: 0.9rem;\n\n          .dot {\n            display: inline-block;\n            width: 1rem;\n            height: 1rem;\n            border-radius: 50%;\n\n            &.assigned {\n              margin-left: 0.5rem;\n            }\n\n            &.added {\n\n              margin-left: 1rem;\n            }\n          }\n\n          .text {\n            margin-left: 0.5rem;\n          }\n        }\n      }\n\n      .filler {\n        flex-grow: 1;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Anatomical Structure Tags                                                                Assigned                Added                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RightSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RightSidebarModule.html":{"url":"modules/RightSidebarModule.html","title":"module - RightSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    RightSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockSizeInputModule\n                        \n                        \n                            ReviewButtonModule\n                        \n                        \n                            RotationSliderModule\n                        \n                        \n                            SlicesInputModule\n                        \n                        \n                            TagListModule\n                        \n                        \n                            TagSearchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { TagListModule } from '../../shared/components/tag-list/tag-list.module';\nimport { TagSearchModule } from '../../shared/components/tag-search/tag-search.module';\nimport { ReviewButtonModule } from '../review/review-button/review-button.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\n\nimport { InfoButtonModule } from 'ccf-shared';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatExpansionModule,\n    MatDividerModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n\n    BlockSizeInputModule,\n    ReviewButtonModule,\n    RotationSliderModule,\n    SlicesInputModule,\n    TagListModule,\n    TagSearchModule,\n    InfoButtonModule\n  ],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent]\n})\nexport class RightSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rotation.html":{"url":"interfaces/Rotation.html","title":"interface - Rotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Type in which the values of the sliders are stored.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z slider value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   *\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.ga.event('rotation_update', 'rotation_slider', axis, +newRotation);\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(dimension: 'x' | 'y' | 'z'): void {\n    this.rotation = { ...this.rotation, [dimension]: 0 };\n    this.ga.event('rotation_reset', 'rotation_slider');\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationSliderComponent.html":{"url":"components/RotationSliderComponent.html","title":"component - RotationSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RotationSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that enables the setting of a Rotation object via either 3 draggable sliders\nor through an Input method.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-rotation-slider\n            \n\n\n\n            \n                styleUrls\n                ./rotation-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRotation\n                            \n                            \n                                resetRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotationChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of rotation slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotation\n                    \n                \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ROTATION\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:39\n                            \n                        \n                \n                    \n                        Input that allows the rotation to be changed from outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rotationChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:44\n                            \n                        \n                \n                    \n                        Output that emits the new rotation whenever it is changed from within the component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-rotation-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRotation\n                        \n                    \n                \n            \n            \n                \nchangeRotation(newRotation: number | string, axis: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Function that handles updating the rotation and emitting the new value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newRotation\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new value for one of the axis to be set to\n\n                                            \n                                        \n                                        \n                                                axis\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    which axis to update\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetRotation\n                        \n                    \n                \n            \n            \n                \nresetRotation(dimension: \"x\" | \"y\" | \"z\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Function to easily reset the rotations to 0 and emit this change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dimension\n                                            \n                                                        \"x\" | \"y\" | \"z\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   *\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.ga.event('rotation_update', 'rotation_slider', axis, +newRotation);\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(dimension: 'x' | 'y' | 'z'): void {\n    this.rotation = { ...this.rotation, [dimension]: 0 };\n    this.ga.event('rotation_reset', 'rotation_slider');\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Rotation\n  \n\n\n\n  refresh\n\n\n  X\n  \n    \n  \n  {{ rotation.x }}\n\n\n\n  refresh\n\n\n  Y\n  \n    \n  \n  {{ rotation.y }}\n\n\n\n  refresh\n\n\n  Z\n  \n    \n  \n  {{ rotation.z }}\n\n\n    \n\n    \n                \n                    ./rotation-slider.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 1.5rem;\n\n    .title {\n      font-weight: 600;\n    }\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: .6s;\n\n    &:hover {\n      border-radius: 2px;\n    }\n\n  }\n\n  .refresh-button-container {\n    display: flex;\n    height: 1rem;\n    justify-content: flex-end;\n  }\n\n  .slider-box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 4rem;\n    padding-left: 0.5rem;\n\n    .label {\n      width: 1rem;\n    }\n\n    .value {\n      width: 2.75rem;\n      text-align: center;\n    }\n\n    .slider-container {\n      width: 100%;\n      padding-left: 2rem;\n      padding-right: 2rem;\n      padding-bottom: 1rem;\n      padding-top: 1rem;\n\n      .slider {\n        width: 100%;\n\n        &:not(.cdk-focused) {\n          ::ng-deep .mat-slider-thumb {\n            width: 1.25rem;\n            height: 1.25rem;\n            transform: none;\n          }\n        }\n      }\n\n      ::ng-deep .mat-slider-horizontal {\n        .mat-slider-wrapper {\n          right: 0.625rem;\n          &:after {\n            margin-top: -0.25rem;\n            height: 0.625rem !important;\n          }\n        }\n\n        .mat-slider-thumb-label-text {\n          font-size: 12px;\n        }\n\n        .mat-slider-ticks-container {\n          margin-top: -0.25rem;\n          height: 0.625rem;\n\n          .mat-slider-ticks {\n            height: 0.625rem;\n          }\n        }\n      }\n    }\n\n    .filler {\n      flex-grow: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Rotation    refresh  X          {{ rotation.x }}  refresh  Y          {{ rotation.y }}  refresh  Z          {{ rotation.z }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RotationSliderModule.html":{"url":"modules/RotationSliderModule.html","title":"module - RotationSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    RotationSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatLegacySliderModule as MatSliderModule } from '@angular/material/legacy-slider';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule,\n    MatTooltipModule\n  ],\n  exports: [RotationSliderComponent]\n})\nexport class RotationSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                gizmo$\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                referenceData\n                            \n                            \n                                    Private\n                                registration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSceneNodes\n                            \n                            \n                                ngxsOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodes$\n                                \n                                \n                                    rotatedNodes$\n                                \n                                \n                                    referenceOrganNodes$\n                                \n                                \n                                    referenceOrganSimpleNodes$\n                                \n                                \n                                    nodeCollisions$\n                                \n                                \n                                    previousRegistrationNodes$\n                                \n                                \n                                    placementCube$\n                                \n                                \n                                    placementCube\n                                \n                                \n                                    rotation$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:222\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createSceneNodes\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSceneNodes(organIri: string, items: VisibilityItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:248\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organIri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                items\n                                            \n                                                            VisibilityItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialSceneNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:238\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gizmo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:220\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        referenceData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferenceDataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:222\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegistrationState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:221\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodes$\n                    \n                \n\n                \n                    \n                        getnodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:53\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotatedNodes$\n                    \n                \n\n                \n                    \n                        getrotatedNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:81\n                                \n                            \n                    \n                        \n                                Observable of spatial nodes\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganSimpleNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganSimpleNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nodeCollisions$\n                    \n                \n\n                \n                    \n                        getnodeCollisions$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:118\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        previousRegistrationNodes$\n                    \n                \n\n                \n                    \n                        getpreviousRegistrationNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube$\n                    \n                \n\n                \n                    \n                        getplacementCube$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:157\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube\n                    \n                \n\n                \n                    \n                        getplacementCube()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:164\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotation$\n                    \n                \n\n                \n                    \n                        getrotation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:182\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions]) => [\n        ...placement, ...prevNodes, ...nodes, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) =>\n        this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[])\n      )\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      )\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.placementCube$]).pipe(\n      filter(([_nodes, placement]) => placement.length > 0),\n      map(([nodes, placement]) => {\n        const bbox = getNodeBbox(placement[0]);\n        return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n      })\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get placementCube$(): Observable | [] {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube])\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Scene state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            showCollisions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        showCollisions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCollisions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions]) => [\n        ...placement, ...prevNodes, ...nodes, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) =>\n        this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[])\n      )\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      )\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.placementCube$]).pipe(\n      filter(([_nodes, placement]) => placement.length > 0),\n      map(([nodes, placement]) => {\n        const bbox = getNodeBbox(placement[0]);\n        return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n      })\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get placementCube$(): Observable | [] {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube])\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig.html":{"url":"interfaces/SlicesConfig.html","title":"interface - SlicesConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Slices configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices per block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right' | '';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    side: '',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: Object.values(asLookup) });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: false,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name')\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig-1.html":{"url":"interfaces/SlicesConfig-1.html","title":"interface - SlicesConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface containing slices data of the tissue block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices in the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of each tissue slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlicesInputComponent.html":{"url":"components/SlicesInputComponent.html","title":"component - SlicesInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlicesInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering data on block slices\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-slices-input\n            \n\n\n\n            \n                styleUrls\n                ./slices-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slices-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshSlices\n                            \n                            \n                                updateSlicesData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfigChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasThicknessValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of slices input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        slicesConfig\n                    \n                \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_SLICES_CONFIG\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:36\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        slicesConfigChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:41\n                            \n                        \n                \n                    \n                        Emitter for slice data values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-slices-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshSlices\n                        \n                    \n                \n            \n            \n                \nrefreshSlices()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Refreshes all slice data values to empty values\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSlicesData\n                        \n                    \n                \n            \n            \n                \nupdateSlicesData(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Limits the length of the input if needed and updates values when an input changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the dimension to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasThicknessValue\n                    \n                \n\n                \n                    \n                        gethasThicknessValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:46\n                                \n                            \n                    \n                        \n                                Returns whether a valid thickness value has been entered.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n    \n        \n  Tissue Sections\n  \n  \n    refresh\n  \n\n\n\n  \n    Thickness\n    \n    μm\n  \n\n  \n    # Sections\n    \n  \n\n\n    \n\n    \n                \n                    ./slices-input.component.scss\n                \n                :host {\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: 600;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .slices-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      &.mat-focused .suffix, .suffix.show {\n        display: initial;\n      }\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n\n        .mat-mdc-form-field-infix {\n          padding-bottom: 0;\n          min-height: inherit;\n        }\n\n        .mat-mdc-form-field-icon-suffix {\n          padding: 1.5rem 0 0 0;\n        }\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Sections        refresh        Thickness        μm        # Sections      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlicesInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlicesInputModule.html":{"url":"modules/SlicesInputModule.html","title":"module - SlicesInputModule","body":"\n                   \n\n\n\n\n    Modules\n    SlicesInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { NumbersOnlyModule } from 'ccf-shared';\nimport { SlicesInputComponent } from './slices-input.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    NumbersOnlyModule,\n    MatFormFieldModule\n  ],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent]\n})\nexport class SlicesInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StageNavComponent.html":{"url":"components/StageNavComponent.html","title":"component - StageNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StageNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that allows the user to change the viewing angle and rendering mode of the stage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-stage-nav\n            \n\n\n\n            \n                styleUrls\n                ./stage-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stage-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                isDropdownActive\n                            \n                            \n                                isDropdownHidden\n                            \n                            \n                                    \n                                labelRef\n                            \n                            \n                                    \n                                optionsRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleClick\n                            \n                            \n                                updateSide\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                useDropdownMenu\n                            \n                            \n                                view3D\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChange\n                            \n                            \n                                view3DChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    useDropdownMenu\n                                \n                                \n                                    labelEl\n                                \n                                \n                                    optionsEl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of stage nav component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         Side\n\n                    \n                \n                \n                    \n                        Default value : 'anterior'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows changing the current side from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:23\n                            \n                        \n                \n                    \n                        Whether to use a drop down menu instead of a options bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3D\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:32\n                            \n                        \n                \n                    \n                        Input that allows toggling of 3D view on / off from outside the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:35\n                            \n                        \n                \n                    \n                        Output that emits whenever the current side selection changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3DChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:38\n                            \n                        \n                \n                    \n                        Output that emits whenever the 3D view is toggled on / off\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-stage-nav\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element on which the event was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element on which the event was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSide\n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: Side)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Handles the updating of the side selection and calling the event emitter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            Side\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new selected side\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateView\n                        \n                    \n                \n            \n            \n                \nupdateView(selection: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Handles updating of the boolean that keeps track of current view\nand calling the event emitter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    3D (true) or Register (false)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:47\n                        \n                    \n\n            \n                \n                    Whether this component shows a dropdown menu or an options bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownHidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:50\n                        \n                    \n\n            \n                \n                    Whether the dropdown menu is hidden\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        labelRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:41\n                        \n                    \n\n            \n                \n                    Label for dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        optionsRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('options', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:44\n                        \n                    \n\n            \n                \n                    Options dropdown\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n\n\n                \n                    \n                        setuseDropdownMenu(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:23\n                                \n                            \n                    \n                        \n                                Whether to use a drop down menu instead of a options bar\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        labelEl\n                    \n                \n\n                \n                    \n                        getlabelEl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:53\n                                \n                            \n                    \n                        \n                                Simple helper for accessing the native label element\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        optionsEl\n                    \n                \n\n                \n                    \n                        getoptionsEl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:58\n                                \n                            \n                    \n                        \n                                Simple helper for accessing the native options element\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output, ViewChild,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior' | '3D';\n\n/** Component that allows the user to change the viewing angle and rendering mode of the stage. */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StageNavComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-stage-nav';\n\n  /** Whether to use a drop down menu instead of a options bar */\n  @Input()\n  set useDropdownMenu(value: boolean) {\n    this.isDropdownActive = value;\n    this.isDropdownHidden = true;\n  }\n\n  /** Input that allows changing the current side from outside the component */\n  @Input() side: Side = 'anterior';\n\n  /** Input that allows toggling of 3D view on / off from outside the component */\n  @Input() view3D = false;\n\n  /** Output that emits whenever the current side selection changes */\n  @Output() readonly sideChange = new EventEmitter();\n\n  /** Output that emits whenever the 3D view is toggled on / off */\n  @Output() readonly view3DChange = new EventEmitter();\n\n  /** Label for dropdown */\n  @ViewChild('label', { static: true }) labelRef: ElementRef;\n\n  /** Options dropdown */\n  @ViewChild('options', { static: true }) optionsRef: ElementRef;\n\n  /** Whether this component shows a dropdown menu or an options bar */\n  isDropdownActive = false;\n\n  /** Whether the dropdown menu is hidden */\n  isDropdownHidden = true;\n\n  /** Simple helper for accessing the native label element */\n  private get labelEl(): HTMLElement {\n    return this.labelRef.nativeElement;\n  }\n\n  /** Simple helper for accessing the native options element */\n  private get optionsEl(): HTMLElement {\n    return this.optionsRef.nativeElement;\n  }\n\n  /**\n   * Creates an instance of stage nav component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   *\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const { isDropdownHidden, labelEl, optionsEl } = this;\n\n    if (labelEl.contains(target)) {\n      this.isDropdownHidden = !isDropdownHidden;\n    } else if (!optionsEl.contains(target)) {\n      this.isDropdownHidden = true;\n    }\n  }\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   *\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.ga.event('side_update', 'stage_nav', selection);\n\n    if (selection === '3D') {\n      this.updateView(true);\n    } else {\n      this.updateView(false);\n      this.side = selection;\n      this.sideChange.emit(this.side);\n    }\n  }\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   *\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.ga.event('view_update', 'stage_nav', selection ? '3D' : 'Register');\n    this.view3DChange.emit(this.view3D);\n  }\n}\n\n    \n\n    \n        \n  Options\n  arrow_drop_down\n\n\n\n  \n    Left\n    Right\n    Anterior\n    Posterior\n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./stage-nav.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  .dropdown-label {\n    display: none;\n    align-items: center;\n\n    mat-label,\n    mat-icon {\n      line-height: 1.5rem;\n    }\n\n    &.dropdown {\n      display: flex;\n      cursor: pointer;\n      align-items: start;\n    }\n  }\n\n  .stage-options {\n    display: flex;\n    align-items: center;\n\n    .input-group {\n      .nav-input {\n        margin-right: 1rem;\n        margin-bottom: 1.5rem;\n      }\n    }\n\n    .view-slider {\n      white-space: nowrap;\n    }\n\n    &.dropdowncontainer {\n      display: flex;\n      flex-direction: column;\n      border-radius: 0.25rem;\n      width: 16.5rem;\n      position: absolute;\n      top: 3.5rem;\n      z-index: 1;\n      transition: opacity 0.25s;\n\n      :first-child {\n        margin-top: 0.5rem;\n      }\n\n      :last-child {\n        margin-bottom: 0.5rem;\n      }\n\n      .input-group {\n        margin-left: .875rem;\n        margin-right: 0;\n        display: flex;\n        flex-wrap: wrap;\n\n        .nav-input {\n          display: flex;\n          margin: 0;\n          margin-right: 0.875rem;\n          height: 2.5rem;\n\n          ::ng-deep .mdc-label {\n            padding-left: 0;\n          }\n        }\n      }\n\n      .view-slider {\n        display: flex;\n        align-items: center;\n        height: 3rem;\n        margin: 0 0.5rem;\n      }\n\n      mat-divider {\n        visibility: visible;\n        border-top: 2px solid;\n      }\n    }\n\n    &.hidden {\n      visibility: hidden;\n      opacity: 0;\n      transition: visibility 0.25s, opacity 0.25s;\n\n      mat-divider {\n        visibility: hidden;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Options  arrow_drop_down      Left    Right    Anterior    Posterior    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StageNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StageNavModule.html":{"url":"modules/StageNavModule.html","title":"module - StageNavModule","body":"\n                   \n\n\n\n\n    Modules\n    StageNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_imports\n\n\n\ncluster_StageNavModule_exports\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\n\n\nStageNavModule\n\nStageNavModule\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LabeledSlideToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDividerModule,\n    LabeledSlideToggleModule,\n    MatTooltipModule\n  ],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent]\n})\nexport class StageNavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\nimport { AnatomicalStructureTagState } from './anatomical-structure-tags/anatomical-structure-tags.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ModelState } from './model/model.state';\nimport { PageState } from './page/page.state';\nimport { ReferenceDataState } from './reference-data/reference-data.state';\nimport { RegistrationState } from './registration/registration.state';\nimport { SceneState } from './scene/scene.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Must come before all other plugins except the ngxs data plugin!\n    NgxsStoragePluginModule.forRoot({\n      key: ['registration.registrations']\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                A tag\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         TagId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TagId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"assigned\" | \"added\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"assigned\" | \"added\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How the tag was added\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagListComponent.html":{"url":"components/TagListComponent.html","title":"component - TagListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        A list of removable tags\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tag-list\n            \n\n\n\n            \n                styleUrls\n                ./tag-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tag-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeTag\n                            \n                            \n                                tagClasses\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tagRemoved\n                            \n                            \n                                tagsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of tag list component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tags\n                    \n                \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:23\n                            \n                        \n                \n                    \n                        The tags\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tagRemoved\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:28\n                            \n                        \n                \n                    \n                        Emits when a tag is removed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tagsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:33\n                            \n                        \n                \n                    \n                        Emits the new array of tags when a tag has been removed\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tag-list\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeTag\n                        \n                    \n                \n            \n            \n                \nremoveTag(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Removes a tag from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tag to remove\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagClasses\n                        \n                    \n                \n            \n            \n                \ntagClasses(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagId\n                        \n                    \n                \n            \n            \n                \ntagId(_index: number, tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Gets the unique identifier for a tag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Unused\n\n                                            \n                                        \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { Tag } from '../../../core/models/anatomical-structure-tag';\n\n\n/**\n * A list of removable tags\n */\n@Component({\n  selector: 'ccf-tag-list',\n  templateUrl: './tag-list.component.html',\n  styleUrls: ['./tag-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagListComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-list';\n\n  /**\n   * The tags\n   */\n  @Input() tags: Tag[];\n\n  /**\n   * Emits when a tag is removed\n   */\n  @Output() readonly tagRemoved = new EventEmitter();\n\n  /**\n   * Emits the new array of tags when a tag has been removed\n   */\n  @Output() readonly tagsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of tag list component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Gets the unique identifier for a tag\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns An identifier\n   */\n  tagId(_index: number, tag: Tag): unknown {\n    return tag.id;\n  }\n\n  tagClasses(tag: Tag): string[] {\n    return tag.type === 'added' ? ['added'] : ['assigned'];\n  }\n\n  /**\n   * Removes a tag from the list\n   *\n   * @param tag Tag to remove\n   */\n  removeTag(tag: Tag): void {\n    this.tags = this.tags.filter(obj => obj !== tag);\n    this.ga.event('tag_removed', 'tag_list', tag.label);\n    this.tagRemoved.emit(tag);\n    this.tagsChange.emit(this.tags);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ tag.label }}\n    cancel\n  \n\n\n    \n\n    \n                \n                    ./tag-list.component.scss\n                \n                :host {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  ::ng-deep .mdc-evolution-chip-set__chips {\n    margin: 0 !important;\n\n    .mdc-evolution-chip__text-label {\n      font-size: 14px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tag.label }}    cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagListModule.html":{"url":"modules/TagListModule.html","title":"module - TagListModule","body":"\n                   \n\n\n\n\n    Modules\n    TagListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_declarations\n\n\n\ncluster_TagListModule_exports\n\n\n\n\nTagListComponent\n\nTagListComponent\n\n\n\nTagListModule\n\nTagListModule\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/tag-list/tag-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TagListComponent } from './tag-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatChipsModule,\n    MatIconModule\n  ],\n  declarations: [TagListComponent],\n  exports: [TagListComponent],\n})\nexport class TagListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagSearchModule.html":{"url":"modules/TagSearchModule.html","title":"module - TagSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TagSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_exports\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/tag-search/tag-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TagSearchComponent } from './tag-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n  ],\n  declarations: [TagSearchComponent],\n  exports: [TagSearchComponent]\n})\nexport class TagSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagSearchResult.html":{"url":"interfaces/TagSearchResult.html","title":"interface - TagSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Partial results up to a limit\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of possible results\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                element\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyThemeClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Adds or removes a theme class from the necessary components.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cls\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The theme class.\n\n                                            \n                                        \n                                        \n                                                method\n                                            \n                                                        \"add\" | \"remove\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'add'\n                                            \n\n                                            \n                                                    Whether to add or remove the theme.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Get the currently active theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Initializer called during bootstrap to set up theming.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                        ComponentRef<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Binds theming service to a component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        ElementRef<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                injector\n                                            \n                                                        Injector\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Resets the theme to the default.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Sets the currently active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new theme class.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:16\n                        \n                    \n\n            \n                \n                    Default theme class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:18\n                        \n                    \n\n            \n                \n                    Currently active theme class.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, ElementRef, Inject, Injector, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element: ElementRef;\n  private injector: Injector;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n\n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Process an event message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to be run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Initializes this component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Updates the drawer state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:40\n                        \n                    \n\n            \n                \n                    Whether the owning drawer is opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                        \n                    \n\n            \n                \n                    Position of the owning side drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:27\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      ([expand, collapse] = [collapse, expand]);\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  arrow_right\n\n\n  arrow_left\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  transition: .25s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: absolute;\n    right: 0rem;\n    transition: .6s;\n    padding-left: .15rem;\n\n    &.hidden {\n      opacity: 0;\n    }\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  right: 0.3rem;\n  top: .675rem;\n  padding-top: .05rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  arrow_right  arrow_left'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, OrganInfo, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList: OrganInfo[];\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserName.html":{"url":"interfaces/UserName.html","title":"interface - UserName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                User name data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalComponent.html":{"url":"components/VideoModalComponent.html","title":"component - VideoModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a youtube video inside of an angular material modal.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal\n            \n\n\n\n            \n                styleUrls\n                ./video-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                loadYoutubePlayerAPI\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer2: Renderer2, dialogRef: MatDialogRef, data, document: Document)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Closes the video modal component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYoutubePlayerAPI\n                        \n                    \n                \n            \n            \n                \nloadYoutubePlayerAPI()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:38\n                        \n                    \n\n\n            \n                \n                        loads the IFrame Player API code asynchronously from YouTube.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:31\n                        \n                    \n\n\n            \n                \n                        load the youtube player api in on init\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding, Inject, Renderer2, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Component for displaying a youtube video inside of an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal',\n  templateUrl: './video-modal.component.html',\n  styleUrls: ['./video-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal';\n\n  /**\n   * Creates an instance of video modal component.\n   */\n  constructor(\n    private renderer2: Renderer2,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown,\n    @Inject(DOCUMENT) private document: Document\n  ) { }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    this.loadYoutubePlayerAPI();\n  }\n\n  /**\n   * loads the IFrame Player API code asynchronously from YouTube.\n   */\n  loadYoutubePlayerAPI(): void {\n    const script = this.renderer2.createElement('script') as HTMLScriptElement;\n    script.src = 'https://www.youtube.com/iframe_api';\n    this.renderer2.appendChild(this.document.body, script);\n  }\n\n  /**\n   * Closes the video modal component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    \n        clear\n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./video-modal.component.scss\n                \n                ::ng-deep {\n  .mat-dialog-container {\n    padding: 0;\n  }\n\n  .mat-dialog-content {\n    display: block;\n    margin: auto;\n    padding: 0;\n    max-height: 65vh;\n    overflow: auto;\n    width: fit-content;\n  }\n}\n\n:host {\n  .video-modal.wrapper {\n    width: fit-content;\n\n    .container {\n      position: relative;\n\n      .content {\n        padding: 0.5rem;\n        padding-top: 3rem;\n        width: fit-content;\n        border-radius: .5rem;\n      }\n\n      .close-icon {\n        cursor: pointer;\n        position: absolute;\n        right: 0rem;\n        font-size: 2.5rem;\n        width: 2.5rem;\n        height: 2.5rem;\n        transition: .5s color;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalLauncherComponent.html":{"url":"components/VideoModalLauncherComponent.html","title":"component - VideoModalLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for launching an angular material modal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal-launcher\n            \n\n\n\n            \n                styleUrls\n                ./video-modal-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchVideoModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal launcher component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n                \n                    \n                        Input used to toggle the launcher on and off.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal-launcher\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchVideoModal\n                        \n                    \n                \n            \n            \n                \nlaunchVideoModal()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Launches the video modal component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { VideoModalComponent } from '../video-modal/video-modal.component';\n\n/**\n * Component for launching an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal-launcher',\n  templateUrl: './video-modal-launcher.component.html',\n  styleUrls: ['./video-modal-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoModalLauncherComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal-launcher';\n\n  /**\n   * Input used to toggle the launcher on and off.\n   */\n  @Input() visible = true;\n\n  /**\n   * Creates an instance of video modal launcher component.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Launches the video modal component.\n   */\n  launchVideoModal(): void {\n    this.dialog.open(VideoModalComponent, {\n      width: '46rem',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n    WATCH\n    \"How to use the HuBMAP Registration User Interface\"\n\n\n    play_circle_outline\n\n    \n\n    \n                \n                    ./video-modal-launcher.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n\n    .video-description {\n        margin-bottom: 1.5rem;\n        text-align: center;\n        width: 30rem;\n\n        .title {\n            margin-bottom: 1rem;\n        }\n    }\n\n    .play-icon-button {\n        cursor: pointer;\n        font-size: 5rem;\n        width: 5rem;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    WATCH    \"How to use the HuBMAP Registration User Interface\"    play_circle_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalLauncherModule.html":{"url":"modules/VideoModalLauncherModule.html","title":"module - VideoModalLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoModalLauncherComponent } from './video-modal-launcher.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ VideoModalLauncherComponent ],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ VideoModalLauncherComponent ]\n})\nexport class VideoModalLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalModule.html":{"url":"modules/VideoModalModule.html","title":"module - VideoModalModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\ncluster_VideoModalModule_exports\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoModalComponent } from './video-modal.component';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ VideoModalComponent ],\n  imports: [\n    CommonModule,\n    YouTubePlayerModule,\n    MatIconModule,\n    MatDialogModule\n  ],\n  exports: [ VideoModalComponent ]\n})\nexport class VideoModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisibilityItem.html":{"url":"interfaces/VisibilityItem.html","title":"interface - VisibilityItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisibilityItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/visibility-item.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for visibility item data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            visible\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Opacity value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tooltip text to be displayed in the stage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the item is currently highlighted\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface VisibilityItem {\n  /**\n   * Id of the item\n   */\n  id: string | number;\n\n  /**\n   * Name of the item\n   */\n  name: string;\n\n  /**\n   * Whether the item is currently highlighted\n   */\n  visible: boolean;\n\n  /**\n   * Opacity value\n   */\n  opacity?: number;\n\n  /**\n   * Tooltip text to be displayed in the stage\n   */\n  tooltip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityMenuComponent.html":{"url":"components/VisibilityMenuComponent.html","title":"component - VisibilityMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Menu for displaying visibility options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-menu\n            \n\n\n\n            \n                styleUrls\n                ./visibility-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                resetItem\n                            \n                            \n                                setAllOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                            \n                                updateOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hover\n                            \n                            \n                                itemsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility menu component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         VisibilityItem[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:26\n                            \n                        \n                \n                    \n                        Items to be displayed in the visibility menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         VisibilityItem | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:31\n                            \n                        \n                \n                    \n                        The currently selected item\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hover\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:36\n                            \n                        \n                \n                    \n                        Emits the currently hovered item\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:41\n                            \n                        \n                \n                    \n                        Emits whenever there is a change to one or more items.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-menu\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId(_index: number, item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Returns the id of an item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The item to get an id for\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                id Id of the item\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOut\n                        \n                    \n                \n            \n            \n                \nmouseOut()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Clears current selection and emits undefined in response to mouse out\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOver\n                        \n                    \n                \n            \n            \n                \nmouseOver(item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Changes current selection to hovered over item and emits the item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetItem\n                        \n                    \n                \n            \n            \n                \nresetItem()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Resets item to opacity 20 and visible\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllOpacity\n                        \n                    \n                \n            \n            \n                \nsetAllOpacity(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Sets all items to the same opacity and makes them visible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated opacity value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility(item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \nupdateOpacity(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Updates opacity of the currently selected item (if one is selected) and emits the new items\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated opacity value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { VisibilityItem } from '../../../core/models/visibility-item';\n\n\n/**\n * Menu for displaying visibility options\n */\n@Component({\n  selector: 'ccf-visibility-menu',\n  templateUrl: './visibility-menu.component.html',\n  styleUrls: ['./visibility-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisibilityMenuComponent {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-menu';\n\n  /**\n   * Items to be displayed in the visibility menu\n   */\n  @Input() items: VisibilityItem[];\n\n  /**\n   * The currently selected item\n   */\n  @Input() selection: VisibilityItem | undefined;\n\n  /**\n   * Emits the currently hovered item\n   */\n  @Output() readonly hover = new EventEmitter();\n\n  /**\n   * Emits whenever there is a change to one or more items.\n   */\n  @Output() readonly itemsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility menu component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n   *\n   * @param item Menu item\n   */\n  toggleVisibility(item: VisibilityItem): void {\n    item = { ...item, visible: !item.visible };\n    if (this.selection && item.id === this.selection.id) {\n      this.selection = { ...this.selection, visible: item.visible };\n    }\n\n    this.ga.event('visibility_toggled', 'visibility_menu', '' + item.id, +item.visible);\n    this.updateOpacity(item.opacity);\n  }\n\n  /**\n   * Changes current selection to hovered over item and emits the item\n   *\n   * @param item Menu item\n   */\n  mouseOver(item: VisibilityItem): void {\n    this.selection = item === this.selection ? undefined : item;\n    this.hover.emit(item);\n  }\n\n  /**\n   * Clears current selection and emits undefined in response to mouse out\n   *\n   * @param item Menu item\n   */\n  mouseOut(): void {\n    this.selection = undefined;\n    this.hover.emit(undefined);\n  }\n\n  /**\n   * Updates opacity of the currently selected item (if one is selected) and emits the new items\n   *\n   * @param value Updated opacity value\n   */\n  updateOpacity(value: number | undefined): void {\n    if (!this.selection) {\n      return;\n    }\n    const updatedSelection = { ...this.selection, opacity: value };\n    this.selection = updatedSelection;\n    this.items = this.items.map(item => item.id === updatedSelection.id ? updatedSelection : item);\n    this.ga.event('opacity_update', 'visibility_menu', '' + updatedSelection.id, updatedSelection.opacity);\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Resets item to opacity 20 and visible\n   */\n  resetItem(): void {\n    if (this.selection) {\n      const updatedSelection = { ...this.selection, opacity: 20, visible: true };\n      this.selection = updatedSelection;\n      this.items = this.items.map(item => item.id === updatedSelection.id ? updatedSelection : item);\n      this.ga.event('item_reset', 'visibility_menu', '' + updatedSelection.id);\n      this.itemsChange.emit(this.items);\n    }\n  }\n\n  /**\n   * Sets all items to the same opacity and makes them visible\n   *\n   * @param value Updated opacity value\n   */\n  setAllOpacity(value: number): void {\n    this.items = this.items.map(i => ({ ...i, opacity: value, visible: true }));\n    this.ga.event('all_items_opacity_update', 'visibility_menu', undefined, value);\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Returns the id of an item\n   *\n   * @param index Index of item in items array\n   * @param item The item to get an id for\n   * @returns id Id of the item\n   */\n  getId(_index: number, item: VisibilityItem): string | number {\n    return item.id;\n  }\n}\n\n    \n\n    \n        refresh\n\n\n  \n  {{ item.name }}\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./visibility-menu.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  margin-right: 0;\n  margin-left: 0;\n  max-height: 18rem;\n  overflow-y: auto;\n  scrollbar-width: thin;\n\n  .icon {\n    padding: 0.25rem;\n    border-radius: 0.25rem;\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: .6s;\n    position: absolute;\n    top: 3rem;\n    \n    &:hover {\n      border-radius: 2px;\n    }\n  }\n\n  .item-entry {\n    display: flex;\n    height: 2.25rem;\n    align-items: center;\n    flex-shrink: 0;\n    position: relative;\n\n    .opacity {\n      cursor: pointer;\n    }\n\n    .opacity-icon {\n      z-index: 1;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n\n    .item-name {\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      margin-left: 0.5rem;\n      opacity: 1;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      max-width: calc(100% - 2.5rem);\n\n      &.hidden {\n        opacity: 0;\n      }\n    }\n\n    .slider {\n      width: calc(100% - 2rem);\n      transition-duration: 0.3s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      left: 2rem;\n      position: absolute;\n      opacity: 1;\n\n      &.hidden {\n        opacity: 0;\n        transition-duration: 0.1s;\n        transition-timing-function: ease-in-out;\n        transition-property: opacity;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'refresh    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityMenuModule.html":{"url":"modules/VisibilityMenuModule.html","title":"module - VisibilityMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { VisibilityMenuComponent } from './visibility-menu.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, OpacitySliderModule],\n  declarations: [VisibilityMenuComponent],\n  exports: [VisibilityMenuComponent]\n})\nexport class VisibilityMenuModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityToggleComponent.html":{"url":"components/VisibilityToggleComponent.html","title":"component - VisibilityToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for easily adding a visibility toggle with customizable label and\npre set up emitter.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-toggle\n            \n\n\n\n            \n                styleUrls\n                ./visibility-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                toggleLabel\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                visibilityChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows the label to be set from outside the component,\nmaking it more reusable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:23\n                            \n                        \n                \n                    \n                        Keeps track of the current visibility state of the toggle.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        visibilityChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n                \n                    \n                        Outputs the new visibility state whenever toggleVisibility()\nchanges it.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Toggles visibility and emits the new value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for easily adding a visibility toggle with customizable label and\n * pre set up emitter.\n */\n@Component({\n  selector: 'ccf-visibility-toggle',\n  templateUrl: './visibility-toggle.component.html',\n  styleUrls: ['./visibility-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisibilityToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-toggle';\n\n  /**\n   * Keeps track of the current visibility state of the toggle.\n   */\n  @Input() visible = false;\n\n  /**\n   * Input that allows the label to be set from outside the component,\n   * making it more reusable.\n   */\n  @Input() toggleLabel = '';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Outputs the new visibility state whenever toggleVisibility()\n   * changes it.\n   */\n  @Output() readonly visibilityChanged = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Toggles visibility and emits the new value.\n   */\n  toggleVisibility(): void {\n    this.visible = !this.visible;\n\n    this.ga.event('visibility_toggled', 'visibility_toggle', '' + this.visible);\n    this.visibilityChanged.emit(this.visible);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      done\n    \n\n    {{ toggleLabel }}\n  \n\n\n    \n\n    \n                \n                    ./visibility-toggle.component.scss\n                \n                :host {\n  height: 3rem;\n  display: flex;\n  align-items: center;\n\n  ::ng-deep .mat-mdc-chip {\n    padding: 0 !important;\n\n    &.disabled {\n      cursor: not-allowed !important;\n      pointer-events: none;\n    }\n\n    .mdc-evolution-chip__action--primary {\n      padding: 0;\n      cursor: pointer;\n    }\n\n    .mdc-evolution-chip__text-label {\n      display: flex;\n      align-items: center;\n      font-size: 14px;\n    }\n  }\n\n  .toggle-div {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    padding-top: 1.5rem;\n\n    .toggle-wrapper {\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      cursor: pointer;\n      border-width: 0.075rem;\n      border-style: solid;\n      height: 2.25rem;\n      border-radius: 1.5rem;\n      transition: background-color 0.2s ease-in-out;\n\n      .icon-background {\n        border-radius: 1.5rem;\n        height: 2.06rem;\n        width: 2.06rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .icon {\n          transition: .6s;\n          position: absolute;\n          &.block {\n              width: 1.125rem;\n          }\n          &.hidden {\n              opacity: 0;\n          }\n        }\n      }\n\n      .toggle-label {\n        font-weight: bold;\n        margin-left: 0.5rem;\n        padding-right: 1.25rem;\n        padding-left: 0.25rem;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  done        {{ toggleLabel }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityToggleModule.html":{"url":"modules/VisibilityToggleModule.html","title":"module - VisibilityToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisibilityToggleComponent } from './visibility-toggle.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\n\n@NgModule({\n  declarations: [VisibilityToggleComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatChipsModule\n  ],\n  exports: [ VisibilityToggleComponent ]\n})\nexport class VisibilityToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A object with x, y, and z channels of the same type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z channel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right' | '';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    side: '',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: Object.values(asLookup) });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: false,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name')\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-rui/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app-web-component.component.ts\n            \n            function\n            parseOrgan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n            \n            interface\n            Tag\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n            \n            interface\n            TagSearchResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/documentation.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/extraction-set.ts\n            \n            interface\n            ExtractionSet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/meta-data.ts\n            \n            interface\n            MetaDataField\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/visibility-item.ts\n            \n            interface\n            VisibilityItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            interface\n            OrganConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            function\n            globalConfigFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            variable\n            GLOBAL_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            variable\n            ruiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n            \n            injectable\n            ThemingService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n            \n            injectable\n            AnatomicalStructureTagState\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n            \n            interface\n            AnatomicalStructureTagStateModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n            \n            interface\n            DefaultIconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n            \n            variable\n            DEFAULT_ICONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            injectable\n            IconRegistryState\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            injectable\n            ModelState\n            \n                85 %\n                (34/40)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            ModelStateModel\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            SlicesConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            XYZTriplet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            variable\n            RUI_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            injectable\n            PageState\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            interface\n            PageStateModel\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            interface\n            Person\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            injectable\n            ReferenceDataState\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            interface\n            OrganData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            interface\n            ReferenceDataStateModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            function\n            applySpatialPlacement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            injectable\n            RegistrationState\n            \n                85 %\n                (17/20)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            interface\n            RegistrationStateModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            injectable\n            SceneState\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            SceneStateModel\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            function\n            getNodeBbox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n            \n            component\n            StageNavComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n            \n            component\n            VideoModalLauncherComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n            \n            component\n            VideoModalComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n            \n            component\n            LeftSidebarComponent\n            \n                63 %\n                (12/19)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts\n            \n            component\n            RegistrationContentComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n            \n            component\n            RegistrationModalComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts\n            \n            component\n            ReviewButtonComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n            \n            component\n            ReviewModalComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n            \n            interface\n            ReviewModalData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n            \n            component\n            RightSidebarComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            component\n            BlockSizeInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            interface\n            BlockSize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            variable\n            DEFAULT_BLOCK_SIZE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n            \n            component\n            DetailsLabelComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n            \n            function\n            throwDuplicateDrawersError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            class\n            InitializationState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            variable\n            EXPAND_COLLAPSE_PARAMS_DEFAULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            ContentContainerChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerContainersChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerInitialized\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerToggled\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            variable\n            MessageService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n            \n            component\n            ToggleButtonComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n            \n            component\n            ExtractionSetDropdownComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts\n            \n            component\n            JsonFileReaderComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n            \n            component\n            LabeledSlideToggleComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n            \n            component\n            NameInputComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n            \n            interface\n            UserName\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            component\n            RotationSliderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            interface\n            Rotation\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            variable\n            DEFAULT_ROTATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            component\n            SlicesInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            interface\n            SlicesConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            variable\n            DEFAULT_SLICES_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts\n            \n            component\n            TagListComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            component\n            TagSearchComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            DEFAULT_SEARCH_LIMIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            DEFAULT_SEARCH_THROTTLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            EMPTY_RESULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts\n            \n            component\n            VisibilityMenuComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n            \n            component\n            VisibilityToggleComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            class\n            MessageChannel\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            MessageServiceConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : 14.10.1\n        \n            @angular-ru/common : 15.313.0\n        \n            @angular-ru/ngxs : 14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^16.1.5\n        \n            @angular/cdk : ^16.1.5\n        \n            @angular/common : ^16.1.5\n        \n            @angular/compiler : ^16.1.5\n        \n            @angular/core : ^16.1.6\n        \n            @angular/elements : ^16.1.6\n        \n            @angular/forms : ^16.1.5\n        \n            @angular/material : ^16.1.5\n        \n            @angular/platform-browser : ^16.1.5\n        \n            @angular/platform-browser-dynamic : ^16.1.5\n        \n            @angular/router : ^16.1.5\n        \n            @angular/youtube-player : ^16.1.5\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : ~8.8.20\n        \n            @deck.gl/geo-layers : ~8.8.20\n        \n            @deck.gl/layers : ~8.8.20\n        \n            @deck.gl/mesh-layers : ~8.8.20\n        \n            @loaders.gl/core : ~3.2.10\n        \n            @loaders.gl/draco : ~3.2.10\n        \n            @loaders.gl/gltf : ~3.2.10\n        \n            @luma.gl/core : ~8.5.16\n        \n            @math.gl/core : ~3.6.3\n        \n            @math.gl/culling : ~3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/storage-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^16.0.0\n        \n            ngx-slider-v2 : ^16.0.2\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applySpatialPlacement   (projects/.../reference-data.state.ts)\n                        \n                        \n                            getNodeBbox   (projects/.../scene.state.ts)\n                        \n                        \n                            globalConfigFactory   (projects/.../config.ts)\n                        \n                        \n                            parseOrgan   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (projects/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applySpatialPlacement\n                        \n                    \n                \n            \n            \n                \napplySpatialPlacement(tx: Matrix4, placement: Immutable)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tx\n                                            \n                                                        Matrix4\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                placement\n                                            \n                                                        Immutable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Matrix4\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getNodeBbox\n                        \n                    \n                \n            \n            \n                \ngetNodeBbox(model: SpatialSceneNode)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AABB\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        globalConfigFactory\n                        \n                    \n                \n            \n            \n                \nglobalConfigFactory(globals: GlobalsService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                globals\n                                            \n                                                        GlobalsService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GlobalConfig\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseOrgan\n                        \n                    \n                \n            \n            \n                \nparseOrgan(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string | Organ\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                        Helper function for creating drawer errors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                position\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The position of the drawer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     never\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the EUI, RUI, and Organ-Info.\nWebsite Links\n\nHRA Exploration User Interface (EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nHRA Registration User Interface (RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nHRA Organ Info Component (Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nHRA API\nProduction: https://apps.humanatlas.io/hra-api/\nStaging: https://apps.humanatlas.io/hra-api--staging/\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nHRA API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nHRA API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockSizeInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailsLabelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExtractionSetDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JsonFileReaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabeledSlideToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeftSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NameInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RightSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RotationSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlicesInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StageNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_declarations\n\n\n\ncluster_TagListModule_exports\n\n\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\ncluster_TagSearchModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\ncluster_VideoModalModule_exports\n\n\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\nContentComponent\n\nContentComponent\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\nLeftSidebarModule -->\n\nDetailsLabelModule->LeftSidebarModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\nLeftSidebarModule -->\n\nJsonFileReaderModule->LeftSidebarModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\nLeftSidebarModule -->\n\nLabeledSlideToggleModule->LeftSidebarModule\n\n\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nLabeledSlideToggleModule->RegistrationContentModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\nRegistrationContentModule -->\n\nNameInputModule->RegistrationContentModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nTagListComponent\n\nTagListComponent\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        29 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    33 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.7.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CancelRegistrationCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            FetchPreviousRegistrationsCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            MetaData   (projects/.../meta-data.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            Organ   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            RegistrationCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Side   (projects/.../stage-nav.component.ts)\n                        \n                        \n                            TagId   (projects/.../anatomical-structure-tag.ts)\n                        \n                        \n                            User   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            ViewSide   (projects/.../model.state.ts)\n                        \n                        \n                            ViewType   (projects/.../model.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/app-web-component.component.ts\n    \n    \n        \n            \n                \n                    \n                    CancelRegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPreviousRegistrationsCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Organ\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/models/meta-data.ts\n    \n    \n        \n            \n                \n                    \n                    MetaData\n                \n            \n            \n                \n                            MetaDataField[]\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n    \n    \n        \n            \n                \n                    \n                    Side\n                \n            \n            \n                \n                    Valid values for side.\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\" | \"3D\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n    \n    \n        \n            \n                \n                    \n                    TagId\n                \n            \n            \n                \n                    Type for tag identifiers\n\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/store/model/model.state.ts\n    \n    \n        \n            \n                \n                    \n                    ViewSide\n                \n            \n            \n                \n                    Side which the model is viewed from\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ViewType\n                \n            \n            \n                \n                    Model view type\n\n                \n            \n            \n                \n                        \"register\" | \"3d\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BLOCK_SIZE   (projects/.../block-size-input.component.ts)\n                        \n                        \n                            DEFAULT_ICONS   (projects/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_ROTATION   (projects/.../rotation-slider.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_LIMIT   (projects/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_THROTTLE   (projects/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SLICES_CONFIG   (projects/.../slices-input.component.ts)\n                        \n                        \n                            DEFAULT_THEME   (projects/.../theming.service.ts)\n                        \n                        \n                            EMPTY_RESULT   (projects/.../tag-search.component.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (projects/.../drawer.component.ts)\n                        \n                        \n                            GLOBAL_CONFIG   (projects/.../config.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                        \n                            RUI_ORGANS   (projects/.../model.state.ts)\n                        \n                        \n                            ruiConfig   (projects/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_BLOCK_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 10,\n  y: 10,\n  z: 10\n}\n                    \n                \n\n            \n                \n                    Defaults for block sizes.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organs/ico-organs-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organs/ico-organs-extrapulmonary bronchus.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organs/ico-organs-breast.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organs/ico-organs-palatine tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organs/ico-organs-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organs/ico-organs-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organs/ico-organs-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' }\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROTATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 0,\n  y: 0,\n  z: 0\n}\n                    \n                \n\n            \n                \n                    Default values for rotation.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n            \n                \n                    Default search results limit\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_THROTTLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n\n            \n                \n                    Default search throttle time in ms\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EMPTY_RESULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagSearchResult\n\n                    \n                \n                \n                    \n                        Default value : { totalCount: 0, results: [] }\n                    \n                \n\n            \n                \n                    Empty search result object\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SLICES_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  thickness: NaN,\n  numSlices: NaN\n}\n                    \n                \n\n            \n                \n                    Default values for slices config.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GLOBAL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Global configuration object'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ruiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConfig\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-rui/src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n)\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/model/model.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RUI_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_ORGANS\n                    \n                \n\n            \n                \n                    All organs to be displayed\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
