var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AnatomicalStructureTagState.html",[0,1.333,1,2.633]],["body/injectables/AnatomicalStructureTagState.html",[0,1.594,1,3.149,2,2.177,3,0.074,4,0.09,5,0.066,6,0.135,7,6.854,8,4.01,9,5.633,10,2.924,11,0.903,12,2.261,13,4.639,14,2.892,15,2.567,16,2.02,17,5.451,18,0.351,19,0.557,20,2.152,21,5.451,22,2.677,23,2.722,24,4.849,25,1.376,26,5.973,27,5.261,28,5.973,29,2.923,30,4.639,31,5.261,32,2.781,33,5.588,34,5.451,35,1.096,36,3.207,37,3.83,38,2.057,39,5.261,40,1.005,41,1.03,42,1.822,43,0.01,44,1.059,45,0.78,46,1.296,47,1.294,48,1.555,49,3.541,50,3.268,51,4.639,52,2.105,53,4.085,54,3.636,55,1.625,56,1.247,57,4.639,58,3.636,59,3.679,60,3.679,61,3.679,62,4.639,63,3.636,64,3.636,65,2.27,66,4.23,67,3.636,68,4.639,69,0.879,70,5.027,71,1.578,72,5.778,73,3.636,74,4.23,75,0.007,76,3.114,77,4.055,78,4.639,79,4.639,80,0.007,81,4.639,82,4.323,83,3.924,84,3.679,85,0.645,86,0.712,87,3.636,88,2.373,89,3.636,90,2.159,91,2.186,92,3.398,93,3.636,94,3.636,95,3.636,96,2.839,97,3.636,98,3.636,99,0.326,100,4.639,101,3.207,102,2.186,103,3.207,104,0.178,105,2.68,106,2.27,107,1.569,108,1.569,109,1.478,110,2.924,111,1.728,112,1.049,113,1.523,114,1.286,115,2.403,116,2.282,117,2.924,118,1.999,119,2.282,120,2.924,121,1.436,122,1.436,123,1.396,124,1.321,125,1.396,126,2.543,127,1.671,128,0.339,129,0.131,130,2.712,131,1.523,132,0.133,133,1.358,134,3.207,135,3.207,136,3.207,137,3.302,138,1.304,139,4.055,140,0.933,141,0.933,142,4.476,143,3.207,144,2.924,145,3.207,146,3.207,147,3.207,148,3.7,149,3.207,150,3.207,151,3.207,152,3.207,153,3.207,154,2.529,155,1.964,156,3.207,157,2.403,158,4.639,159,1.114,160,0.568,161,1.569,162,1.671,163,2.403,164,2.083,165,2.403,166,2.403,167,2.282,168,2.403,169,2.403,170,3.207,171,3.207,172,2.403,173,2.403,174,3.207,175,3.207,176,2.543,177,4.639,178,4.639,179,4.639,180,3.924,181,1.861,182,4.639,183,2.543,184,2.924,185,3.207,186,3.207,187,1.159,188,2.543,189,3.207,190,3.207,191,3.207,192,3.207,193,2.543]],["title/interfaces/AnatomicalStructureTagStateModel.html",[128,0.284,130,3.281]],["body/interfaces/AnatomicalStructureTagStateModel.html",[0,1.857,1,2.707,3,0.092,4,0.112,5,0.082,6,0.072,7,3.635,8,3.095,9,2.988,10,3.635,11,0.603,12,2.245,13,3.987,14,2.486,15,2.554,16,1.736,17,5.404,20,2.001,21,3.987,22,2.686,23,2.526,24,4.363,26,3.987,28,3.987,29,1.951,33,5.521,34,3.987,35,1.087,37,3.701,40,0.864,41,0.885,43,0.01,44,0.62,45,0.725,47,1.17,48,1.336,49,3.511,50,3.24,51,3.987,53,3.941,55,0.929,56,1.187,57,3.987,59,3.162,60,3.162,61,3.162,62,3.987,65,1.951,66,3.635,68,3.987,69,0.795,70,4.862,71,1.154,72,5.992,74,3.635,75,0.007,76,2.817,77,3.669,78,3.987,79,3.987,80,0.008,81,3.987,82,4.286,83,3.372,84,3.162,88,2.353,90,1.953,91,2.168,92,3.369,96,2.746,99,0.339,100,5.404,101,3.987,102,2.459,103,3.987,104,0.221,105,3.122,106,2.645,107,1.951,108,1.951,109,1.838,110,3.635,111,2.148,112,1.304,113,1.893,114,1.599,115,2.988,116,2.838,117,3.635,118,2.486,119,2.838,120,3.635,121,1.786,122,1.786,123,1.736,124,1.643,125,1.736,126,3.162,127,2.078,128,0.395,129,0.152,130,4.571,131,1.893,132,0.165,133,1.495,134,3.987,135,3.987,136,3.987,137,3.846,138,1.386,139,4.462,140,1.087,141,1.087,142,4.925,143,3.987,144,3.635,145,3.987,146,3.987,147,3.987,148,4.162,149,3.987,150,3.987,151,3.987,152,3.987,153,3.987,154,2.783,155,2.289,156,3.987,157,2.988,158,5.404,159,1.226,160,0.707,161,1.951,162,2.078,163,2.988,164,2.591,165,2.988,166,2.988,167,2.838,168,2.988,169,2.988,170,3.987,171,3.987,172,2.988,173,2.988,174,3.987,175,3.987,176,3.162,177,5.404,178,5.404,179,5.404,180,4.571,181,2.168,182,5.404,183,3.162,184,3.635,185,3.987,186,3.987,187,1.441,188,3.162,189,3.987,190,3.987,191,3.987,192,3.987,193,3.162,194,1.154]],["title/components/AppComponent.html",[195,0.452,196,1.208]],["body/components/AppComponent.html",[3,0.054,4,0.067,5,0.076,6,0.136,11,0.84,12,1.042,16,1.029,18,0.56,19,0.443,20,1.447,22,1.367,23,1.868,25,1.093,32,2.211,35,0.742,37,3.426,38,2.072,42,1.623,43,0.01,44,1.015,45,0.629,46,1.155,52,1.3,55,1.371,56,1.195,69,1.055,75,0.004,80,0.004,85,1.344,86,1.45,88,2.23,91,2.055,99,0.289,104,0.131,111,1.273,112,0.773,128,0.27,129,0.104,132,0.098,133,1.031,138,1.063,140,1.03,141,0.742,155,1.001,159,0.688,160,1.344,181,1.479,187,1.333,195,0.647,196,1.595,197,1.067,198,0.773,199,0.854,200,0.854,201,0.833,202,1.999,203,2.504,204,1.7,205,2.619,206,3.398,207,0.754,208,1.12,209,1.12,210,2.258,211,1.158,212,1.281,213,1.148,214,4.134,215,1.148,216,3.362,217,3.835,218,3.209,219,4.375,220,4.375,221,3.835,222,3.328,223,4.375,224,4.244,225,4.134,226,3.688,227,4.182,228,2.959,229,3.838,230,4.182,231,4.67,232,3.688,233,4.182,234,4.182,235,4.134,236,1.999,237,5.605,238,4.67,239,4.67,240,3.596,241,3.478,242,4.134,243,3.478,244,2.06,245,2.169,246,2.827,247,3.194,248,4.182,249,3.119,250,3.112,251,2.68,252,4.67,253,4.182,254,4.134,255,1.802,256,2.34,257,4.134,258,3.398,259,4.134,260,3.996,261,3.596,262,3.596,263,2.68,264,3.838,265,4.182,266,5.064,267,2.364,268,1.862,269,1.891,270,4.978,271,3.119,272,3.362,273,3.362,274,3.362,275,2.68,276,2.625,277,1.606,278,2.68,279,3.362,280,1.294,281,2.68,282,2.68,283,2.396,284,3.362,285,2.396,286,4.332,287,4.134,288,3.838,289,2.478,290,2.68,291,3.362,292,2.68,293,2.68,294,3.362,295,2.68,296,2.68,297,3.362,298,2.68,299,2.68,300,2.68,301,2.925,302,2.056,303,1.203,304,1.281,305,3.194,306,3.227,307,2.625,308,2.289,309,2.68,310,3.362,311,2.68,312,3.362,313,2.68,314,2.68,315,2.68,316,0.718,317,1.875,318,1.999,319,1.771,320,2.155,321,0.736,322,1.999,323,2.155,324,1.875,325,1.999,326,1.536,327,1.417,328,0.899,329,1.417,330,1.417,331,1.875,332,2.155,333,2.155,334,2.155,335,2.155,336,3.362,337,2.155,338,1.999,339,2.155,340,2.155,341,1.682,342,2.155,343,2.155,344,1.417,345,2.155,346,2.155,347,2.155,348,1.605,349,2.155,350,0.773,351,2.155,352,2.155,353,2.925,354,2.155,355,2.155,356,2.155,357,2.155,358,2.155,359,2.155,360,3.362,361,4.67,362,5.798,363,2.155,364,2.155,365,5.605,366,2.155,367,1.999,368,2.155,369,5.199,370,1.318,371,2.155,372,3.281,373,2.155,374,2.289,375,3.362,376,3.833,377,1.771,378,2.155,379,1.652,380,3.362,381,1.536,382,1.805,383,3.362,384,2.155,385,1.999,386,3.362,387,1.059,388,2.13,389,1.536,390,1.682,391,1.771,392,2.155,393,2.155,394,0.718,395,1.682,396,0.923,397,1.772,398,2.881,399,2.211,400,2.211,401,2.964,402,1.771,403,1.536,404,2.396,405,1.09,406,1.093,407,1.987,408,2.619,409,2.68,410,2.13,411,1.868,412,1.3,413,2.68,414,2.418,415,2.763,416,3.097,417,3.119,418,2.68,419,2.919,420,5.142,421,2.925,422,1.067,423,2.396,424,2.364,425,0.974,426,2.219,427,2.211,428,1.042,429,2.925,430,1.862,431,1.875,432,2.299,433,2.219,434,1.273,435,1.805,436,1.862,437,3.119,438,2.155,439,2.155,440,1.122,441,2.299,442,2.68,443,1.193,444,1.029,445,2.625,446,1.875,447,2.443,448,3.071,449,0.88,450,2.528,451,4.182,452,0.88,453,1.875,454,2.68,455,2.68,456,1.556,457,3.398,458,1.682,459,2.056,460,2.68,461,2.68,462,2.68,463,1.417,464,2.155,465,1.029,466,1.875,467,1.273,468,1.273,469,2.68,470,1.682,471,1.875,472,1.875,473,0.419,474,1.067,475,0.854,476,1.851,477,0.854,478,0.854,479,0.773,480,0.854,481,0.754,482,1.639,483,0.773,484,0.854,485,1.148,486,1.639,487,0.773,488,0.812,489,0.854,490,0.773,491,0.854,492,0.773,493,0.736,494,0.854,495,0.773,496,0.854,497,0.773,498,0.773,499,0.854,500,0.773,501,0.833,502,0.792,503,0.854,504,0.773,505,1.333,506,0.754,507,0.773,508,0.773,509,0.854,510,0.773,511,1.639,512,0.773,513,1.236,514,1.333,515,0.754,516,0.773,517,0.754,518,0.636,519,0.854,520,0.754,521,0.736,522,0.773,523,0.854,524,0.773,525,0.854,526,0.792,527,0.854,528,0.773,529,1.093,530,0.773,531,1.206,532,0.773,533,0.854,534,0.773,535,1.12,536,0.854,537,0.773,538,0.854,539,0.854]],["title/modules/AppModule.html",[540,0.636,541,3.281]],["body/modules/AppModule.html",[3,0.108,4,0.132,5,0.096,6,0.108,25,1.392,37,3.776,38,1.295,43,0.01,55,1.094,56,1.04,75,0.007,80,0.007,99,0.355,104,0.26,129,0.132,132,0.194,138,0.898,160,0.832,196,2.308,203,3.188,204,2.165,211,0.691,224,2.928,286,3.971,318,3.971,319,3.518,321,1.462,325,3.971,394,1.427,422,1.359,473,0.832,479,2.424,540,0.77,541,6.847,542,1.498,543,1.535,544,2.341,545,1.614,546,1.968,547,1.655,548,4.696,549,4.696,550,4.696,551,5.88,552,5.88,553,5.88,554,5.88,555,5.88,556,5.88,557,5.88,558,2.121,559,1.535,560,5.325,561,2.176,562,7.535,563,5.325,564,6.827,565,2.069,566,5.325,567,4.696,568,6.827,569,3.518,570,2.371,571,2.858,572,2.103,573,6.827,574,6.02,575,4.511,576,3.342,577,5.488,578,4.281,579,6.827,580,3.518,581,5.325,582,5.325,583,5.325,584,5.091,585,5.325,586,5.325,587,5.325,588,3.971,589,6.827,590,5.325,591,4.511,592,4.696,593,5.325,594,3.971,595,5.325,596,5.091,597,5.488,598,3.724,599,5.325,600,2.298,601,6.827,602,5.325,603,4.696,604,5.325,605,3.724]],["title/interfaces/AppOptions.html",[128,0.284,331,3.076]],["body/interfaces/AppOptions.html",[3,0.085,4,0.104,5,0.076,6,0.067,16,2.239,18,0.405,19,0.618,20,1.453,22,1.375,23,1.528,35,0.746,37,3.435,43,0.01,45,0.653,46,1.421,56,1.197,69,1.153,75,0.006,80,0.006,85,0.746,88,2.239,91,2.063,99,0.325,104,0.205,111,1.998,112,1.213,128,0.376,129,0.145,132,0.154,133,1.343,138,1.281,140,1.034,141,0.746,155,1.571,159,0.959,160,1.345,181,1.488,194,1.073,195,0.687,196,1.155,202,3.137,203,2.518,204,1.71,205,2.971,206,3.853,208,1.127,209,1.127,210,1.073,211,0.869,212,1.048,213,1.155,214,3.381,215,1.155,216,3.381,217,3.137,218,3.868,219,4.931,220,4.931,221,3.137,222,3.341,223,4.202,224,4.642,225,3.381,228,2.143,229,2.779,231,3.381,235,3.381,237,5.382,238,4.689,239,4.689,240,2.942,241,3.491,242,3.381,243,3.491,244,2.364,245,2.178,246,2.312,247,3.206,250,2.889,252,3.381,254,3.381,255,1.628,256,2.029,257,3.381,258,2.779,259,3.381,260,3.491,261,2.942,262,2.942,264,2.779,266,4.689,267,1.933,268,1.979,269,1.709,270,4.35,271,3.137,272,3.381,273,3.381,274,3.381,276,2.64,277,1.615,279,3.381,280,1.56,283,2.41,284,3.381,285,2.41,286,4.993,287,4.689,288,4.424,289,2.569,291,3.381,294,3.381,297,3.381,301,2.942,302,2.068,303,0.803,304,1.048,305,2.312,306,3.66,307,2.64,308,1.872,310,3.381,312,3.381,316,1.127,317,2.942,318,3.137,319,2.779,320,3.381,321,1.155,322,3.137,323,3.381,324,2.942,325,3.137,326,2.41,327,2.224,328,1.411,329,2.224,330,2.224,331,4.079,332,3.381,333,3.381,334,3.381,335,3.381,336,4.689,337,3.381,338,3.137,339,3.381,340,3.381,341,2.64,342,3.381,343,3.381,344,2.224,345,3.381,346,3.381,347,3.381,348,2.518,349,3.381,350,1.213,351,3.381,352,3.381,353,2.942,354,3.381,355,3.381,356,3.381,357,3.381,358,3.381,359,3.381,360,4.689,361,5.812,362,6.604,363,3.381,364,3.381,365,6.478,366,3.381,367,3.137,368,3.381,369,6.009,370,2.068,371,3.381,372,3.863,373,3.381,374,2.119,375,4.689,376,4.43,377,2.779,378,3.381,379,2.303,380,4.689,381,2.41,382,2.517,383,4.689,384,3.381,385,3.137,386,4.689,387,1.661,388,2.143,389,2.41,390,2.64,391,2.779,392,3.381,393,3.381,394,1.127,395,2.64]],["title/components/AppWebComponent.html",[195,0.452,479,1.268]],["body/components/AppWebComponent.html",[3,0.08,4,0.098,5,0.101,6,0.14,12,1.389,16,2.14,18,0.38,19,0.59,35,0.989,38,2.135,42,0.959,43,0.01,44,0.963,45,0.806,46,0.682,56,0.849,69,1.184,75,0.006,80,0.006,82,3.899,86,0.772,99,0.308,104,0.193,112,1.137,129,0.191,132,0.144,133,1.118,138,0.665,141,0.699,195,0.664,196,1.082,197,1.65,198,1.607,200,1.257,201,1.225,207,1.109,208,1.493,209,1.493,210,2.324,211,1.186,212,1.611,218,3.58,219,4.058,220,4.058,224,3.555,244,1.289,245,2.624,246,3.864,247,3.864,255,0.959,268,2.582,269,1.423,280,1.661,303,1.235,304,0.982,316,1.056,321,1.082,324,2.758,328,2.655,350,1.137,406,1.031,411,1.732,425,2.987,449,0.83,452,0.83,456,1.056,465,1.514,473,0.616,474,1.423,475,1.257,476,2.24,477,1.257,478,1.257,479,2.026,480,1.257,481,1.109,482,2.061,483,1.137,484,1.257,485,1.53,486,2.061,487,1.137,488,1.195,489,1.257,490,1.137,491,1.257,492,1.137,493,1.082,494,1.257,495,1.137,496,1.257,497,1.137,498,1.137,499,1.257,500,1.137,501,1.225,502,1.165,503,1.257,504,1.137,505,1.777,506,1.109,507,1.137,508,1.137,509,1.257,510,1.137,511,2.061,512,1.137,513,1.648,514,1.777,515,1.109,516,1.137,517,1.109,518,0.936,519,1.257,520,1.109,521,1.082,522,1.137,523,1.257,524,1.137,525,1.257,526,1.165,527,1.257,528,1.137,529,1.458,530,1.137,531,1.607,532,1.137,533,1.257,534,1.137,535,1.493,536,1.257,537,1.137,538,1.257,539,1.257,580,5.826,606,6.576,607,2.941,608,6.466,609,5.574,610,3.871,611,2.266,612,3.871,613,4.411,614,5.199,615,5.242,616,5.65,617,4.411,618,3.129,619,5.65,620,5.242,621,3.943,622,5.574,623,5.574,624,3.943,625,4.522,626,3.943,627,3.943,628,4.058,629,3.943,630,5.702,631,3.943,632,3.943,633,3.943,634,3.943,635,3.943,636,3.943,637,5.199,638,3.943,639,3.943,640,3.943,641,3.943,642,3.943,643,1.873,644,1.938,645,5.574,646,3.943,647,1.938,648,1.938,649,4.916,650,2.334,651,3.477,652,2.941,653,3.943,654,3.17,655,3.943,656,3.943,657,3.943,658,3.943,659,3.943,660,3.943,661,3.943,662,6.466,663,5.574,664,3.17,665,6.466,666,3.943]],["title/interfaces/BlockSize.html",[128,0.284,667,2.326]],["body/interfaces/BlockSize.html",[3,0.109,4,0.133,5,0.097,6,0.085,11,0.714,18,0.516,19,0.726,40,1.023,41,1.048,43,0.01,44,0.939,45,0.682,47,1.023,56,1.044,69,0.695,71,2.234,75,0.007,80,0.007,86,1.048,99,0.267,104,0.262,128,0.488,129,0.17,131,2.243,132,0.25,138,1.156,140,1.215,159,1.243,160,1.181,181,1.895,194,1.367,195,0.818,208,1.435,209,1.435,210,1.367,211,0.889,213,1.47,215,1.47,255,2.212,268,2.562,269,1.367,316,1.435,374,2.991,379,3.251,382,3.553,401,2.631,406,2.267,412,2.129,474,1.367,481,1.507,600,2.312,667,4.211,668,3.746,669,3.539,670,3.207,671,5.509,672,3.491,673,4.523,674,4.563,675,6.043,676,2.786,677,1.583,678,2.786,679,2.786,680,2.116,681,2.057,682,2.631,683,3.995,684,5.635,685,4.211,686,3.995,687,3.539,688,3.539,689,1.583,690,1.752,691,3.437,692,3.995,693,3.539,694,4.724,695,2.786,696,2.243,697,4.301,698,3.207,699,3.916,700,3.746,701,3.539,702,4.724,703,3.746,704,3.539,705,3.362,706,6.663,707,3.995,708,4.724,709,6.043,710,4.724,711,6.043,712,3.995,713,4.724,714,4.724]],["title/components/BlockSizeInputComponent.html",[195,0.452,481,1.237]],["body/components/BlockSizeInputComponent.html",[3,0.073,4,0.089,5,0.094,6,0.125,11,0.818,12,1.298,18,0.346,19,0.552,25,1.362,35,0.636,38,1.871,40,0.995,41,1.02,42,1.267,43,0.01,44,1.118,45,0.673,46,0.901,47,0.995,52,1.115,55,1.07,56,1.025,69,0.873,71,1.566,75,0.005,76,2.395,80,0.005,85,1.088,86,1.399,99,0.203,104,0.175,128,0.336,129,0.129,131,1.502,132,0.272,138,0.879,140,1.088,141,0.636,159,1.009,160,1.118,181,1.843,187,1.661,195,0.79,196,0.985,197,1.33,198,1.035,199,1.144,200,1.144,201,1.115,207,1.009,208,1.396,209,1.396,210,2.308,211,1.18,212,0.894,213,1.43,215,1.43,218,1.828,255,2.179,268,2.562,269,1.718,285,2.056,303,1.172,304,0.894,316,0.961,374,2.446,379,2.659,382,2.905,387,2.058,388,3.125,389,2.985,396,1.236,397,1.894,398,3.085,399,1.897,400,1.897,401,2.745,405,1.459,406,2.368,407,1.705,410,1.828,411,1.643,412,2.222,414,1.378,419,1.502,426,3.085,428,1.781,432,1.973,433,2.249,435,1.549,436,1.597,440,1.502,443,2.32,444,1.378,447,1.705,448,1.897,449,0.755,450,1.764,452,1.097,453,2.51,456,0.961,459,1.764,467,1.705,468,1.705,473,0.561,474,1.825,475,1.144,476,2.146,477,1.144,478,1.144,479,1.035,480,1.144,481,1.894,482,1.955,483,1.035,484,1.144,485,1.43,486,1.955,487,1.035,488,1.087,489,1.144,490,1.035,491,1.144,492,1.035,493,0.985,494,1.144,495,1.035,496,1.144,497,1.035,498,1.035,499,1.144,500,1.035,501,1.115,502,1.061,503,1.144,504,1.035,505,1.661,506,1.009,507,1.035,508,1.035,509,1.144,510,1.035,511,1.955,512,1.035,513,1.54,514,1.661,515,1.009,516,1.035,517,1.009,518,0.852,519,1.144,520,1.009,521,0.985,522,1.035,523,1.144,524,1.035,525,1.144,526,1.061,527,1.144,528,1.035,529,1.362,530,1.035,531,1.502,532,1.035,533,1.144,534,1.035,535,1.396,536,1.144,537,1.035,538,1.144,539,1.144,570,2.997,600,1.549,611,2.494,667,3.943,668,5.513,669,5.208,670,2.148,671,2.885,672,1.828,673,4.28,674,4.408,675,5.41,676,2.494,677,1.061,678,2.118,679,2.737,680,1.417,681,1.378,682,2.355,683,2.676,684,5.021,685,3.78,686,3.886,687,3.443,688,4.053,689,1.54,690,2.006,691,3.402,692,3.886,693,3.443,694,5.41,695,2.494,696,2.182,697,4.487,698,3.119,699,3.666,700,3.644,701,3.443,702,4.595,703,2.51,704,2.371,705,2.252,706,5.41,707,2.676,708,3.164,709,4.595,710,3.164,711,4.595,712,3.886,713,5.936,714,3.164,715,5.21,716,2.475,717,1.795,718,1.897,719,4.595,720,3.164,721,5.21,722,3.588,723,3.588,724,4.189,725,4.053,726,3.164,727,2.51,728,3.164,729,3.164,730,2.371,731,2.056,732,1.828,733,2.371,734,2.252,735,2.51,736,1.973,737,2.371,738,2.148,739,3.164,740,1.304,741,2.148,742,3.588,743,2.885,744,2.676,745,2.51,746,4.595,747,2.885,748,2.252,749,2.676,750,3.164,751,3.164,752,2.371,753,2.371]],["title/modules/BlockSizeInputModule.html",[540,0.636,754,3.076]],["body/modules/BlockSizeInputModule.html",[3,0.129,4,0.158,5,0.115,6,0.101,43,0.01,75,0.008,80,0.008,99,0.349,104,0.31,129,0.158,132,0.232,255,1.545,406,2.133,422,1.622,473,0.993,481,2.569,540,0.919,542,1.788,543,1.832,544,2.535,545,1.926,546,1.832,547,2.535,558,2.367,559,1.832,561,2.025,565,2.308,569,4.198,570,2.829,571,3.19,572,2.51,668,4.444,669,4.198,754,6.21,755,5.603,756,5.603,757,5.603,758,5.109,759,2.694,760,2.132,761,5.033,762,4.198,763,5.328,764,4.444,765,4.028,766,3.36,767,5.328,768,5.109]],["title/interfaces/Collision.html",[128,0.284,769,3.076]],["body/interfaces/Collision.html",[0,1.36,3,0.06,4,0.073,5,0.053,6,0.047,15,2.196,16,1.128,18,0.283,19,0.475,20,1.997,22,2.148,23,1.631,24,3.827,29,2.351,35,0.796,37,3.121,40,0.561,41,0.575,43,0.01,44,0.403,45,0.593,47,0.857,48,0.868,49,2.571,50,2.373,56,0.447,65,1.268,69,0.988,71,1.768,75,0.005,80,0.005,85,0.521,88,1.723,90,1.736,92,1.615,96,3.238,99,0.331,102,1.588,104,0.143,105,4.083,106,1.937,107,1.268,108,1.268,109,1.194,111,2.132,112,0.847,113,1.23,114,1.039,118,1.615,121,1.16,122,1.16,123,1.128,124,1.067,125,1.128,126,2.054,127,1.35,128,0.351,129,0.111,131,1.23,132,0.107,133,1.778,137,4.663,138,1.443,140,1.351,154,2.691,159,0.483,160,0.953,161,1.268,162,1.35,163,1.941,164,1.683,165,1.941,166,1.941,167,1.844,168,1.941,169,1.941,187,2.427,194,0.75,204,1.194,211,0.707,244,1.468,245,1.676,256,1.848,280,0.603,289,1.468,303,0.561,321,0.806,344,2.88,370,1.444,372,2.678,376,3.352,377,1.941,387,1.16,394,1.76,402,2.559,408,3.671,414,1.128,425,1.631,428,1.725,434,3.53,444,1.723,449,0.618,452,0.618,465,1.128,518,1.808,628,2.817,643,1.395,644,1.444,647,1.444,648,1.444,650,1.879,667,2.373,685,1.553,769,3.809,770,1.941,771,2.206,772,3.608,773,2.191,774,1.844,775,1.941,776,1.844,777,4.062,778,2.362,779,2.191,780,2.191,781,5.393,782,3.352,783,3.347,784,2.362,785,3.608,786,1.844,787,2.191,788,1.758,789,3.608,790,2.965,791,2.362,792,1.615,793,1.395,794,3.608,795,3.139,796,1.615,797,2.054,798,1.844,799,1.35,800,2.132,801,1.844,802,2.775,803,1.941,804,1.553,805,2.063,806,1.395,807,1.683,808,2.054,809,3.608,810,2.054,811,3.139,812,2.191,813,2.191,814,2.191,815,2.191,816,2.362,817,3.608,818,2.362,819,3.608,820,2.362,821,2.362,822,2.362,823,2.362,824,2.362,825,2.362,826,2.362,827,2.678,828,1.758,829,5.197,830,3.608,831,2.362,832,2.362,833,2.362,834,2.362,835,2.362,836,2.362,837,3.608,838,3.139,839,3.494,840,2.362,841,2.362,842,2.362,843,2.362,844,2.362,845,2.362,846,5.374,847,4.902,848,2.362,849,2.054,850,2.362,851,3.608,852,2.362,853,2.362,854,3.608,855,2.965,856,4.34,857,3.608,858,3.608,859,2.362,860,3.608,861,2.362,862,2.571,863,2.362,864,2.362,865,2.362,866,3.121,867,3.347,868,3.347,869,5.974,870,3.347,871,4.379,872,2.362,873,2.835,874,6.939,875,2.965,876,3.608,877,3.608,878,3.139,879,2.362,880,2.362,881,3.608,882,3.608,883,3.347,884,2.362,885,2.362,886,2.362,887,2.362,888,2.362,889,1.979,890,1.844,891,1.844,892,2.362,893,2.362,894,2.362,895,2.362,896,2.362,897,2.362,898,2.362,899,2.362,900,2.362,901,2.362,902,2.965,903,2.191,904,2.362,905,1.844,906,2.362,907,2.362,908,2.362,909,2.362,910,2.817,911,2.362,912,2.817,913,2.817,914,2.817,915,3.347,916,4.347,917,1.941,918,2.965,919,2.362,920,1.941,921,2.362,922,3.608,923,2.362,924,1.941,925,1.941,926,2.362,927,2.362,928,2.362,929,2.362,930,2.362,931,2.362,932,3.608,933,1.683,934,4.379,935,2.362,936,2.362,937,2.362,938,2.362,939,3.608,940,2.362,941,2.362,942,2.191,943,2.362,944,2.191,945,3.608,946,2.191,947,2.362,948,2.191,949,1.844,950,2.362,951,2.191,952,2.965,953,2.362,954,2.191,955,1.844,956,2.362,957,2.191,958,2.362,959,2.191,960,3.608,961,2.191,962,2.362,963,2.191,964,2.191,965,2.191,966,3.608,967,2.362,968,2.362,969,2.362,970,2.362,971,2.362,972,2.362,973,2.362,974,2.362,975,2.191,976,2.191,977,2.817,978,2.054,979,2.362,980,2.362,981,2.362,982,2.362,983,2.362,984,2.362,985,2.362,986,2.362,987,2.362,988,2.362,989,1.23,990,2.687,991,1.683,992,2.054,993,3.139,994,2.362,995,2.362,996,2.054,997,1.067,998,2.362,999,2.362,1000,2.362,1001,2.362,1002,2.362,1003,2.362,1004,1.844,1005,2.362,1006,2.362,1007,2.362,1008,2.362,1009,2.362,1010,2.362,1011,1.941,1012,1.844,1013,2.362,1014,2.965,1015,2.362,1016,2.362,1017,2.362,1018,1.941,1019,2.362,1020,2.362,1021,2.362,1022,2.362,1023,2.362,1024,2.362,1025,2.362,1026,2.191,1027,2.362,1028,2.191,1029,2.362,1030,2.362,1031,2.362,1032,2.362,1033,2.362,1034,2.362,1035,2.362,1036,2.191,1037,2.362,1038,2.362,1039,2.362]],["title/modules/ConfigModule.html",[540,0.636,1040,3.076]],["body/modules/ConfigModule.html",[3,0.14,4,0.171,5,0.124,6,0.109,43,0.009,75,0.008,80,0.008,99,0.328,104,0.336,129,0.171,132,0.251,211,0.892,321,1.888,542,1.935,546,1.983,565,2.419,596,5.13,1040,5.582,1041,6.878,1042,5.01,1043,5.582,1044,6.417,1045,3.504,1046,6.878,1047,6.878]],["title/components/ContainerComponent.html",[195,0.452,483,1.268]],["body/components/ContainerComponent.html",[3,0.069,4,0.084,5,0.09,6,0.135,11,0.789,12,1.24,18,0.48,19,0.527,20,2.195,25,1.302,32,2.632,35,0.598,38,2.046,40,0.951,41,0.974,42,1.211,43,0.01,44,0.955,45,0.726,46,0.861,47,0.951,48,1.471,52,2.031,55,1.55,56,0.995,61,2.358,69,0.437,71,1.271,75,0.005,80,0.005,85,1.05,86,1.158,90,1.587,99,0.284,104,0.165,112,0.972,114,1.193,129,0.084,132,0.266,133,1.31,138,1.103,140,1.05,141,0.598,159,1.075,160,0.925,187,1.886,195,0.838,196,0.926,197,1.862,198,0.972,199,1.075,200,1.075,201,1.048,204,2.024,205,3.015,207,0.949,208,1.334,209,1.334,210,2.296,211,1.174,212,0.84,213,1.367,215,1.367,223,4.736,228,3.329,246,3.593,247,3.593,250,3.148,255,1.211,256,2.112,267,3.004,269,1.271,276,3.125,277,2.509,280,1.343,303,1.13,304,0.84,306,3.714,307,3.125,308,3.775,316,0.903,348,2.019,374,1.225,390,3.714,394,2.022,395,2.116,396,1.161,397,0.949,403,2.852,404,1.932,406,0.882,411,2.287,414,3.256,415,2.228,428,0.84,449,0.71,452,0.71,456,0.903,465,1.911,473,0.527,474,1.779,475,1.075,476,2.083,477,1.075,478,1.075,479,0.972,480,1.075,481,0.949,482,1.886,483,1.884,484,1.075,485,1.914,486,1.886,487,0.972,488,1.022,489,1.075,490,1.884,491,1.075,492,0.972,493,0.926,494,1.075,495,0.972,496,1.075,497,0.972,498,0.972,499,1.075,500,0.972,501,1.048,502,0.997,503,1.075,504,0.972,505,1.587,506,0.949,507,0.972,508,0.972,509,1.075,510,0.972,511,1.886,512,0.972,513,1.471,514,1.587,515,0.949,516,0.972,517,0.949,518,0.801,519,1.075,520,0.949,521,0.926,522,0.972,523,1.075,524,0.972,525,1.075,526,0.997,527,1.075,528,0.972,529,1.302,530,0.972,531,1.435,532,0.972,533,1.075,534,0.972,535,1.334,536,1.075,537,0.972,538,1.075,539,1.075,546,1.435,672,1.718,677,0.997,689,1.471,717,1.715,795,2.358,889,1.809,1048,2.711,1049,2.737,1050,4.758,1051,4.39,1052,4.978,1053,3.448,1054,5.918,1055,4.978,1056,3.204,1057,5.918,1058,5.918,1059,4.816,1060,4.002,1061,5.254,1062,6.535,1063,5.918,1064,4.002,1065,4.978,1066,2.632,1067,3.427,1068,3.482,1069,4.978,1070,4.978,1071,3.257,1072,3.372,1073,4.39,1074,4.978,1075,3.125,1076,3.713,1077,3.713,1078,3.372,1079,2.365,1080,4.978,1081,4.978,1082,3.372,1083,3.372,1084,4.978,1085,4.978,1086,2.909,1087,3.372,1088,3.289,1089,7.546,1090,4.978,1091,6.535,1092,3.372,1093,4.57,1094,4.39,1095,6.535,1096,4.978,1097,3.372,1098,4.002,1099,4.39,1100,4.978,1101,3.372,1102,3.372,1103,3.372,1104,4.39,1105,3.372,1106,3.372,1107,1.334,1108,3.372,1109,3.372,1110,2.711,1111,2.515,1112,2.228,1113,2.515,1114,2.973,1115,3.713,1116,3.372,1117,2.973,1118,3.372,1119,2.973,1120,3.91,1121,3.91,1122,2.973,1123,2.973,1124,3.372,1125,3.372,1126,3.372,1127,3.372,1128,2.228,1129,2.711,1130,2.973,1131,2.515,1132,3.372,1133,3.372,1134,4.39,1135,2.116,1136,2.852,1137,4.39,1138,3.372,1139,3.372,1140,3.372,1141,3.372,1142,3.372,1143,4.978,1144,4.978,1145,3.372,1146,3.372,1147,3.372,1148,3.372,1149,3.372,1150,3.372,1151,3.372,1152,2.515,1153,3.372,1154,3.372]],["title/components/ContentComponent.html",[195,0.452,485,1.208]],["body/components/ContentComponent.html",[3,0.058,4,0.071,5,0.08,6,0.133,11,0.716,12,1.098,15,2.322,18,0.517,19,0.467,20,1.619,22,2.125,23,2.493,24,3.779,25,1.152,35,0.782,38,2.02,40,0.842,41,0.862,42,1.305,43,0.01,44,1.036,45,0.728,46,0.928,52,0.891,55,1.335,56,1.045,69,0.372,71,1.125,75,0.005,77,1.717,80,0.005,85,1.341,86,1.48,88,2.312,91,2.13,92,3.311,99,0.294,104,0.14,113,1.201,114,1.014,129,0.071,132,0.251,138,0.905,140,0.509,141,0.952,159,1.069,160,1.317,187,0.914,195,0.807,196,0.787,197,1.125,198,0.827,199,0.914,200,0.914,201,0.891,204,1.791,205,2.734,206,3.545,207,0.807,208,1.18,209,1.18,210,2.263,211,1.166,212,1.337,213,1.21,215,1.21,217,4.002,228,2.734,229,3.979,236,2.139,243,3.605,246,3.311,247,3.311,250,1.238,255,1.305,256,2.472,261,2.005,267,2.025,268,1.302,269,1.659,277,1.692,280,1.102,285,1.643,289,2.243,302,1.41,303,1.5,304,0.714,316,0.768,319,1.895,326,1.643,327,1.516,369,4.847,370,1.41,372,2.96,374,2.896,376,3.311,379,3.049,382,3.332,385,2.139,394,0.768,396,0.988,397,1.93,398,2.804,401,2.495,402,1.518,403,1.643,404,2.524,405,1.166,406,1.152,407,1.362,408,2.245,411,1.438,412,2.22,414,3.234,416,2.638,419,1.845,426,1.902,427,1.516,428,1.098,432,2.95,433,2.316,434,1.362,435,1.238,436,1.277,437,2.139,443,1.277,444,1.101,445,1.8,446,2.005,448,1.516,449,1.267,452,1.129,456,0.768,457,1.895,459,3.512,463,1.516,467,1.362,468,1.362,473,0.448,474,1.659,475,0.914,476,1.919,477,0.914,478,0.914,479,0.827,480,0.914,481,0.807,482,1.71,483,0.827,484,0.914,485,1.784,486,1.71,487,0.827,488,0.869,489,0.914,490,0.827,491,0.914,492,0.827,493,0.787,494,0.914,495,0.827,496,0.914,497,0.827,498,0.827,499,0.914,500,0.827,501,0.891,502,0.848,503,0.914,504,0.827,505,1.404,506,0.807,507,0.827,508,0.827,509,0.914,510,0.827,511,1.71,512,0.827,513,1.302,514,1.404,515,0.807,516,0.827,517,0.807,518,0.681,519,0.914,520,0.807,521,0.787,522,0.827,523,0.914,524,0.827,525,0.914,526,0.848,527,0.914,528,0.827,529,1.152,530,0.827,531,1.27,532,0.827,533,0.914,534,0.827,535,1.18,536,0.914,537,0.827,538,0.914,539,0.914,559,1.27,611,1.791,618,2.389,643,2.549,644,2.96,647,1.41,648,1.41,677,0.848,685,1.516,689,1.302,690,1.755,717,1.518,725,2.911,730,2.911,734,1.8,735,2.005,738,1.717,740,2.493,741,1.717,800,2.861,827,3.195,828,2.638,846,3.286,849,2.005,873,1.902,910,1.8,912,1.8,913,1.8,914,1.8,915,2.139,916,4.484,949,2.765,955,2.765,978,2.005,991,1.643,993,3.082,1049,2.95,1068,3.082,1075,2.765,1079,2.549,1093,2.005,1107,1.613,1155,2.529,1156,4.314,1157,3.885,1158,5.366,1159,5.366,1160,6.022,1161,6.022,1162,6.86,1163,5.366,1164,4.406,1165,5.366,1166,4.406,1167,6.022,1168,4.406,1169,4.406,1170,2.868,1171,4.406,1172,2.868,1173,5.366,1174,2.868,1175,2.868,1176,2.868,1177,6.498,1178,2.868,1179,2.868,1180,1.8,1181,2.868,1182,2.868,1183,2.166,1184,2.139,1185,2.868,1186,2.868,1187,3.779,1188,1.576,1189,4.406,1190,4.406,1191,4.406,1192,4.406,1193,6.86,1194,4.406,1195,4.406,1196,4.406,1197,4.406,1198,4.406,1199,4.406,1200,2.868,1201,2.868,1202,3.542,1203,4.406,1204,6.498,1205,3.885,1206,3.885,1207,4.406,1208,4.406,1209,2.868,1210,2.868,1211,5.366,1212,3.885,1213,4.406,1214,4.406,1215,4.406,1216,4.406,1217,4.406,1218,4.406,1219,2.868,1220,5.366,1221,2.868,1222,2.911,1223,4.406,1224,2.529,1225,2.305,1226,2.868,1227,2.139,1228,2.868,1229,2.868,1230,2.868,1231,3.082,1232,1.895,1233,4.406,1234,6.022,1235,6.022,1236,4.406,1237,4.406,1238,4.406,1239,4.406,1240,3.068,1241,2.911,1242,3.082,1243,3.368,1244,2.305,1245,2.868,1246,2.868,1247,2.868,1248,2.868,1249,2.868,1250,2.529,1251,2.868,1252,2.868,1253,2.868,1254,2.868,1255,1.717,1256,2.868,1257,2.529,1258,2.005,1259,2.868]],["title/components/ContentComponent-1.html",[187,1.169,195,0.377,485,1.007]],["body/components/ContentComponent-1.html",[3,0.064,4,0.078,5,0.085,6,0.136,11,0.84,12,1.173,15,1.673,18,0.454,19,0.499,20,2.085,25,1.231,35,0.555,38,2.065,40,0.899,41,0.921,42,1.377,43,0.01,44,0.972,45,0.734,46,0.979,47,0.899,48,1.392,52,2.099,55,1.388,56,1.081,69,0.406,71,2.016,75,0.005,80,0.005,85,1.458,86,1.591,90,1.501,99,0.263,104,0.153,112,0.902,129,0.078,132,0.259,133,1.263,138,1.242,140,0.835,141,0.555,159,1.211,160,0.885,164,2.697,187,1.501,195,0.796,196,0.859,197,1.202,198,1.358,199,0.997,200,0.997,201,0.972,204,1.914,205,2.884,207,0.88,208,1.261,209,1.261,210,2.281,211,1.167,212,0.779,213,1.293,223,4.621,228,3.208,246,3.462,247,3.462,250,3.063,255,0.761,256,1.908,267,2.895,269,1.202,276,2.955,277,1.808,280,1.513,289,2.408,303,1.081,304,0.779,306,3.553,307,2.955,316,0.838,348,1.873,353,2.188,370,1.538,372,2.783,374,1.137,390,3.553,394,1.973,395,1.964,396,1.078,397,0.88,398,2.032,399,1.654,400,1.654,401,1.201,402,1.078,403,1.793,406,2.027,411,2.34,412,2.409,414,3.279,419,1.971,421,2.188,422,0.799,428,1.834,433,2.032,434,1.486,449,1.55,452,1.55,456,0.838,464,2.515,465,1.201,466,2.188,473,0.489,474,1.724,475,0.997,476,2.007,477,0.997,478,0.997,479,0.902,480,0.997,481,0.88,482,1.804,483,0.902,484,0.997,485,1.854,486,1.804,487,0.902,488,0.948,489,0.997,490,1.947,491,0.997,492,0.902,493,0.859,494,0.997,495,0.902,496,0.997,497,0.902,498,0.902,499,0.997,500,0.902,501,0.972,502,0.925,503,0.997,504,0.902,505,1.501,506,0.88,507,0.902,508,0.902,509,0.997,510,0.902,511,1.804,512,0.902,513,1.392,514,1.501,515,0.88,516,0.902,517,0.88,518,0.743,519,0.997,520,0.88,521,0.859,522,0.902,523,0.997,524,0.902,525,0.997,526,0.925,527,0.997,528,0.902,529,1.231,530,0.902,531,1.358,532,0.902,533,0.997,534,0.902,535,1.261,536,0.997,537,0.902,538,0.997,539,0.997,610,1.873,677,0.925,689,1.392,696,2.637,717,1.622,740,3.162,741,1.873,873,2.032,989,1.971,1053,3.159,1059,4.043,1060,3.785,1064,3.785,1066,2.489,1067,3.096,1068,3.293,1071,3.063,1075,2.955,1076,3.511,1077,3.511,1099,4.152,1107,2.03,1111,2.334,1120,4.865,1121,4.689,1131,2.334,1135,1.964,1136,1.793,1156,4.551,1260,2.759,1261,4.708,1262,7.073,1263,5.661,1264,6.754,1265,5.661,1266,5.661,1267,6.298,1268,4.708,1269,4.708,1270,4.708,1271,6.298,1272,6.298,1273,6.298,1274,4.708,1275,3.111,1276,4.708,1277,5.661,1278,4.708,1279,4.708,1280,5.661,1281,4.708,1282,4.708,1283,3.785,1284,3.129,1285,3.785,1286,3.785,1287,3.129,1288,3.129,1289,2.955,1290,3.785,1291,4.708,1292,4.802,1293,3.129,1294,4.708,1295,3.129,1296,3.293,1297,4.708,1298,6.298,1299,2.334,1300,4.222,1301,2.515,1302,2.515,1303,3.129,1304,3.129,1305,3.129,1306,3.129,1307,3.129,1308,3.129,1309,3.129,1310,2.515,1311,4.708,1312,3.129,1313,4.708,1314,3.129,1315,1.72,1316,2.067,1317,3.129,1318,3.129,1319,3.129,1320,5.661,1321,3.129,1322,3.129,1323,4.708,1324,3.129,1325,3.129,1326,4.708,1327,3.129,1328,3.129,1329,3.129,1330,3.129,1331,2.759]],["title/interfaces/ContentContainerChanged.html",[128,0.284,1332,2.761]],["body/interfaces/ContentContainerChanged.html",[3,0.109,4,0.134,5,0.098,6,0.086,11,0.719,15,1.593,18,0.519,19,0.728,43,0.01,45,0.829,47,1.314,48,1.593,71,1.756,75,0.007,80,0.007,90,2.415,99,0.21,121,2.128,122,2.128,123,2.069,124,1.958,125,2.069,128,0.515,129,0.221,132,0.197,138,0.909,140,1.22,181,2.824,194,1.375,195,0.847,197,1.756,280,1.413,308,3.062,411,2.406,412,2.138,414,3.365,423,3.941,430,2.399,529,1.409,610,3.226,650,3.173,691,2.326,740,2.499,889,1.958,1053,3.373,1056,2.477,1059,4.118,1066,2.849,1067,3.382,1071,3.875,1086,3.382,1107,1.843,1135,3.382,1136,3.941,1292,4.118,1296,3.769,1315,2.962,1332,4.756,1333,3.382,1334,4.832,1335,4.811,1336,4.811,1337,5.006,1338,3.769,1339,4.317,1340,3.769,1341,4.573,1342,4.317,1343,4.811,1344,4.019,1345,4.019,1346,4.317,1347,4.317,1348,3.382,1349,4.019,1350,3.769,1351,4.811,1352,3.769,1353,3.769,1354,4.166,1355,3.769,1356,3.769]],["title/modules/ContentModule.html",[540,0.636,551,3.076]],["body/modules/ContentModule.html",[3,0.125,4,0.153,5,0.112,6,0.098,43,0.01,75,0.008,80,0.008,99,0.349,104,0.301,129,0.153,132,0.225,211,0.971,304,1.864,321,2.054,422,1.574,456,1.652,473,0.964,485,2.497,531,1.778,540,0.891,542,1.735,543,1.778,544,2.503,545,1.869,546,1.778,547,2.503,551,6.338,558,2.325,559,1.778,561,2.384,565,2.267,571,3.132,572,2.436,759,2.646,760,2.069,763,5.232,764,4.313,1110,4.958,1357,5.438,1358,5.438,1359,5.438,1360,5.438,1361,6.099,1362,6.099,1363,6.167,1364,7.481,1365,7.481,1366,4.313,1367,6.167,1368,4.074,1369,4.599,1370,6.167,1371,7.481]],["title/modules/CoreModule.html",[540,0.636,552,3.076]],["body/modules/CoreModule.html",[3,0.126,4,0.154,5,0.112,6,0.098,43,0.01,46,1.07,75,0.008,80,0.008,99,0.347,104,0.302,129,0.154,132,0.226,140,1.097,211,0.973,212,1.542,321,1.699,322,4.615,422,1.579,473,0.967,540,1.166,542,1.741,543,1.784,544,1.923,545,1.875,546,1.784,547,2.33,552,6.34,558,2.33,559,1.784,561,2.389,565,2.272,605,4.327,647,3.042,648,3.042,773,4.615,1040,6.104,1123,5.456,1372,5.456,1373,5.456,1374,6.104,1375,6.104,1376,6.188,1377,7.497,1378,5.243,1379,7.497,1380,6.188,1381,6.188,1382,6.188,1383,6.188,1384,6.188,1385,6.188,1386,6.188,1387,6.188,1388,4.615,1389,8.065,1390,6.188,1391,4.975,1392,6.188]],["title/interfaces/DefaultIconDefinition.html",[128,0.284,1393,3.281]],["body/interfaces/DefaultIconDefinition.html",[3,0.077,4,0.094,5,0.068,6,0.06,11,0.503,18,0.364,19,0.572,43,0.01,44,1.266,45,0.622,46,1.382,69,1.095,75,0.006,80,0.006,90,1.203,128,0.243,129,0.134,138,0.637,141,1.346,194,0.963,203,5.51,303,0.721,341,5.801,440,3.878,449,1.535,452,1.535,474,1.994,618,3.067,672,2.752,829,2.639,873,1.628,997,1.963,1049,2.074,1393,4.707,1394,2.639,1395,3.033,1396,3.033,1397,3.033,1398,3.327,1399,4.029,1400,3.773,1401,3.773,1402,3.033,1403,3.773,1404,3.773,1405,2.814,1406,3.327,1407,6.89,1408,4.029,1409,5.539,1410,3.778,1411,2.493,1412,3.033,1413,2.639,1414,2.259,1415,3.327,1416,8.092,1417,8.092,1418,3.327,1419,3.327,1420,3.327,1421,4.764,1422,3.327,1423,3.327,1424,3.327,1425,3.327,1426,3.327,1427,3.327,1428,3.327,1429,3.327,1430,3.327,1431,3.327,1432,3.327,1433,3.327,1434,6.076,1435,6.076,1436,6.43,1437,6.43,1438,2.814,1439,3.327,1440,4.125,1441,3.327,1442,3.327,1443,3.327,1444,3.327,1445,4.029,1446,4.029,1447,4.764,1448,3.327,1449,3.327,1450,3.327,1451,3.327,1452,6.43,1453,3.327,1454,4.764,1455,3.327,1456,3.327,1457,3.327,1458,3.327,1459,3.327,1460,6.076,1461,4.764,1462,3.327,1463,3.327,1464,3.327,1465,3.327,1466,3.327,1467,3.327,1468,3.327,1469,3.033,1470,3.327,1471,3.327,1472,3.327,1473,3.327,1474,3.327,1475,4.764,1476,4.343,1477,3.033,1478,3.327,1479,2.814,1480,3.327,1481,3.327,1482,3.327,1483,3.327,1484,3.327,1485,3.327,1486,3.327,1487,6.076,1488,3.327,1489,3.327,1490,6.076,1491,3.327,1492,3.327,1493,2.639,1494,3.327,1495,3.327,1496,5.565,1497,3.327,1498,4.764,1499,3.327,1500,3.327,1501,3.327,1502,3.327]],["title/components/DetailsLabelComponent.html",[195,0.452,487,1.268]],["body/components/DetailsLabelComponent.html",[3,0.093,4,0.114,5,0.112,6,0.124,11,0.824,12,1.539,18,0.441,19,0.654,25,1.615,38,1.821,42,1.113,43,0.01,44,1.129,45,0.676,46,0.791,52,1.422,55,1.269,69,1.145,75,0.006,80,0.006,85,1.241,86,1.369,99,0.178,104,0.223,129,0.114,132,0.294,133,0.917,141,0.811,155,3.01,159,0.753,160,1.093,195,0.803,196,1.256,197,1.577,198,1.319,199,1.458,200,1.458,201,1.422,207,1.287,208,1.655,209,1.655,210,2.348,211,1.198,212,1.14,213,1.696,215,1.696,255,1.502,268,1.826,269,1.577,303,1.336,304,1.14,316,1.226,396,1.576,397,1.968,401,1.757,406,1.196,408,3.147,411,1.874,440,2.587,444,2.372,449,0.963,452,0.963,456,1.226,465,2.372,473,0.715,474,1.996,475,1.458,476,2.387,477,1.458,478,1.458,479,1.319,480,1.458,481,1.287,482,2.229,483,1.319,484,1.458,485,1.696,486,2.229,487,2.159,488,2.709,489,1.458,490,1.319,491,1.458,492,1.319,493,1.256,494,1.458,495,1.319,496,1.458,497,1.319,498,1.319,499,1.458,500,1.319,501,1.422,502,1.352,503,1.458,504,1.319,505,1.969,506,1.287,507,1.319,508,1.319,509,1.458,510,1.319,511,2.229,512,1.319,513,1.826,514,1.969,515,1.287,516,1.319,517,1.287,518,1.086,519,1.458,520,1.287,521,1.256,522,1.319,523,1.458,524,1.319,525,1.458,526,1.352,527,1.458,528,1.319,529,1.615,530,1.319,531,1.781,532,1.319,533,1.458,534,1.319,535,1.655,536,1.458,537,1.319,538,1.458,539,1.458,611,2.511,677,1.352,689,1.826,690,2.287,717,2.128,1503,6.288,1504,6.288,1505,4.034,1506,5.447,1507,5.447,1508,4.917,1509,7.489,1510,6.178,1511,7.489,1512,6.178,1513,6.994,1514,6.178,1515,6.178,1516,4.575,1517,3.539,1518,6.178,1519,6.178,1520,4.575,1521,3.539,1522,6.178,1523,4.966,1524,7.489,1525,6.178,1526,6.178,1527,6.178,1528,4.575,1529,4.575,1530,6.178,1531,3.023]],["title/modules/DetailsLabelModule.html",[540,0.636,1532,3.281]],["body/modules/DetailsLabelModule.html",[3,0.135,4,0.165,5,0.12,6,0.105,43,0.009,75,0.008,80,0.008,99,0.323,104,0.324,129,0.165,132,0.242,422,1.693,473,1.037,487,2.646,488,2.01,540,0.959,542,1.866,543,1.913,544,2.582,545,2.01,546,1.913,547,2.582,558,2.429,559,1.913,561,2.114,565,2.368,759,2.764,760,2.226,1503,5.334,1504,5.334,1532,6.678,1533,5.85,1534,5.85,1535,5.85,1536,6.634,1537,6.634]],["title/interfaces/DocumentationContent.html",[128,0.284,1538,3.536]],["body/interfaces/DocumentationContent.html",[3,0.16,4,0.168,5,0.122,6,0.107,8,3.005,11,0.9,18,0.651,19,0.836,43,0.009,45,0.713,69,1.155,75,0.008,80,0.008,128,0.436,129,0.168,194,1.723,414,3.418,731,5.1,1538,6.347,1539,5.952,1540,6.75,1541,4.236,1542,4.721,1543,6.147,1544,5.426,1545,3.867,1546,5.888]],["title/interfaces/DrawerContainersChanged.html",[128,0.284,1339,2.761]],["body/interfaces/DrawerContainersChanged.html",[3,0.109,4,0.133,5,0.097,6,0.085,11,0.713,15,1.58,18,0.515,19,0.725,43,0.01,45,0.83,47,1.307,48,1.58,71,1.747,75,0.007,80,0.007,90,2.181,99,0.208,121,2.111,122,2.111,123,2.053,124,1.943,125,2.053,128,0.514,129,0.221,132,0.195,138,0.902,140,0.948,181,2.815,194,1.364,195,0.817,197,1.927,280,1.406,308,3.047,411,2.422,412,2.127,414,3.056,423,3.921,430,2.38,529,1.398,610,3.2,650,3.161,691,2.954,740,2.487,889,2.487,1053,3.361,1056,2.457,1059,4.925,1066,2.827,1067,3.365,1071,3.872,1086,3.365,1107,1.834,1135,3.355,1136,3.921,1292,4.097,1296,4.787,1315,2.939,1332,4.295,1333,3.355,1334,4.822,1335,4.787,1336,4.787,1337,4.988,1338,3.739,1339,4.738,1340,4.787,1341,4.56,1342,4.295,1343,4.787,1344,3.987,1345,3.987,1346,4.295,1347,4.295,1348,3.355,1349,3.987,1350,3.739,1351,4.787,1352,3.739,1353,3.739,1354,4.15,1355,3.739,1356,3.739]],["title/interfaces/DrawerInitialized.html",[128,0.284,1346,2.761]],["body/interfaces/DrawerInitialized.html",[3,0.11,4,0.135,5,0.098,6,0.086,11,0.724,15,1.604,18,0.523,19,0.732,43,0.01,45,0.83,47,1.32,48,1.604,71,1.763,75,0.007,80,0.007,90,2.202,99,0.211,121,2.143,122,2.143,123,2.083,124,1.972,125,2.083,128,0.516,129,0.221,132,0.198,138,0.916,140,0.962,181,2.689,194,1.385,195,0.781,197,1.763,280,1.42,308,3.076,411,2.417,412,2.147,414,3.073,423,3.959,430,2.416,529,1.419,610,3.248,650,3.183,691,2.342,740,2.511,889,1.972,1053,3.384,1056,2.494,1059,4.136,1066,2.869,1067,3.397,1071,3.879,1086,3.397,1107,1.851,1135,3.406,1136,3.959,1292,4.136,1296,3.795,1315,2.983,1332,4.336,1333,3.406,1334,4.841,1335,4.832,1336,4.832,1337,5.023,1338,3.795,1339,4.336,1340,3.795,1341,4.585,1342,4.336,1343,4.832,1344,5.153,1345,5.153,1346,4.771,1347,4.336,1348,3.406,1349,4.047,1350,3.795,1351,4.832,1352,3.795,1353,3.795,1354,4.179,1355,3.795,1356,3.795]],["title/modules/DrawerModule.html",[540,0.636,553,3.076]],["body/modules/DrawerModule.html",[3,0.123,4,0.15,5,0.109,6,0.096,43,0.01,75,0.008,80,0.008,99,0.348,104,0.294,129,0.15,132,0.22,422,1.539,473,0.943,483,2.616,485,2.411,490,2.616,528,2.616,529,1.577,540,0.872,542,1.696,543,1.738,544,2.478,545,1.827,546,2.128,547,2.478,553,6.404,558,2.293,559,1.738,561,1.922,565,2.236,571,3.09,572,2.381,574,6.507,575,4.876,576,3.784,577,5.933,578,4.847,596,4.497,597,4.847,1110,4.847,1111,4.497,1338,4.217,1547,5.317,1548,5.317,1549,5.317,1550,6.029,1551,4.631,1552,4.631,1553,6.029,1554,4.847,1555,5.317]],["title/interfaces/DrawerToggled.html",[128,0.284,1347,2.761]],["body/interfaces/DrawerToggled.html",[3,0.106,4,0.129,5,0.094,6,0.083,11,0.693,15,1.986,18,0.501,19,0.712,43,0.01,45,0.832,47,1.284,48,1.986,71,2.132,75,0.007,80,0.007,90,2.142,99,0.202,121,2.053,122,2.053,123,1.996,124,1.889,125,1.996,128,0.508,129,0.22,132,0.19,138,0.877,140,0.922,181,2.786,194,1.327,195,0.765,197,1.715,280,1.716,308,2.992,411,2.435,412,2.596,414,3.024,423,4.786,430,2.992,529,1.757,610,3.111,650,3.119,691,2.243,740,3.035,889,1.889,1053,3.316,1056,2.389,1059,4.024,1066,3.553,1067,3.304,1071,3.857,1086,3.304,1107,2.11,1135,3.262,1136,3.851,1292,5.001,1296,3.635,1315,2.857,1332,4.218,1333,3.262,1334,4.672,1335,4.701,1336,4.701,1337,4.922,1338,3.635,1339,4.218,1340,3.635,1341,4.512,1342,4.218,1343,4.701,1344,3.876,1345,3.876,1346,4.218,1347,4.675,1348,4.218,1349,5.013,1350,4.701,1351,4.701,1352,3.635,1353,3.635,1354,4.095,1355,3.635,1356,3.635]],["title/interfaces/ExtractionSet.html",[128,0.284,1556,2.418]],["body/interfaces/ExtractionSet.html",[3,0.131,4,0.16,5,0.117,6,0.103,11,0.86,18,0.622,19,0.814,43,0.01,44,1.208,45,0.741,46,1.33,69,1.143,75,0.008,80,0.008,99,0.251,128,0.416,129,0.16,141,1.563,194,1.647,425,3.262,493,2.464,535,1.729,698,4.602,802,4.331,804,3.412,1183,3.779,1556,4.227,1557,5.69,1558,5.69,1559,6.278,1560,7.688,1561,7.688]],["title/components/ExtractionSetDropdownComponent.html",[195,0.452,492,1.268]],["body/components/ExtractionSetDropdownComponent.html",[3,0.079,4,0.096,5,0.1,6,0.13,11,0.853,12,1.37,18,0.373,19,0.583,25,1.438,35,0.686,38,1.956,40,1.051,41,1.077,42,1.338,43,0.01,44,1.102,45,0.71,46,0.952,47,1.051,52,1.203,55,1.315,56,0.838,69,0.502,75,0.006,76,1.779,80,0.006,85,0.976,86,1.441,99,0.249,104,0.189,129,0.096,132,0.279,133,0.776,140,0.686,141,1.641,159,0.905,160,1.151,187,1.233,195,0.756,196,1.062,197,1.404,198,1.116,199,1.233,200,1.233,201,1.203,207,1.089,208,1.474,209,1.474,210,2.321,211,1.186,212,0.964,213,1.51,215,1.51,255,0.941,256,1.173,268,1.626,269,1.404,280,1.13,303,1.222,304,0.964,316,1.037,387,2.173,388,2.802,389,2.217,394,1.474,396,1.333,401,2.112,406,1.012,411,1.715,412,1.709,416,1.903,417,4.773,426,1.67,428,0.964,431,2.707,449,0.815,452,0.815,456,1.037,458,2.429,463,2.046,467,3.041,468,3.041,470,2.429,471,2.707,472,4.476,473,0.605,474,1.879,475,1.233,476,2.221,477,1.233,478,1.233,479,1.116,480,1.233,481,1.089,482,2.04,483,1.116,484,1.233,485,1.51,486,2.04,487,1.116,488,1.173,489,1.233,490,1.116,491,1.233,492,2.01,493,2.503,494,1.233,495,1.116,496,1.233,497,1.116,498,1.116,499,1.233,500,1.116,501,1.203,502,1.144,503,1.233,504,1.116,505,1.753,506,1.089,507,1.116,508,1.116,509,1.233,510,1.116,511,2.04,512,1.116,513,1.626,514,1.753,515,1.089,516,1.116,517,1.089,518,0.919,519,1.233,520,1.089,521,1.062,522,1.116,523,1.233,524,1.116,525,1.233,526,1.144,527,1.233,528,1.116,529,1.438,530,1.116,531,1.586,532,1.116,533,1.233,534,1.116,535,1.474,536,1.233,537,1.116,538,1.233,539,1.233,570,2.449,600,1.67,611,2.236,676,2.602,677,1.144,678,2.236,679,2.833,680,1.528,681,1.486,682,2.457,689,1.626,690,2.093,695,2.602,716,2.613,717,1.895,718,2.046,748,3.452,749,2.886,1079,3.739,1107,1.474,1517,3.152,1543,2.707,1556,4.422,1562,6.579,1563,6.103,1564,3.413,1565,7.318,1566,4.423,1567,6.4,1568,5.501,1569,5.27,1570,5.501,1571,6.97,1572,6.4,1573,5.501,1574,3.87,1575,3.384,1576,3.87,1577,3.426,1578,2.613,1579,5.501,1580,5.501,1581,3.87,1582,3.87,1583,4.851,1584,4.874,1585,4.605,1586,3.452,1587,3.87,1588,3.87,1589,3.87,1590,3.87,1591,3.87,1592,3.87,1593,3.87,1594,5.501,1595,5.501,1596,5.501,1597,3.413,1598,3.87,1599,3.87,1600,3.111,1601,3.87,1602,3.87,1603,3.413,1604,3.413]],["title/modules/ExtractionSetDropdownModule.html",[540,0.636,1605,3.076]],["body/modules/ExtractionSetDropdownModule.html",[3,0.133,4,0.163,5,0.119,6,0.104,43,0.009,75,0.008,80,0.008,99,0.333,104,0.32,129,0.163,132,0.24,141,1.467,422,1.675,473,1.026,492,2.643,493,1.801,540,0.949,542,1.846,543,1.892,544,2.57,545,1.988,546,1.892,547,2.57,558,2.413,559,1.892,561,2.091,565,2.353,759,2.747,760,2.202,1562,5.275,1563,4.894,1605,6.249,1606,5.786,1607,5.786,1608,5.786,1609,6.562,1610,6.243,1611,5.275,1612,6.562]],["title/interfaces/GlobalConfig.html",[128,0.284,244,1.438]],["body/interfaces/GlobalConfig.html",[3,0.107,4,0.13,5,0.095,6,0.083,14,3.72,18,0.506,19,0.717,43,0.01,44,0.72,45,0.821,46,1.604,56,1.031,69,1.195,75,0.007,80,0.007,82,4.733,99,0.291,104,0.257,112,1.515,128,0.437,129,0.196,133,1.053,138,0.886,140,0.932,194,1.341,211,0.682,218,4.028,219,4.962,220,4.962,222,4.53,224,4.347,244,2.585,280,1.83,321,1.442,328,2.746,329,3.578,330,3.578,350,1.515,425,2.873,449,1.106,452,1.106,465,3.272,612,4.733,613,4.962,614,6.357,615,5.897,616,6.357,617,4.962,618,3.52,619,6.357,620,5.897,989,2.199,997,1.909,1042,4.247,1043,3.674,1438,3.918,1440,3.145,1445,3.918,1446,3.918,1479,3.918,1613,3.674,1614,4.947,1615,4.962,1616,5.44,1617,4.051,1618,3.674,1619,2.777,1620,2.888,1621,2.888,1622,4.632,1623,3.918,1624,2.414,1625,4.223,1626,4.632]],["title/components/HeaderComponent.html",[195,0.452,495,1.268]],["body/components/HeaderComponent.html",[3,0.09,4,0.11,5,0.109,6,0.127,11,0.805,12,1.504,18,0.426,19,0.639,23,2.967,35,0.784,38,1.88,40,1.153,41,1.181,42,1.075,43,0.01,44,1.119,45,0.698,46,0.765,52,1.374,69,1.003,75,0.006,76,2.775,80,0.006,85,1.071,86,1.181,91,2.612,99,0.235,104,0.216,129,0.11,132,0.291,141,0.784,159,0.727,160,1.074,187,1.409,195,0.794,196,1.214,197,1.541,198,1.275,199,1.409,200,1.409,201,1.374,207,1.244,208,1.617,209,1.617,210,2.343,211,1.195,212,1.102,213,1.657,215,1.657,218,4.344,219,4.314,220,4.314,255,1.075,268,2.031,269,1.541,277,1.698,303,1.313,304,1.102,316,1.185,327,2.338,350,1.741,396,1.523,397,2.077,398,3.336,401,2.968,402,2.079,405,2.794,406,2.021,408,2.253,410,2.253,411,1.841,412,2.295,419,1.852,426,2.966,428,1.84,433,3.187,435,1.908,436,1.969,440,1.852,443,3.288,444,2.835,445,3.789,447,2.868,448,3.192,449,0.931,452,0.931,456,1.185,459,2.968,473,0.691,474,1.973,475,1.409,476,2.354,477,1.409,478,1.409,479,1.275,480,1.409,481,1.244,482,2.191,483,1.275,484,1.409,485,1.657,486,2.191,487,1.275,488,1.34,489,1.409,490,1.275,491,1.409,492,1.275,493,1.214,494,1.409,495,2.129,496,1.409,497,1.275,498,1.275,499,1.409,500,1.275,501,1.374,502,1.307,503,1.409,504,1.275,505,1.924,506,1.244,507,1.275,508,1.275,509,1.409,510,1.275,511,2.191,512,1.275,513,1.784,514,1.924,515,1.244,516,1.275,517,1.244,518,1.05,519,1.409,520,1.244,521,1.214,522,1.275,523,1.409,524,1.275,525,1.409,526,1.307,527,1.409,528,1.275,529,1.578,530,1.275,531,1.741,532,1.275,533,1.409,534,1.275,535,1.617,536,1.409,537,1.275,538,1.409,539,1.409,611,2.454,677,1.307,689,1.784,690,2.247,717,2.079,732,2.253,736,2.431,738,2.647,740,1.607,748,2.775,751,3.899,752,2.922,753,2.922,1117,3.899,1243,2.775,1300,3.298,1340,3.093,1411,2.922,1523,3.555,1531,4.541,1544,3.555,1627,3.899,1628,6.873,1629,6.037,1630,3.555,1631,6.037,1632,4.422,1633,6.037,1634,4.422,1635,6.037,1636,4.853,1637,3.298,1638,3.555,1639,3.298,1640,3.789,1641,4.422,1642,3.899,1643,4.422,1644,4.422,1645,4.422,1646,3.093,1647,4.422,1648,4.422,1649,3.899,1650,3.555,1651,4.422,1652,3.093,1653,6.037]],["title/modules/HeaderModule.html",[540,0.636,554,3.076]],["body/modules/HeaderModule.html",[3,0.133,4,0.163,5,0.119,6,0.104,43,0.01,75,0.008,80,0.008,99,0.34,104,0.32,129,0.163,132,0.24,422,1.675,473,1.026,495,2.643,540,0.949,542,1.846,543,1.892,544,2.57,545,1.988,546,1.892,547,2.57,554,6.249,558,2.413,559,1.892,561,2.091,565,2.353,571,3.251,572,2.592,759,2.747,760,2.202,765,4.105,766,3.469,1654,5.786,1655,5.786,1656,5.786,1657,6.562,1658,6.562]],["title/interfaces/IconDefinition.html",[128,0.284,1659,3.281]],["body/interfaces/IconDefinition.html",[0,1.79,3,0.087,4,0.106,5,0.078,6,0.068,11,0.572,15,2.154,16,1.645,18,0.413,19,0.626,20,1.969,29,1.85,40,0.819,41,0.839,43,0.01,44,1.191,45,0.658,46,1.449,47,0.819,48,1.999,53,3.124,55,1.497,56,0.9,60,2.997,69,1.051,75,0.006,80,0.006,85,1.048,86,0.839,99,0.326,102,2.09,104,0.209,106,2.55,107,1.85,108,1.85,109,1.742,128,0.277,129,0.147,132,0.157,133,1.7,138,1.392,140,1.048,141,1.402,159,1.3,160,0.924,161,1.85,194,1.094,211,0.556,244,1.932,245,2.206,249,3.196,280,1.214,289,2.584,303,1.392,321,1.177,341,5.372,387,2.334,394,1.811,440,3.796,474,2.185,572,1.693,575,2.832,576,2.69,612,3.537,618,3.673,650,2.831,652,3.196,654,3.446,672,3.01,799,1.97,889,2.147,997,2.147,1180,4.798,1188,3.248,1240,3.445,1388,3.196,1391,3.446,1394,2.997,1397,6.634,1407,6.438,1408,5.702,1409,5.859,1410,4.132,1411,5.222,1413,4.132,1508,2.455,1646,2.997,1659,5.894,1660,3.196,1661,3.446,1662,4.75,1663,6.427,1664,6.427,1665,5.963,1666,5.21,1667,5.21,1668,3.779,1669,3.779,1670,2.832,1671,6.969,1672,5.21,1673,3.779,1674,3.779,1675,3.708,1676,3.779,1677,3.779,1678,3.779,1679,3.779,1680,3.779,1681,5.21,1682,3.779,1683,3.779,1684,3.779,1685,3.779,1686,3.779,1687,3.779,1688,3.779,1689,3.779,1690,3.779,1691,3.779,1692,3.779,1693,3.779,1694,3.446,1695,5.21,1696,3.779,1697,3.779,1698,3.779,1699,3.779,1700,3.779,1701,5.21,1702,3.779,1703,3.779,1704,3.446,1705,3.779,1706,3.779,1707,3.779,1708,5.963,1709,3.779,1710,3.779,1711,3.779,1712,4.75,1713,3.779,1714,3.779,1715,3.779,1716,3.779,1717,3.779,1718,3.779,1719,3.779,1720,3.779,1721,3.196,1722,3.779,1723,3.779]],["title/injectables/IconRegistryState.html",[0,1.333,1670,2.906]],["body/injectables/IconRegistryState.html",[0,1.676,2,2.335,3,0.079,4,0.097,5,0.071,6,0.125,11,0.933,15,2.267,16,2.124,18,0.376,20,2.115,25,1.446,29,3.019,35,0.692,38,1.865,40,1.056,41,1.083,42,1.796,43,0.01,44,1.189,45,0.667,46,1.327,47,1.056,48,2.267,52,1.212,53,3.398,55,1.684,56,0.979,60,3.869,69,0.907,75,0.006,80,0.006,85,1.14,86,0.763,99,0.319,102,1.957,104,0.19,106,2.387,107,1.683,108,1.683,109,1.586,128,0.252,129,0.137,132,0.142,133,1.667,138,1.36,140,0.692,141,1.14,159,1.262,160,0.865,161,1.683,211,0.506,244,2.287,245,2.612,249,4.126,280,1.437,289,2.635,303,1.539,321,1.071,341,4.951,387,2.762,394,1.978,440,3.773,474,2.057,572,1.541,575,2.577,576,2.448,612,3.312,618,3.65,650,2.691,652,2.909,654,3.136,672,1.987,799,1.793,889,2.01,997,1.417,1180,5.058,1188,3.845,1240,3.762,1388,2.909,1391,4.447,1394,5.517,1397,6.591,1407,6.011,1408,5.216,1409,4.447,1410,2.728,1411,5.068,1413,3.869,1508,3.169,1646,3.869,1659,6.385,1660,5.883,1661,3.136,1662,3.136,1663,4.878,1664,4.878,1665,6.764,1666,6.168,1667,5.668,1668,4.878,1669,3.44,1670,3.655,1671,7.331,1672,6.168,1673,4.878,1674,4.878,1675,4.39,1676,3.44,1677,3.44,1678,3.44,1679,3.44,1680,3.44,1681,4.878,1682,3.44,1683,3.44,1684,3.44,1685,3.44,1686,3.44,1687,3.44,1688,3.44,1689,3.44,1690,3.44,1691,3.44,1692,3.44,1693,3.44,1694,4.447,1695,6.168,1696,4.878,1697,3.44,1698,4.878,1699,6.168,1700,4.878,1701,4.878,1702,3.44,1703,3.44,1704,3.136,1705,3.44,1706,3.44,1707,3.44,1708,5.668,1709,3.44,1710,3.44,1711,3.44,1712,5.623,1713,5.668,1714,3.44,1715,3.44,1716,3.44,1717,3.44,1718,3.44,1719,3.44,1720,4.878,1721,4.126,1722,5.668,1723,3.44,1724,5.532,1725,3.901,1726,3.901,1727,3.901,1728,3.901,1729,3.901,1730,3.901,1731,3.901,1732,3.901,1733,3.901]],["title/classes/InitializationState.html",[132,0.161,1734,3.536]],["body/classes/InitializationState.html",[3,0.055,4,0.067,5,0.049,6,0.111,11,0.359,15,2.494,18,0.259,19,0.444,20,2.158,25,1.097,38,1.626,40,0.514,41,0.527,42,1.02,43,0.01,45,0.603,47,0.514,48,1.24,55,1.374,56,1.226,65,1.161,71,1.071,75,0.004,80,0.004,85,1.033,86,1.235,90,1.337,99,0.246,104,0.131,112,0.776,121,2.299,122,2.299,123,1.979,124,2.115,125,1.979,129,0.067,132,0.188,133,1.671,138,1.28,140,1.238,141,1.371,159,1.149,160,0.91,181,0.952,195,0.687,197,0.687,199,0.858,204,1.094,205,2.137,208,0.721,209,0.721,210,0.687,211,0.544,213,0.739,215,0.739,223,3.235,228,1.371,243,2.511,246,2.306,247,2.306,250,2.512,256,1.764,267,1.928,268,1.721,269,1.782,276,1.689,277,1.033,280,1.613,283,2.403,285,2.403,289,2.361,301,1.882,305,4.079,306,2.633,307,1.689,316,0.721,317,1.882,348,1.611,370,1.323,372,1.323,390,1.689,394,2.07,395,1.689,410,1.371,411,2.366,412,2.528,415,2.772,419,1.756,421,2.934,422,1.071,423,4.559,428,1.982,429,2.934,434,1.278,438,2.164,439,2.164,449,0.883,452,0.883,457,2.772,465,1.979,466,4.071,474,1.071,490,1.486,529,0.704,610,3.778,650,1.127,676,1.094,677,0.795,678,2.838,689,0.795,698,1.611,734,1.689,740,2.956,975,2.007,989,1.127,997,1.524,1036,2.007,1050,3.373,1051,2.373,1053,2.295,1056,2.37,1061,2.164,1064,2.164,1067,2.062,1068,1.882,1071,2.225,1073,2.373,1075,1.689,1077,2.007,1079,1.993,1086,2.062,1088,1.778,1104,3.699,1107,1.87,1120,4.771,1121,4.771,1128,1.778,1129,2.164,1130,2.373,1131,2.007,1134,3.699,1262,2.373,1283,2.164,1286,2.164,1292,4.627,1299,2.007,1300,5.207,1301,2.164,1302,2.164,1310,2.164,1315,2.306,1316,1.778,1342,1.689,1348,5.053,1355,3.605,1356,3.605,1405,2.007,1578,2.449,1734,4.145,1735,2.164,1736,2.007,1737,4.195,1738,5.155,1739,6.982,1740,5.821,1741,5.133,1742,5.821,1743,4.195,1744,5.155,1745,2.691,1746,6.815,1747,5.155,1748,2.691,1749,2.691,1750,2.691,1751,2.691,1752,4.002,1753,3.373,1754,2.691,1755,5.155,1756,2.691,1757,2.691,1758,2.373,1759,4.546,1760,6.156,1761,4.546,1762,4.546,1763,5.895,1764,4.546,1765,5.565,1766,3.699,1767,4.546,1768,4.145,1769,5.565,1770,4.68,1771,3.699,1772,5.133,1773,4.195,1774,2.691,1775,2.691,1776,2.691,1777,2.691,1778,2.691,1779,2.691,1780,2.691,1781,2.691,1782,2.691,1783,4.195,1784,2.691,1785,4.195,1786,2.691,1787,2.691,1788,2.691,1789,2.373,1790,6.311,1791,2.691,1792,2.691,1793,2.691,1794,4.546,1795,2.373,1796,3.699,1797,4.195,1798,2.691,1799,5.821,1800,4.195,1801,2.691,1802,2.691,1803,2.691,1804,5.155,1805,2.691,1806,2.691,1807,2.691,1808,3.235,1809,2.691,1810,5.155,1811,2.691,1812,1.778,1813,2.691,1814,3.699,1815,2.691,1816,2.691,1817,2.691,1818,6.686,1819,4.195,1820,5.821,1821,4.195,1822,4.195,1823,2.691,1824,5.155,1825,4.195,1826,2.691,1827,2.691,1828,2.691,1829,4.195,1830,4.195,1831,2.691,1832,2.691,1833,5.155,1834,2.691,1835,2.691,1836,2.691,1837,2.691,1838,4.195,1839,2.691,1840,2.691,1841,2.007,1842,2.164,1843,2.691,1844,1.778,1845,2.691,1846,2.691,1847,5.133,1848,5.155,1849,5.821,1850,4.195,1851,4.195,1852,2.691,1853,2.691,1854,2.691,1855,2.691,1856,2.691,1857,2.691,1858,2.691,1859,6.686,1860,2.934,1861,4.195,1862,2.691,1863,2.691,1864,2.691,1865,2.691,1866,2.691,1867,2.691,1868,2.691,1869,1.882,1870,2.691,1871,2.691,1872,1.882,1873,2.691,1874,2.691,1875,4.195,1876,2.691,1877,2.691,1878,2.691,1879,2.691,1880,2.691,1881,2.691,1882,4.195,1883,5.155,1884,2.691,1885,2.691,1886,4.195,1887,2.691,1888,2.691,1889,2.691,1890,2.691,1891,2.691,1892,2.373,1893,3.235,1894,2.691,1895,2.691,1896,2.691]],["title/components/JsonFileReaderComponent.html",[195,0.452,497,1.268]],["body/components/JsonFileReaderComponent.html",[3,0.08,4,0.097,5,0.166,6,0.13,11,0.74,12,1.382,18,0.377,19,0.587,25,1.45,35,0.694,38,1.962,40,1.059,41,1.085,42,1.349,43,0.01,44,1.105,45,0.713,46,0.959,47,1.059,48,2.27,52,1.723,55,1.139,56,1.067,69,0.836,75,0.006,80,0.006,85,1.142,86,1.26,99,0.216,104,0.191,129,0.097,132,0.28,133,0.785,138,1.248,140,0.984,141,0.694,155,2.949,159,0.912,160,1.156,195,0.759,196,1.075,197,1.415,198,1.129,199,1.248,200,1.248,201,1.216,207,1.101,208,1.486,209,1.486,210,2.323,211,1.186,212,0.975,213,1.522,215,1.522,243,3.856,250,3.314,255,0.952,262,2.738,264,2.586,268,2.384,269,1.788,303,1.23,304,0.975,316,1.049,396,1.348,401,1.503,402,1.348,405,1.591,406,1.024,411,1.725,412,1.216,419,1.639,430,3.292,435,1.689,436,1.743,449,0.824,452,0.824,456,1.049,473,0.612,474,1.887,475,1.248,476,2.233,477,1.248,478,1.248,479,1.129,480,1.248,481,1.101,482,2.053,483,1.129,484,1.248,485,1.522,486,2.053,487,1.129,488,1.186,489,1.248,490,1.129,491,1.248,492,1.129,493,1.075,494,1.248,495,1.129,496,1.248,497,2.02,498,2.567,499,1.248,500,1.129,501,1.216,502,1.157,503,1.248,504,1.129,505,1.768,506,1.101,507,1.129,508,1.129,509,1.248,510,1.129,511,2.053,512,1.129,513,1.639,514,1.768,515,1.101,516,1.129,517,1.101,518,0.929,519,1.248,520,1.101,521,1.075,522,1.129,523,1.248,524,1.129,525,1.248,526,1.157,527,1.248,528,1.129,529,1.45,530,1.129,531,1.599,532,1.129,533,1.248,534,1.129,535,1.486,536,1.248,537,1.129,538,1.248,539,1.248,600,1.689,611,2.255,650,1.639,676,2.618,677,1.157,678,2.255,679,2.848,680,1.546,681,1.503,682,2.473,689,1.639,690,2.106,695,2.618,697,4.042,703,2.738,705,2.457,716,2.635,717,1.91,718,2.07,732,1.994,736,2.152,997,2.546,1180,3.481,1206,4.89,1301,5.632,1507,4.89,1531,2.586,1577,3.444,1897,6.597,1898,6.12,1899,3.452,1900,7.114,1901,6.441,1902,5.546,1903,6.441,1904,5.546,1905,7.006,1906,6.441,1907,5.546,1908,5.945,1909,3.915,1910,3.664,1911,5.546,1912,4.89,1913,4.459,1914,5.546,1915,5.546,1916,3.915,1917,5.546,1918,3.915,1919,5.546,1920,4.9,1921,5.546,1922,4.136,1923,4.89,1924,5.546,1925,3.915,1926,5.546,1927,3.452,1928,3.915,1929,3.915,1930,3.915,1931,3.915,1932,3.915,1933,5.546,1934,3.915,1935,3.915,1936,3.915,1937,5.546,1938,3.915,1939,3.915,1940,3.915,1941,3.147]],["title/modules/JsonFileReaderModule.html",[540,0.636,1942,3.076]],["body/modules/JsonFileReaderModule.html",[3,0.133,4,0.163,5,0.155,6,0.104,43,0.01,75,0.008,80,0.008,99,0.333,104,0.32,129,0.163,132,0.239,422,1.671,473,1.023,497,2.642,498,1.887,540,0.946,542,1.842,543,1.887,544,2.567,545,1.984,546,1.887,547,2.567,558,2.409,559,1.887,561,2.086,565,2.35,759,2.743,760,2.197,1897,5.263,1898,4.882,1942,6.246,1943,5.772,1944,5.772,1945,5.772,1946,6.546,1947,6.546,1948,5.123,1949,4.325]],["title/components/LabeledSlideToggleComponent.html",[195,0.452,500,1.268]],["body/components/LabeledSlideToggleComponent.html",[3,0.079,4,0.097,5,0.1,6,0.132,11,0.858,12,1.379,15,1.636,18,0.376,19,0.586,25,1.447,32,2.926,35,0.692,38,1.994,40,1.057,41,1.083,42,1.346,43,0.01,44,1.105,45,0.728,46,0.958,47,1.057,52,1.213,55,1.137,56,0.843,69,0.995,75,0.006,80,0.006,85,1.31,86,1.662,99,0.215,104,0.191,129,0.097,132,0.28,133,0.783,138,0.659,140,0.692,141,0.692,155,1.458,159,0.911,160,1.155,195,0.81,196,1.072,197,1.413,198,1.125,199,1.244,200,1.244,201,1.213,207,1.098,208,1.483,209,1.483,210,2.322,211,1.186,212,0.972,213,1.519,215,1.519,255,0.949,268,2.268,269,1.413,280,1.576,289,1.81,303,1.228,304,0.972,316,1.046,396,1.345,406,1.021,407,1.854,408,1.988,411,1.723,419,1.634,428,0.972,435,2.389,436,1.738,449,1.75,452,1.353,456,1.046,473,0.61,474,1.885,475,1.244,476,2.23,477,1.244,478,1.244,479,1.125,480,1.244,481,1.098,482,2.05,483,1.125,484,1.244,485,1.519,486,2.05,487,1.125,488,1.183,489,1.244,490,1.125,491,1.244,492,1.125,493,1.072,494,1.244,495,1.125,496,1.244,497,1.125,498,1.125,499,1.244,500,2.017,501,2.68,502,2.7,503,1.244,504,1.125,505,1.764,506,1.098,507,1.125,508,1.125,509,1.244,510,1.125,511,2.05,512,1.125,513,1.636,514,1.764,515,1.098,516,1.125,517,1.098,518,0.927,519,1.244,520,1.098,521,1.072,522,1.125,523,1.244,524,1.125,525,1.244,526,1.154,527,1.244,528,1.125,529,2.302,530,1.125,531,1.596,532,1.125,533,1.244,534,1.125,535,1.483,536,1.244,537,1.125,538,1.244,539,1.244,600,1.685,611,2.25,676,2.614,677,1.154,678,2.25,679,2.844,680,1.542,681,1.499,682,2.469,689,1.636,690,2.103,695,2.614,696,2.317,716,2.629,717,1.906,718,2.064,736,2.146,740,1.418,873,1.685,1107,1.483,1315,3.043,1569,4.815,1575,2.926,1577,3.44,1578,2.629,1583,4.88,1586,4.391,1950,6.684,1951,6.201,1952,3.138,1953,5.535,1954,4.395,1955,5.67,1956,4.88,1957,5.535,1958,5.366,1959,6.997,1960,6.43,1961,5.535,1962,3.442,1963,3.903,1964,4.88,1965,5.939,1966,3.442,1967,5.535,1968,6.765,1969,5.535,1970,5.535,1971,3.903,1972,5.535,1973,5.535,1974,3.903,1975,3.903,1976,5.535,1977,5.535,1978,3.903,1979,3.903,1980,3.903,1981,3.903,1982,3.903,1983,3.903,1984,3.138,1985,3.138,1986,3.903]],["title/modules/LabeledSlideToggleModule.html",[540,0.636,1987,3.076]],["body/modules/LabeledSlideToggleModule.html",[3,0.133,4,0.163,5,0.119,6,0.104,43,0.009,75,0.008,80,0.008,99,0.333,104,0.32,129,0.163,132,0.239,422,1.673,473,1.025,500,2.642,501,2.037,502,2.443,529,1.714,540,0.947,542,1.844,543,1.89,544,2.569,545,1.986,546,1.89,547,2.569,558,2.411,559,1.89,561,2.089,565,2.351,759,2.745,760,2.199,1950,5.269,1951,4.888,1987,6.248,1988,5.779,1989,5.779,1990,5.779,1991,5.779,1992,7.759,1993,6.554,1994,5.779]],["title/components/LeftSidebarComponent.html",[195,0.452,504,1.268]],["body/components/LeftSidebarComponent.html",[3,0.071,4,0.086,5,0.092,6,0.124,11,0.679,12,1.268,18,0.491,19,0.539,22,1.97,23,1.85,25,1.331,35,0.903,38,1.853,42,1.238,43,0.01,44,1.071,45,0.666,46,0.881,52,1.08,55,0.714,56,0.775,69,0.86,75,0.005,76,1.598,80,0.005,85,1.252,86,1.381,88,2.546,91,2.345,96,1.373,99,0.31,104,0.17,111,1.651,112,1.002,113,1.455,114,1.229,127,2.34,129,0.086,132,0.269,141,0.616,155,1.298,159,0.572,160,1.246,187,1.108,195,0.619,196,0.954,197,1.299,198,1.002,199,1.108,200,1.108,201,1.08,207,0.978,208,1.364,209,1.364,210,2.305,211,1.18,212,0.866,213,1.397,215,1.397,218,2.593,255,1.238,256,1.053,268,1.505,269,1.299,280,0.714,289,2.168,302,2.503,303,1.492,304,1.501,305,2.799,308,1.547,316,0.931,326,2.916,327,1.838,328,1.708,344,4.214,374,1.263,379,1.373,387,2.788,394,1.364,396,1.197,397,2.075,398,3.046,399,1.838,400,1.838,401,2.831,402,2.075,403,1.991,405,2.998,406,1.575,407,2.862,410,3.068,411,1.614,412,2.292,414,1.954,416,3.47,425,2.409,426,2.599,427,1.838,428,1.652,431,2.431,432,1.911,433,2.862,434,1.651,441,2.799,443,2.681,444,1.954,447,2.862,448,2.691,449,1.805,450,1.709,452,1.268,456,1.614,457,2.296,458,2.181,459,2.961,463,1.838,466,3.56,467,2.418,468,2.418,470,2.181,471,2.431,473,0.543,474,1.801,475,1.108,476,2.113,477,1.108,478,1.108,479,1.002,480,1.108,481,0.978,482,1.92,483,1.002,484,1.108,485,1.397,486,1.92,487,1.002,488,1.053,489,1.108,490,1.002,491,1.108,492,1.002,493,2.092,494,1.108,495,1.002,496,1.108,497,1.002,498,1.002,499,1.108,500,1.002,501,1.08,502,1.027,503,1.108,504,1.912,505,1.622,506,0.978,507,1.002,508,1.002,509,1.108,510,1.002,511,1.92,512,1.002,513,1.505,514,1.622,515,0.978,516,1.002,517,0.978,518,0.825,519,1.108,520,0.978,521,0.954,522,1.002,523,1.108,524,1.002,525,1.108,526,1.027,527,1.108,528,1.002,529,1.331,530,1.002,531,1.468,532,1.002,533,1.108,534,1.002,535,1.364,536,1.108,537,1.002,538,1.108,539,1.108,588,5.827,611,2.069,628,2.181,643,2.418,644,1.709,677,1.027,689,1.505,690,1.97,696,2.131,717,1.753,727,2.431,731,1.991,732,3.378,733,2.296,740,2.839,745,3.56,748,2.181,752,2.296,753,2.296,800,3.15,802,3.98,804,3.185,889,2.944,1107,1.364,1152,3.797,1222,3.363,1227,2.592,1244,6.281,1493,2.431,1543,4.213,1630,2.794,1637,2.592,1638,2.794,1639,2.592,1922,2.592,1954,1.991,1995,6.281,1996,2.794,1997,5.311,1998,4.489,1999,7.058,2000,5.311,2001,5.091,2002,5.311,2003,5.091,2004,3.476,2005,5.091,2006,5.091,2007,3.476,2008,7.058,2009,5.091,2010,5.091,2011,5.091,2012,4.489,2013,4.093,2014,4.093,2015,4.489,2016,5.091,2017,5.091,2018,3.476,2019,3.065,2020,2.081,2021,3.476,2022,5.091,2023,3.476,2024,3.606,2025,4.213,2026,3.56,2027,4.489,2028,5.091,2029,4.093,2030,2.794,2031,3.065,2032,2.592,2033,4.489,2034,6.89,2035,3.56,2036,3.195,2037,2.794,2038,3.476,2039,5.091,2040,3.476,2041,3.065,2042,3.476,2043,3.476]],["title/modules/LeftSidebarModule.html",[540,0.636,555,3.076]],["body/modules/LeftSidebarModule.html",[3,0.12,4,0.146,5,0.107,6,0.094,43,0.01,75,0.007,80,0.007,99,0.352,104,0.288,129,0.146,132,0.215,141,1.29,211,0.764,321,1.617,422,1.504,449,1.24,473,0.921,504,2.608,540,0.852,542,1.658,543,1.699,544,2.453,545,1.785,546,1.699,547,2.453,555,6.418,558,2.261,559,1.699,561,2.319,565,2.205,571,3.046,572,2.327,588,4.394,759,2.573,760,1.977,765,3.847,766,3.115,1563,4.394,1605,6.033,1995,4.737,2044,5.196,2045,5.196,2046,5.196,2047,5.196,2048,5.699,2049,6.033,2050,6.225,2051,5.196,2052,5.849,2053,4.737,2054,6.416,2055,5.196,2056,6.416,2057,5.892,2058,5.892,2059,5.892,2060,3.893,2061,4.737,2062,7.275,2063,4.394,2064,5.892,2065,4.394,2066,5.196,2067,5.196]],["title/interfaces/Message.html",[128,0.284,1071,1.898]],["body/interfaces/Message.html",[0,1.819,3,0.089,4,0.22,5,0.079,6,0.07,11,0.585,18,0.423,19,0.636,20,1.983,35,0.778,40,1.307,41,0.858,43,0.01,45,0.696,46,1.039,47,1.585,48,1.296,55,1.584,56,0.914,71,1.967,75,0.006,80,0.006,85,0.778,96,3.446,99,0.266,104,0.214,112,1.265,114,1.551,128,0.387,129,0.198,132,0.219,133,1.546,138,1.013,140,1.367,154,2.972,159,1.385,160,1.07,194,1.119,198,1.973,204,1.783,205,3.058,212,1.496,228,2.234,277,1.684,280,0.901,350,1.731,394,1.175,428,1.093,650,3.227,793,2.084,1045,3.058,1053,2.673,1056,3.913,1066,2.319,1067,4.226,1071,3.959,1086,2.951,1088,2.898,1107,1.175,1112,2.898,1128,3.966,1275,2.898,1316,3.966,1334,4.56,1341,4.925,1354,2.411,1378,4.199,1541,2.753,1551,2.753,1552,3.768,1575,2.319,1617,3.594,1624,3.543,1675,2.753,1752,4.097,1808,4.296,1860,3.068,1869,3.068,1872,3.068,1893,2.753,2068,2.898,2069,4.619,2070,3.618,2071,4.48,2072,3.966,2073,4.477,2074,2.626,2075,5.147,2076,3.271,2077,3.271,2078,4.296,2079,3.271,2080,5.391,2081,4.199,2082,2.898,2083,2.898,2084,4.199,2085,3.068,2086,3.271,2087,4.477,2088,3.271,2089,2.753,2090,3.271,2091,3.271,2092,3.271,2093,4.477,2094,3.068,2095,3.271,2096,3.271,2097,3.271,2098,4.477,2099,3.271,2100,4.477,2101,3.068,2102,4.787,2103,3.271,2104,3.271,2105,3.271,2106,3.271,2107,2.753,2108,3.271,2109,3.271,2110,5.104,2111,3.271,2112,3.271,2113,3.271,2114,3.271,2115,3.068,2116,3.271,2117,3.271,2118,3.271,2119,3.271]],["title/classes/MessageChannel.html",[132,0.161,1086,2.163]],["body/classes/MessageChannel.html",[0,1.681,3,0.08,4,0.22,5,0.071,6,0.128,11,0.986,18,0.377,19,0.587,20,2.073,25,1.45,35,0.984,38,1.92,40,1.412,41,0.766,42,1.704,43,0.01,44,0.96,45,0.713,46,1.329,47,1.541,48,1.639,55,1.709,56,0.981,71,1.96,75,0.006,80,0.006,85,0.984,86,0.766,96,3.552,99,0.251,104,0.191,112,1.129,114,1.385,128,0.358,129,0.191,132,0.203,133,1.483,138,0.936,140,1.362,154,2.616,159,1.35,160,1.007,198,1.857,204,1.591,205,2.825,212,1.382,228,1.994,277,1.503,280,0.804,350,1.129,394,1.049,428,1.382,650,3.096,793,1.86,1045,2.825,1053,2.469,1056,3.938,1066,2.932,1067,4.347,1071,3.951,1086,3.166,1088,2.586,1107,1.049,1112,2.586,1128,3.664,1275,3.664,1316,3.664,1334,4.622,1341,4.821,1354,3.049,1378,3.879,1541,3.481,1551,2.457,1552,3.481,1575,2.07,1617,3.32,1624,3.399,1675,2.457,1735,3.147,1752,4.597,1808,4.82,1860,2.738,1869,3.879,1872,3.879,1893,4.042,2068,2.586,2069,4.641,2070,3.635,2071,4.341,2072,2.586,2073,2.92,2074,2.344,2075,5.523,2076,2.92,2077,2.92,2078,4.042,2079,2.92,2080,5.172,2081,3.879,2082,2.586,2083,2.586,2084,3.879,2085,2.738,2086,4.136,2087,5.515,2088,4.136,2089,3.481,2090,4.136,2091,2.92,2092,2.92,2093,4.136,2094,3.879,2095,4.136,2096,5.225,2097,2.92,2098,5.225,2099,4.136,2100,4.136,2101,3.879,2102,5.371,2103,4.136,2104,2.92,2105,5.225,2106,2.92,2107,2.457,2108,2.92,2109,2.92,2110,4.803,2111,2.92,2112,2.92,2113,2.92,2114,2.92,2115,2.738,2116,2.92,2117,2.92,2118,2.92,2119,2.92,2120,5.546,2121,5.546,2122,5.546,2123,3.915,2124,5.546,2125,3.915,2126,3.915,2127,3.915,2128,3.915,2129,3.915]],["title/injectables/MessageService.html",[0,1.333,1053,1.958]],["body/injectables/MessageService.html",[0,1.75,2,2.483,3,0.084,4,0.217,5,0.075,6,0.124,11,0.886,18,0.4,19,0.612,20,2.098,25,1.51,35,1.025,38,1.838,40,1.373,41,1.13,42,1.405,43,0.01,44,0.792,45,0.682,46,1.243,47,1.639,48,1.226,55,1.649,56,1.012,71,1.696,75,0.006,80,0.006,85,1.025,86,0.812,96,3.438,99,0.259,104,0.203,112,1.196,114,1.467,128,0.373,129,0.194,132,0.211,133,1.515,138,0.975,140,1.424,154,2.482,159,1.368,160,1.039,198,1.916,204,1.686,205,2.943,212,1.439,228,3.661,277,2.218,280,0.852,350,1.196,394,1.111,428,1.033,650,3.164,793,1.971,1045,3.385,1053,3.364,1056,4.001,1066,2.193,1067,4.279,1071,3.953,1086,3.267,1088,3.817,1107,1.111,1112,3.817,1128,3.817,1275,2.741,1316,3.817,1334,4.482,1341,4.69,1354,2.28,1378,4.04,1541,2.603,1551,2.603,1552,3.625,1575,2.193,1617,3.458,1624,3.596,1675,4.171,1752,3.978,1808,4.171,1860,4.04,1869,2.901,1872,2.901,1893,2.603,2068,2.741,2069,4.171,2070,3.267,2071,4.154,2072,2.741,2073,3.094,2074,2.483,2075,5.284,2076,3.094,2077,3.094,2078,4.742,2079,3.094,2080,5.725,2081,4.04,2082,2.741,2083,2.741,2084,4.04,2085,2.901,2086,3.094,2087,4.308,2088,3.094,2089,2.603,2090,3.094,2091,3.094,2092,3.094,2093,4.308,2094,2.901,2095,3.094,2096,3.094,2097,3.094,2098,4.308,2099,3.094,2100,4.308,2101,2.901,2102,4.648,2103,3.094,2104,3.094,2105,3.094,2106,3.094,2107,3.625,2108,3.094,2109,3.094,2110,4.956,2111,3.094,2112,3.094,2113,3.094,2114,3.094,2115,4.04,2116,3.094,2117,4.308,2118,4.308,2119,3.094,2130,5.094,2131,4.148,2132,5.776,2133,4.148,2134,4.148,2135,4.148]],["title/interfaces/MessageServiceConfig.html",[128,0.284,2078,2.761]],["body/interfaces/MessageServiceConfig.html",[0,1.832,3,0.09,4,0.217,5,0.08,6,0.07,11,0.591,18,0.427,19,0.64,20,1.989,35,0.786,40,1.314,41,0.868,43,0.01,45,0.667,46,1.046,47,1.611,48,1.31,55,1.589,56,0.921,71,1.756,75,0.006,80,0.006,85,0.786,96,3.451,99,0.268,104,0.216,112,1.278,114,1.568,128,0.39,129,0.198,132,0.221,133,1.551,138,1.02,140,1.372,154,2.57,159,1.388,160,1.076,194,1.131,198,1.984,204,1.802,205,3.08,212,1.506,228,2.258,277,1.702,280,1.414,350,1.278,394,1.188,428,1.104,650,3.239,793,2.106,1045,3.08,1053,2.692,1056,3.877,1066,2.344,1067,4.267,1071,3.942,1086,2.973,1088,2.929,1107,1.62,1112,2.929,1128,3.995,1275,2.929,1316,3.995,1334,4.432,1341,4.765,1354,2.437,1378,4.229,1541,2.782,1551,2.782,1552,3.795,1575,3.197,1617,3.62,1624,3.67,1675,2.782,1752,4.12,1808,4.319,1860,3.1,1869,3.1,1872,3.1,1893,2.782,2068,2.929,2069,4.319,2070,3.383,2071,4.253,2072,2.929,2073,3.306,2074,2.654,2075,5.17,2076,3.306,2077,3.306,2078,4.64,2079,4.51,2080,5.584,2081,5.411,2082,2.929,2083,2.929,2084,4.229,2085,3.1,2086,3.306,2087,4.51,2088,3.306,2089,2.782,2090,3.306,2091,3.306,2092,3.306,2093,4.51,2094,3.1,2095,3.306,2096,3.306,2097,3.306,2098,4.51,2099,3.306,2100,4.51,2101,3.1,2102,4.813,2103,3.306,2104,3.306,2105,3.306,2106,3.306,2107,2.782,2108,3.306,2109,3.306,2110,5.133,2111,3.306,2112,3.306,2113,3.306,2114,3.306,2115,3.1,2116,3.306,2117,3.306,2118,3.306,2119,3.306]],["title/interfaces/MetaDataField.html",[128,0.284,2136,3.281]],["body/interfaces/MetaDataField.html",[3,0.14,4,0.171,5,0.125,6,0.11,18,0.665,19,0.847,43,0.009,45,0.762,69,1.16,75,0.008,80,0.008,86,1.7,128,0.445,129,0.199,155,3.243,194,1.76,207,1.94,2136,6.296,2137,5.544,2138,5.544]],["title/interfaces/ModelStateModel.html",[128,0.284,2139,2.906]],["body/interfaces/ModelStateModel.html",[0,1.096,3,0.045,4,0.055,5,0.04,6,0.036,8,0.995,11,0.298,15,2.064,16,0.858,18,0.215,19,0.383,20,1.684,22,2.486,23,0.812,29,0.964,35,0.396,37,2.736,40,0.427,41,0.437,43,0.01,44,1.025,45,0.766,46,1.066,47,0.691,48,0.66,49,1.28,50,1.181,53,4.131,56,1.227,65,0.964,69,1.025,71,1.164,75,0.004,80,0.004,85,0.396,88,0.858,90,2.154,91,1.28,96,3.206,99,0.304,102,1.28,104,0.109,105,2.323,106,1.562,107,0.964,108,0.964,109,0.908,112,0.644,113,1.515,114,0.79,119,1.402,121,1.429,122,1.429,123,0.858,124,0.812,125,1.389,127,1.663,128,0.294,129,0.161,131,0.936,132,0.082,133,1.355,138,1.37,140,1.272,141,0.642,148,3.447,154,2.839,155,2.423,159,1.3,160,1.269,161,0.964,162,1.027,172,1.476,173,1.476,176,1.563,181,0.79,183,1.563,194,0.57,211,0.469,244,1.183,245,1.351,255,1.578,256,2.367,258,2.391,280,1.183,283,1.28,289,1.714,303,0.871,321,0.613,344,1.913,350,1.66,374,2.606,379,2.833,382,3.096,391,1.476,394,1.739,397,0.629,402,1.571,406,1.506,425,3.057,428,1.863,434,2.166,444,1.389,449,1.297,452,1.297,456,0.969,493,1.917,518,1.855,521,0.993,535,0.599,618,1.611,667,3.573,674,2.073,679,1.471,680,0.882,681,0.858,682,0.858,685,2.411,691,1.968,695,0.908,696,3.184,699,1.098,771,1.779,782,1.228,788,1.338,792,1.228,793,1.061,796,1.228,798,1.402,799,1.027,802,3.738,803,1.476,804,1.181,805,1.663,806,1.061,807,1.28,827,1.779,855,4.614,856,4.614,862,4,866,1.28,873,2.66,875,1.476,889,2.24,890,1.402,891,1.402,902,4.614,910,4.241,912,1.402,913,1.402,914,1.402,917,3.013,933,2.073,977,4.842,989,3.447,990,2.73,991,1.28,997,0.812,1004,1.402,1011,1.476,1012,1.402,1014,1.476,1018,1.476,1049,1.228,1056,2.096,1079,3.211,1107,1.222,1187,4.605,1222,3.013,1231,5.395,1232,2.391,1414,1.338,1508,2.612,1517,1.28,1521,1.28,1556,3.389,1559,4.028,1615,2.271,1618,3.189,1619,4.131,1620,3.715,1621,3.568,1624,2.833,2020,1.338,2024,3.885,2025,4.539,2026,1.563,2070,2.242,2071,2.507,2107,1.402,2139,2.391,2140,1.476,2141,2.909,2142,4.614,2143,4.356,2144,4.613,2145,2.391,2146,4.177,2147,4.214,2148,3.29,2149,3.401,2150,4,2151,4.311,2152,2.271,2153,2.699,2154,1.402,2155,1.402,2156,1.796,2157,1.796,2158,6.416,2159,1.796,2160,2.166,2161,1.796,2162,1.28,2163,1.28,2164,1.666,2165,2.862,2166,1.796,2167,2.271,2168,1.666,2169,1.796,2170,1.796,2171,1.796,2172,2.271,2173,4.959,2174,1.796,2175,1.796,2176,1.796,2177,1.796,2178,1.796,2179,1.796,2180,1.796,2181,1.796,2182,1.796,2183,1.796,2184,1.796,2185,1.796,2186,1.796,2187,1.796,2188,1.796,2189,1.796,2190,1.796,2191,1.796,2192,1.796,2193,1.796,2194,1.796,2195,1.796,2196,1.796,2197,1.796,2198,1.666,2199,1.796,2200,1.796,2201,1.796,2202,1.796,2203,1.796,2204,5.218,2205,2.909,2206,1.796,2207,4.214,2208,1.796,2209,2.909,2210,3.666,2211,1.796,2212,5.198,2213,1.796,2214,1.796,2215,1.796,2216,1.796,2217,1.796,2218,1.796,2219,1.796,2220,1.796,2221,1.796,2222,1.796,2223,1.796,2224,1.796,2225,1.796,2226,1.796,2227,1.796,2228,1.796,2229,1.796,2230,1.666,2231,3.666,2232,4.214,2233,1.796,2234,1.796,2235,1.796,2236,1.796,2237,1.796,2238,1.796,2239,1.796,2240,1.796,2241,1.796,2242,1.796,2243,1.796,2244,1.796,2245,2.909,2246,1.796,2247,1.796,2248,1.796,2249,1.796,2250,1.796,2251,1.796,2252,1.796,2253,1.796,2254,3.189,2255,1.796,2256,1.796,2257,1.796,2258,1.796,2259,1.796,2260,1.796,2261,1.796,2262,2.909,2263,1.796,2264,1.476,2265,2.909,2266,2.909,2267,2.909,2268,1.796,2269,1.796,2270,1.796,2271,1.796,2272,1.796,2273,1.796,2274,1.796,2275,1.796,2276,1.796,2277,1.796,2278,1.796,2279,1.796,2280,1.796,2281,1.796,2282,1.796,2283,1.796,2284,2.166,2285,1.796,2286,1.796,2287,1.796,2288,1.338,2289,1.796,2290,4.214,2291,1.338,2292,1.796,2293,1.796,2294,1.796,2295,1.796,2296,1.796,2297,1.796,2298,2.909,2299,2.699,2300,1.796,2301,1.796,2302,1.796,2303,1.796]],["title/components/NameInputComponent.html",[195,0.452,506,1.237]],["body/components/NameInputComponent.html",[3,0.072,4,0.088,5,0.094,6,0.134,11,0.815,12,1.291,18,0.343,19,0.549,20,1.522,25,1.355,32,2.74,35,0.632,38,2.03,40,0.99,41,1.014,42,1.486,43,0.01,44,1.259,45,0.71,46,1.057,47,0.99,48,2.199,52,1.107,55,1.255,56,0.931,69,0.996,75,0.005,76,2.382,80,0.005,85,1.319,86,1.595,99,0.238,104,0.174,128,0.23,129,0.129,132,0.272,133,0.714,138,0.601,140,1.464,141,0.919,159,1.005,160,1.114,195,0.788,196,0.978,197,1.323,198,1.027,199,1.135,200,1.135,201,1.107,207,1.002,208,1.389,209,1.389,210,2.306,211,1.179,212,0.888,213,1.423,215,1.423,255,0.866,268,2.603,269,1.712,303,1.167,304,0.888,316,0.954,328,2.251,329,3.769,330,3.769,350,1.027,388,1.815,396,1.227,397,1.002,398,1.537,402,1.227,405,1.448,406,1.355,407,1.692,411,1.637,412,1.107,426,2.237,428,0.888,443,1.586,449,1.091,452,1.091,456,0.954,467,1.692,468,1.692,473,0.557,474,1.819,475,1.135,476,2.138,477,1.135,478,1.135,479,1.027,480,1.135,481,1.002,482,1.947,483,1.027,484,1.135,485,1.423,486,1.947,487,1.027,488,1.08,489,1.135,490,1.027,491,1.135,492,1.027,493,0.978,494,1.135,495,1.027,496,1.135,497,1.027,498,1.027,499,1.135,500,1.027,501,1.107,502,1.053,503,1.135,504,1.027,505,1.652,506,1.887,507,1.027,508,1.027,509,1.135,510,1.027,511,1.947,512,1.027,513,1.532,514,1.652,515,1.002,516,1.027,517,1.002,518,0.846,519,1.135,520,1.002,521,0.978,522,1.027,523,1.135,524,1.027,525,1.135,526,1.053,527,1.135,528,1.027,529,1.355,530,1.027,531,1.494,532,1.027,533,1.135,534,1.027,535,1.389,536,1.135,537,1.027,538,1.135,539,1.135,570,3.502,600,1.537,611,2.107,670,2.133,676,2.484,677,1.053,678,2.107,679,2.727,680,1.407,681,1.368,682,2.346,687,3.424,688,4.037,689,1.532,690,1.998,695,2.484,696,2.17,697,4.474,698,3.103,699,3.657,703,2.491,704,2.354,705,2.236,707,2.657,716,2.462,717,1.785,718,1.883,719,3.141,720,4.57,743,2.864,744,2.657,745,2.491,997,2.438,1577,3.298,1578,2.902,2060,5.567,2304,6.284,2305,4.57,2306,4.57,2307,5.387,2308,5.387,2309,5.387,2310,5.387,2311,5.183,2312,5.387,2313,5.183,2314,6.381,2315,5.183,2316,4.57,2317,3.562,2318,3.865,2319,4.037,2320,3.141,2321,6.77,2322,6.56,2323,6.56,2324,3.919,2325,3.562,2326,3.919,2327,3.562,2328,6.286,2329,3.562,2330,3.562,2331,3.562,2332,2.864,2333,2.236,2334,4.912,2335,4.57,2336,3.141,2337,3.141,2338,3.141,2339,3.141,2340,4.57,2341,3.141,2342,3.141,2343,3.141]],["title/modules/NameInputModule.html",[540,0.636,2048,2.906]],["body/modules/NameInputModule.html",[3,0.131,4,0.16,5,0.117,6,0.103,43,0.01,44,0.885,75,0.008,80,0.008,99,0.343,104,0.315,129,0.16,132,0.236,422,1.649,473,1.01,506,2.574,540,0.934,542,1.817,543,1.863,544,2.553,545,1.958,546,1.863,547,2.553,558,2.391,559,1.863,561,2.059,565,2.331,758,5.194,759,2.721,760,2.168,761,5.083,762,4.268,765,4.068,766,3.416,768,5.194,2048,5.886,2060,4.268,2304,4.818,2333,4.055,2344,5.697,2345,5.697,2346,5.697,2347,6.185,2348,6.185]],["title/interfaces/OrganConfig.html",[128,0.284,1615,2.761]],["body/interfaces/OrganConfig.html",[3,0.117,4,0.144,5,0.105,6,0.092,14,3.952,18,0.557,19,0.761,43,0.01,44,1.122,45,0.739,46,1.485,56,1.095,69,1.175,75,0.007,80,0.007,82,5.028,99,0.305,104,0.282,112,1.666,128,0.464,129,0.203,133,1.159,138,0.975,140,1.025,194,1.475,211,0.75,218,2.944,219,3.627,220,3.627,222,3.311,224,3.177,244,2.559,280,1.682,321,1.586,328,2.412,329,3.801,330,3.801,350,1.666,425,2.1,449,1.647,452,1.647,465,2.219,612,3.46,613,3.627,614,4.646,615,4.31,616,4.646,617,3.627,618,2.573,619,4.646,620,4.31,989,3.428,997,2.1,1042,4.512,1043,4.042,1438,5.836,1440,4.684,1445,5.836,1446,5.836,1479,5.836,1613,4.042,1614,3.818,1615,4.911,1617,4.304,1618,5.726,1619,4.329,1620,4.302,1621,4.302,1622,5.096,1623,4.31,1624,2.656,1625,4.646,1626,5.096]],["title/interfaces/OrganData.html",[128,0.284,2291,2.633]],["body/interfaces/OrganData.html",[0,1.671,3,0.079,4,0.096,5,0.07,6,0.062,15,2.179,16,1.491,18,0.374,19,0.584,20,1.739,22,1.27,29,1.676,35,0.689,43,0.01,44,0.756,45,0.579,46,1.208,47,0.742,55,1.133,56,0.592,65,1.676,69,1.125,71,1.782,75,0.006,80,0.006,85,0.689,90,2.044,96,2.178,99,0.335,102,2.268,104,0.19,106,2.38,107,1.676,108,1.676,109,1.579,112,1.12,113,1.626,114,1.374,118,2.135,121,2.178,122,2.178,123,1.491,124,1.411,125,2.117,127,2.535,128,0.356,129,0.173,131,1.626,132,0.142,133,1.665,138,1.491,148,5.079,159,1.148,160,0.607,161,1.676,162,1.785,187,2.044,194,0.991,211,0.832,244,1.803,245,2.059,256,1.177,260,2.325,277,2.117,321,1.066,350,1.59,370,1.909,372,3.153,374,2.33,376,3.525,379,2.533,381,2.225,382,2.767,397,1.093,402,1.338,425,3.184,449,1.612,452,1.612,465,1.491,612,2.325,643,1.845,644,1.909,647,1.909,648,1.909,699,1.909,771,2.711,774,4.025,775,2.566,776,2.438,781,4.025,782,3.525,786,2.438,790,3.644,796,2.135,799,1.785,805,1.785,806,1.845,827,1.909,828,2.325,839,3.16,862,3.16,866,3.999,889,2.976,905,2.438,916,2.438,918,2.566,920,2.566,924,2.566,925,2.566,933,2.225,949,2.438,952,2.566,955,2.438,989,3.478,1042,3.461,1049,2.135,1183,1.909,1188,3.032,1440,2.325,1556,3.032,1619,4.391,1620,4.211,1621,4.211,2071,3.032,2142,3.644,2144,3.16,2146,4.05,2152,2.438,2162,2.225,2163,2.225,2264,3.644,2291,3.839,2349,2.716,2350,2.716,2351,3.857,2352,2.897,2353,5.612,2354,2.897,2355,5.927,2356,3.122,2357,3.122,2358,2.897,2359,3.122,2360,3.122,2361,3.122,2362,3.122,2363,3.122,2364,3.122,2365,3.122,2366,3.122,2367,3.122,2368,2.716,2369,4.434,2370,4.434,2371,4.434,2372,4.434,2373,4.434,2374,4.434,2375,2.897,2376,3.122,2377,3.122,2378,3.122,2379,3.122,2380,3.122,2381,3.122,2382,3.122,2383,3.122,2384,3.122,2385,3.122,2386,3.122,2387,4.113,2388,3.122,2389,3.122,2390,3.122,2391,3.122,2392,5.156,2393,5.156,2394,3.122,2395,3.122,2396,3.122,2397,2.897,2398,2.897,2399,2.897,2400,3.122,2401,4.434,2402,4.113,2403,3.122,2404,3.122,2405,3.122,2406,3.122,2407,4.434,2408,3.122,2409,3.122,2410,3.122,2411,3.122,2412,3.122,2413,2.897,2414,3.122,2415,3.122,2416,3.122,2417,3.122,2418,3.122,2419,3.122,2420,3.122,2421,3.122,2422,1.909,2423,3.122,2424,3.122,2425,3.122,2426,3.122,2427,3.122,2428,3.122,2429,3.122,2430,3.122,2431,3.122,2432,3.122,2433,3.122,2434,3.122,2435,4.434,2436,3.122,2437,3.122]],["title/injectables/PageState.html",[0,1.333,91,1.556]],["body/injectables/PageState.html",[0,1.399,2,1.825,3,0.062,4,0.076,5,0.055,6,0.138,11,0.937,14,3.417,15,2.157,16,1.772,18,0.294,19,0.489,20,1.873,22,0.997,23,2.553,25,1.207,29,2.682,32,2.441,35,0.819,38,2.109,40,0.882,41,0.903,42,1.709,43,0.01,44,1.12,45,0.634,46,1.216,47,0.882,52,2.183,53,4.322,55,1.712,56,1.296,65,1.992,69,1.097,75,0.005,80,0.005,85,1.246,86,1.56,91,1.633,96,2.969,99,0.315,102,1.633,104,0.149,105,3.166,106,1.992,107,1.315,108,1.315,109,1.239,111,1.448,112,0.879,113,1.276,114,1.078,121,1.823,122,1.823,123,1.17,124,1.107,125,1.17,128,0.298,129,0.138,131,1.276,132,0.111,133,1.464,138,1.185,141,0.819,154,3.084,159,1.099,160,1.344,161,1.315,162,1.401,181,1.078,187,1.471,193,2.132,211,0.599,222,4.844,244,2.183,245,2.321,250,1.315,280,1.66,289,2.386,302,2.739,303,1.064,304,1.388,305,3.063,321,0.837,328,2.743,329,2.946,330,2.946,381,1.746,394,2.19,613,4.191,617,4.191,625,3.228,647,1.498,648,1.498,771,2.739,792,3.063,793,1.448,799,1.401,800,2.953,801,1.913,889,2.025,1045,1.553,1079,3.338,1107,0.817,1183,1.498,1188,2.538,1240,2.352,1289,2.897,1578,2.193,1614,2.014,1624,2.122,2089,1.913,2146,2.441,2154,1.913,2155,1.913,2160,1.825,2162,1.746,2163,1.746,2173,4.924,2212,3.901,2284,1.825,2319,3.05,2324,2.538,2326,2.538,2422,3.454,2438,2.273,2439,3.711,2440,5.606,2441,4.642,2442,6.187,2443,4.997,2444,4.997,2445,4.997,2446,4.616,2447,4.997,2448,4.616,2449,4.616,2450,4.616,2451,4.616,2452,6.497,2453,4.479,2454,6.307,2455,3.048,2456,3.897,2457,3.048,2458,3.048,2459,3.048,2460,3.048,2461,3.048,2462,5.772,2463,2.897,2464,4.997,2465,3.048,2466,3.711,2467,3.048,2468,4.635,2469,6.097,2470,3.048,2471,3.048,2472,3.711,2473,3.048,2474,3.711,2475,3.443,2476,3.711,2477,3.048,2478,3.711,2479,3.681,2480,3.048,2481,4.98,2482,3.711,2483,3.048,2484,3.443,2485,3.711,2486,3.048,2487,3.711,2488,3.048,2489,3.711,2490,3.048,2491,3.711,2492,3.048,2493,3.711,2494,3.048,2495,3.711,2496,3.048,2497,3.048,2498,3.048,2499,3.048,2500,3.048,2501,3.048,2502,3.048,2503,2.45,2504,4.155,2505,2.273,2506,2.45,2507,2.45,2508,3.336,2509,3.711,2510,2.014,2511,2.45,2512,2.45,2513,2.45,2514,2.45,2515,2.45,2516,2.45,2517,2.45,2518,2.45,2519,2.45,2520,2.45,2521,2.45,2522,2.45,2523,2.45,2524,3.711,2525,2.273,2526,2.45,2527,4.155,2528,2.45,2529,2.45,2530,3.443,2531,3.711,2532,4.155,2533,2.45,2534,2.45,2535,3.711,2536,2.45,2537,2.45,2538,2.45,2539,2.45,2540,2.45,2541,2.45,2542,3.711,2543,2.45,2544,2.45,2545,2.45,2546,4.479,2547,2.45,2548,2.132,2549,3.711,2550,2.45,2551,2.45,2552,2.45,2553,2.45,2554,2.45,2555,3.443,2556,3.443,2557,2.273,2558,2.273,2559,2.45,2560,2.45,2561,3.711,2562,2.45,2563,2.45,2564,2.45,2565,2.45]],["title/interfaces/PageStateModel.html",[128,0.284,2510,2.906]],["body/interfaces/PageStateModel.html",[0,1.602,3,0.074,4,0.091,5,0.066,6,0.058,11,0.488,14,2.906,15,2.219,16,1.406,18,0.353,19,0.56,20,1.693,22,1.729,23,2.618,29,1.58,35,0.649,40,0.699,41,0.716,43,0.01,44,0.931,45,0.715,46,0.915,47,0.699,53,4.093,55,1.275,56,1.23,65,1.58,69,1.048,75,0.005,80,0.005,86,1.214,91,1.295,96,2.966,99,0.327,102,1.87,104,0.179,105,3.462,106,2.281,107,1.58,108,1.58,109,1.488,111,1.739,112,1.056,113,1.533,114,1.295,121,2.088,122,2.088,123,1.406,124,1.33,125,1.406,128,0.341,129,0.154,131,1.533,132,0.134,133,1.552,138,1.267,141,0.649,154,2.96,159,1.186,160,1.239,161,1.58,162,1.683,181,1.295,187,1.685,193,2.56,194,0.934,211,0.686,222,4.851,244,2.222,245,1.974,250,1.58,280,1.815,289,2.531,302,3.05,303,1.185,304,1.546,305,3.411,321,1.005,328,2.841,329,3.281,330,3.281,381,2.097,394,2.163,613,3.318,617,4.713,625,3.697,647,1.8,648,1.8,771,2.599,792,3.411,793,1.739,799,1.683,800,2.511,801,2.298,889,2.255,1045,1.865,1079,2.948,1107,1.416,1183,1.8,1188,2.013,1240,1.865,1289,2.298,1578,1.739,1614,2.419,1624,1.683,2089,2.298,2146,3.593,2154,2.298,2155,2.298,2160,2.192,2162,2.097,2163,2.097,2173,4.523,2212,4.265,2284,2.192,2319,3.493,2324,2.013,2326,2.013,2422,3.05,2438,2.73,2439,2.943,2440,5.911,2441,5.115,2442,6.591,2443,2.943,2444,2.943,2445,2.943,2447,2.943,2452,6.808,2453,2.943,2454,6.675,2456,2.56,2462,5.595,2463,2.298,2464,4.25,2466,2.943,2468,3.943,2469,5.774,2472,2.943,2474,2.943,2476,2.943,2478,2.943,2479,2.419,2481,5.068,2482,2.943,2484,2.73,2485,2.943,2487,2.943,2489,2.943,2491,2.943,2493,2.943,2495,2.943,2503,2.943,2504,4.628,2505,2.73,2506,2.943,2507,2.943,2508,4.314,2509,4.25,2510,3.493,2511,2.943,2512,2.943,2513,2.943,2514,2.943,2515,2.943,2516,2.943,2517,2.943,2518,2.943,2519,2.943,2520,2.943,2521,2.943,2522,2.943,2523,2.943,2524,4.25,2525,2.73,2526,2.943,2527,4.628,2528,2.943,2529,2.943,2530,3.943,2531,4.25,2532,4.628,2533,2.943,2534,2.943,2535,4.25,2536,2.943,2537,2.943,2538,2.943,2539,2.943,2540,2.943,2541,2.943,2542,4.25,2543,2.943,2544,2.943,2545,2.943,2546,4.988,2547,2.943,2548,2.56,2549,4.25,2550,2.943,2551,2.943,2552,2.943,2553,2.943,2554,2.943,2555,3.943,2556,3.943,2557,2.73,2558,2.73,2559,2.943,2560,2.943,2561,4.25,2562,2.943,2563,2.943,2564,2.943,2565,2.943]],["title/interfaces/Person.html",[128,0.284,2508,2.633]],["body/interfaces/Person.html",[0,1.627,3,0.076,4,0.093,5,0.068,6,0.059,11,0.499,14,2.952,15,2.148,16,1.437,18,0.361,19,0.569,20,1.71,22,1.224,23,2.494,29,1.615,35,0.664,40,0.715,41,0.732,43,0.01,44,0.941,45,0.62,46,1.187,47,0.715,53,4.12,55,1.291,56,1.237,65,1.615,69,1.131,75,0.006,80,0.006,86,1.229,91,1.324,96,2.988,99,0.328,102,1.9,104,0.183,105,3.497,106,2.318,107,1.615,108,1.615,109,1.521,111,1.778,112,1.079,113,1.567,114,1.324,121,2.121,122,2.121,123,1.437,124,1.36,125,1.437,128,0.347,129,0.156,131,1.567,132,0.137,133,1.563,138,1.276,141,0.664,154,2.977,159,1.196,160,1.246,161,1.615,162,1.72,181,1.324,187,1.712,193,2.617,194,0.955,211,0.697,222,4.72,244,2.244,245,2.005,250,1.615,280,1.668,289,2.548,302,2.64,303,1.026,304,1.338,305,2.952,321,1.027,328,2.724,329,4,330,4,381,2.144,394,2.175,613,3.37,617,3.942,625,3.756,647,1.84,648,1.84,771,2.64,792,3.453,793,1.778,799,1.72,800,2.551,801,2.348,889,2.282,1045,1.906,1079,2.984,1107,1.002,1183,2.64,1188,2.057,1240,1.906,1289,2.348,1578,1.778,1614,3.548,1624,1.72,2089,3.37,2146,2.839,2154,2.348,2155,2.348,2160,2.24,2162,2.144,2163,2.144,2173,4.562,2212,4.308,2284,2.24,2319,4.802,2324,2.057,2326,2.057,2422,3.088,2438,2.791,2439,3.008,2440,5.421,2441,4.535,2442,6.265,2443,3.008,2444,3.008,2445,3.008,2447,3.008,2452,6.623,2453,3.008,2454,6.409,2456,2.617,2462,5.616,2463,2.348,2464,4.317,2466,3.008,2468,4.005,2469,5.812,2472,3.008,2474,3.008,2476,3.008,2478,3.008,2479,2.472,2481,4.685,2482,3.008,2484,2.791,2485,3.008,2487,3.008,2489,3.008,2491,3.008,2493,3.008,2495,3.008,2503,3.008,2504,4.685,2505,2.791,2506,3.008,2507,3.008,2508,4.351,2509,5.843,2510,2.472,2511,3.008,2512,3.008,2513,3.008,2514,3.008,2515,3.008,2516,3.008,2517,3.008,2518,3.008,2519,3.008,2520,3.008,2521,3.008,2522,3.008,2523,3.008,2524,4.317,2525,2.791,2526,3.008,2527,4.685,2528,3.008,2529,3.008,2530,4.005,2531,4.317,2532,4.685,2533,3.008,2534,3.008,2535,4.317,2536,3.008,2537,3.008,2538,3.008,2539,3.008,2540,3.008,2541,3.008,2542,4.317,2543,3.008,2544,3.008,2545,3.008,2546,5.05,2547,3.008,2548,2.617,2549,4.317,2550,3.008,2551,3.008,2552,3.008,2553,3.008,2554,3.008,2555,4.005,2556,4.005,2557,2.791,2558,2.791,2559,3.008,2560,3.008,2561,4.317,2562,3.008,2563,3.008,2564,3.008,2565,3.008]],["title/injectables/ReferenceDataState.html",[0,1.333,805,2.022]],["body/injectables/ReferenceDataState.html",[0,1.538,2,2.071,3,0.07,4,0.086,5,0.063,6,0.124,11,0.801,15,2.249,16,1.948,18,0.334,20,1.944,22,1.659,25,1.327,29,2.856,35,0.9,38,1.85,42,1.713,43,0.01,44,1.043,45,0.636,46,1.219,47,0.969,55,1.603,56,0.773,65,2.19,69,1.159,71,1.689,75,0.005,80,0.005,85,0.614,90,2.245,96,2.373,99,0.329,102,2.125,104,0.169,106,2.19,107,1.493,108,1.493,109,1.407,112,0.998,113,1.449,114,1.224,118,1.902,121,2.004,122,2.004,123,1.328,124,1.257,125,1.948,127,2.332,128,0.327,129,0.164,131,1.449,132,0.126,133,1.623,138,1.469,148,5.188,159,1.089,160,0.541,161,1.493,162,1.59,187,1.915,211,0.779,244,2.164,245,2.471,256,1.049,260,2.071,277,2.54,321,0.95,350,1.908,370,1.701,372,2.954,374,2.183,376,3.303,379,2.373,381,1.982,382,2.593,397,1.427,402,1.192,425,3.189,449,1.601,452,1.601,465,1.328,612,2.071,643,1.644,644,1.701,647,1.701,648,1.701,699,1.701,771,2.954,774,3.771,775,2.286,776,2.172,781,3.771,782,3.303,786,2.172,790,3.352,796,1.902,799,1.59,805,2.332,806,3.707,827,2.494,828,2.071,839,2.907,862,2.907,866,3.791,889,3.094,905,2.172,916,2.172,918,2.286,920,2.286,924,2.286,925,2.286,933,1.982,949,2.172,952,2.286,955,2.172,989,3.389,1042,4.153,1049,2.789,1183,2.494,1188,3.638,1440,2.071,1556,2.789,1619,4.279,1620,4.183,1621,4.183,2071,2.789,2142,3.352,2144,2.907,2146,4.126,2152,2.172,2162,1.982,2163,1.982,2264,3.352,2291,3.597,2349,5.457,2350,2.42,2351,3.549,2352,2.581,2353,6.117,2354,2.581,2355,5.664,2356,2.782,2357,2.782,2358,2.581,2359,2.782,2360,2.782,2361,2.782,2362,2.782,2363,2.782,2364,2.782,2365,2.782,2366,2.782,2367,2.782,2368,2.42,2369,4.079,2370,4.079,2371,4.079,2372,4.079,2373,4.079,2374,4.079,2375,3.784,2376,2.782,2377,2.782,2378,2.782,2379,2.782,2380,2.782,2381,2.782,2382,2.782,2383,5.32,2384,2.782,2385,2.782,2386,2.782,2387,3.784,2388,2.782,2389,2.782,2390,2.782,2391,4.079,2392,4.83,2393,4.83,2394,2.782,2395,2.782,2396,2.782,2397,2.581,2398,2.581,2399,2.581,2400,2.782,2401,4.079,2402,4.481,2403,2.782,2404,2.782,2405,2.782,2406,2.782,2407,5.32,2408,4.079,2409,4.079,2410,2.782,2411,2.782,2412,2.782,2413,2.581,2414,2.782,2415,2.782,2416,2.782,2417,2.782,2418,2.782,2419,2.782,2420,2.782,2421,4.079,2422,2.494,2423,4.079,2424,2.782,2425,2.782,2426,2.782,2427,2.782,2428,2.782,2429,2.782,2430,2.782,2431,2.782,2432,2.782,2433,2.782,2434,4.079,2435,4.079,2436,2.782,2437,2.782,2475,4.935,2566,5.074,2567,5.074,2568,5.074,2569,5.074,2570,3.46,2571,3.46,2572,3.46,2573,3.46,2574,3.46,2575,3.46,2576,3.46,2577,3.46]],["title/interfaces/ReferenceDataStateModel.html",[128,0.284,2368,3.076]],["body/interfaces/ReferenceDataStateModel.html",[0,1.646,3,0.077,4,0.094,5,0.069,6,0.06,15,2.162,16,1.46,18,0.366,19,0.575,20,1.723,22,1.243,29,1.641,35,0.674,43,0.01,44,0.744,45,0.801,47,0.726,55,1.116,56,0.579,65,1.641,69,1.121,71,1.765,75,0.006,80,0.006,85,0.674,90,2.02,96,2.145,99,0.334,102,2.242,104,0.186,106,2.344,107,1.641,108,1.641,109,1.546,112,1.096,113,1.592,114,1.345,118,2.09,121,2.145,122,2.145,123,1.46,124,1.382,125,2.086,127,2.497,128,0.351,129,0.172,131,1.592,132,0.139,133,1.658,138,1.487,148,5.059,159,1.137,160,0.594,161,1.641,162,1.748,187,2.02,194,0.97,211,0.822,244,1.776,245,2.028,256,1.152,260,2.276,277,2.086,321,1.044,350,1.566,370,1.869,372,3.116,374,2.303,376,3.484,379,2.503,381,2.178,382,2.735,397,1.07,402,1.31,425,3.12,449,1.455,452,1.455,465,1.46,612,2.276,643,1.806,644,1.869,647,1.869,648,1.869,699,1.869,771,2.67,774,3.978,775,2.512,776,2.386,781,3.978,782,3.484,786,2.386,790,3.589,796,2.09,799,1.748,805,1.748,806,1.806,827,1.869,828,2.276,839,3.112,862,4.19,866,3.961,889,2.961,905,2.386,916,2.386,918,2.512,920,2.512,924,2.512,925,2.512,933,2.178,949,2.386,952,2.512,955,2.386,989,3.278,1042,3.409,1049,2.09,1183,1.869,1188,2.986,1440,2.276,1556,2.986,1616,6.904,1619,4.14,1620,3.801,1621,3.801,2071,2.986,2142,4.832,2144,3.112,2146,3.656,2152,2.386,2162,2.178,2163,2.178,2264,3.589,2291,3.252,2349,2.659,2350,2.659,2351,3.799,2352,2.836,2353,5.559,2354,2.836,2355,5.879,2356,3.057,2357,3.057,2358,2.836,2359,3.057,2360,3.057,2361,3.057,2362,3.057,2363,3.057,2364,3.057,2365,3.057,2366,3.057,2367,3.057,2368,3.799,2369,5.879,2370,4.367,2371,5.879,2372,5.879,2373,5.879,2374,5.879,2375,2.836,2376,3.057,2377,3.057,2378,3.057,2379,3.057,2380,3.057,2381,3.057,2382,3.057,2383,3.057,2384,3.057,2385,3.057,2386,3.057,2387,4.051,2388,3.057,2389,3.057,2390,3.057,2391,3.057,2392,5.095,2393,5.095,2394,3.057,2395,3.057,2396,3.057,2397,2.836,2398,2.836,2399,2.836,2400,3.057,2401,4.367,2402,4.051,2403,3.057,2404,3.057,2405,3.057,2406,3.057,2407,4.367,2408,3.057,2409,3.057,2410,3.057,2411,3.057,2412,3.057,2413,2.836,2414,3.057,2415,3.057,2416,3.057,2417,3.057,2418,3.057,2419,3.057,2420,3.057,2421,3.057,2422,1.869,2423,3.057,2424,3.057,2425,3.057,2426,3.057,2427,3.057,2428,3.057,2429,3.057,2430,3.057,2431,3.057,2432,3.057,2433,3.057,2434,3.057,2435,4.367,2436,3.057,2437,3.057]],["title/components/RegistrationContentComponent.html",[195,0.452,507,1.268]],["body/components/RegistrationContentComponent.html",[3,0.058,4,0.07,5,0.079,6,0.135,11,0.911,12,1.088,15,2.275,18,0.273,19,0.462,22,2.517,23,2.585,25,1.142,35,0.775,38,2.057,40,0.834,41,0.855,42,1.572,43,0.01,44,1.144,45,0.742,46,1.118,52,0.881,55,1.548,56,1.193,69,0.691,75,0.004,80,0.004,85,1.211,86,1.171,88,2.298,91,2.117,99,0.266,104,0.138,113,1.187,114,1.003,124,1.03,129,0.07,132,0.249,133,0.568,141,0.503,155,2.414,159,1.209,160,1.148,195,0.664,196,0.778,197,1.115,198,0.817,199,0.903,200,0.903,201,0.881,207,0.797,208,1.17,209,1.17,210,2.27,211,1.16,212,0.706,213,1.199,215,1.199,246,3.29,247,3.29,250,3.253,255,1.296,256,1.323,267,2.007,268,1.291,269,1.115,280,1.581,289,0.927,302,2.147,303,1.691,304,1.491,308,1.262,316,0.759,321,0.778,326,1.624,327,1.499,328,2.008,348,3.583,394,1.829,397,1.499,398,2.583,399,1.499,400,1.499,401,2.298,405,2.433,406,1.142,407,1.347,410,1.444,411,1.427,412,1.357,414,2.894,419,1.187,425,3.012,426,1.885,427,1.499,428,1.61,430,2.372,432,1.558,433,2.299,435,1.223,436,1.944,437,2.114,441,2.929,443,1.944,444,1.677,447,2.075,449,0.597,450,2.147,452,0.597,456,0.759,470,1.779,471,1.982,473,0.443,474,1.65,475,0.903,476,1.908,477,0.903,478,0.903,479,0.817,480,0.903,481,0.797,482,1.698,483,0.817,484,0.903,485,1.199,486,1.698,487,0.817,488,0.859,489,0.903,490,0.817,491,0.903,492,0.817,493,0.778,494,0.903,495,0.817,496,0.903,497,0.817,498,0.817,499,0.903,500,0.817,501,0.881,502,0.838,503,0.903,504,0.817,505,1.392,506,0.797,507,1.726,508,0.817,509,0.903,510,0.817,511,1.698,512,0.817,513,1.291,514,1.392,515,0.797,516,0.817,517,0.797,518,1.265,519,0.903,520,0.797,521,0.778,522,0.817,523,0.903,524,0.817,525,0.903,526,0.838,527,0.903,528,0.817,529,1.142,530,0.817,531,1.259,532,0.817,533,0.903,534,0.817,535,1.17,536,0.903,537,0.817,538,0.903,539,0.903,591,5.621,672,2.225,677,0.838,689,1.291,690,1.742,696,2.859,717,1.504,731,1.624,732,2.714,737,1.873,740,1.03,741,1.697,750,3.851,976,2.114,1075,2.741,1079,3.244,1107,1.603,1120,2.885,1156,4.283,1157,3.851,1243,3.343,1258,1.982,1289,4.611,1414,2.614,1521,2.502,1545,4.076,1569,5.277,1575,1.499,1578,3.656,1619,4.303,1620,3.754,1621,4.143,1630,2.279,1640,1.779,1649,3.851,1844,2.885,1913,4.812,1920,4.186,1954,1.624,1958,1.982,2000,4.698,2020,3.189,2032,2.114,2033,4.698,2036,2.741,2146,3.762,2288,2.614,2324,3.29,2326,3.29,2422,2.147,2440,3.973,2462,2.885,2475,2.114,2479,3.52,2508,1.697,2548,1.982,2578,5.949,2579,5.949,2580,2.5,2581,5.327,2582,5.327,2583,3.52,2584,4.776,2585,4.698,2586,5.327,2587,5.7,2588,5.327,2589,5.327,2590,3.851,2591,5.985,2592,5.985,2593,4.367,2594,3.851,2595,3.851,2596,4.821,2597,4.367,2598,4.367,2599,3.851,2600,2.835,2601,3.257,2602,5.093,2603,2.835,2604,4.367,2605,4.367,2606,2.835,2607,4.367,2608,2.835,2609,3.851,2610,4.698,2611,2.835,2612,4.367,2613,3.851,2614,2.835,2615,2.835,2616,2.835,2617,2.835,2618,2.835,2619,2.835,2620,2.835,2621,3.054,2622,4.367,2623,2.835,2624,4.367,2625,4.367,2626,4.367,2627,2.835,2628,2.835,2629,1.558,2630,5.327,2631,2.5,2632,2.5,2633,2.835,2634,2.835,2635,2.835,2636,5.327,2637,2.835,2638,2.835,2639,2.835,2640,2.835,2641,2.835,2642,2.835,2643,2.835,2644,3.851,2645,2.5,2646,2.5,2647,2.835,2648,2.835,2649,2.835,2650,2.835,2651,2.5,2652,2.835,2653,2.279,2654,4.367,2655,2.835,2656,2.279,2657,2.279,2658,2.5,2659,2.5,2660,2.835,2661,2.835,2662,2.835,2663,2.5]],["title/modules/RegistrationContentModule.html",[540,0.636,2664,3.076]],["body/modules/RegistrationContentModule.html",[3,0.13,4,0.159,5,0.116,6,0.102,43,0.01,75,0.008,80,0.008,99,0.342,104,0.312,129,0.159,132,0.234,303,1.222,422,1.633,473,1,507,2.635,540,0.925,542,1.8,543,1.845,544,2.543,545,1.939,546,1.845,547,2.543,558,2.377,559,1.845,561,2.438,565,2.318,591,4.228,759,2.706,760,2.147,765,4.045,766,3.383,1948,5.055,1949,4.228,2578,4.476,2579,4.476,2664,6.309,2665,5.643,2666,5.643,2667,5.643,2668,5.643,2669,5.812,2670,6.399,2671,5.643,2672,4.476,2673,5.643,2674,5.643]],["title/components/RegistrationMetadataComponent.html",[195,0.452,508,1.268]],["body/components/RegistrationMetadataComponent.html",[3,0.064,4,0.078,5,0.122,6,0.129,11,0.9,12,1.172,15,2.239,18,0.301,19,0.498,22,2.208,23,2.578,25,1.231,35,0.835,38,1.951,40,0.899,41,0.921,42,1.642,43,0.01,44,1.137,45,0.7,46,1.388,55,1.458,56,1.154,69,1.006,75,0.005,76,2.601,80,0.005,85,0.555,86,1.483,88,2.417,91,2.227,99,0.276,104,0.153,124,2.288,129,0.078,132,0.114,133,0.627,140,1.004,141,0.555,154,2.351,155,2.351,159,1.211,160,0.984,195,0.693,196,0.858,197,1.201,198,0.902,199,0.997,200,0.997,201,0.972,207,1.9,208,1.261,209,1.261,210,2.285,211,1.164,212,0.779,213,1.292,215,1.292,236,2.332,250,2.914,255,0.76,268,1.673,269,1.201,280,0.967,303,1.693,304,0.779,316,0.838,326,1.792,327,1.653,328,2.381,350,2.046,387,2.235,388,3.44,389,3.242,396,1.077,397,1.996,398,3.408,399,3.329,400,3.329,401,2.417,402,1.077,405,2.745,406,1.646,407,3.371,411,1.516,412,1.758,425,2.056,426,3.269,428,1.682,430,1.392,433,1.35,441,2.587,443,1.392,444,1.201,447,2.236,448,3.751,449,0.658,450,1.537,452,1.325,456,0.838,459,3.32,467,3.208,468,3.208,472,3.958,473,0.489,474,1.201,475,0.997,476,2.007,477,0.997,478,0.997,479,0.902,480,0.997,481,0.88,482,1.804,483,0.902,484,0.997,485,1.292,486,1.804,487,0.902,488,0.948,489,0.997,490,0.902,491,0.997,492,0.902,493,0.858,494,0.997,495,0.902,496,0.997,497,0.902,498,1.357,499,0.997,500,0.902,501,0.972,502,0.924,503,0.997,504,0.902,505,1.5,506,0.88,507,0.902,508,1.815,509,0.997,510,0.902,511,1.804,512,0.902,513,1.391,514,1.5,515,0.88,516,0.902,517,0.88,518,0.742,519,0.997,520,0.88,521,0.858,522,0.902,523,0.997,524,0.902,525,0.997,526,0.924,527,0.997,528,0.902,529,1.48,530,0.902,531,1.357,532,0.902,533,0.997,534,0.902,535,1.261,536,0.997,537,0.902,538,0.997,539,0.997,570,2.095,615,3.51,628,3.952,643,1.486,644,1.537,676,2.301,678,1.913,696,2.636,716,2.236,731,1.792,732,2.397,733,2.066,740,1.136,747,2.514,748,1.963,749,2.332,800,2.991,989,1.971,1071,2.717,1115,4.696,1227,2.332,1243,2.954,1289,3.952,1414,2.817,1569,3.952,1577,3.095,1578,2.236,1619,3.892,1620,3.901,1621,3.901,1640,1.963,1900,2.757,1908,4.55,1913,5.919,2035,3.291,2036,3.552,2070,2.314,2148,2.954,2230,3.51,2324,3.461,2326,3.461,2332,2.514,2333,1.963,2422,1.537,2456,2.187,2462,5.609,2469,3.51,2479,3.739,2484,3.51,2508,1.872,2525,2.332,2555,4.696,2556,4.696,2557,3.51,2558,3.51,2585,4.99,2587,5.954,2590,4.15,2595,4.15,2599,4.15,2601,3.51,2602,5.292,2613,4.15,2631,2.757,2632,2.757,2644,2.757,2645,2.757,2646,2.757,2656,4.55,2658,2.757,2659,4.15,2672,5.683,2675,6.533,2676,2.757,2677,5.659,2678,4.706,2679,5.659,2680,6.752,2681,7.095,2682,4.706,2683,4.706,2684,4.706,2685,3.127,2686,3.127,2687,3.127,2688,6.296,2689,4.706,2690,4.706,2691,3.127,2692,4.15,2693,3.127,2694,4.706,2695,3.127,2696,3.127,2697,3.127,2698,4.706,2699,5.659,2700,4.706,2701,4.15,2702,4.706,2703,3.127,2704,3.127,2705,3.127,2706,3.127,2707,3.127,2708,4.706,2709,3.127,2710,3.127,2711,3.127,2712,3.127,2713,3.127,2714,5.659,2715,5.954,2716,4.99,2717,3.127,2718,2.757,2719,2.757,2720,3.127,2721,3.127]],["title/modules/RegistrationMetadataModule.html",[540,0.636,2669,2.906]],["body/modules/RegistrationMetadataModule.html",[3,0.123,4,0.15,5,0.144,6,0.096,43,0.01,44,0.826,75,0.008,80,0.008,99,0.353,104,0.294,129,0.15,132,0.22,303,1.152,422,1.539,473,0.943,498,1.738,508,2.616,540,0.872,542,1.696,543,1.738,544,2.478,545,1.827,546,1.738,547,2.478,558,2.293,559,1.738,561,2.352,565,2.236,569,3.984,570,2.684,759,2.61,760,2.023,761,4.876,762,3.984,765,4.216,766,3.188,767,5.161,1610,5.933,1611,4.847,1898,4.497,1942,6.066,1948,4.876,1949,3.984,2048,5.731,2060,3.984,2061,4.847,2333,3.784,2347,5.933,2348,5.933,2669,5.969,2672,4.217,2675,4.847,2722,5.317,2723,6.029,2724,5.317,2725,5.317,2726,6.029,2727,6.029,2728,6.507,2729,5.317,2730,6.029]],["title/components/RegistrationModalComponent.html",[195,0.452,510,1.268]],["body/components/RegistrationModalComponent.html",[3,0.083,4,0.101,5,0.103,6,0.13,11,0.761,12,1.422,14,2.243,18,0.393,19,0.605,20,1.777,22,2.333,23,2.393,25,1.493,35,1.013,38,1.943,40,1.09,41,1.117,42,0.992,43,0.01,44,1.095,45,0.644,46,0.706,52,1.268,55,1.173,56,1.087,69,0.529,75,0.006,80,0.006,85,1.168,86,1.289,88,2.739,91,2.524,99,0.327,102,1.443,104,0.199,111,1.938,112,1.176,114,1.443,121,1.611,122,1.611,123,1.566,124,1.482,129,0.101,132,0.284,133,1.431,141,1.168,159,0.671,160,1.249,195,0.799,196,1.12,197,1.457,198,1.176,200,1.3,201,1.268,204,2.321,206,4.352,207,1.148,210,2.33,211,1.191,212,1.016,215,1.567,229,4.714,244,2.333,245,2.664,255,0.992,267,1.875,269,1.457,289,2.154,303,1.703,304,2.163,321,1.12,324,2.853,326,2.337,327,2.157,350,1.176,394,1.093,406,1.067,411,1.765,428,1.016,449,0.859,452,0.859,456,1.093,473,0.638,474,1.917,475,1.3,476,2.274,477,1.3,478,1.3,479,1.176,480,1.3,481,1.148,482,2.099,483,1.176,484,1.3,485,1.567,486,2.099,487,1.176,488,1.236,489,1.3,490,1.176,491,1.3,492,1.176,493,1.12,494,1.3,495,1.176,496,1.3,497,1.176,498,1.176,499,1.3,500,1.176,501,1.268,502,1.206,503,1.3,504,1.176,505,1.82,506,1.148,507,1.646,508,1.176,509,1.3,510,2.057,511,2.099,512,1.176,513,1.687,514,1.82,515,1.148,516,1.176,517,1.148,518,0.969,519,1.3,520,1.148,521,1.12,522,1.176,523,1.3,524,1.176,525,1.3,526,1.206,527,1.3,528,1.176,529,1.493,530,1.176,531,1.646,532,1.176,533,1.3,534,1.176,535,1.53,536,1.3,537,1.176,538,1.3,539,1.3,591,5.8,677,1.206,689,1.687,690,2.154,717,1.967,805,3.279,806,1.938,807,2.337,1004,4.134,1075,2.56,1241,3.772,1289,3.583,1292,3.418,1399,5.321,1545,4.975,1842,5.736,2160,2.442,2284,2.442,2413,3.043,2578,5.701,2579,2.853,2583,4.352,2629,2.243,2674,3.597,2731,2.853,2732,5.709,2733,4.258,2734,6.587,2735,7.135,2736,3.28,2737,6.037,2738,5.035,2739,5.035,2740,3.597,2741,4.258,2742,4.08,2743,4.08,2744,4.08,2745,4.08,2746,3.597,2747,3.597,2748,4.08,2749,4.08,2750,4.08,2751,5.709,2752,4.08,2753,4.08,2754,3.597,2755,3.597,2756,3.597,2757,4.08,2758,4.08,2759,4.08]],["title/modules/RegistrationModalModule.html",[540,0.636,556,3.076]],["body/modules/RegistrationModalModule.html",[3,0.13,4,0.159,5,0.116,6,0.102,43,0.01,75,0.008,80,0.008,99,0.342,104,0.312,129,0.159,132,0.234,303,1.461,422,1.633,473,1,510,2.635,540,0.925,542,1.8,543,1.845,544,2.543,545,1.939,546,1.845,547,2.543,556,6.309,558,2.377,559,1.845,561,2.438,565,2.318,571,3.203,572,2.527,591,5.055,759,2.706,760,2.147,2578,4.476,2579,4.476,2629,3.518,2664,6.152,2760,5.643,2761,5.643,2762,6.399,2763,5.643,2764,5.145,2765,4.476,2766,6.15,2767,6.399]],["title/interfaces/RegistrationStateModel.html",[128,0.284,2768,3.536]],["body/interfaces/RegistrationStateModel.html",[0,1.267,1,2.504,3,0.085,4,0.067,5,0.076,6,0.043,8,2.586,9,1.771,11,0.357,12,1.569,14,1.474,15,2.444,16,1.029,18,0.258,19,0.443,20,1.954,22,2.773,23,2.85,29,1.157,33,5.007,35,0.742,37,2.993,40,0.512,41,0.525,43,0.01,44,0.796,45,0.651,46,0.723,47,0.799,48,1.236,49,2.396,50,2.211,53,3.33,55,1.193,56,1.017,59,1.875,65,1.157,69,0.983,75,0.004,80,0.004,83,3.119,86,1.535,88,1.606,90,2.222,91,1.479,96,2.927,99,0.33,102,1.819,104,0.131,105,3.775,106,1.805,107,1.157,108,1.157,109,1.09,111,1.273,112,0.773,113,1.751,114,0.948,117,2.155,118,1.474,119,1.682,128,0.173,129,0.104,131,1.122,132,0.098,133,1.658,138,1.384,139,1.605,140,1.03,141,0.475,154,2.169,155,2.929,159,1.308,160,0.804,161,1.157,162,1.232,163,1.771,164,1.536,165,1.771,166,1.771,167,1.682,168,1.771,169,1.771,172,1.771,173,1.771,180,1.999,184,2.155,187,1.639,194,0.684,207,1.961,211,0.667,244,2.06,245,1.562,255,1.251,256,0.812,260,1.605,280,1.586,289,1.899,302,1.318,303,1.601,321,0.736,328,1.949,329,1.417,330,1.417,350,2.384,374,1.868,379,2.031,382,2.219,394,1.378,397,1.447,402,0.923,425,2.533,428,0.668,434,1.273,465,1.974,498,1.206,518,0.636,605,1.875,617,3.646,618,2.289,620,3.119,628,4.526,637,2.155,643,1.273,644,1.318,671,3.362,673,3.078,674,1.536,691,1.157,724,3.362,771,2.056,782,1.474,783,1.999,787,1.999,788,1.605,792,1.474,795,2.925,796,1.474,797,1.875,798,1.682,799,1.232,800,1.273,805,1.922,806,1.273,807,1.536,839,1.536,867,1.999,870,1.999,878,1.875,883,1.999,889,2.533,890,1.682,891,1.682,903,1.999,942,1.999,944,1.999,946,1.999,948,1.999,951,1.999,954,1.999,957,1.999,959,1.999,961,1.999,963,1.999,964,1.999,965,1.999,978,1.875,996,2.925,997,0.974,1012,1.682,1026,1.999,1028,1.999,1079,2.443,1093,2.925,1107,1.788,1113,3.835,1240,3.4,1241,3.838,1242,2.925,1250,3.688,1410,1.875,1508,3.328,1523,2.155,1566,2.155,1575,1.417,1578,2.993,1614,4.162,1624,1.232,1636,2.155,1662,2.155,1694,2.155,1741,2.364,1746,2.364,2020,2.504,2024,2.504,2070,1.318,2101,1.875,2139,1.771,2144,2.946,2146,2.211,2148,3.646,2153,3.119,2154,1.682,2155,1.682,2160,2.504,2165,1.682,2167,1.682,2172,2.625,2173,1.682,2212,3.646,2284,2.504,2318,3.119,2319,1.771,2324,1.474,2326,2.299,2334,2.155,2351,5.044,2352,1.999,2358,3.119,2387,1.999,2397,1.999,2398,1.999,2399,1.999,2402,1.999,2422,1.318,2456,1.875,2462,1.771,2463,3.227,2468,1.999,2504,1.999,2505,1.999,2510,1.771,2527,3.119,2532,1.999,2621,3.596,2651,2.364,2653,4.134,2746,5.122,2747,4.534,2754,5.122,2755,5.122,2756,2.364,2768,3.362,2769,2.155,2770,6.36,2771,6.299,2772,6.808,2773,6.971,2774,2.68,2775,2.68,2776,2.364,2777,2.68,2778,4.182,2779,3.688,2780,2.68,2781,2.155,2782,2.155,2783,2.68,2784,5.142,2785,5.142,2786,2.68,2787,4.67,2788,4.182,2789,2.68,2790,2.68,2791,2.68,2792,4.182,2793,2.68,2794,2.68,2795,2.68,2796,2.68,2797,2.68,2798,2.68,2799,2.68,2800,2.68,2801,2.68,2802,2.68,2803,2.68,2804,3.688,2805,2.68,2806,2.68,2807,2.68,2808,2.68,2809,2.364,2810,2.68,2811,2.68,2812,2.68,2813,2.68,2814,2.68,2815,2.68,2816,2.68,2817,2.68,2818,2.68,2819,2.68,2820,2.68,2821,2.68,2822,2.68,2823,2.68,2824,2.68,2825,2.68,2826,2.68,2827,2.68,2828,2.68,2829,2.68,2830,2.68,2831,2.68,2832,2.68,2833,2.68,2834,2.68,2835,2.68,2836,2.68,2837,2.68,2838,2.68,2839,2.68,2840,2.68,2841,2.68,2842,2.68,2843,2.68,2844,2.68,2845,2.68,2846,2.68,2847,2.68,2848,2.68,2849,2.68,2850,2.68,2851,2.68,2852,2.364,2853,2.68,2854,2.68,2855,2.68,2856,2.68,2857,2.68,2858,5.809,2859,2.68,2860,2.364,2861,2.68,2862,2.68,2863,2.68,2864,2.68,2865,4.182,2866,2.68,2867,2.68,2868,2.68,2869,2.68,2870,2.68,2871,5.142,2872,2.68,2873,2.68,2874,2.68,2875,2.155,2876,2.68,2877,2.68,2878,2.68,2879,2.68,2880,2.68,2881,2.68,2882,2.68,2883,2.68,2884,2.68,2885,2.68,2886,2.364,2887,2.68,2888,2.68,2889,2.68,2890,2.68,2891,2.68,2892,2.68,2893,2.68,2894,4.182,2895,2.68,2896,4.182,2897,2.68,2898,4.182,2899,2.68,2900,4.182,2901,2.68,2902,2.68,2903,2.364,2904,2.68,2905,2.68,2906,4.182,2907,2.68,2908,2.68,2909,2.68,2910,2.68,2911,2.68,2912,2.68,2913,5.142,2914,2.68,2915,2.68,2916,2.68,2917,4.182,2918,4.182,2919,4.182,2920,2.68,2921,2.68,2922,2.68,2923,5.142,2924,2.68,2925,2.68,2926,2.68,2927,2.68,2928,2.68,2929,2.68,2930,2.68,2931,2.68,2932,2.68,2933,2.68,2934,2.68,2935,2.68,2936,2.68,2937,2.68,2938,2.68,2939,2.68,2940,2.68,2941,2.68,2942,2.68,2943,2.68,2944,2.68,2945,2.68,2946,2.68,2947,2.68,2948,2.68,2949,2.68,2950,2.68,2951,2.68,2952,2.68,2953,2.68,2954,2.68,2955,2.68,2956,2.68,2957,2.68,2958,2.68,2959,2.68,2960,2.68,2961,2.68,2962,2.68]],["title/components/ReviewButtonComponent.html",[195,0.452,512,1.268]],["body/components/ReviewButtonComponent.html",[3,0.115,4,0.078,5,0.085,6,0.134,8,1.395,11,0.756,12,1.175,18,0.302,19,0.499,20,1.57,23,2.059,25,1.233,32,2.493,33,3.115,35,0.556,38,2.036,40,0.9,41,0.923,42,1.378,43,0.01,44,1.114,45,0.724,46,0.98,47,1.204,48,1.393,52,0.974,55,1.389,56,0.96,69,0.921,75,0.005,80,0.005,85,1.307,86,1.625,90,1.503,91,2.23,99,0.276,104,0.153,129,0.078,132,0.259,133,1.136,138,1.14,140,0.836,141,1.005,159,0.932,160,1.185,195,0.824,196,0.86,197,1.203,198,0.904,199,0.999,200,0.999,201,0.974,203,2.822,204,1.917,207,2.287,208,1.263,209,1.263,210,2.282,211,1.168,212,0.781,213,1.294,215,1.294,222,1.796,250,2.035,255,1.378,256,0.95,268,2.292,269,1.203,270,3.516,280,1.389,288,4.165,289,2.536,303,1.291,304,1.769,316,0.84,327,1.657,328,2.383,350,2.186,394,1.902,397,1.326,401,1.203,402,1.08,405,1.274,406,0.82,411,1.518,412,1.465,419,1.312,425,2.059,430,3.781,435,1.353,449,0.66,452,0.66,456,0.84,473,0.49,474,1.725,475,0.999,476,2.009,477,0.999,478,0.999,479,0.904,480,0.999,481,0.882,482,1.806,483,0.904,484,0.999,485,1.294,486,1.806,487,0.904,488,1.717,489,0.999,490,0.904,491,0.999,492,0.904,493,0.86,494,0.999,495,0.904,496,0.999,497,0.904,498,0.904,499,0.999,500,0.904,501,0.974,502,0.926,503,0.999,504,0.904,505,1.503,506,0.882,507,0.904,508,0.904,509,0.999,510,0.904,511,1.806,512,1.817,513,2.562,514,1.503,515,1.326,516,0.904,517,0.882,518,0.744,519,0.999,520,0.882,521,0.86,522,0.904,523,0.999,524,0.904,525,0.999,526,0.926,527,0.999,528,0.904,529,1.233,530,0.904,531,1.359,532,0.904,533,0.999,534,0.904,535,1.263,536,0.999,537,0.904,538,0.999,539,0.999,570,3.161,600,1.353,611,1.917,618,3.619,674,3.247,676,2.748,677,0.926,678,2.748,679,2.563,680,1.238,681,1.203,682,2.176,689,1.393,690,1.853,695,2.563,696,1.974,716,2.24,717,1.624,724,3.79,732,1.597,736,1.723,889,1.713,997,1.713,1107,2.117,1113,3.516,1115,3.516,1183,2.318,1242,5.526,1255,2.822,1290,3.79,1348,2.959,1402,3.79,1521,2.701,1531,2.071,1545,3.872,1577,2.318,1586,2.959,1752,2.822,1842,3.79,1920,3.297,1941,2.52,1958,4.966,1985,2.52,2441,4.692,2475,2.338,2548,2.192,2584,2.192,2594,4.157,2609,4.157,2610,4.997,2629,1.723,2653,2.52,2736,2.52,2737,5.068,2765,2.192,2770,4.997,2860,2.764,2875,3.79,2963,5.574,2964,6.292,2965,2.52,2966,4.714,2967,4.714,2968,5.667,2969,4.997,2970,4.157,2971,6.759,2972,6.303,2973,4.714,2974,6.303,2975,5.667,2976,5.667,2977,5.667,2978,4.714,2979,4.714,2980,3.134,2981,7.101,2982,4.714,2983,3.134,2984,3.134,2985,2.764,2986,4.157,2987,4.714,2988,3.134,2989,4.714,2990,4.157,2991,4.714,2992,4.157,2993,3.134,2994,3.79,2995,4.714,2996,3.134,2997,4.714,2998,4.157,2999,4.714,3000,2.764,3001,3.134,3002,4.714,3003,3.134,3004,3.134,3005,3.134,3006,2.52,3007,2.071,3008,3.134,3009,4.714,3010,4.714,3011,3.134,3012,5.667,3013,3.134,3014,3.134,3015,3.134,3016,2.764,3017,3.134,3018,3.134,3019,3.134,3020,4.714,3021,3.134,3022,3.134,3023,3.134,3024,3.134,3025,3.134,3026,2.52,3027,2.52,3028,3.134,3029,3.134,3030,3.134]],["title/modules/ReviewButtonModule.html",[540,0.636,3031,3.076]],["body/modules/ReviewButtonModule.html",[3,0.13,4,0.159,5,0.116,6,0.102,43,0.01,75,0.008,80,0.008,99,0.342,104,0.312,129,0.159,132,0.233,422,1.631,473,0.999,512,2.634,513,2.259,540,0.924,542,1.798,543,1.843,544,2.542,545,1.937,546,1.843,547,2.542,558,2.375,559,1.843,561,2.436,565,2.317,592,5.636,759,2.704,760,2.145,765,4.042,766,3.379,1555,5.636,1948,5.051,1949,4.223,2963,4.223,2964,4.767,3007,4.223,3031,6.308,3032,5.636,3033,5.636,3034,5.636,3035,5.636,3036,6.15,3037,6.392]],["title/components/ReviewModalComponent.html",[195,0.452,515,1.237]],["body/components/ReviewModalComponent.html",[3,0.127,4,0.092,5,0.096,6,0.129,11,0.709,12,1.325,18,0.356,19,0.563,25,1.89,35,0.943,38,1.932,40,1.381,41,1.041,42,0.898,43,0.01,44,1.063,45,0.7,46,0.639,48,1.842,52,1.652,55,0.758,56,0.81,69,0.479,75,0.005,76,2.865,80,0.005,85,0.943,86,1.041,90,1.987,99,0.243,104,0.18,128,0.238,129,0.092,132,0.275,141,1.21,155,1.378,159,0.875,160,0.974,195,0.843,196,1.013,197,1.357,198,1.064,199,1.176,200,1.176,201,1.147,207,2.276,208,1.425,209,1.425,210,2.313,211,1.183,212,0.92,213,1.46,215,1.46,255,0.898,268,1.091,269,1.357,280,1.281,303,1.605,304,2.129,308,1.643,316,0.989,350,2.464,387,1.458,396,1.271,397,1.919,398,2.69,402,1.271,405,2.773,406,1.63,407,3.577,408,1.88,411,1.67,412,1.937,414,2.393,416,3.064,419,1.545,422,0.942,426,3.12,428,1.325,429,5.266,430,1.643,432,2.923,433,1.593,435,1.593,436,1.643,437,2.753,440,1.545,443,2.775,445,2.316,446,2.581,448,2.811,449,1.312,452,1.522,456,0.989,459,2.614,473,0.577,474,1.845,475,1.176,476,2.174,477,1.176,478,1.176,479,1.064,480,1.176,481,1.038,482,1.987,483,1.064,484,1.176,485,1.46,486,1.987,487,1.064,488,1.118,489,1.176,490,1.064,491,1.176,492,1.064,493,1.013,494,1.176,495,1.064,496,1.176,497,1.064,498,1.064,499,1.176,500,1.064,501,1.147,502,1.091,503,1.176,504,1.064,505,1.695,506,1.038,507,1.064,508,1.064,509,1.176,510,1.064,511,1.987,512,1.064,513,2.614,514,1.695,515,1.919,516,1.064,517,1.038,518,0.876,519,1.176,520,1.038,521,1.013,522,1.064,523,1.176,524,1.064,525,1.176,526,1.091,527,1.176,528,1.064,529,1.39,530,1.064,531,1.533,532,1.064,533,1.176,534,1.064,535,1.425,536,1.176,537,1.064,538,1.176,539,1.176,570,1.643,618,2.367,672,3.175,677,1.091,689,1.572,690,2.038,717,1.832,731,2.115,732,2.709,738,3.183,740,2.627,997,2.265,1107,1.67,1183,3.064,1241,4.119,1242,4.359,1243,3.912,1255,3.732,1299,2.753,1545,4.551,1546,4.649,1652,3.719,1721,4.649,1841,2.753,1844,3.513,1941,4.275,2074,2.21,2441,4.975,2463,2.316,2583,4.975,2584,5.056,2596,5.392,2629,2.029,2731,2.581,2733,3.966,2738,4.689,2740,3.255,2741,4.649,2963,5.346,2994,2.967,3006,2.967,3007,5.346,3016,4.689,3026,2.967,3027,2.967,3038,4.689,3039,5.011,3040,3.691,3041,5.392,3042,5.318,3043,5.497,3044,4.649,3045,5.497,3046,3.691,3047,4.275,3048,3.691,3049,3.255,3050,2.967,3051,3.255,3052,3.255,3053,3.255,3054,3.255,3055,3.255,3056,3.255,3057,2.967,3058,3.255,3059,4.689,3060,5.318,3061,3.691,3062,3.691,3063,3.691,3064,5.318,3065,3.691,3066,3.691]],["title/interfaces/ReviewModalData.html",[128,0.284,3041,3.281]],["body/interfaces/ReviewModalData.html",[3,0.143,4,0.139,5,0.101,6,0.089,11,0.747,18,0.54,19,0.746,25,1.464,35,0.993,40,1.346,41,1.096,43,0.01,44,0.767,45,0.636,48,1.655,56,0.853,75,0.007,80,0.007,90,1.785,99,0.3,104,0.273,128,0.361,129,0.139,132,0.257,141,1.368,159,1.16,160,0.875,194,1.429,195,0.857,207,2.5,208,1.5,209,1.5,210,1.429,211,0.914,213,1.537,215,1.537,268,2.083,280,1.663,303,1.546,304,2.154,316,1.5,350,2.456,422,1.429,429,3.916,474,1.429,513,2.627,515,1.575,672,3.93,677,1.655,689,1.655,690,1.831,997,2.803,1107,2.067,1183,3.792,1241,5.097,1255,4.618,1299,4.176,1545,4.419,1546,5.753,1721,4.176,1841,4.176,1844,3.7,2074,3.352,2441,5.513,2463,4.424,2583,4.657,2584,4.93,2596,5.257,2629,3.079,2731,3.916,2733,4.176,2741,5.753,2963,3.7,2994,5.667,3006,4.502,3007,3.7,3026,4.502,3027,4.502,3038,4.938,3039,4.502,3041,5.753,3043,4.938,3044,4.176,3045,4.938,3047,4.502,3050,4.502,3051,6.215,3052,4.938,3053,4.938,3054,4.938,3055,4.938,3056,4.938,3057,4.502,3058,4.938]],["title/modules/ReviewModalModule.html",[540,0.636,3036,3.076]],["body/modules/ReviewModalModule.html",[3,0.132,4,0.161,5,0.117,6,0.103,43,0.01,75,0.008,80,0.008,99,0.344,104,0.317,129,0.161,132,0.237,422,1.657,473,1.015,513,1.919,515,2.575,540,0.938,542,1.826,543,1.872,544,2.558,545,1.967,546,1.872,547,2.558,558,2.397,559,1.872,561,2.069,565,2.338,571,3.23,572,2.564,759,2.729,760,2.178,1948,5.098,1949,4.289,2629,3.569,2764,5.219,2765,4.54,2766,6.203,2963,4.289,3007,4.289,3036,6.236,3067,5.724,3068,5.724,3069,5.724]],["title/components/RightSidebarComponent.html",[195,0.452,516,1.268]],["body/components/RightSidebarComponent.html",[1,4.031,3,0.106,4,0.089,5,0.094,6,0.119,8,3.321,9,2.372,11,0.695,12,1.782,15,2.33,18,0.502,19,0.552,22,2.338,23,2.71,33,4.725,35,0.925,38,1.739,40,0.996,41,1.02,42,0.873,43,0.01,44,1.055,45,0.645,46,0.621,47,1.286,52,1.116,69,0.466,75,0.005,76,1.65,77,3.121,80,0.006,85,1.089,86,1.201,88,2.585,91,2.382,99,0.278,104,0.175,129,0.089,132,0.272,139,3.674,140,0.637,141,0.637,157,4.055,159,1.108,160,1.203,187,1.144,195,0.734,196,0.986,197,1.33,198,1.035,199,1.144,200,1.144,201,1.116,207,1.726,208,1.397,209,1.397,210,2.308,211,1.18,212,0.895,213,1.431,215,1.431,218,2.656,221,4.577,236,2.678,255,1.739,256,1.58,268,1.541,269,1.33,280,0.738,289,1.705,302,2.563,303,1.612,304,1.529,305,2.866,308,2.732,316,0.962,326,2.057,327,1.898,328,1.749,374,1.305,379,1.418,387,2.824,396,1.237,397,2.098,398,3.321,399,1.898,400,1.898,401,3.134,402,1.796,403,3.516,405,2.907,406,1.761,407,3.656,410,3.126,411,1.644,412,2.392,414,2.001,416,3.516,426,3.086,427,3.245,428,1.964,430,2.321,431,2.511,432,2.866,433,2.649,441,2.866,443,2.321,444,2.001,447,2.476,448,2.756,449,1.62,450,1.765,452,1.842,456,0.962,457,4.055,458,2.254,459,3.31,463,2.756,467,2.476,468,2.476,470,2.254,471,2.511,473,0.815,474,1.825,475,1.144,476,2.146,477,1.144,478,1.144,479,1.035,480,1.144,481,1.01,482,1.956,483,1.035,484,1.144,485,1.431,486,1.956,487,1.035,488,1.088,489,1.144,490,1.035,491,1.144,492,1.035,493,0.986,494,1.144,495,1.035,496,1.144,497,1.035,498,1.035,499,1.144,500,1.035,501,1.116,502,1.061,503,1.144,504,1.035,505,1.661,506,1.01,507,1.035,508,1.035,509,1.144,510,1.035,511,1.956,512,1.035,513,1.814,514,1.661,515,1.01,516,1.942,517,1.01,518,0.852,519,1.144,520,1.01,521,0.986,522,1.035,523,1.144,524,1.035,525,1.144,526,1.061,527,1.144,528,1.035,529,1.363,530,1.035,531,1.503,532,1.035,533,1.144,534,1.035,535,1.397,536,1.144,537,1.035,538,1.144,539,1.144,594,5.563,611,2.119,643,2.476,673,3.121,676,2.495,677,1.061,678,2.119,683,2.678,689,1.541,690,2.007,716,2.476,717,1.796,727,2.511,732,2.656,733,2.372,740,2.92,745,2.511,748,2.254,752,2.372,753,2.372,800,3.199,1107,1.397,1121,2.372,1152,3.888,1227,2.678,1244,6.563,1255,2.15,1258,2.511,1493,2.511,1543,4.709,1600,2.887,1637,2.678,1652,2.511,1922,2.678,1996,2.887,1997,5.412,1998,4.597,2002,5.412,2024,4.031,2027,4.597,2029,4.191,2030,2.887,2031,3.166,2034,5.938,2036,3.272,2037,2.887,2041,3.166,2150,2.057,2621,3.646,2781,2.887,3070,5.997,3071,6.734,3072,5.213,3073,3.591,3074,5.213,3075,3.591,3076,4.597,3077,3.591,3078,3.591,3079,3.591,3080,3.591,3081,3.591,3082,3.591,3083,3.591,3084,3.591,3085,6.137,3086,3.591,3087,3.591,3088,3.591,3089,3.591,3090,3.591]],["title/modules/RightSidebarModule.html",[540,0.636,557,3.076]],["body/modules/RightSidebarModule.html",[3,0.114,4,0.139,5,0.102,6,0.089,43,0.01,75,0.007,80,0.007,99,0.355,104,0.274,129,0.139,132,0.205,211,0.728,321,1.54,406,1.845,422,1.432,452,1.181,473,0.877,516,2.592,540,0.811,542,1.579,543,1.618,544,2.399,545,1.7,546,1.618,547,2.399,557,6.437,558,2.193,559,1.618,561,2.249,565,2.139,571,2.955,572,2.216,575,3.708,577,5.674,578,4.511,594,4.185,669,3.708,754,5.96,759,2.496,760,1.883,765,3.731,766,2.967,2051,4.948,2052,5.674,2053,4.511,2054,6.224,2055,4.948,2061,5.674,2067,4.948,2669,5.631,2671,4.948,2672,3.925,2673,4.948,2964,4.185,3031,5.96,3070,4.511,3091,4.948,3092,4.948,3093,4.948,3094,4.948,3095,5.96,3096,5.96,3097,5.96,3098,5.96,3099,7.058,3100,5.612,3101,5.612,3102,3.708,3103,5.612,3104,5.612,3105,3.708,3106,7.058,3107,4.185,3108,5.612,3109,4.185,3110,5.612,3111,5.612,3112,5.612]],["title/interfaces/Rotation.html",[128,0.284,518,1.044]],["body/interfaces/Rotation.html",[3,0.11,4,0.134,5,0.098,6,0.086,11,0.721,18,0.521,19,0.73,20,1.346,35,0.959,40,1.032,41,1.058,43,0.01,44,0.741,45,0.745,47,1.032,56,0.823,69,0.894,71,2.255,75,0.007,80,0.007,85,0.959,86,1.716,99,0.268,104,0.264,128,0.349,129,0.171,132,0.252,138,1.163,140,1.417,141,1.222,159,1.248,160,1.186,194,1.379,195,0.867,208,1.448,209,1.448,210,1.379,211,0.894,213,1.484,215,1.484,268,2.362,316,1.448,374,3.117,379,3.388,382,3.702,428,1.89,465,2.075,474,1.379,517,1.52,518,2.149,676,2.802,677,1.597,678,3.085,679,2.802,680,2.135,681,2.075,682,2.646,689,1.597,690,1.767,691,3.275,695,2.802,838,5.589,992,5.773,997,1.964,1136,3.948,1180,3.392,1521,3.096,1577,2.657,1585,3.571,1808,3.392,1812,3.571,1910,3.571,1954,5.024,2032,5.659,3102,3.571,3113,3.78,3114,4.031,3115,6.077,3116,5.14,3117,4.766,3118,4.345,3119,4.345,3120,4.345,3121,4.766,3122,4.345,3123,4.766,3124,4.766,3125,4.031,3126,4.345,3127,4.766,3128,4.345,3129,6.691,3130,4.345,3131,4.766,3132,4.766]],["title/components/RotationSliderComponent.html",[195,0.452,517,1.237]],["body/components/RotationSliderComponent.html",[3,0.073,4,0.089,5,0.094,6,0.125,11,0.816,12,1.294,18,0.345,19,0.55,20,0.89,25,1.358,35,0.921,38,1.869,40,0.992,41,1.017,42,1.489,43,0.01,44,1.1,45,0.711,46,1.059,47,0.992,52,1.111,55,1.067,56,0.932,69,0.997,71,1.901,75,0.005,76,2.388,80,0.005,85,1.192,86,1.635,99,0.202,104,0.175,128,0.231,129,0.129,132,0.272,138,0.877,140,1.363,141,1.266,159,1.007,160,1.116,187,1.656,195,0.848,196,0.981,197,1.326,198,1.031,199,1.139,200,1.139,201,1.111,207,1.005,208,1.392,209,1.392,210,2.307,211,1.179,212,0.89,213,1.426,215,1.426,218,1.821,255,1.489,267,1.643,268,2.272,269,1.326,285,2.977,303,1.169,304,0.89,308,2.313,316,0.958,374,2.793,379,3.035,382,3.317,387,2.052,388,1.821,389,2.048,396,1.231,397,1.722,398,3.081,401,2.58,402,2.108,405,1.453,406,0.935,407,1.698,410,1.821,411,1.64,412,1.902,414,2.35,419,2.175,426,3.081,427,1.89,428,1.915,430,1.591,432,3.365,433,2.642,435,1.542,436,1.591,443,2.725,444,1.995,447,1.698,449,1.094,450,1.757,452,1.094,453,2.5,456,0.958,459,1.757,465,2.35,467,2.468,468,2.468,470,2.243,473,0.559,474,1.822,475,1.139,476,2.142,477,1.139,478,1.139,479,1.031,480,1.139,481,1.005,482,1.951,483,1.031,484,1.139,485,1.426,486,1.951,487,1.031,488,1.083,489,1.139,490,1.031,491,1.139,492,1.031,493,0.981,494,1.139,495,1.031,496,1.139,497,1.031,498,1.031,499,1.139,500,1.031,501,1.111,502,1.056,503,1.139,504,1.031,505,1.656,506,1.005,507,1.031,508,1.031,509,1.139,510,1.031,511,1.951,512,1.031,513,1.536,514,1.656,515,1.005,516,1.031,517,1.89,518,2.149,519,1.139,520,1.005,521,0.981,522,1.031,523,1.139,524,1.031,525,1.139,526,1.056,527,1.139,528,1.031,529,1.358,530,1.031,531,1.498,532,1.031,533,1.139,534,1.031,535,1.392,536,1.139,537,1.031,538,1.139,539,1.139,559,1.498,570,2.313,611,2.112,673,3.11,676,2.488,677,1.056,678,2.732,679,2.732,680,1.412,681,1.372,682,2.35,689,1.536,690,2.001,691,2.242,695,2.488,700,2.5,716,2.468,717,1.79,718,1.89,725,4.044,730,4.044,731,2.048,732,1.821,733,2.362,734,2.243,735,2.5,736,1.965,737,2.362,738,3.11,752,2.362,753,2.362,838,5.507,992,5.507,997,1.888,1121,2.362,1136,3.85,1180,3.261,1243,2.243,1521,2.977,1577,2.554,1585,3.433,1637,2.666,1808,3.261,1812,3.433,1910,3.433,1954,4.905,2032,4.565,3102,5.203,3113,5.507,3114,2.666,3115,3.152,3116,4.565,3117,4.581,3118,4.177,3119,4.177,3120,4.177,3121,4.581,3122,4.177,3123,4.581,3124,5.397,3125,3.875,3126,4.177,3127,5.397,3128,4.177,3129,5.925,3130,4.177,3131,4.581,3132,3.152,3133,5.195,3134,5.195,3135,5.195,3136,3.574,3137,5.195,3138,3.574,3139,3.574,3140,3.574,3141,3.152,3142,3.574,3143,3.574,3144,3.152,3145,3.574]],["title/modules/RotationSliderModule.html",[540,0.636,3095,3.076]],["body/modules/RotationSliderModule.html",[3,0.129,4,0.157,5,0.115,6,0.101,43,0.01,75,0.008,80,0.008,99,0.351,104,0.309,129,0.157,132,0.231,422,1.616,473,0.99,517,2.568,518,1.503,540,0.915,542,1.781,543,1.826,544,2.531,545,1.919,546,1.826,547,2.531,558,2.362,559,1.826,561,2.018,565,2.304,569,4.184,570,2.819,571,3.183,572,2.501,759,2.689,760,2.125,761,5.023,762,4.184,763,5.316,764,4.429,765,4.019,766,3.348,767,5.316,3095,6.205,3102,4.184,3113,4.429,3146,5.584,3147,5.584,3148,5.584,3149,6.332,3150,6.332,3151,7.602,3152,6.332]],["title/injectables/SceneState.html",[0,1.333,92,2.418]],["body/injectables/SceneState.html",[0,1.208,2,1.51,3,0.051,4,0.063,5,0.046,6,0.135,11,0.532,15,2.317,16,1.531,18,0.243,19,0.422,20,2.156,22,2.377,23,1.796,24,4.083,25,1.042,29,2.807,32,2.108,35,0.877,36,2.224,37,3.454,38,2.054,40,0.761,41,0.78,42,1.582,43,0.01,44,0.934,45,0.716,46,1.125,47,1.073,48,1.178,49,2.832,50,2.614,55,1.4,56,0.607,65,1.721,69,0.985,71,1.66,75,0.004,80,0.004,85,0.707,86,0.494,88,1.898,90,1.95,92,2.192,96,3.255,99,0.323,102,1.41,104,0.123,105,3.935,106,1.721,107,1.088,108,1.088,109,1.025,111,1.894,112,0.727,113,1.056,114,0.892,118,1.387,121,0.996,122,0.996,123,0.968,124,0.916,125,0.968,126,1.764,127,1.159,128,0.319,129,0.099,131,1.056,132,0.092,133,1.75,137,4.848,138,1.409,140,1.321,154,2.285,159,0.415,160,1.017,161,1.088,162,1.159,163,1.666,164,1.445,165,1.666,166,1.666,167,1.583,168,1.666,169,1.666,187,2.373,204,1.025,211,0.641,244,1.837,245,2.098,256,1.702,280,0.518,289,1.617,303,0.944,321,0.692,344,2.97,370,1.24,372,2.43,376,3.089,377,1.666,387,0.996,394,1.743,402,2.433,408,3.598,414,0.968,425,1.449,428,1.621,434,3.454,444,2.157,449,0.531,452,0.531,465,0.968,518,1.803,628,2.502,643,1.198,644,1.24,647,1.24,648,1.24,650,1.669,667,2.108,685,1.333,769,3.929,770,1.666,771,2.43,772,4.517,773,1.881,774,1.583,775,1.666,776,1.583,777,3.687,778,2.028,779,1.881,780,1.881,781,5.478,782,3.364,783,2.973,784,2.028,785,3.205,786,1.583,787,1.881,788,1.51,789,3.205,790,2.634,791,2.028,792,1.387,793,1.198,794,3.205,795,2.788,796,1.387,797,1.764,798,1.583,799,1.159,800,2.349,801,1.583,802,3.117,803,1.666,804,1.333,805,2.272,806,1.198,807,1.445,808,1.764,809,3.205,810,1.764,811,2.788,812,1.881,813,1.881,814,1.881,815,1.881,816,2.028,817,3.205,818,2.028,819,3.205,820,2.028,821,2.028,822,2.028,823,2.028,824,2.028,825,2.028,826,2.028,827,3.008,828,1.51,829,5.482,830,3.205,831,2.028,832,2.028,833,2.028,834,2.028,835,2.028,836,2.028,837,3.205,838,2.788,839,3.727,840,2.028,841,3.975,842,2.028,843,2.028,844,2.028,845,2.028,846,5.081,847,4.919,848,2.028,849,2.788,850,3.975,851,3.205,852,2.028,853,2.028,854,3.205,855,2.634,856,4.501,857,3.205,858,3.205,859,2.028,860,3.205,861,2.028,862,2.284,863,3.975,864,2.028,865,2.028,866,2.832,867,2.973,868,2.973,869,5.678,870,2.973,871,3.975,872,2.028,873,2.807,874,6.908,875,2.634,876,3.205,877,3.205,878,2.788,879,2.028,880,2.028,881,3.205,882,3.205,883,2.973,884,3.975,885,2.028,886,2.028,887,2.028,888,2.028,889,1.796,890,1.583,891,1.583,892,2.028,893,2.028,894,2.028,895,2.028,896,2.028,897,3.975,898,2.028,899,2.028,900,2.028,901,2.028,902,2.634,903,1.881,904,2.028,905,1.583,906,2.028,907,2.028,908,2.028,909,2.028,910,2.502,911,2.028,912,2.502,913,2.502,914,2.502,915,2.973,916,4.083,917,1.666,918,2.634,919,2.028,920,1.666,921,2.028,922,3.205,923,2.028,924,1.666,925,1.666,926,2.028,927,2.028,928,2.028,929,2.028,930,2.028,931,2.028,932,3.205,933,1.445,934,4.517,935,2.028,936,3.975,937,2.028,938,2.028,939,3.205,940,2.028,941,2.028,942,1.881,943,2.028,944,1.881,945,3.205,946,1.881,947,2.028,948,1.881,949,1.583,950,2.028,951,1.881,952,2.634,953,2.028,954,1.881,955,1.583,956,2.028,957,1.881,958,2.028,959,1.881,960,3.205,961,1.881,962,2.028,963,1.881,964,1.881,965,1.881,966,5.23,967,2.028,968,2.028,969,2.028,970,2.028,971,2.028,972,2.028,973,2.028,974,2.028,975,1.881,976,1.881,977,2.502,978,1.764,979,2.028,980,2.028,981,2.028,982,2.028,983,2.028,984,2.028,985,2.028,986,2.028,987,2.028,988,2.028,989,1.056,990,2.387,991,1.445,992,1.764,993,4.279,994,3.205,995,3.205,996,2.788,997,1.449,998,3.205,999,3.205,1000,3.205,1001,3.205,1002,3.205,1003,3.205,1004,3.103,1005,2.028,1006,2.028,1007,2.028,1008,3.975,1009,2.028,1010,2.028,1011,1.666,1012,1.583,1013,3.205,1014,2.634,1015,2.028,1016,2.028,1017,3.205,1018,1.666,1019,3.205,1020,2.028,1021,2.028,1022,2.028,1023,2.028,1024,2.028,1025,2.028,1026,1.881,1027,2.028,1028,1.881,1029,3.205,1030,2.028,1031,2.028,1032,2.028,1033,2.028,1034,2.028,1035,3.205,1036,1.881,1037,2.028,1038,2.028,1039,2.028,2787,2.028,3153,3.987,3154,3.987,3155,3.987,3156,4.944,3157,3.987,3158,2.522,3159,2.522,3160,2.522,3161,2.522,3162,2.522,3163,2.522,3164,2.522,3165,2.522,3166,2.522,3167,2.522,3168,2.522,3169,2.522,3170,2.522,3171,2.522,3172,2.522,3173,2.522,3174,2.522,3175,2.522,3176,2.522,3177,2.522,3178,2.522,3179,2.522,3180,2.522,3181,2.522,3182,2.522,3183,3.987,3184,2.522,3185,2.522,3186,2.522,3187,2.522,3188,2.522]],["title/interfaces/SceneStateModel.html",[128,0.284,808,3.076]],["body/interfaces/SceneStateModel.html",[0,1.358,3,0.06,4,0.073,5,0.053,6,0.047,11,0.391,15,2.249,16,1.125,18,0.283,19,0.475,20,1.996,22,2.263,23,1.628,24,4.119,29,2.347,35,0.795,37,3.118,40,0.56,41,0.574,43,0.01,44,0.402,45,0.592,47,0.856,48,0.866,49,2.567,50,2.369,56,0.446,65,1.265,69,0.934,71,1.766,75,0.005,80,0.005,85,0.52,88,1.72,90,1.734,92,1.611,96,3.237,99,0.331,102,1.585,104,0.143,105,4.081,106,1.934,107,1.265,108,1.265,109,1.192,111,2.129,112,0.845,113,1.227,114,1.037,118,1.611,121,1.158,122,1.158,123,1.125,124,1.065,125,1.125,126,2.05,127,1.347,128,0.351,129,0.111,131,1.227,132,0.107,133,1.778,137,4.66,138,1.442,140,1.35,154,2.275,159,0.482,160,0.952,161,1.265,162,1.347,163,1.937,164,1.679,165,1.937,166,1.937,167,1.84,168,1.937,169,1.937,187,2.426,194,0.748,204,1.192,211,0.706,244,1.465,245,1.673,256,1.846,280,1.118,289,1.465,303,0.56,321,0.805,344,2.876,370,1.441,372,2.674,376,3.349,377,1.937,387,1.158,394,1.758,402,2.558,408,3.668,414,1.125,425,1.628,428,1.724,434,3.528,444,1.72,449,0.617,452,0.617,465,1.125,518,1.807,628,2.812,643,1.392,644,1.441,647,1.441,648,1.441,650,1.876,667,2.369,685,1.55,769,3.134,770,1.937,771,2.203,772,3.602,773,2.186,774,1.84,775,1.937,776,1.84,777,4.057,778,2.356,779,2.186,780,2.186,781,5.391,782,3.349,783,3.342,784,2.356,785,3.602,786,1.84,787,2.186,788,1.755,789,3.602,790,2.961,791,2.356,792,1.611,793,1.392,794,3.602,795,3.134,796,1.611,797,2.05,798,1.84,799,1.347,800,2.129,801,1.84,802,2.771,803,1.937,804,1.55,805,2.06,806,1.392,807,1.679,808,3.134,809,5.276,810,2.05,811,3.134,812,2.186,813,2.186,814,2.186,815,2.186,816,2.356,817,3.602,818,2.356,819,3.602,820,2.356,821,2.356,822,2.356,823,2.356,824,2.356,825,2.356,826,2.356,827,2.674,828,1.755,829,5.193,830,3.602,831,2.356,832,2.356,833,2.356,834,2.356,835,2.356,836,2.356,837,3.602,838,3.134,839,3.49,840,2.356,841,2.356,842,2.356,843,2.356,844,2.356,845,2.356,846,5.37,847,4.897,848,2.356,849,2.05,850,2.356,851,3.602,852,2.356,853,2.356,854,3.602,855,2.961,856,4.336,857,3.602,858,3.602,859,2.356,860,3.602,861,2.356,862,2.567,863,2.356,864,2.356,865,2.356,866,3.116,867,3.342,868,3.342,869,5.97,870,3.342,871,4.373,872,2.356,873,2.832,874,6.937,875,2.961,876,3.602,877,3.602,878,3.134,879,2.356,880,2.356,881,3.602,882,3.602,883,3.342,884,2.356,885,2.356,886,2.356,887,2.356,888,2.356,889,1.976,890,1.84,891,1.84,892,2.356,893,2.356,894,2.356,895,2.356,896,2.356,897,2.356,898,2.356,899,2.356,900,2.356,901,2.356,902,2.961,903,2.186,904,2.356,905,1.84,906,2.356,907,2.356,908,2.356,909,2.356,910,2.812,911,2.356,912,2.812,913,2.812,914,2.812,915,3.342,916,4.343,917,1.937,918,2.961,919,2.356,920,1.937,921,2.356,922,3.602,923,2.356,924,1.937,925,1.937,926,2.356,927,2.356,928,2.356,929,2.356,930,2.356,931,2.356,932,3.602,933,1.679,934,4.373,935,2.356,936,2.356,937,2.356,938,2.356,939,3.602,940,2.356,941,2.356,942,2.186,943,2.356,944,2.186,945,3.602,946,2.186,947,2.356,948,2.186,949,1.84,950,2.356,951,2.186,952,2.961,953,2.356,954,2.186,955,1.84,956,2.356,957,2.186,958,2.356,959,2.186,960,3.602,961,2.186,962,2.356,963,2.186,964,2.186,965,2.186,966,3.602,967,2.356,968,2.356,969,2.356,970,2.356,971,2.356,972,2.356,973,2.356,974,2.356,975,2.186,976,2.186,977,2.812,978,2.05,979,2.356,980,2.356,981,2.356,982,2.356,983,2.356,984,2.356,985,2.356,986,2.356,987,2.356,988,2.356,989,1.227,990,2.682,991,1.679,992,2.05,993,3.134,994,2.356,995,2.356,996,2.05,997,1.065,998,2.356,999,2.356,1000,2.356,1001,2.356,1002,2.356,1003,2.356,1004,1.84,1005,2.356,1006,2.356,1007,2.356,1008,2.356,1009,2.356,1010,2.356,1011,1.937,1012,1.84,1013,2.356,1014,2.961,1015,2.356,1016,2.356,1017,2.356,1018,1.937,1019,2.356,1020,2.356,1021,2.356,1022,2.356,1023,2.356,1024,2.356,1025,2.356,1026,2.186,1027,2.356,1028,2.186,1029,2.356,1030,2.356,1031,2.356,1032,2.356,1033,2.356,1034,2.356,1035,2.356,1036,2.186,1037,2.356,1038,2.356,1039,2.356]],["title/interfaces/SlicesConfig.html",[128,0.284,2143,2.52]],["body/interfaces/SlicesConfig.html",[0,1.157,3,0.049,4,0.059,5,0.043,6,0.038,8,1.063,11,0.318,15,2.047,16,0.917,18,0.23,19,0.404,20,1.726,22,2.335,23,0.868,29,1.03,35,0.424,37,2.83,40,0.456,41,0.467,43,0.01,44,1.025,45,0.675,47,0.729,48,0.706,49,1.368,50,1.262,53,4.193,56,1.243,65,1.03,69,0.95,71,1.768,75,0.004,80,0.004,85,0.424,88,0.917,90,2.024,91,1.35,96,3.246,99,0.309,102,1.35,104,0.117,105,2.429,106,1.647,107,1.03,108,1.03,109,0.971,112,0.688,113,1.598,114,0.845,119,1.499,121,1.508,122,1.508,123,0.917,124,0.868,125,1.465,127,1.754,128,0.308,129,0.166,131,1,132,0.087,133,1.389,138,1.387,140,1.299,141,0.677,148,3.261,154,2.735,155,1.781,159,1.318,160,1.285,161,1.03,162,1.098,172,1.578,173,1.578,176,1.67,181,0.845,183,1.67,194,0.609,211,0.495,244,1.248,245,1.425,255,1.622,256,2.267,258,2.522,280,0.98,283,1.368,289,1.781,303,0.729,321,0.655,344,2.018,350,1.571,374,2.661,379,2.893,382,3.161,391,1.578,394,1.786,397,0.672,402,1.643,406,1.424,425,2.964,428,1.897,434,2.265,444,1.465,449,1.147,452,1.147,456,0.64,493,1.83,518,1.776,521,1.495,535,0.64,618,1.699,667,3.149,674,1.368,679,1.552,680,0.943,681,0.917,682,0.917,685,2.521,691,2.058,695,0.971,696,3.238,699,1.174,771,1.877,782,1.313,788,1.429,792,1.313,793,1.134,796,1.313,798,1.499,799,1.098,802,3.397,803,1.578,804,1.262,805,1.754,806,1.134,807,1.368,827,1.877,855,4.197,856,4.197,862,3.639,866,1.368,873,2.741,875,1.578,889,2.308,890,1.499,891,1.499,902,4.197,910,3.738,912,1.499,913,1.499,914,1.499,917,3.151,933,2.187,977,4.482,989,3.356,990,2.855,991,1.368,997,0.868,1004,1.499,1011,1.578,1012,1.499,1014,1.578,1018,1.578,1049,1.313,1056,2.192,1079,3.168,1107,1.023,1187,4.482,1222,3.151,1231,4.995,1232,2.522,1414,1.429,1508,2.732,1517,1.368,1521,1.368,1556,2.995,1559,3.81,1615,2.396,1618,3.335,1619,3.955,1620,3.492,1621,3.274,1624,2.919,2020,1.429,2024,3.802,2025,4.442,2026,1.67,2070,1.877,2071,2.621,2107,1.499,2139,1.578,2140,1.578,2141,1.92,2142,4.197,2143,4.092,2144,4.196,2145,1.578,2146,4.144,2147,3.069,2148,2.993,2149,2.847,2150,3.968,2151,4.442,2152,2.396,2153,2.847,2154,1.499,2155,1.499,2156,1.92,2157,1.92,2158,6.503,2159,1.92,2160,2.285,2161,1.92,2162,1.368,2163,1.368,2164,1.781,2165,4.185,2166,3.069,2167,3.738,2168,1.781,2169,1.92,2170,1.92,2171,1.92,2172,2.396,2173,5.03,2174,1.92,2175,1.92,2176,1.92,2177,1.92,2178,1.92,2179,1.92,2180,1.92,2181,1.92,2182,1.92,2183,1.92,2184,1.92,2185,1.92,2186,1.92,2187,1.92,2188,1.92,2189,1.92,2190,1.92,2191,1.92,2192,1.92,2193,1.92,2194,1.92,2195,1.92,2196,1.92,2197,1.92,2198,1.781,2199,1.92,2200,1.92,2201,1.92,2202,1.92,2203,1.92,2204,5.361,2205,3.069,2206,1.92,2207,4.379,2208,1.92,2209,3.069,2210,3.834,2211,1.92,2212,5.255,2213,1.92,2214,1.92,2215,1.92,2216,1.92,2217,1.92,2218,1.92,2219,1.92,2220,1.92,2221,1.92,2222,1.92,2223,1.92,2224,1.92,2225,1.92,2226,1.92,2227,1.92,2228,1.92,2229,1.92,2230,1.781,2231,3.834,2232,4.379,2233,1.92,2234,1.92,2235,1.92,2236,1.92,2237,1.92,2238,1.92,2239,1.92,2240,1.92,2241,1.92,2242,1.92,2243,1.92,2244,1.92,2245,3.069,2246,1.92,2247,1.92,2248,1.92,2249,1.92,2250,1.92,2251,1.92,2252,1.92,2253,1.92,2254,3.335,2255,1.92,2256,1.92,2257,1.92,2258,1.92,2259,1.92,2260,1.92,2261,1.92,2262,3.069,2263,1.92,2264,1.578,2265,3.069,2266,3.069,2267,3.069,2268,1.92,2269,1.92,2270,1.92,2271,1.92,2272,1.92,2273,1.92,2274,1.92,2275,1.92,2276,1.92,2277,1.92,2278,1.92,2279,1.92,2280,1.92,2281,1.92,2282,1.92,2283,1.92,2284,2.285,2285,1.92,2286,1.92,2287,1.92,2288,1.429,2289,1.92,2290,4.379,2291,1.429,2292,1.92,2293,1.92,2294,1.92,2295,1.92,2296,1.92,2297,1.92,2298,3.069,2299,2.847,2300,1.92,2301,1.92,2302,1.92,2303,1.92]],["title/interfaces/SlicesConfig-1.html",[128,0.237,187,1.169,2143,2.101]],["body/interfaces/SlicesConfig-1.html",[3,0.107,4,0.131,5,0.096,6,0.084,11,0.705,18,0.509,19,0.719,40,1.009,41,1.034,43,0.01,44,0.931,45,0.613,47,1.009,55,1.086,56,1.035,69,0.685,71,2.206,75,0.007,80,0.007,85,0.937,86,1.469,99,0.264,104,0.258,127,2.429,128,0.484,129,0.169,132,0.248,133,1.059,138,1.146,140,1.205,159,1.235,160,1.174,181,1.869,194,1.348,195,0.814,208,1.415,209,1.415,210,1.348,211,0.881,213,1.45,215,1.45,255,2.04,268,2.581,269,1.348,280,1.086,316,1.415,350,2.364,474,1.348,520,1.486,521,2.433,600,2.28,670,3.163,672,3.46,673,4.744,674,3.027,676,2.761,677,1.562,678,2.761,679,2.761,680,2.087,681,2.029,682,2.608,686,3.941,687,3.491,688,3.491,689,1.562,690,1.728,691,3.621,692,3.941,693,3.491,695,2.761,696,2.212,697,4.263,698,3.163,699,3.896,700,3.695,701,3.491,704,3.491,705,3.316,712,3.941,1045,2.692,1107,1.415,1541,4.263,2143,4.54,2151,5.542,2165,5.425,2167,5.145,2172,4.712,2422,2.597,2602,3.941,3105,3.491,3189,3.695,3190,5.599,3191,4.659,3192,4.659,3193,4.659,3194,4.659,3195,4.659,3196,4.248,3197,4.659,3198,6.62,3199,6.62,3200,4.659,3201,5.99,3202,4.659,3203,5.99,3204,4.659,3205,4.659]],["title/components/SlicesInputComponent.html",[195,0.452,520,1.237]],["body/components/SlicesInputComponent.html",[3,0.072,4,0.088,5,0.093,6,0.127,11,0.81,12,1.282,18,0.34,19,0.545,25,1.346,32,2.721,35,0.626,38,1.908,40,0.983,41,1.007,42,1.252,43,0.01,44,1.114,45,0.669,46,0.89,47,0.983,52,1.096,55,1.459,56,1.017,69,0.866,71,1.551,75,0.005,76,2.365,80,0.005,85,1.184,86,1.535,99,0.2,104,0.172,127,2.365,128,0.332,129,0.128,132,0.271,133,0.707,138,0.868,140,1.078,141,0.626,159,0.999,160,1.11,181,1.82,187,1.64,195,0.786,196,0.968,197,1.313,198,1.017,199,1.124,200,1.124,201,1.096,207,0.992,208,1.379,209,1.379,210,2.305,211,1.178,212,0.879,213,1.413,215,1.413,218,1.797,255,1.862,268,2.58,269,1.704,280,1.057,285,2.021,302,1.734,303,1.16,304,0.879,316,0.945,350,2.207,387,2.399,388,3.095,389,2.948,396,1.215,397,1.998,398,3.064,399,1.865,400,1.865,401,1.976,405,1.434,406,0.922,410,1.797,411,1.628,412,1.599,414,1.354,419,1.477,426,3.064,427,1.865,428,1.907,432,1.939,433,2.221,435,1.522,436,1.57,440,1.477,443,2.291,444,1.354,447,1.676,448,1.865,449,0.743,450,1.734,452,1.083,453,2.467,456,0.945,459,2.53,467,1.676,468,1.676,473,0.551,474,1.812,475,1.124,476,2.128,477,1.124,478,1.124,479,1.017,480,1.124,481,0.992,482,1.936,483,1.017,484,1.124,485,1.413,486,1.936,487,1.017,488,1.069,489,1.124,490,1.017,491,1.124,492,1.017,493,0.968,494,1.124,495,1.017,496,1.124,497,1.017,498,1.017,499,1.124,500,1.017,501,1.096,502,1.043,503,1.124,504,1.017,505,1.64,506,0.992,507,1.017,508,1.017,509,1.124,510,1.017,511,1.936,512,1.017,513,1.521,514,1.64,515,0.992,516,1.017,517,0.992,518,0.838,519,1.124,520,1.879,521,2.406,522,1.017,523,1.124,524,1.017,525,1.124,526,1.043,527,1.124,528,1.017,529,1.346,530,1.017,531,1.484,532,1.017,533,1.124,534,1.017,535,1.379,536,1.124,537,1.017,538,1.124,539,1.124,570,2.973,600,1.522,611,2.47,670,2.112,672,1.797,673,3.998,674,2.948,676,2.47,677,1.043,678,2.092,679,2.715,680,1.393,681,1.354,682,2.332,686,3.838,687,3.4,688,4.014,689,1.521,690,1.986,691,3.555,692,3.838,693,3.4,695,2.47,696,2.155,697,4.456,698,3.081,699,3.645,700,3.599,701,3.4,704,2.331,705,2.214,712,3.838,716,2.445,717,1.773,718,1.865,725,4.014,726,3.111,727,2.467,728,3.111,729,3.111,730,2.331,731,2.021,732,1.797,733,2.331,734,2.214,735,2.467,736,1.939,737,2.331,738,2.112,739,3.111,740,1.282,741,2.112,743,2.836,744,2.631,745,2.467,746,5.357,747,2.836,748,2.214,749,2.631,752,2.331,753,2.331,1045,1.797,1107,1.379,1541,2.214,2143,4.247,2151,4.966,2165,4.804,2167,3.23,2172,3.813,2320,3.111,2422,2.53,2602,3.838,2656,2.836,3105,5.286,3189,5.596,3190,4.98,3191,5.357,3192,5.357,3193,3.111,3194,4.538,3195,4.538,3196,4.137,3197,4.538,3198,5.357,3199,5.357,3200,3.111,3201,4.538,3202,3.111,3203,4.538,3204,5.889,3205,3.111,3206,5.146,3207,3.528,3208,3.528,3209,3.528,3210,5.146,3211,3.528,3212,3.528,3213,3.528,3214,6.678,3215,5.146,3216,3.528,3217,3.528,3218,3.528]],["title/modules/SlicesInputModule.html",[540,0.636,3096,3.076]],["body/modules/SlicesInputModule.html",[3,0.129,4,0.157,5,0.114,6,0.101,43,0.01,75,0.008,80,0.008,99,0.351,104,0.309,129,0.157,132,0.231,211,0.821,321,1.736,422,1.614,473,0.989,520,2.567,521,1.736,540,0.914,542,1.779,543,1.824,544,2.53,545,1.917,546,1.824,547,2.53,558,2.361,559,1.824,561,2.016,565,2.302,569,4.179,570,2.816,571,3.181,572,2.498,758,5.085,759,2.687,760,2.122,761,5.019,762,4.179,763,5.313,764,4.423,765,4.016,766,3.344,767,5.313,768,5.085,3096,6.204,3105,4.179,3189,4.423,3219,5.577,3220,5.577,3221,5.577,3222,7.596]],["title/components/StageNavComponent.html",[195,0.452,522,1.268]],["body/components/StageNavComponent.html",[3,0.055,4,0.067,5,0.076,6,0.134,11,0.894,12,1.05,18,0.406,19,0.446,20,1.05,25,1.102,32,2.228,35,0.48,38,2.042,40,0.805,41,0.825,42,1.63,43,0.01,44,1.077,45,0.735,46,1.159,47,0.805,52,1.815,55,1.377,56,1.066,61,4.085,69,0.351,75,0.004,80,0.004,85,1.189,86,1.416,99,0.164,104,0.132,124,0.984,129,0.105,132,0.245,133,0.845,138,0.457,140,1.036,141,0.748,155,2.776,159,0.961,160,1.048,181,1.491,195,0.818,196,0.743,197,1.076,198,0.781,199,0.863,200,0.863,201,0.841,207,0.762,208,1.129,209,1.129,210,2.25,211,1.153,212,0.674,213,1.157,215,1.157,226,3.716,232,3.716,243,3.789,249,2.019,250,3.28,255,0.658,256,0.82,260,3.098,262,3.619,264,4.781,267,1.937,268,2.324,269,1.897,271,3.143,280,1.561,288,2.785,289,2.191,303,0.988,304,0.674,316,0.725,317,1.893,319,4.181,328,2.124,374,0.984,387,2.499,388,2.147,394,2.036,396,0.933,397,2.138,398,3.439,399,2.228,400,2.228,401,1.987,404,3.626,405,1.713,406,1.353,407,1.286,410,1.379,411,1.386,416,2.544,419,1.765,426,1.168,427,2.736,428,1.577,430,1.205,433,2.233,435,1.168,436,1.205,440,1.134,441,1.488,443,2.6,444,2.242,446,1.893,447,2.002,448,2.228,449,1.411,450,1.331,452,1.473,456,2.219,458,1.699,459,2.072,463,1.431,467,2.775,468,2.775,473,0.423,474,1.615,475,0.863,476,1.861,477,0.863,478,0.863,479,0.781,480,0.863,481,0.762,482,1.649,483,0.781,484,0.863,485,1.157,486,1.649,487,0.781,488,0.82,489,0.863,490,0.781,491,0.863,492,0.781,493,0.743,494,0.863,495,0.781,496,0.863,497,0.781,498,0.781,499,0.863,500,0.781,501,0.841,502,1.246,503,0.863,504,0.781,505,1.343,506,0.762,507,0.781,508,0.781,509,0.863,510,0.781,511,1.649,512,0.781,513,1.246,514,1.343,515,0.762,516,0.781,517,0.762,518,0.643,519,0.863,520,0.762,521,0.743,522,1.684,523,0.863,524,0.781,525,0.863,526,0.8,527,0.863,528,0.781,529,1.102,530,0.781,531,1.215,532,0.781,533,0.863,534,0.781,535,1.796,536,0.863,537,0.781,538,0.863,539,0.863,600,1.168,611,1.713,618,2.304,676,2.573,677,0.8,678,2.844,679,2.374,680,1.069,681,1.039,682,1.987,689,1.246,690,1.692,691,1.168,693,3.859,695,2.104,716,2.002,717,1.452,718,1.431,737,1.789,738,1.621,740,2.701,744,3.143,827,3.654,873,2.233,989,3.494,991,2.965,1107,1.875,1120,1.789,1187,4.541,1202,3.388,1232,4.181,1240,2.636,1315,2.317,1366,5.908,1521,3.346,1565,6.701,1569,2.645,1575,4.157,1577,2.871,1578,3.184,1600,2.176,1639,2.019,1640,1.699,1812,3.859,1844,3.419,1893,3.665,1910,4.428,1920,3.619,1927,2.387,1954,2.965,1965,6.406,2013,3.388,2014,3.388,2030,3.388,2035,4.894,2150,1.551,2324,1.488,2326,1.488,2422,1.331,2657,3.388,2718,2.387,2719,3.716,2886,5.15,3125,5.218,3128,4.695,3223,6.3,3224,2.176,3225,3.716,3226,4.214,3227,4.214,3228,7.599,3229,5.175,3230,4.214,3231,5.175,3232,6.329,3233,5.175,3234,5.175,3235,4.214,3236,4.214,3237,5.84,3238,5.175,3239,5.175,3240,5.175,3241,4.214,3242,5.84,3243,5.84,3244,2.707,3245,2.707,3246,4.214,3247,4.214,3248,5.175,3249,5.175,3250,4.563,3251,2.707,3252,4.214,3253,2.707,3254,2.707,3255,4.214,3256,2.707,3257,4.214,3258,5.175,3259,4.16,3260,5.91,3261,5.175,3262,5.175,3263,4.214,3264,4.214,3265,2.707,3266,5.84,3267,4.214,3268,2.707,3269,2.707,3270,2.707,3271,4.214,3272,2.707,3273,4.214,3274,2.707,3275,2.707,3276,2.707,3277,2.707,3278,5.15,3279,5.84,3280,2.707,3281,2.707,3282,2.707,3283,2.707,3284,5.175,3285,2.707,3286,2.707,3287,2.707,3288,2.707,3289,2.707,3290,4.214,3291,2.707,3292,2.707,3293,2.707,3294,2.707,3295,2.707,3296,2.707,3297,2.707,3298,4.214,3299,5.84,3300,2.387,3301,2.707,3302,2.387,3303,5.175,3304,2.707,3305,2.707]],["title/modules/StageNavModule.html",[540,0.636,1361,3.076]],["body/modules/StageNavModule.html",[3,0.127,4,0.155,5,0.113,6,0.099,43,0.01,75,0.008,80,0.008,99,0.35,104,0.305,129,0.155,132,0.228,422,1.594,456,1.673,473,0.976,502,2.228,522,2.627,540,0.903,542,1.757,543,1.801,544,2.516,545,1.892,546,1.801,547,2.516,558,2.342,559,1.801,561,2.403,565,2.284,571,3.156,572,2.466,759,2.666,760,2.095,765,3.986,766,3.302,1361,6.285,1366,4.367,1610,6.061,1611,5.02,1951,4.657,1987,6.117,2052,6.061,2053,5.02,2066,5.507,2728,6.647,2729,5.507,3223,4.657,3306,5.507,3307,5.507,3308,6.245,3309,5.507,3310,6.245,3311,6.245,3312,6.245]],["title/modules/StoreModule.html",[540,0.636,1374,3.076]],["body/modules/StoreModule.html",[1,4.388,3,0.121,4,0.148,5,0.108,6,0.095,8,3.263,9,3.94,43,0.01,75,0.008,80,0.008,88,2.814,90,1.901,91,2.593,92,4.029,99,0.355,102,2.109,104,0.291,109,2.424,118,3.278,119,3.743,120,4.794,129,0.182,132,0.218,138,1.006,164,3.416,203,3.57,211,0.774,245,2.737,321,2.012,350,2.113,440,2.497,540,0.862,542,1.678,561,1.901,565,2.221,647,2.932,648,2.932,699,2.932,800,3.482,801,3.743,805,3.369,806,2.833,807,3.416,828,4.388,1257,5.258,1374,5.126,1405,4.447,1660,4.447,1670,4.843,1958,4.17,2024,3.57,2094,4.17,2326,3.278,2781,4.794,3044,4.447,3118,4.794,3313,4.794,3314,5.963,3315,5.258,3316,5.963,3317,5.258,3318,7.493,3319,5.963,3320,5.258,3321,5.963,3322,5.963,3323,5.258,3324,4.794,3325,5.963,3326,5.963,3327,5.963,3328,5.963,3329,5.963,3330,5.963,3331,5.963,3332,5.963,3333,5.963,3334,5.963,3335,5.963,3336,5.258,3337,5.963,3338,5.258,3339,5.963,3340,5.963,3341,5.963,3342,5.963]],["title/interfaces/Tag.html",[12,1.096,128,0.284]],["body/interfaces/Tag.html",[3,0.128,4,0.157,5,0.114,6,0.1,8,2.806,11,0.84,12,2.208,18,0.608,19,0.803,43,0.01,45,0.807,69,1.094,70,4.408,71,2.075,75,0.008,77,3.773,80,0.009,84,4.408,115,5.574,116,3.956,128,0.489,129,0.202,139,5.167,142,5.372,154,3.15,155,3.273,157,5.372,188,4.408,194,1.609,277,2.42,397,2.133,2069,4.758,2070,3.727,2145,4.164,3343,4.701,3344,4.701,3345,5.558,3346,5.558]],["title/components/TagListComponent.html",[195,0.452,524,1.268]],["body/components/TagListComponent.html",[3,0.08,4,0.098,5,0.101,6,0.133,8,1.762,11,0.939,12,2.302,18,0.381,19,0.592,25,1.461,30,4.928,33,5.435,35,0.702,38,2.001,40,1.067,41,1.094,42,1.712,43,0.01,44,1.143,45,0.743,46,1.218,47,1.067,52,1.23,55,1.331,56,0.851,66,4.493,69,0.841,71,1.654,75,0.006,80,0.006,85,0.991,86,1.094,99,0.252,104,0.193,115,3.693,129,0.098,132,0.281,133,1.121,139,3.346,140,1.249,141,0.702,142,4.651,144,3.182,155,1.478,157,2.615,159,1.158,160,1.205,180,2.952,195,0.762,196,1.086,197,1.426,198,1.141,199,1.261,200,1.261,201,1.23,207,1.113,208,1.497,209,1.497,210,2.325,211,1.187,212,0.986,213,1.534,215,1.534,255,1.359,268,1.652,269,1.426,303,1.237,304,0.986,316,1.06,379,1.563,382,1.708,388,2.847,396,1.363,397,1.113,403,3.202,404,2.267,405,1.609,406,1.461,411,1.736,428,0.986,449,0.833,452,0.833,456,1.06,467,1.88,468,1.88,472,2.768,473,0.619,474,1.895,475,1.261,476,2.244,477,1.261,478,1.261,479,1.141,480,1.261,481,1.113,482,2.065,483,1.141,484,1.261,485,1.534,486,2.065,487,1.141,488,1.199,489,1.261,490,1.141,491,1.261,492,1.141,493,1.086,494,1.261,495,1.141,496,1.261,497,1.141,498,1.141,499,1.261,500,1.141,501,1.23,502,1.17,503,1.261,504,1.141,505,1.781,506,1.113,507,1.141,508,1.141,509,1.261,510,1.141,511,2.065,512,1.141,513,1.652,514,1.781,515,1.113,516,1.141,517,1.113,518,0.94,519,1.261,520,1.113,521,1.086,522,1.141,523,1.261,524,2.03,525,1.261,526,1.17,527,1.261,528,1.141,529,1.461,530,1.141,531,1.611,532,1.141,533,1.261,534,1.141,535,1.497,536,1.261,537,1.141,538,1.261,539,1.261,600,1.708,611,2.272,650,1.657,676,3.019,677,1.17,678,2.634,679,2.862,680,1.563,681,1.519,682,2.488,689,1.652,690,2.119,695,2.634,716,2.655,717,1.925,718,2.092,740,1.438,741,2.369,1508,3.202,1577,3.461,1752,3.346,2069,3.508,2070,3.185,2621,5.954,2741,4.168,2809,3.49,3107,6.219,3347,5.832,3348,3.49,3349,5.589,3350,6.479,3351,5.589,3352,5.589,3353,6.479,3354,6.479,3355,5.589,3356,3.957,3357,3.957,3358,5.589,3359,3.957,3360,4.493,3361,4.928,3362,5.589,3363,3.957,3364,5.589,3365,3.957,3366,4.928,3367,5.589,3368,3.957,3369,3.957,3370,3.957,3371,3.957,3372,3.957,3373,6.479,3374,3.957,3375,3.957,3376,4.928,3377,3.49,3378,3.957,3379,3.49,3380,3.49]],["title/modules/TagListModule.html",[540,0.636,3097,3.076]],["body/modules/TagListModule.html",[3,0.133,4,0.162,5,0.118,6,0.104,12,1.625,43,0.01,75,0.008,80,0.008,99,0.339,104,0.319,129,0.162,132,0.238,422,1.665,473,1.02,524,2.641,540,0.943,542,1.835,543,1.881,544,2.563,545,1.976,546,1.881,547,2.563,558,2.404,559,1.881,561,2.079,565,2.345,571,3.24,572,2.576,759,2.737,760,2.189,3097,6.242,3107,4.864,3347,4.562,3381,5.752,3382,5.752,3383,5.752,3384,6.522,3385,6.823,3386,5.752,3387,6.522]],["title/modules/TagSearchModule.html",[540,0.636,3098,3.076]],["body/modules/TagSearchModule.html",[3,0.128,4,0.157,5,0.114,6,0.1,12,1.574,43,0.01,75,0.008,80,0.008,99,0.351,104,0.308,129,0.157,132,0.231,422,1.612,473,0.988,526,2.697,540,0.913,542,1.777,543,1.822,544,2.529,545,1.914,546,1.822,547,2.529,558,2.359,559,1.822,561,2.013,565,2.3,569,4.174,570,2.812,571,3.178,572,2.495,759,2.685,760,2.12,761,5.016,762,4.174,767,5.309,1948,5.016,1949,4.174,2333,3.965,2347,6.103,2348,6.103,3098,6.202,3109,4.712,3347,4.418,3388,5.571,3389,5.571,3390,5.571,3391,6.317,3392,7.591,3393,6.317,3394,6.317]],["title/interfaces/TagSearchResult.html",[116,2.761,128,0.284]],["body/interfaces/TagSearchResult.html",[3,0.13,4,0.159,5,0.116,6,0.102,8,2.846,11,0.852,12,2.191,18,0.616,19,0.81,43,0.01,45,0.765,69,0.992,70,5.346,71,2.244,75,0.008,77,4.576,80,0.009,84,5.346,115,5.051,116,4.798,128,0.493,129,0.203,139,4.576,142,4.223,154,2.387,155,2.855,157,4.223,188,5.927,194,1.631,277,2.935,397,1.798,2069,4.012,2070,3.142,2145,5.051,3343,4.767,3344,4.767,3345,6.741,3346,6.741]],["title/modules/ThemingModule.html",[540,0.636,1375,3.076]],["body/modules/ThemingModule.html",[3,0.136,4,0.167,5,0.122,6,0.107,43,0.009,75,0.008,80,0.008,99,0.306,104,0.328,129,0.167,132,0.245,241,5.323,394,1.799,422,1.714,473,1.05,540,0.971,542,1.889,543,1.937,544,2.087,545,2.035,546,2.408,547,2.087,558,2.446,559,1.937,565,2.385,596,5.009,597,5.4,1375,6.219,3395,5.922,3396,5.922,3397,6.716,3398,7.872,3399,6.716,3400,6.716,3401,6.716]],["title/injectables/ThemingService.html",[0,1.333,241,2.633]],["body/injectables/ThemingService.html",[0,1.781,2,2.546,3,0.086,4,0.106,5,0.077,6,0.137,11,0.969,18,0.41,19,0.622,20,2.188,25,1.537,35,0.754,37,4.211,38,2.079,40,1.122,42,1.854,43,0.01,44,1.045,45,0.755,46,1.425,47,1.506,55,1.62,56,1.289,59,4.11,69,1.14,75,0.006,80,0.006,85,1.461,86,0.832,99,0.229,104,0.208,129,0.146,132,0.317,133,1.457,138,1.39,140,1.194,141,1.042,159,1.254,195,0.81,197,1.5,212,1.059,224,5.027,240,5.652,241,3.518,243,4.72,264,2.81,269,2.063,277,2.256,338,5.417,416,2.09,545,1.781,584,3.171,603,3.75,610,2.546,1079,2.792,1094,3.75,1107,1.574,1114,3.75,1115,3.171,1180,4.785,1184,4.383,1388,3.171,1586,5.169,1603,5.182,1617,2.546,1675,4.559,1704,3.419,1753,4.724,1893,4.226,2074,2.546,2082,2.81,2083,2.81,2481,6.142,2986,5.182,3360,4.724,3361,6.952,3402,3.419,3403,5.876,3404,8.081,3405,5.876,3406,7.264,3407,7.264,3408,7.264,3409,5.876,3410,4.252,3411,4.252,3412,5.876,3413,8.236,3414,4.252,3415,7.624,3416,4.252,3417,5.876,3418,7.264,3419,4.252,3420,5.876,3421,5.182,3422,5.876,3423,4.252,3424,5.876,3425,4.252,3426,5.876,3427,4.252,3428,4.252,3429,4.252,3430,4.252,3431,4.252,3432,4.252,3433,4.252,3434,3.75,3435,3.75,3436,3.75,3437,4.252,3438,4.252,3439,4.252,3440,4.252,3441,4.252,3442,4.252,3443,4.252,3444,3.75,3445,4.252,3446,4.252,3447,5.876,3448,4.252,3449,4.252,3450,4.252,3451,4.252,3452,4.252,3453,4.252,3454,4.252,3455,4.252]],["title/components/ToggleButtonComponent.html",[195,0.452,528,1.268]],["body/components/ToggleButtonComponent.html",[3,0.067,4,0.082,5,0.089,6,0.133,11,0.782,12,1.225,15,1.453,18,0.32,19,0.521,20,1.996,25,1.286,32,2.6,35,0.588,38,2.022,40,0.939,41,0.962,42,1.196,43,0.01,44,1.029,45,0.655,46,0.851,47,0.939,48,1.453,52,1.031,55,1.542,56,1.105,65,2.122,69,0.76,75,0.005,80,0.005,85,1.228,86,1.355,90,1.567,99,0.252,104,0.162,112,0.956,129,0.082,132,0.265,133,1.3,138,0.989,140,0.872,141,0.588,159,1.066,160,0.916,195,0.809,196,0.91,197,1.255,198,0.956,199,1.057,200,1.057,201,1.031,204,2.635,205,2.986,207,0.933,208,1.317,209,1.317,210,2.293,211,1.176,212,0.826,213,1.35,215,1.35,223,4.711,228,3.302,246,3.564,247,3.564,250,3.13,255,0.807,256,2.428,267,2.98,269,1.255,276,3.086,277,1.888,280,1.422,289,1.916,303,1.119,304,0.826,306,3.678,307,3.086,316,0.888,348,1.985,387,1.31,390,3.678,394,1.57,395,2.081,396,1.142,397,1.383,401,1.273,404,1.9,406,0.867,407,1.575,411,2.403,412,1.031,416,2.881,417,5.163,419,2.059,423,2.817,424,2.924,426,2.122,428,0.826,430,3.835,435,1.431,436,1.476,438,5.83,439,5.83,440,3.228,441,1.823,447,2.336,449,1.364,450,2.417,452,1.526,456,0.888,463,2.6,473,0.518,474,1.767,475,1.057,476,2.066,477,1.057,478,1.057,479,0.956,480,1.057,481,0.933,482,1.868,483,0.956,484,1.057,485,1.35,486,1.868,487,0.956,488,1.005,489,1.057,490,1.996,491,1.057,492,0.956,493,0.91,494,1.057,495,0.956,496,1.057,497,0.956,498,0.956,499,1.057,500,0.956,501,1.031,502,0.98,503,1.057,504,0.956,505,1.567,506,0.933,507,0.956,508,0.956,509,1.057,510,0.956,511,1.868,512,0.956,513,1.453,514,1.567,515,0.933,516,0.956,517,0.933,518,0.787,519,1.057,520,0.933,521,0.91,522,0.956,523,1.057,524,0.956,525,1.057,526,0.98,527,1.057,528,1.869,529,2.307,530,0.956,531,1.418,532,0.956,533,1.057,534,0.956,535,1.317,536,1.057,537,0.956,538,1.057,539,1.057,600,1.431,677,0.98,689,1.453,696,2.059,717,1.694,736,1.823,873,1.431,989,3.036,1050,4.712,1053,3.432,1056,1.524,1059,2.944,1060,3.953,1061,5.212,1066,2.6,1067,2.881,1068,3.439,1071,3.13,1075,3.086,1076,3.667,1077,3.667,1107,1.855,1111,2.473,1120,4.283,1121,5.436,1129,2.666,1131,2.473,1137,2.924,1275,3.249,1283,3.953,1285,3.953,1286,3.953,1292,4.494,1310,2.666,1315,1.823,1554,6.745,1597,2.924,1638,2.666,1640,4.345,1752,2.944,1789,2.924,1794,2.924,1795,5.168,1796,5.168,1814,4.336,1841,2.473,1847,4.336,2965,2.666,2969,5.168,2970,4.336,2985,4.336,3000,2.924,3456,7.398,3457,4.917,3458,3.316,3459,7.252,3460,4.917,3461,4.917,3462,5.861,3463,3.316,3464,3.316,3465,3.316,3466,3.316,3467,3.316,3468,3.316,3469,3.316,3470,3.316,3471,5.861,3472,5.861,3473,3.316,3474,3.316,3475,3.316,3476,3.316,3477,3.316,3478,3.316,3479,3.316,3480,3.316,3481,4.917,3482,3.316,3483,4.917,3484,3.316,3485,3.316,3486,3.316]],["title/interfaces/User.html",[128,0.284,328,1.476]],["body/interfaces/User.html",[3,0.087,4,0.106,5,0.078,6,0.068,16,1.645,18,0.413,19,0.626,20,1.472,22,1.401,23,1.557,35,0.76,37,3.462,43,0.01,45,0.533,56,1.204,69,1.146,75,0.006,80,0.006,85,0.76,88,2.268,91,2.09,99,0.326,104,0.209,111,2.036,112,1.236,128,0.381,129,0.147,132,0.157,133,1.356,138,1.29,140,1.048,141,0.76,155,1.6,159,0.972,160,1.349,181,1.516,194,1.094,195,0.694,196,1.177,202,3.196,203,2.566,204,1.742,205,3.01,206,3.904,208,1.148,209,1.148,210,1.094,211,0.877,212,1.068,213,1.177,214,3.446,215,1.177,216,3.446,217,3.196,218,3.01,219,4.244,220,4.244,221,3.196,222,3.385,223,4.244,224,4.452,225,3.446,228,2.183,229,2.832,231,3.446,235,3.446,237,5.436,238,4.75,239,4.75,240,2.997,241,3.537,242,3.446,243,3.537,244,2.211,245,2.206,246,2.356,247,3.248,250,2.918,252,3.446,254,3.446,255,1.644,256,2.049,257,3.446,258,2.832,259,3.446,260,3.537,261,2.997,262,2.997,264,2.832,266,4.75,267,1.97,268,1.999,269,1.726,270,4.407,271,3.196,272,3.446,273,3.446,274,3.446,276,2.69,277,1.645,279,3.446,280,1.389,283,2.455,284,3.446,285,2.455,286,5.043,287,4.75,288,4.468,289,2.584,291,3.446,294,3.446,297,3.446,301,2.997,302,2.107,303,0.819,304,1.068,305,2.356,306,3.708,307,2.69,308,1.908,310,3.446,312,3.446,316,1.148,317,2.997,318,3.196,319,2.832,320,3.446,321,1.177,322,3.196,323,3.446,324,2.997,325,3.196,326,2.455,327,2.266,328,1.983,329,3.853,330,3.853,331,2.997,332,3.446,333,3.446,334,3.446,335,3.446,336,4.75,337,3.446,338,3.196,339,3.446,340,3.446,341,2.69,342,3.446,343,3.446,344,2.266,345,3.446,346,3.446,347,3.446,348,2.566,349,3.446,350,1.236,351,3.446,352,3.446,353,2.997,354,3.446,355,3.446,356,3.446,357,3.446,358,3.446,359,3.446,360,4.75,361,5.859,362,6.634,363,3.446,364,3.446,365,6.511,366,3.446,367,3.196,368,3.446,369,6.04,370,2.107,371,3.446,372,3.885,373,3.446,374,2.147,375,4.75,376,4.452,377,2.832,378,3.446,379,2.334,380,4.75,381,2.455,382,2.55,383,4.75,384,3.446,385,3.196,386,4.75,387,1.693,388,2.183,389,2.455,390,2.69,391,2.832,392,3.446,393,3.446,394,1.148,395,2.69]],["title/interfaces/UserName.html",[128,0.284,2314,3.281]],["body/interfaces/UserName.html",[3,0.105,4,0.128,5,0.093,6,0.082,11,0.686,18,0.496,19,0.707,20,1.281,40,0.982,41,1.007,43,0.01,44,1.25,45,0.669,47,0.982,48,2.191,56,0.783,69,1.137,75,0.007,80,0.007,86,1.306,99,0.289,104,0.251,128,0.332,129,0.166,132,0.244,133,1.031,138,0.868,140,1.477,141,0.912,159,1.219,160,1.159,194,1.313,195,0.805,208,1.378,209,1.378,210,1.313,211,0.866,213,1.412,215,1.412,268,2.59,269,1.313,316,1.378,328,2.487,329,4.404,330,4.404,350,1.925,474,1.313,506,1.447,570,3.299,600,2.22,670,3.079,676,2.714,677,1.52,678,2.714,679,2.714,680,2.031,681,1.975,682,2.563,687,3.398,688,3.398,689,1.52,690,1.682,695,2.714,696,2.154,697,4.19,698,3.079,699,3.856,703,3.597,704,3.398,705,3.228,707,3.836,997,2.426,1577,3.282,1578,2.443,2060,3.398,2304,3.836,2305,4.535,2306,4.535,2307,4.535,2308,4.535,2309,4.535,2310,4.535,2312,4.535,2314,6.411,2316,4.535,2318,3.836,2319,5.371,2321,6.917,2322,6.536,2323,6.536,2324,4.075,2326,4.075,2328,6.536,2332,4.135,2333,3.228,2334,6.697,2335,5.887,2336,4.535,2337,4.535,2338,4.535,2339,4.535,2340,5.887,2341,4.535,2342,4.535,2343,4.535]],["title/components/VideoModalComponent.html",[195,0.452,530,1.268]],["body/components/VideoModalComponent.html",[3,0.082,4,0.1,5,0.102,6,0.131,11,0.536,12,1.408,18,0.388,19,0.599,20,1.408,25,1.478,35,1.003,38,1.976,40,1.08,41,1.106,42,0.978,43,0.01,44,1.09,45,0.64,46,0.696,50,2.989,52,1.757,55,1.343,56,1.18,69,0.522,75,0.006,80,0.006,85,1.003,86,1.106,99,0.254,102,1.999,104,0.196,129,0.1,132,0.283,138,0.679,141,0.713,160,1.022,195,0.848,196,1.104,197,1.443,198,1.16,199,1.282,200,1.282,201,1.25,204,2.298,206,4.319,207,1.131,208,1.514,209,1.514,210,2.327,211,1.189,212,1.002,213,1.552,215,1.552,229,4.685,255,1.375,256,1.713,269,1.443,303,1.248,304,2.144,308,2.517,316,1.078,350,2.154,387,2.233,396,1.385,397,1.131,401,2.17,403,2.304,405,1.635,406,1.478,408,2.049,411,1.751,412,2.203,414,2.868,415,2.657,416,1.977,417,3,419,1.684,426,3.06,427,2.126,428,1.408,429,5.225,435,1.736,436,1.791,440,1.684,441,2.211,447,1.911,449,0.847,450,1.977,452,1.19,456,1.078,458,4.102,463,2.126,467,1.911,468,1.911,473,0.629,474,1.907,475,1.282,476,2.26,477,1.282,478,1.282,479,1.16,480,1.282,481,1.131,482,2.083,483,1.16,484,1.282,485,1.552,486,2.083,487,1.16,488,1.219,489,1.282,490,1.16,491,1.282,492,1.16,493,1.104,494,1.282,495,1.16,496,1.282,497,1.16,498,1.16,499,1.282,500,1.16,501,1.25,502,1.189,503,1.282,504,1.16,505,1.802,506,1.131,507,1.16,508,1.16,509,1.282,510,1.16,511,2.083,512,1.16,513,1.671,514,1.802,515,1.131,516,1.16,517,1.131,518,0.955,519,1.282,520,1.131,521,1.104,522,1.16,523,1.282,524,1.16,525,1.282,526,1.189,527,1.282,528,1.16,529,1.478,530,2.044,531,2.566,532,1.16,533,1.282,534,1.16,535,1.514,536,1.282,537,1.16,538,1.282,539,1.282,650,1.684,677,1.189,689,1.671,690,2.137,717,1.947,730,2.657,740,1.461,741,3.384,760,1.35,1255,3.384,1258,2.813,1331,3.547,1368,5.84,1545,3.239,1546,4.216,1646,3.953,1844,3.735,2074,2.408,2583,5.119,2584,5.225,2596,5.571,2629,2.211,2731,2.813,2733,4.216,2739,3.547,3039,5.255,3047,4.545,3049,3.547,3050,3.234,3057,3.234,3059,4.985,3259,6.398,3434,6.831,3487,5.775,3488,6.831,3489,7.09,3490,4.022,3491,6.536,3492,4.022,3493,4.022,3494,5.653,3495,5.653,3496,5.7,3497,5.7,3498,4.985,3499,5.653,3500,5.653,3501,4.022,3502,4.022,3503,4.022,3504,5.653,3505,4.022,3506,4.022,3507,4.022,3508,4.022,3509,4.022,3510,4.022,3511,5.764,3512,4.022]],["title/components/VideoModalLauncherComponent.html",[195,0.452,532,1.268]],["body/components/VideoModalLauncherComponent.html",[3,0.087,4,0.106,5,0.107,6,0.126,11,0.788,12,1.472,18,0.57,19,0.626,25,1.545,35,0.76,38,1.859,40,1.128,41,1.156,42,1.042,43,0.01,44,1.11,45,0.658,46,0.741,48,1.746,52,1.332,55,0.881,56,0.9,69,0.556,75,0.006,76,1.97,80,0.006,85,1.199,86,1.323,99,0.263,102,2.09,104,0.209,128,0.381,129,0.106,132,0.289,141,0.76,160,1.139,187,1.366,195,0.86,196,1.177,197,1.508,198,1.236,199,1.366,200,1.366,201,1.332,207,1.206,208,1.583,209,1.583,210,2.338,211,1.193,212,1.068,213,1.622,215,1.622,255,1.042,256,1.299,268,2.154,269,1.508,280,0.881,303,1.46,304,2.276,316,1.148,328,1.983,350,1.236,374,1.557,394,1.583,396,1.476,397,1.206,398,2.55,399,2.266,400,2.266,405,1.742,406,1.545,407,2.036,411,1.811,412,2.101,416,2.107,430,1.908,433,2.55,435,1.85,436,1.908,440,1.795,443,2.63,444,1.645,448,3.124,449,1.244,452,0.902,456,1.148,459,2.107,463,2.266,473,0.67,474,1.951,475,1.366,476,2.323,477,1.366,478,1.366,479,1.236,480,1.366,481,1.206,482,2.155,483,1.236,484,1.366,485,1.622,486,2.155,487,1.236,488,1.299,489,1.366,490,1.236,491,1.366,492,1.236,493,1.177,494,1.366,495,1.236,496,1.366,497,1.236,498,1.236,499,1.366,500,1.236,501,1.332,502,1.267,503,1.366,504,1.236,505,1.883,506,1.206,507,1.236,508,1.236,509,1.366,510,1.236,511,2.155,512,1.236,513,1.746,514,1.883,515,1.206,516,1.236,517,1.206,518,1.018,519,1.366,520,1.206,521,1.177,522,1.236,523,1.366,524,1.236,525,1.366,526,1.267,527,1.366,528,1.236,529,1.906,530,1.704,531,2.576,532,2.101,533,1.366,534,1.236,535,1.583,536,1.366,537,1.236,538,1.366,539,1.366,598,4.132,600,1.85,611,2.402,677,1.267,689,1.746,690,2.211,717,2.035,730,3.904,731,2.455,734,2.69,740,2.147,1240,3.01,1368,5.351,1369,5.894,1545,3.385,1646,4.132,1652,5.097,2150,3.874,2629,2.356,2736,3.446,2737,5.859,2765,2.997,3487,5.527,3513,3.779,3514,5.908,3515,8.475,3516,6.762,3517,5.908,3518,7.288,3519,5.908,3520,5.908,3521,4.286,3522,5.908,3523,4.286,3524,4.286,3525,5.908,3526,5.908,3527,4.286,3528,4.286,3529,4.286]],["title/modules/VideoModalLauncherModule.html",[540,0.636,1362,3.076]],["body/modules/VideoModalLauncherModule.html",[3,0.132,4,0.162,5,0.118,6,0.103,43,0.01,75,0.008,80,0.008,99,0.332,104,0.318,129,0.162,132,0.238,304,2.053,422,1.661,473,1.017,531,1.876,532,2.64,540,0.941,542,1.831,543,1.876,544,2.561,545,1.972,546,1.876,547,2.561,558,2.401,559,1.876,561,2.074,565,2.341,571,3.235,572,2.57,759,2.733,760,2.183,1362,6.239,1368,4.299,1369,4.853,3487,4.551,3530,5.738,3531,5.738,3532,5.738,3533,6.507,3534,6.507]],["title/modules/VideoModalModule.html",[540,0.636,3535,3.281]],["body/modules/VideoModalModule.html",[3,0.131,4,0.16,5,0.116,6,0.102,43,0.01,75,0.008,80,0.008,99,0.343,104,0.314,129,0.16,132,0.235,422,1.641,473,1.005,530,2.636,531,1.854,540,0.929,542,1.809,543,1.854,544,2.548,545,1.948,546,1.854,547,2.548,558,2.384,559,1.854,561,2.049,565,2.325,571,3.212,572,2.539,759,2.714,760,2.158,1368,5.069,2629,3.535,2764,5.169,2765,4.497,2766,6.168,3487,4.497,3496,5.169,3535,6.637,3536,5.67,3537,5.67,3538,5.67,3539,7.672,3540,5.67]],["title/interfaces/VisibilityItem.html",[128,0.284,802,2.241]],["body/interfaces/VisibilityItem.html",[3,0.127,4,0.155,5,0.113,6,0.099,11,0.835,18,0.603,19,0.799,43,0.01,44,1.199,45,0.777,46,1.456,69,1.166,71,2.233,75,0.008,76,3.47,80,0.008,86,1.477,128,0.487,129,0.155,154,3.268,194,1.597,280,1.665,344,4.627,350,1.805,456,2.022,535,1.677,802,3.846,804,4.68,873,3.777,1107,2.022,1517,4.325,1586,4.738,2150,4.822,3541,5.519,3542,5.519,3543,6.657]],["title/components/VisibilityMenuComponent.html",[195,0.452,534,1.268]],["body/components/VisibilityMenuComponent.html",[3,0.058,4,0.071,5,0.08,6,0.131,11,0.952,12,1.096,18,0.58,19,0.466,25,1.151,35,0.508,38,1.984,40,0.84,41,0.861,42,1.667,43,0.01,44,1.106,45,0.719,46,1.186,47,0.84,52,0.89,55,1.585,56,1.214,69,0.695,71,2.033,75,0.005,76,1.316,80,0.005,85,0.781,86,1.611,99,0.209,104,0.14,129,0.071,132,0.25,133,0.882,138,0.742,140,1.067,141,0.508,154,2.752,159,1.212,160,1.072,181,1.557,187,1.918,195,0.667,196,0.786,197,1.123,198,0.825,199,0.912,200,0.912,201,0.89,207,0.805,208,1.179,209,1.179,210,2.263,211,1.159,212,0.713,213,1.208,215,1.208,255,0.696,256,1.624,267,2.023,268,1.584,269,1.123,283,2.521,303,1.024,304,0.713,316,0.767,328,0.961,353,3.749,374,1.04,379,1.131,394,1.179,396,0.986,397,1.238,398,2.597,399,1.514,400,1.514,401,1.69,403,3.071,404,3.071,406,0.749,410,1.458,411,1.436,412,1.666,415,1.892,416,1.407,419,3.287,421,3.749,422,1.657,427,1.514,428,1.618,433,1.236,435,1.899,436,1.959,440,1.843,441,1.574,443,1.275,444,3.097,446,2.002,447,2.547,449,1.266,450,2.635,452,0.926,453,4.542,456,0.767,457,2.908,458,1.797,463,2.327,464,4.31,465,2.058,466,3.749,473,0.448,474,1.657,475,0.912,476,1.918,477,0.912,478,0.912,479,0.825,480,0.912,481,0.805,482,1.709,483,0.825,484,0.912,485,1.208,486,1.709,487,0.825,488,0.868,489,0.912,490,0.825,491,0.912,492,0.825,493,0.786,494,0.912,495,0.825,496,0.912,497,0.825,498,0.825,499,0.912,500,0.825,501,0.89,502,0.846,503,0.912,504,0.825,505,1.403,506,0.805,507,0.825,508,0.825,509,0.912,510,0.825,511,1.709,512,0.825,513,1.301,514,1.403,515,0.805,516,0.825,517,0.805,518,0.68,519,0.912,520,0.805,521,0.786,522,0.825,523,0.912,524,0.825,525,0.912,526,0.846,527,0.912,528,0.825,529,1.151,530,0.825,531,1.269,532,0.825,533,0.912,534,1.735,535,2.314,536,0.912,537,0.825,538,0.912,539,0.912,559,0.825,600,1.236,611,1.789,676,2.64,677,0.846,678,2.179,679,2.446,680,1.131,681,1.099,682,2.058,689,1.301,690,1.753,695,2.179,696,1.843,701,3.975,716,2.091,717,1.516,718,1.514,725,2.908,734,1.797,735,2.002,736,2.419,737,2.908,738,1.714,740,1.948,741,1.714,802,4.155,804,4.775,868,3.998,873,3.742,878,4.542,889,2.804,1079,2.091,1184,3.282,1243,2.762,1255,2.635,1258,3.078,1315,2.419,1493,2.002,1508,1.64,1517,2.521,1531,1.892,1569,4.303,1575,2.327,1577,3.794,1578,2.858,1584,3.078,1585,3.975,1586,4.303,1636,3.538,1640,1.797,1812,2.908,1954,1.64,1965,5.741,2015,5.306,2019,2.525,2029,2.302,2035,5.851,2036,1.797,2063,6.141,2148,2.762,2150,4.222,2164,3.282,2254,3.749,2318,2.135,2852,3.881,3300,2.525,3366,2.525,3544,5.759,3545,2.525,3546,5.361,3547,4.401,3548,4.401,3549,6.017,3550,4.401,3551,6.017,3552,4.401,3553,3.881,3554,4.401,3555,5.361,3556,4.401,3557,2.863,3558,2.863,3559,2.863,3560,4.401,3561,4.401,3562,2.863,3563,2.863,3564,4.401,3565,4.401,3566,4.401,3567,4.401,3568,2.863,3569,3.881,3570,2.863,3571,4.401,3572,2.863,3573,3.881,3574,4.401,3575,2.863,3576,4.401,3577,4.401,3578,2.863,3579,7.967,3580,4.401,3581,2.525,3582,6.017,3583,2.863,3584,2.863,3585,2.863,3586,6.856,3587,6.494,3588,4.401,3589,5.361,3590,4.401,3591,2.863,3592,2.863,3593,5.361,3594,2.863,3595,2.863,3596,2.863,3597,2.863,3598,2.863,3599,2.863,3600,2.863,3601,2.863,3602,2.863]],["title/modules/VisibilityMenuModule.html",[540,0.636,2049,3.076]],["body/modules/VisibilityMenuModule.html",[3,0.132,4,0.161,5,0.117,6,0.103,43,0.01,75,0.008,80,0.008,99,0.343,104,0.317,129,0.161,132,0.237,211,0.841,321,1.78,422,1.655,473,1.014,534,2.639,535,1.737,540,0.937,542,1.824,543,1.869,544,2.557,545,1.965,546,1.869,547,2.557,558,2.396,559,1.869,561,2.066,565,2.336,571,3.228,572,2.561,759,2.727,760,2.176,763,5.392,764,4.534,2049,6.234,2056,6.799,2063,4.835,3544,4.534,3603,5.717,3604,5.717,3605,5.717,3606,6.483,3607,6.483]],["title/components/VisibilityToggleComponent.html",[195,0.452,537,1.268]],["body/components/VisibilityToggleComponent.html",[3,0.076,4,0.092,5,0.097,6,0.129,11,0.714,12,1.333,15,2.024,18,0.359,19,0.567,25,1.399,35,0.66,38,1.936,40,1.022,41,1.047,42,0.906,43,0.01,44,1.066,45,0.702,46,0.644,47,1.022,52,1.157,55,0.765,56,0.815,69,0.694,75,0.005,80,0.005,85,1.287,86,1.523,99,0.208,104,0.182,129,0.092,132,0.276,140,1.287,141,1.287,155,2.82,159,0.613,160,1.134,181,1.893,195,0.833,196,1.022,197,1.366,198,1.074,199,1.187,200,1.187,201,1.157,207,1.048,208,1.434,209,1.434,210,2.314,211,1.183,212,0.928,213,1.469,215,1.469,255,1.302,256,1.128,268,2.232,269,1.366,277,2.055,280,1.1,283,3.066,289,2.239,303,1.196,304,0.928,316,0.998,328,1.796,387,1.471,388,3.191,396,1.283,397,1.927,398,2.956,401,2.405,402,1.283,404,2.133,405,2.176,406,1.399,408,1.897,410,3.191,411,1.678,412,2.128,414,2.055,416,1.831,419,2.241,421,2.604,422,0.95,426,3.131,427,1.969,428,1.561,431,2.604,432,2.942,433,3.131,435,2.704,436,2.789,440,2.241,441,2.047,443,2.789,444,2.405,445,3.359,447,3.254,449,1.319,450,2.631,452,1.126,456,0.998,459,3.08,463,1.969,467,1.769,468,1.769,472,3.743,473,0.582,474,1.852,475,1.187,476,2.183,477,1.187,478,1.187,479,1.074,480,1.187,481,1.048,482,1.997,483,1.074,484,1.187,485,1.469,486,1.997,487,1.074,488,1.128,489,1.187,490,1.074,491,1.187,492,1.074,493,1.022,494,1.187,495,1.074,496,1.187,497,1.074,498,1.074,499,1.187,500,1.074,501,1.157,502,1.101,503,1.187,504,1.074,505,1.706,506,1.048,507,1.074,508,1.074,509,1.187,510,1.074,511,1.997,512,1.074,513,1.582,514,1.706,515,1.048,516,1.074,517,1.048,518,0.884,519,1.187,520,1.048,521,1.022,522,1.074,523,1.187,524,1.074,525,1.187,526,1.101,527,1.187,528,1.074,529,2.278,530,1.074,531,1.543,532,1.074,533,1.187,534,1.074,535,2.386,536,1.187,537,1.975,538,1.187,539,1.187,600,1.607,611,2.176,676,2.547,677,1.101,678,2.176,679,2.784,680,1.471,681,1.43,682,2.405,689,1.582,690,2.048,693,3.536,695,2.547,716,3.254,717,1.843,718,1.969,727,2.604,732,1.897,736,2.047,740,1.353,873,1.607,1107,1.434,1152,2.777,1300,2.777,1506,4.719,1531,2.46,1577,2.631,1578,2.542,1584,3.743,1639,2.777,1640,2.337,1812,3.536,1910,3.536,1952,2.994,1954,3.066,1955,5.524,1956,4.719,1958,5.282,1962,3.284,1966,3.284,1985,2.994,2013,4.303,2014,4.303,2036,3.359,2037,2.994,2065,6.048,2150,3.589,2657,2.994,2663,3.284,3125,3.991,3141,4.719,3376,4.719,3377,3.284,3379,3.284,3380,3.284,3544,5.671,3553,6.66,3581,3.284,3608,5.352,3609,5.352,3610,5.352,3611,7.254,3612,6.265,3613,5.352,3614,4.719,3615,3.724,3616,5.352,3617,3.724,3618,6.265,3619,3.724,3620,3.724,3621,4.719,3622,3.724,3623,3.724,3624,3.724,3625,3.724,3626,3.724,3627,5.352,3628,3.724]],["title/modules/VisibilityToggleModule.html",[540,0.636,2050,3.076]],["body/modules/VisibilityToggleModule.html",[3,0.132,4,0.162,5,0.118,6,0.103,43,0.01,75,0.008,80,0.008,99,0.339,104,0.318,129,0.162,132,0.238,422,1.661,473,1.017,535,1.743,537,2.64,540,0.941,542,1.831,543,1.876,544,2.561,545,1.972,546,1.876,547,2.561,558,2.401,559,1.876,561,2.074,565,2.341,571,3.235,572,2.57,759,2.733,760,2.183,1991,5.738,1994,5.738,2050,6.239,2065,4.853,3385,6.813,3386,5.738,3544,4.551,3629,5.738,3630,5.738,3631,5.738]],["title/interfaces/XYZTriplet.html",[128,0.284,2144,2.52]],["body/interfaces/XYZTriplet.html",[0,1.152,3,0.048,4,0.059,5,0.043,6,0.038,8,1.057,11,0.317,15,2.043,16,0.912,18,0.229,19,0.403,20,1.722,22,2.331,23,0.863,29,1.025,35,0.421,37,2.822,40,0.454,41,0.465,43,0.01,44,1.023,45,0.697,47,0.726,48,0.702,49,1.361,50,1.256,53,4.189,56,1.241,65,1.025,69,0.949,71,1.213,75,0.004,80,0.004,85,0.421,88,0.912,90,2.02,91,1.344,96,3.243,99,0.308,102,1.344,104,0.116,105,2.421,106,1.64,107,1.025,108,1.025,109,0.966,112,0.685,113,1.592,114,0.84,119,1.491,121,1.501,122,1.501,123,0.912,124,0.863,125,1.459,127,1.747,128,0.307,129,0.165,131,0.995,132,0.087,133,1.386,138,1.385,140,1.297,141,0.674,148,3.251,154,2.731,155,1.774,159,1.317,160,1.283,161,1.025,162,1.092,172,1.569,173,1.569,176,1.661,181,0.84,183,1.661,194,0.606,211,0.493,244,1.243,245,1.419,255,1.541,256,2.263,258,2.511,280,0.976,283,1.361,289,1.776,303,0.726,321,0.652,344,2.01,350,1.566,374,2.879,379,3.129,382,3.419,391,1.569,394,1.783,397,0.668,402,1.637,406,1.42,425,2.961,428,1.895,434,2.257,444,1.459,449,1.143,452,1.143,456,0.636,493,1.827,518,1.773,521,1.043,535,0.636,618,1.692,667,3.141,674,1.361,679,1.545,680,0.938,681,0.912,682,0.912,685,2.512,691,2.051,695,0.966,696,3.234,699,1.168,771,1.869,782,1.306,788,1.422,792,1.306,793,1.128,796,1.306,798,1.491,799,1.092,802,3.39,803,1.569,804,1.256,805,1.747,806,1.128,807,1.361,827,1.869,855,4.187,856,4.187,862,3.63,866,1.361,873,2.735,875,1.569,889,2.302,890,1.491,891,1.491,902,4.187,910,3.728,912,1.491,913,1.491,914,1.491,917,3.14,933,2.178,977,4.474,989,3.352,990,2.845,991,1.361,997,1.381,1004,1.491,1011,1.569,1012,1.491,1014,1.569,1018,1.569,1049,1.306,1056,2.913,1079,3.161,1107,1.018,1187,4.474,1222,3.14,1231,4.986,1232,2.511,1414,1.422,1508,2.722,1517,1.361,1521,1.361,1556,2.986,1559,3.798,1615,2.386,1618,3.323,1619,3.949,1620,3.484,1621,3.266,1624,2.73,2020,1.422,2024,3.793,2025,4.432,2026,1.661,2070,1.869,2071,3.919,2107,2.386,2139,1.569,2140,1.569,2141,1.91,2142,4.187,2143,3.961,2144,4.279,2145,1.569,2146,4.139,2147,3.056,2148,2.982,2149,2.835,2150,3.961,2151,4.155,2152,2.386,2153,2.835,2154,1.491,2155,1.491,2156,1.91,2157,1.91,2158,6.497,2159,1.91,2160,2.275,2161,1.91,2162,1.361,2163,1.361,2164,2.835,2165,2.982,2166,1.91,2167,2.386,2168,1.771,2169,1.91,2170,1.91,2171,1.91,2172,2.386,2173,5.024,2174,1.91,2175,1.91,2176,1.91,2177,1.91,2178,1.91,2179,1.91,2180,1.91,2181,1.91,2182,1.91,2183,1.91,2184,1.91,2185,1.91,2186,1.91,2187,1.91,2188,1.91,2189,1.91,2190,1.91,2191,1.91,2192,1.91,2193,1.91,2194,1.91,2195,1.91,2196,1.91,2197,1.91,2198,1.771,2199,1.91,2200,1.91,2201,1.91,2202,1.91,2203,1.91,2204,5.349,2205,3.056,2206,1.91,2207,4.366,2208,1.91,2209,3.056,2210,3.82,2211,1.91,2212,5.251,2213,1.91,2214,1.91,2215,1.91,2216,1.91,2217,1.91,2218,1.91,2219,1.91,2220,1.91,2221,1.91,2222,1.91,2223,1.91,2224,1.91,2225,1.91,2226,1.91,2227,1.91,2228,1.91,2229,1.91,2230,1.771,2231,3.82,2232,4.366,2233,1.91,2234,1.91,2235,1.91,2236,1.91,2237,1.91,2238,1.91,2239,1.91,2240,1.91,2241,1.91,2242,1.91,2243,1.91,2244,1.91,2245,3.056,2246,1.91,2247,1.91,2248,1.91,2249,1.91,2250,1.91,2251,1.91,2252,1.91,2253,1.91,2254,3.323,2255,1.91,2256,1.91,2257,1.91,2258,1.91,2259,1.91,2260,1.91,2261,1.91,2262,3.056,2263,1.91,2264,1.569,2265,3.056,2266,3.056,2267,3.056,2268,1.91,2269,1.91,2270,1.91,2271,1.91,2272,1.91,2273,1.91,2274,1.91,2275,1.91,2276,1.91,2277,1.91,2278,1.91,2279,1.91,2280,1.91,2281,1.91,2282,1.91,2283,1.91,2284,2.275,2285,1.91,2286,1.91,2287,1.91,2288,1.422,2289,1.91,2290,4.366,2291,1.422,2292,1.91,2293,1.91,2294,1.91,2295,1.91,2296,1.91,2297,1.91,2298,3.056,2299,2.835,2300,1.91,2301,1.91,2302,1.91,2303,1.91]],["title/changelog.html",[2288,2.196,3632,2.949,3633,2.949]],["body/changelog.html",[3,0.129,5,0.038,8,1.538,19,0.223,24,4.294,38,0.513,43,0.007,45,0.312,46,0.365,48,1.021,50,2.679,59,2.415,60,1.476,71,0.539,74,1.696,75,0.004,77,4.669,80,0.007,83,2.576,85,0.374,90,2.512,102,2.123,123,2.432,125,1.326,128,0.427,137,1.324,139,5.479,140,1.279,141,0.899,142,2.282,154,0.788,167,1.324,181,1.792,187,1.101,194,0.539,195,0.52,197,0.881,199,0.673,201,0.656,207,1.425,210,0.881,211,1.121,212,0.526,224,1.899,240,1.476,244,0.69,255,1.066,256,0.639,261,2.415,267,0.97,269,0.539,277,2.304,285,1.209,288,2.282,301,2.415,302,2.95,303,0.837,304,0.526,308,0.939,321,0.579,328,2.296,350,2.392,367,4.93,370,1.037,389,1.209,396,0.727,397,1.572,404,1.209,408,2.581,412,0.656,423,2.512,425,3.044,430,1.538,434,2.407,440,0.884,445,1.324,449,0.444,452,0.727,456,1.357,470,2.168,488,0.639,493,0.948,498,0.608,529,0.903,531,0.608,543,1.612,546,0.608,570,0.939,576,2.168,580,3.965,598,4.924,605,6.159,613,1.324,643,3.251,644,3.617,652,2.576,673,4.552,681,0.81,682,0.81,685,3.349,696,2.513,701,5.51,725,3.348,786,3.508,793,2.407,797,1.476,804,1.116,827,3.834,839,1.979,849,3.544,873,0.911,905,1.324,989,1.446,990,1.263,993,1.476,1045,1.075,1076,2.576,1093,1.476,1098,1.696,1135,1.324,1136,2.512,1183,1.698,1184,1.574,1187,3.767,1202,2.777,1205,4.928,1212,1.861,1222,2.282,1225,1.696,1240,2.233,1241,1.394,1242,2.415,1255,1.263,1285,1.696,1290,1.696,1342,1.324,1350,1.476,1354,1.16,1398,1.861,1399,1.574,1402,1.696,1405,3.27,1406,1.861,1411,1.394,1412,1.696,1414,4.614,1440,2.625,1469,1.696,1476,1.696,1477,1.696,1517,1.979,1542,4.197,1543,1.476,1544,1.696,1545,2.512,1559,2.415,1566,2.777,1569,2.168,1575,1.826,1584,4.197,1585,1.394,1586,2.752,1604,1.861,1619,1.826,1624,2.569,1642,3.046,1650,4.493,1712,1.696,1753,2.777,1768,2.777,1892,1.861,1908,1.696,1910,1.394,1920,1.476,1922,1.574,1923,5.292,1964,1.861,1968,3.046,1984,2.777,2024,2.625,2025,3.544,2026,2.415,2035,1.476,2036,1.324,2072,1.394,2080,1.476,2102,1.476,2115,1.476,2130,1.861,2145,1.394,2148,2.168,2149,3.779,2288,2.625,2299,2.576,2324,1.16,2463,1.324,2479,1.394,2530,2.576,2583,1.394,2601,4.725,2621,2.415,2692,1.861,2701,1.861,2715,3.046,2716,3.046,2772,3.866,2903,1.861,2990,1.861,2992,3.046,2998,3.866,3044,1.574,3076,1.861,3119,5.093,3120,2.777,3122,1.696,3126,1.696,3130,4.074,3144,3.046,3196,1.696,3225,1.861,3250,1.861,3260,1.861,3278,1.861,3302,4.928,3336,1.861,3360,1.696,3421,3.046,3436,3.046,3444,3.046,3488,1.861,3497,6.196,3498,5.292,3511,3.866,3543,1.861,3569,1.861,3573,1.861,3614,1.861,3621,1.861,3633,2.777,3634,3.866,3635,3.866,3636,5.292,3637,3.046,3638,5.589,3639,6.034,3640,4.384,3641,5.292,3642,5.067,3643,2.11,3644,2.11,3645,2.11,3646,2.11,3647,6.358,3648,7.532,3649,2.11,3650,5.589,3651,6.001,3652,6.001,3653,7.04,3654,5.067,3655,3.454,3656,3.046,3657,3.454,3658,5.067,3659,5.589,3660,3.454,3661,5.067,3662,2.11,3663,6.611,3664,7.358,3665,7.604,3666,3.454,3667,2.11,3668,5.292,3669,3.454,3670,6.001,3671,1.861,3672,1.861,3673,2.11,3674,2.11,3675,3.454,3676,5.067,3677,2.11,3678,3.454,3679,2.11,3680,7.489,3681,2.11,3682,3.454,3683,1.861,3684,2.11,3685,3.046,3686,3.046,3687,3.454,3688,6.611,3689,2.11,3690,2.11,3691,2.11,3692,4.384,3693,3.454,3694,7.21,3695,2.11,3696,3.046,3697,3.454,3698,5.589,3699,4.384,3700,2.11,3701,3.454,3702,3.454,3703,2.11,3704,2.11,3705,4.384,3706,3.454,3707,4.384,3708,4.384,3709,3.454,3710,2.11,3711,3.454,3712,3.454,3713,6.335,3714,6.001,3715,2.11,3716,2.11,3717,2.11,3718,3.454,3719,2.11,3720,2.11,3721,2.11,3722,2.11,3723,4.384,3724,2.11,3725,2.11,3726,3.454,3727,5.589,3728,2.11,3729,3.454,3730,3.046,3731,2.11,3732,2.11,3733,2.11,3734,3.454,3735,2.11,3736,2.11,3737,2.11,3738,3.454,3739,2.11,3740,3.454,3741,4.384,3742,2.11,3743,2.11,3744,2.11,3745,2.11,3746,2.11,3747,7.604,3748,2.11,3749,1.861,3750,2.11,3751,3.454,3752,1.696,3753,2.11,3754,3.454,3755,5.067,3756,4.384,3757,2.11,3758,2.11,3759,2.11,3760,2.11,3761,4.928,3762,3.866,3763,4.928,3764,2.11,3765,4.384,3766,5.83,3767,7.489,3768,2.11,3769,2.11,3770,3.454,3771,3.866,3772,2.11,3773,2.11,3774,5.589,3775,2.11,3776,2.11,3777,2.11,3778,2.11,3779,3.454,3780,3.046,3781,6.335,3782,5.315,3783,2.11,3784,2.11,3785,2.11,3786,2.11,3787,2.11,3788,2.11,3789,3.454,3790,3.454,3791,2.11,3792,3.454,3793,2.11,3794,2.11,3795,2.11,3796,2.11,3797,1.861,3798,3.454,3799,3.454,3800,3.454,3801,2.11,3802,2.11,3803,2.11,3804,2.11,3805,3.454,3806,2.11,3807,2.11,3808,3.454,3809,3.454,3810,5.067,3811,2.11,3812,4.384,3813,3.454,3814,6.001,3815,3.454,3816,5.067,3817,2.11,3818,2.11,3819,3.454,3820,2.11,3821,2.11,3822,3.454,3823,2.11,3824,2.11,3825,2.11,3826,3.454,3827,2.11,3828,2.11,3829,2.11,3830,2.11,3831,2.11,3832,2.11,3833,2.11,3834,2.11,3835,3.454,3836,2.11,3837,2.11,3838,2.11,3839,4.384,3840,4.384,3841,1.861,3842,2.11,3843,2.11,3844,2.11,3845,2.11,3846,2.11,3847,3.454,3848,3.454,3849,3.454,3850,4.384,3851,2.11,3852,2.11,3853,2.11,3854,2.11,3855,3.454,3856,5.067,3857,2.11,3858,2.11,3859,4.384,3860,3.454,3861,2.11,3862,2.11,3863,3.454,3864,5.067,3865,2.11,3866,2.11,3867,2.11,3868,3.454,3869,2.11,3870,2.11,3871,2.11,3872,2.11,3873,2.11,3874,5.067,3875,2.11,3876,4.384,3877,5.067,3878,2.11,3879,4.384,3880,5.589,3881,3.454,3882,3.454,3883,3.454,3884,4.384,3885,5.067,3886,5.589,3887,3.454,3888,4.384,3889,2.11,3890,2.11,3891,6.335,3892,5.067,3893,6.843,3894,2.11,3895,2.11,3896,2.11,3897,3.454,3898,2.11,3899,2.11,3900,2.11,3901,2.11,3902,3.454,3903,2.11,3904,2.11,3905,3.866,3906,3.454,3907,2.11,3908,2.11,3909,2.11,3910,2.11,3911,2.11,3912,2.11,3913,2.11,3914,2.11,3915,2.11,3916,6.001,3917,4.384,3918,3.454,3919,2.11,3920,2.11,3921,2.11,3922,4.384,3923,2.11,3924,2.11,3925,3.454,3926,3.454,3927,3.454,3928,4.384,3929,2.11,3930,2.11,3931,2.11,3932,2.11,3933,2.11,3934,2.11,3935,1.861,3936,2.11,3937,2.11,3938,2.11,3939,2.11,3940,2.11,3941,2.11,3942,2.11,3943,2.11,3944,2.11,3945,2.11,3946,2.11,3947,2.11,3948,2.11,3949,2.11,3950,6.611,3951,2.11,3952,4.384,3953,4.384,3954,5.067,3955,3.454,3956,4.384,3957,2.11,3958,2.11,3959,3.454,3960,3.454,3961,2.11,3962,2.11,3963,2.11,3964,3.454,3965,2.11,3966,3.866,3967,2.11,3968,2.11,3969,2.11,3970,2.11,3971,2.11,3972,2.11,3973,2.11,3974,2.11,3975,2.11,3976,2.11,3977,2.11,3978,2.11,3979,2.11,3980,2.11,3981,2.11,3982,2.11,3983,2.11,3984,2.11,3985,2.11,3986,2.11,3987,2.11,3988,3.454,3989,2.11,3990,3.454,3991,2.11,3992,3.454,3993,5.067,3994,5.067,3995,3.454,3996,3.454,3997,2.11,3998,2.11,3999,2.11,4000,4.384,4001,2.11,4002,1.861,4003,2.11,4004,2.11,4005,2.11,4006,2.11,4007,3.454,4008,7.04,4009,4.384,4010,2.11,4011,3.454,4012,2.11,4013,2.11,4014,2.11,4015,2.11,4016,2.11,4017,2.11,4018,3.454,4019,5.586,4020,3.454,4021,2.11,4022,2.11,4023,2.11,4024,2.11,4025,2.11,4026,4.074,4027,2.11,4028,3.454,4029,2.11,4030,2.11,4031,2.11,4032,3.454,4033,2.11,4034,2.11,4035,2.11,4036,3.454,4037,3.454,4038,3.046,4039,2.11,4040,2.11,4041,2.11,4042,2.11,4043,2.11,4044,2.11,4045,2.11,4046,2.11,4047,1.861,4048,2.11,4049,2.11,4050,2.11,4051,2.11,4052,2.11,4053,2.11,4054,2.11,4055,1.861,4056,2.11,4057,3.454,4058,2.11,4059,2.11,4060,2.11,4061,2.11,4062,2.11,4063,2.11,4064,2.11,4065,2.11,4066,2.11,4067,2.11,4068,1.861,4069,3.454,4070,2.11,4071,2.11,4072,2.11,4073,2.11,4074,3.454,4075,1.861,4076,2.11,4077,2.11,4078,2.11,4079,2.11,4080,2.11,4081,2.11,4082,2.11]],["title/coverage.html",[4026,4.836]],["body/coverage.html",[0,2.412,1,2.067,5,0.109,6,0.148,7,4.073,8,3.276,9,3.348,10,4.073,12,0.86,43,0.01,45,0.312,75,0.005,80,0.005,88,1.326,91,1.222,92,1.899,116,2.167,128,0.583,130,2.576,132,0.185,140,0.613,141,0.899,195,0.922,196,0.948,202,4.476,241,2.067,244,1.129,304,1.262,328,1.159,331,2.415,402,3.182,406,1.924,428,2.159,465,2.703,479,0.996,481,0.972,483,0.996,485,1.391,487,0.996,490,0.996,492,0.996,495,0.996,497,0.996,500,0.996,502,1.498,504,0.996,506,0.972,507,0.996,508,0.996,510,0.996,512,0.996,515,0.972,516,0.996,517,0.972,518,0.82,520,0.972,522,0.996,524,0.996,526,1.021,528,0.996,530,0.996,532,0.996,534,0.996,537,0.996,580,3.348,584,2.576,588,2.576,591,3.965,594,2.576,606,3.779,607,3.779,664,2.776,667,1.826,668,4.197,669,3.965,670,4.669,684,2.576,769,2.415,770,4.862,800,1.641,802,1.759,805,1.587,806,3.141,808,2.415,810,2.415,811,2.415,990,3.033,1043,2.415,1044,2.776,1048,4.073,1053,2.256,1071,1.49,1086,1.698,1155,3.045,1260,3.045,1332,2.167,1333,4.418,1339,2.167,1346,2.167,1347,2.167,1366,2.415,1368,3.965,1369,2.576,1393,2.576,1394,4.623,1395,4.073,1396,4.073,1413,2.415,1503,2.776,1504,2.776,1505,3.045,1538,2.776,1539,3.045,1542,2.415,1551,2.167,1552,2.167,1554,2.776,1556,1.899,1557,3.045,1558,3.045,1562,2.776,1563,2.576,1564,3.045,1613,4.923,1615,2.167,1623,2.576,1627,3.045,1652,3.544,1659,2.576,1660,3.779,1661,4.073,1670,2.282,1734,2.776,1736,4.476,1770,2.776,1897,2.776,1898,2.576,1899,3.045,1950,2.776,1951,2.576,1952,4.073,1995,2.776,1996,4.073,2012,7.676,2020,2.067,2060,3.348,2063,2.576,2065,2.576,2068,4.862,2070,1.698,2078,2.167,2136,2.576,2137,2.776,2138,2.776,2139,2.282,2140,4.651,2143,2.903,2144,1.979,2254,2.415,2291,2.067,2304,3.779,2314,2.576,2349,4.623,2350,4.623,2368,2.415,2438,4.476,2508,2.067,2510,2.282,2578,3.544,2579,2.415,2580,3.045,2672,2.415,2675,2.776,2676,3.045,2731,4.623,2768,2.776,2769,4.825,2782,2.776,2963,3.965,2964,2.576,2965,4.073,3007,3.348,3041,2.576,3070,2.776,3102,3.965,3105,3.965,3107,2.576,3109,4.93,3113,4.197,3114,4.476,3116,2.576,3189,4.197,3190,2.576,3223,2.576,3224,2.776,3313,2.776,3324,2.776,3343,3.779,3344,3.779,3347,4.923,3348,3.045,3402,4.073,3456,3.045,3487,3.544,3513,3.045,3541,3.045,3542,3.045,3544,3.544,3545,3.045,3730,3.045,4026,2.776,4068,5.292,4083,3.454,4084,3.454,4085,7.958,4086,3.454,4087,3.454,4088,5.067,4089,5.067,4090,7.604,4091,7.604,4092,6.611,4093,3.454,4094,5.067,4095,3.454,4096,8.569,4097,3.454,4098,3.454,4099,6.611,4100,3.454,4101,3.454,4102,5.067,4103,3.454,4104,3.454,4105,5.067,4106,3.454,4107,3.454,4108,3.454,4109,3.454,4110,3.454,4111,3.045,4112,3.454,4113,3.454,4114,3.454,4115,3.454,4116,3.045,4117,3.454,4118,3.454,4119,3.454,4120,3.454,4121,3.454,4122,3.454,4123,3.454,4124,3.454,4125,3.454,4126,3.454,4127,7.04,4128,5.067,4129,6.611,4130,3.454,4131,3.454,4132,3.045,4133,3.454,4134,3.454,4135,5.067,4136,5.067,4137,3.454,4138,3.454,4139,3.454,4140,3.454,4141,5.829,4142,3.454,4143,3.045,4144,3.045,4145,3.045,4146,3.454,4147,3.454]],["title/dependencies.html",[543,1.526,3752,2.949]],["body/dependencies.html",[5,0.098,22,1.767,43,0.01,72,4.345,75,0.007,80,0.007,102,2.827,104,0.264,109,2.197,110,5.541,112,1.558,269,1.759,543,1.558,567,4.766,575,4.554,576,4.325,618,2.406,643,2.568,680,2.997,681,2.075,682,2.075,760,1.814,776,3.392,779,4.031,780,4.031,788,3.236,997,1.964,1224,4.766,1225,4.345,1302,4.345,1410,3.78,1616,4.345,1954,3.948,2198,4.031,2333,3.392,2776,4.766,2779,4.766,2787,4.345,3259,4.345,3315,4.766,3317,4.766,3318,6.077,3320,4.766,3338,4.766,3496,4.345,3540,4.766,3672,4.766,3696,4.766,3763,6.077,3905,4.766,4148,5.405,4149,5.405,4150,5.405,4151,5.405,4152,5.405,4153,5.405,4154,5.405,4155,8.768,4156,5.405,4157,6.892,4158,5.405,4159,5.405,4160,5.405,4161,5.405,4162,5.405,4163,5.405,4164,5.405,4165,5.405,4166,5.405,4167,7.991,4168,5.405,4169,6.892,4170,5.405,4171,5.405,4172,5.405,4173,7.588,4174,5.405,4175,5.405,4176,5.405,4177,5.405,4178,5.405,4179,5.405,4180,5.405,4181,5.405,4182,6.892,4183,7.588,4184,5.405,4185,5.405,4186,5.405,4187,5.405,4188,5.405,4189,6.892,4190,5.405,4191,6.892,4192,5.405,4193,5.405,4194,5.405,4195,5.405,4196,5.405,4197,5.405,4198,5.405,4199,5.405,4200,5.405,4201,5.405,4202,4.766,4203,5.405,4204,5.405,4205,5.405,4206,5.405,4207,5.405,4208,6.892,4209,5.405,4210,5.405,4211,5.405,4212,5.405,4213,5.405,4214,5.405,4215,5.405,4216,5.405,4217,5.405,4218,5.405,4219,5.405,4220,5.405,4221,5.405,4222,5.405,4223,5.405,4224,5.405,4225,5.405,4226,5.405,4227,5.405,4228,5.405,4229,5.405,4230,5.405,4231,5.405,4232,5.405,4233,5.405,4234,5.405,4235,5.405,4236,5.405,4237,5.405,4238,5.405,4239,6.892,4240,5.405,4241,5.405,4242,5.405,4243,5.405,4244,5.405,4245,5.405,4246,5.405,4247,5.405,4248,5.405,4249,5.405,4250,5.405,4251,5.405,4252,5.405]],["title/miscellaneous/functions.html",[4253,2.423,4254,4.668]],["body/miscellaneous/functions.html",[6,0.138,11,0.85,18,0.615,22,2.085,42,2.106,43,0.009,44,1.186,45,0.737,46,1.498,55,1.779,61,4.46,69,0.827,75,0.008,80,0.008,86,1.248,244,2.085,256,2.313,411,2.045,425,2.317,465,2.448,580,5.044,606,4.756,607,5.693,651,5.623,664,6.137,770,4.213,774,5.128,777,4.756,781,4.791,806,3.029,815,4.756,839,4.374,1042,4.791,1044,6.137,1048,5.127,1112,4.213,1113,4.756,1119,5.623,1122,5.623,1613,4.46,1625,5.127,2349,4.46,2350,5.339,2351,5.339,2354,4.756,2375,4.756,4111,6.732,4116,6.732,4132,6.732,4253,4.213,4254,5.623,4255,6.377,4256,5.623,4257,5.623,4258,5.623,4259,6.377,4260,6.377]],["title/index.html",[18,0.354,2288,2.196,3632,2.949]],["body/index.html",[3,0.171,43,0.007,75,0.007,80,0.007,90,2.293,102,2.046,125,2.221,128,0.464,194,1.476,195,0.594,211,1.179,267,2.659,303,1.105,328,2.627,372,3.536,425,2.845,433,2.497,445,3.631,598,5.728,605,5.031,644,2.844,672,2.947,996,5.475,1183,3.536,1240,3.664,1542,4.046,1584,5.031,1585,3.822,1650,4.651,2601,5.365,3497,7.182,3633,4.651,3634,6.343,3635,6.343,3636,7.825,3639,5.101,3641,5.101,3648,6.903,3671,7.222,3683,6.343,3685,6.343,3686,7.222,3749,5.101,3761,7.428,3762,7.428,3766,6.343,3771,5.101,3780,6.343,3782,4.651,3797,5.101,3841,6.343,4038,5.101,4047,5.101,4075,5.101,4261,7.193,4262,5.785,4263,5.785,4264,5.785,4265,6.343,4266,5.785,4267,5.785,4268,5.785,4269,7.193,4270,7.193,4271,7.193,4272,7.829,4273,5.785,4274,5.785,4275,7.829,4276,5.785,4277,5.785,4278,7.193,4279,5.785,4280,5.785,4281,5.785,4282,7.193,4283,5.785,4284,5.785,4285,5.785,4286,5.785,4287,5.785,4288,7.193,4289,5.785,4290,5.785,4291,7.193,4292,5.785,4293,7.193,4294,7.193,4295,5.785,4296,5.785,4297,5.785,4298,5.785,4299,5.785,4300,5.785,4301,5.785,4302,5.785,4303,5.785,4304,5.785,4305,5.785,4306,5.785,4307,5.785,4308,5.785,4309,5.785,4310,5.785]],["title/license.html",[2288,2.196,3632,2.949,4311,3.234]],["body/license.html",[43,0.008,75,0.008,80,0.008,250,2.785,422,1.647,598,4.513,1093,4.513,1098,6.602,1107,1.729,1188,3.547,1240,3.916,1542,4.513,1912,5.69,2072,4.263,2075,4.513,2508,3.863,2875,5.188,3668,6.779,3935,6.779,4002,5.69,4019,5.69,4055,5.69,4202,5.69,4265,7.965,4311,5.69,4312,6.453,4313,8.212,4314,6.453,4315,6.453,4316,7.688,4317,6.453,4318,6.453,4319,6.453,4320,6.453,4321,6.453,4322,7.688,4323,6.453,4324,6.453,4325,6.453,4326,6.453,4327,6.453,4328,6.453,4329,6.453,4330,6.453,4331,6.453,4332,6.453,4333,6.453,4334,7.688,4335,6.453,4336,6.453,4337,6.453,4338,6.453,4339,6.453,4340,7.688,4341,6.453,4342,6.453,4343,6.453,4344,6.453,4345,6.453,4346,6.453,4347,6.453,4348,6.453,4349,6.453,4350,6.453,4351,6.453,4352,6.453,4353,6.453,4354,6.453,4355,6.453,4356,6.453,4357,6.453,4358,6.453,4359,6.453,4360,6.453,4361,6.453,4362,6.453,4363,6.453]],["title/modules.html",[542,1.692]],["body/modules.html",[43,0.008,75,0.008,80,0.008,541,4.512,542,1.702,551,4.231,552,4.231,553,4.231,554,4.231,555,4.231,556,4.231,557,4.231,576,5.848,754,4.231,1040,4.231,1361,4.231,1362,4.231,1374,4.231,1375,4.231,1408,6.949,1532,4.512,1605,4.231,1942,4.231,1987,4.231,2048,3.997,2049,4.231,2050,4.231,2664,4.231,2669,3.997,3031,4.231,3036,4.231,3095,4.231,3096,4.231,3097,4.231,3098,4.231,3535,4.512,3647,8.217,3966,6.521,4364,9.33,4365,7.395]],["title/overview.html",[4366,5.304]],["body/overview.html",[2,2.349,43,0.01,75,0.006,80,0.006,194,1.001,196,1.77,197,1.001,241,3.86,422,1.001,434,1.864,473,0.613,479,1.859,481,2.223,483,2.278,485,2.216,487,2.278,490,2.278,492,2.278,495,2.278,497,2.278,500,2.278,504,2.278,506,2.223,507,2.278,508,2.278,510,2.278,512,2.278,515,2.223,516,2.278,517,2.223,520,2.223,522,2.278,524,2.278,526,2.335,528,2.278,530,2.278,532,2.278,534,2.278,537,2.278,540,0.567,541,6.62,542,1.104,543,1.131,544,1.219,545,1.189,546,1.131,547,1.219,548,3.459,549,3.459,550,3.459,551,5.821,552,5.742,553,6.036,554,5.375,555,6.106,556,5.645,557,6.208,558,1.726,559,1.131,754,5.375,755,3.459,756,3.459,757,3.459,1040,4.51,1357,3.459,1358,3.459,1359,3.459,1360,3.459,1361,5.645,1362,5.375,1372,3.459,1373,3.459,1374,4.51,1375,5.176,1532,5.52,1533,3.459,1534,3.459,1535,3.459,1547,3.459,1548,3.459,1549,3.459,1605,5.375,1606,3.459,1607,3.459,1608,3.459,1654,3.459,1655,3.459,1656,3.459,1735,3.154,1942,5.375,1943,3.459,1944,3.459,1945,3.459,1984,4.466,1987,5.375,1988,3.459,1989,3.459,1990,3.459,2044,3.459,2045,3.459,2046,3.459,2047,3.459,2048,5.221,2049,5.375,2050,5.526,2344,3.459,2345,3.459,2346,3.459,2664,5.645,2665,3.459,2666,3.459,2667,3.459,2668,3.459,2669,5.562,2722,3.459,2724,3.459,2725,3.459,2760,3.459,2761,3.459,2763,3.459,3031,5.645,3032,3.459,3033,3.459,3034,3.459,3035,3.459,3036,5.375,3067,3.459,3068,3.459,3069,3.459,3091,3.459,3092,3.459,3093,3.459,3094,3.459,3095,5.375,3096,5.375,3097,5.375,3098,5.375,3146,3.459,3147,3.459,3148,3.459,3219,3.459,3220,3.459,3221,3.459,3306,3.459,3307,3.459,3309,3.459,3381,3.459,3382,3.459,3383,3.459,3388,3.459,3389,3.459,3390,3.459,3395,3.459,3396,3.459,3530,3.459,3531,3.459,3532,3.459,3535,5.52,3536,3.459,3537,3.459,3538,3.459,3603,3.459,3604,3.459,3605,3.459,3629,3.459,3630,3.459,3631,3.459,4366,3.459,4367,3.923,4368,3.923]],["title/properties.html",[19,0.561,3752,2.949]],["body/properties.html",[19,0.764,43,0.009,75,0.008,80,0.008,3637,6.364,3782,5.802]],["title/miscellaneous/typealiases.html",[4253,2.423,4369,5.294]],["body/miscellaneous/typealiases.html",[6,0.138,8,3.177,12,1.423,15,2.301,18,0.551,22,2.334,43,0.009,45,0.784,47,1.091,69,0.741,71,1.458,75,0.007,80,0.007,115,4.715,197,1.458,207,2.008,305,3.923,308,2.543,328,2.395,411,2.085,415,3.774,423,3.272,425,2.593,449,1.502,452,1.502,465,2.988,580,5.656,606,4.26,607,6.384,618,2.543,625,4.991,630,6.293,637,5.738,649,6.293,691,2.465,827,3.508,977,4.479,989,3.414,991,4.089,1053,3.177,1056,2.625,1059,3.419,1067,3.508,1071,3.359,1086,3.508,1187,3.585,1231,4.991,1232,4.715,1332,3.585,1333,3.585,1334,4.089,1335,3.995,1336,3.995,1337,3.774,1339,3.585,1341,4.808,1342,4.479,1343,5.444,1346,3.585,1347,3.585,1348,5.117,1351,5.444,1352,3.995,1353,3.995,1354,4.279,1366,3.995,1736,4.26,1758,5.037,1759,6.293,1760,6.293,1761,5.037,1762,6.293,1763,5.037,1764,6.293,1765,5.037,1766,5.037,1767,5.037,1768,4.592,2136,4.26,2137,4.592,2138,5.738,2140,3.774,2168,4.26,2422,2.808,3223,4.26,3224,5.738,3343,4.26,3344,5.323,4253,3.774,4258,7.401,4370,5.712,4371,7.548,4372,6.864,4373,5.712,4374,5.712,4375,5.712,4376,6.293,4377,5.712]],["title/miscellaneous/variables.html",[4253,2.423,4378,4.668]],["body/miscellaneous/variables.html",[1,1.983,6,0.133,14,1.821,18,0.319,42,0.806,43,0.01,44,1.252,45,0.757,47,1.237,69,0.43,70,2.317,71,1.653,75,0.005,77,3.506,80,0.007,84,2.317,85,1.569,86,1.686,88,1.272,90,1.566,91,1.172,92,1.821,116,2.079,127,1.522,131,1.387,132,0.214,137,2.079,140,1.039,164,1.898,188,2.317,203,5.474,212,0.825,224,2.701,244,1.083,245,1.237,255,0.806,321,0.909,341,5.734,374,1.785,379,1.94,382,2.12,394,0.887,402,1.692,406,1.531,412,1.029,428,1.869,440,3.811,449,1.456,452,1.456,518,1.166,521,0.909,584,3.664,667,1.751,668,2.317,669,2.188,670,3.878,683,2.47,684,3.664,685,3.425,691,2.12,740,1.204,770,2.188,800,1.574,805,1.522,810,3.436,811,3.436,812,2.47,813,2.47,814,2.47,829,2.317,873,1.429,997,2.128,1043,3.436,1045,1.687,1049,1.821,1053,2.187,1071,2.527,1333,2.079,1337,2.188,1393,2.47,1394,2.317,1395,2.663,1396,3.95,1399,2.47,1407,6.814,1411,2.188,1412,2.663,1413,3.436,1414,2.941,1415,2.921,1416,8.027,1417,8.027,1418,2.921,1419,2.921,1420,2.921,1421,4.332,1422,2.921,1423,2.921,1424,2.921,1425,2.921,1426,2.921,1427,2.921,1428,2.921,1429,2.921,1430,2.921,1431,2.921,1432,2.921,1433,2.921,1434,5.713,1435,5.713,1436,6.102,1437,6.102,1438,2.47,1439,2.921,1440,3.878,1441,2.921,1442,2.921,1443,2.921,1444,2.921,1445,3.664,1446,3.664,1447,4.332,1448,2.921,1449,2.921,1450,2.921,1451,2.921,1452,6.102,1453,2.921,1454,4.332,1455,2.921,1456,2.921,1457,2.921,1458,2.921,1459,2.921,1460,5.713,1461,4.332,1462,2.921,1463,2.921,1464,2.921,1465,2.921,1466,2.921,1467,2.921,1468,2.921,1469,2.663,1470,2.921,1471,2.921,1472,2.921,1473,2.921,1474,2.921,1475,4.332,1476,3.95,1477,2.663,1478,2.921,1479,2.47,1480,2.921,1481,2.921,1482,2.921,1483,2.921,1484,2.921,1485,2.921,1486,2.921,1487,5.713,1488,2.921,1489,2.921,1490,5.713,1491,2.921,1492,2.921,1493,2.317,1494,2.921,1495,2.921,1496,5.164,1497,2.921,1498,4.332,1499,2.921,1500,2.921,1501,2.921,1502,2.921,1517,1.898,1551,3.083,1552,3.676,1613,2.317,1617,2.941,1623,3.664,1624,2.978,1670,2.188,1736,2.47,1769,2.921,1770,3.95,1771,2.921,1772,2.921,2020,2.941,2068,2.188,2078,2.079,2081,2.317,2082,3.246,2083,3.246,2084,2.317,2085,2.317,2140,2.188,2143,1.898,2152,2.079,2165,2.079,2167,2.079,2172,3.083,2769,2.663,2782,3.95,2804,2.921,3102,2.188,3105,2.188,3109,2.47,3113,2.317,3114,3.664,3116,3.664,3189,2.317,3190,3.664,3313,2.663,3323,2.921,3324,3.95,3347,2.317,3402,2.663,3435,2.921,3656,2.921,4141,5.713,4143,4.332,4144,4.332,4145,4.332,4253,2.188,4256,4.332,4257,4.332,4371,2.921,4372,2.921,4376,2.921,4378,2.921,4379,3.312,4380,3.312,4381,3.312,4382,5.856,4383,3.312,4384,3.312,4385,3.312,4386,4.913,4387,3.312,4388,3.312,4389,3.312]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.075rem",{"_index":3625,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.1.0",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["0.125rem",{"_index":2659,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["0.14.3",{"_index":4252,"title":{},"body":{"dependencies.html":{}}}],["0.16",{"_index":2662,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["0.1rem",{"_index":1598,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["0.1s",{"_index":3602,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.2.0",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":4191,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1640,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.25s",{"_index":3303,"title":{},"body":{"components/StageNavComponent.html":{}}}],["0.2rem",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2s",{"_index":3626,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.375rem",{"_index":2028,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["0.3rem",{"_index":1597,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.3s",{"_index":3601,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.4s",{"_index":3600,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.5",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["0.5.0",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.5s",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["0.6.0",{"_index":4038,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.6s",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{}}}],["0.75rem",{"_index":745,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{}}}],["0.875rem",{"_index":3305,"title":{},"body":{"components/StageNavComponent.html":{}}}],["0.9rem",{"_index":2041,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["0/1",{"_index":4085,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":4093,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":4084,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4114,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4089,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4109,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4088,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4110,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["05rem",{"_index":3486,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["06",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":750,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["0rem",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{}}}],["1",{"_index":187,"title":{"components/ContentComponent-1.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["1)[0",{"_index":2560,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["1.0",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["1.0.0",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":4188,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4195,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":4247,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":3481,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":3628,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["1.14.10",{"_index":4199,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4224,"title":{},"body":{"dependencies.html":{}}}],["1.1875rem",{"_index":3087,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1.2.0",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":4198,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":4190,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":2657,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.2rem",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["1.3.1",{"_index":4235,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":3905,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":4211,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.6.0",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["1.75rem",{"_index":2040,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["1.9375rem",{"_index":3086,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1/1",{"_index":4096,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4115,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4107,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":685,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":4222,"title":{},"body":{"dependencies.html":{}}}],["10.5rem",{"_index":1601,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["10/11",{"_index":4139,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":4095,"title":{},"body":{"coverage.html":{}}}],["10/22",{"_index":4087,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":916,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["10rem",{"_index":2658,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["10x",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3302,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["11.1.1",{"_index":4207,"title":{},"body":{"dependencies.html":{}}}],["11/20",{"_index":4104,"title":{},"body":{"coverage.html":{}}}],["118",{"_index":930,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["11rem",{"_index":1247,"title":{},"body":{"components/ContentComponent.html":{}}}],["12",{"_index":3639,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.75rem",{"_index":1246,"title":{},"body":{"components/ContentComponent.html":{}}}],["12/12",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["13/13",{"_index":4131,"title":{},"body":{"coverage.html":{}}}],["13/17",{"_index":4118,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":4225,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":4152,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":4149,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":3380,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["14rem",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["15",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["15.313.0",{"_index":4151,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":4128,"title":{},"body":{"coverage.html":{}}}],["15rem",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["16",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["16.3.1",{"_index":4201,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["17.0",{"_index":4162,"title":{},"body":{"dependencies.html":{}}}],["17.0.0",{"_index":4228,"title":{},"body":{"dependencies.html":{}}}],["17.0.5",{"_index":4157,"title":{},"body":{"dependencies.html":{}}}],["17.0.9",{"_index":4155,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":4227,"title":{},"body":{"dependencies.html":{}}}],["17/17",{"_index":4119,"title":{},"body":{"coverage.html":{}}}],["17/20",{"_index":4112,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":4102,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":992,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["1px",{"_index":1638,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["1s",{"_index":1251,"title":{},"body":{"components/ContentComponent.html":{}}}],["2",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"overview.html":{}}}],["2.0",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":4154,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":4204,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":3480,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.06rem",{"_index":3627,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["2.1.0",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["2.25rem",{"_index":1531,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["2.3.0",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["2.5rem",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2.6.2",{"_index":4249,"title":{},"body":{"dependencies.html":{}}}],["2.688rem",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["2.8.0",{"_index":4187,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4165,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":4197,"title":{},"body":{"dependencies.html":{}}}],["2.9rem",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["2.awsapprunner.com/get",{"_index":814,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["2/2",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2254,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["20/20",{"_index":4126,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":932,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2019",{"_index":4019,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["20rem",{"_index":739,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["21",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["210",{"_index":931,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["21rem",{"_index":2043,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["22",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["232f3a",{"_index":1248,"title":{},"body":{"components/ContentComponent.html":{}}}],["24",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":2039,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["24px.svg",{"_index":1496,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":929,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25.5rem",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["250",{"_index":3058,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["255",{"_index":874,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25rem",{"_index":751,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{}}}],["25s",{"_index":3482,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["26",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["27rem",{"_index":2042,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["29/29",{"_index":4142,"title":{},"body":{"coverage.html":{}}}],["2]).rotatey(toradians(0",{"_index":1000,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2px",{"_index":737,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2rem",{"_index":1243,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["3",{"_index":3120,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["3.0.0",{"_index":3763,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":4173,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":4230,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":4180,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":1600,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["3.6",{"_index":4288,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":4178,"title":{},"body":{"dependencies.html":{}}}],["3.625rem",{"_index":3085,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3.7.0",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["3.75rem",{"_index":3077,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3.8.0",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["3.8.1",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["3.8.2",{"_index":4183,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":3637,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3/3",{"_index":4091,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":4106,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1984,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{},"overview.html":{}}}],["3000",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["30rem",{"_index":3528,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["31",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["32rem",{"_index":3088,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["33",{"_index":4105,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":4368,"title":{},"body":{"overview.html":{}}}],["35/41",{"_index":4101,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":827,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["3px",{"_index":2031,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["3rem",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["4",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":4270,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":4220,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":4203,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":4193,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":4240,"title":{},"body":{"dependencies.html":{}}}],["4.5rem",{"_index":742,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["4/12",{"_index":4113,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":4090,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4123,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":4108,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1193,"title":{},"body":{"components/ContentComponent.html":{}}}],["400",{"_index":733,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["40vh",{"_index":3597,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["42/44",{"_index":4133,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":4086,"title":{},"body":{"coverage.html":{}}}],["46rem",{"_index":3524,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["47rem",{"_index":2655,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["4rem",{"_index":1637,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{}}}],["4th",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":3656,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":4182,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":1253,"title":{},"body":{"components/ContentComponent.html":{}}}],["5.688rem",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["5/5",{"_index":4099,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4130,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1652,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalLauncherComponent.html":{},"coverage.html":{}}}],["500",{"_index":1941,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{}}}],["55",{"_index":4103,"title":{},"body":{"coverage.html":{}}}],["55rem",{"_index":1259,"title":{},"body":{"components/ContentComponent.html":{}}}],["58",{"_index":4097,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":730,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["5s",{"_index":1331,"title":{},"body":{"components/ContentComponent-1.html":{},"components/VideoModalComponent.html":{}}}],["5th",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["6.11.2",{"_index":4233,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":4218,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":4092,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":4100,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":4125,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":2033,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["60rem",{"_index":3025,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["65vh",{"_index":3510,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["66",{"_index":4122,"title":{},"body":{"coverage.html":{}}}],["675rem",{"_index":3485,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["6px",{"_index":2660,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["6rem",{"_index":3078,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["6s",{"_index":736,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["7.0.0",{"_index":4213,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":4241,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":4098,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4134,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4121,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":2717,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["75",{"_index":4124,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":4117,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4120,"title":{},"body":{"coverage.html":{}}}],["7rem",{"_index":1252,"title":{},"body":{"components/ContentComponent.html":{}}}],["8",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":4244,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":4219,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":4177,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":4167,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":4127,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4138,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":4094,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4068,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["875rem",{"_index":3304,"title":{},"body":{"components/StageNavComponent.html":{}}}],["88",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":4367,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":4250,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":4140,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":4129,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":990,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{}}}],["95",{"_index":3730,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["999",{"_index":3079,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["9]{4",{"_index":2557,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["9]{4}){3",{"_index":2558,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["9e9e9e",{"_index":1599,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["9rem",{"_index":3216,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["9th",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["_blocksize",{"_index":973,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_error",{"_index":1711,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":1807,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":3366,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["_latesttags",{"_index":21,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["_lighting",{"_index":1001,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_measuredmargin",{"_index":1837,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":1831,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":1074,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_name",{"_index":2307,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["_opened",{"_index":1803,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":975,"title":{},"body":{"interfaces/Collision.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_rotation",{"_index":974,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["aabb",{"_index":777,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["ability",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":3061,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["above",{"_index":4055,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["acc.concat(nodes",{"_index":882,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["accepting",{"_index":1891,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessible",{"_index":2381,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["accessing",{"_index":3279,"title":{},"body":{"components/StageNavComponent.html":{}}}],["accessors",{"_index":32,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["accordingly",{"_index":2241,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["accurate",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":2875,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"license.html":{}}}],["actions",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":2481,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ThemingService.html":{}}}],["actual_component",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["add",{"_index":3413,"title":{},"body":{"injectables/ThemingService.html":{}}}],["addclass",{"_index":3452,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":139,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{}}}],["added.add(id",{"_index":146,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.add(iri",{"_index":152,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.has(iri",{"_index":151,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addeventlistener('beforeunload",{"_index":2552,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["adding",{"_index":3608,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["additional",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["addregistration(registration",{"_index":2856,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["addressed",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":59,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["addsvgicon",{"_index":1715,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["addtag",{"_index":26,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtag(tag",{"_index":51,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtagraw",{"_index":27,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["addtagraw(tag",{"_index":57,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtags",{"_index":28,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtags(tags",{"_index":62,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["adjusting",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":1050,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["again",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1880,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["alert",{"_index":2528,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["aliases",{"_index":4370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["alignment",{"_index":2914,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["all_organs",{"_index":2152,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["all_organs.find((o",{"_index":2205,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["all_organs.find(info",{"_index":2427,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["allow",{"_index":3080,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["allowed",{"_index":1985,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["allows",{"_index":1910,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["along",{"_index":2243,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["alpha",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":1094,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["alt",{"_index":4274,"title":{},"body":{"index.html":{}}}],["always",{"_index":1117,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analagous",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["analytics",{"_index":682,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1380,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1384,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":2024,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["anatomicalstructures",{"_index":862,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["anatomicalstructuretagstate",{"_index":1,"title":{"injectables/AnatomicalStructureTagState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["anatomicalstructuretagstatemodel",{"_index":130,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["and/or",{"_index":4332,"title":{},"body":{"license.html":{}}}],["angle",{"_index":3226,"title":{},"body":{"components/StageNavComponent.html":{}}}],["angular",{"_index":102,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1302,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4156,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":1757,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":3433,"title":{},"body":{"injectables/ThemingService.html":{}}}],["angular/common",{"_index":760,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"components/VideoModalComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":773,"title":{},"body":{"interfaces/Collision.html":{},"modules/CoreModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["angular/compiler",{"_index":4158,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":104,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2333,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4159,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1949,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/checkbox",{"_index":3393,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["angular/material/chips",{"_index":3386,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/core",{"_index":764,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["angular/material/dialog",{"_index":2629,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["angular/material/divider",{"_index":2053,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/expansion",{"_index":2055,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["angular/material/form",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/icon",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/input",{"_index":762,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/radio",{"_index":2729,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/select",{"_index":1611,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/slide",{"_index":1993,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["angular/material/slider",{"_index":3152,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["angular/material/snack",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["angular/material/tooltip",{"_index":766,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["angular/platform",{"_index":575,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/RightSidebarModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4161,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":3540,"title":{},"body":{"modules/VideoModalModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1299,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animate('.5s",{"_index":1785,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":1307,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["animate(0",{"_index":1784,"title":{},"body":{"classes/InitializationState.html":{}}}],["animated",{"_index":3024,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":3055,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animation",{"_index":1769,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":1262,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":1263,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["anterior",{"_index":1232,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":3497,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app.component.scss",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app_bootstrap_listener",{"_index":3398,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":196,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":728,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["appears",{"_index":2732,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["appelement",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["applicable",{"_index":2147,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["application",{"_index":2990,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["application/json",{"_index":1026,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["applied",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["applyspatialplacement",{"_index":4111,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyspatialplacement(new",{"_index":2396,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["applyspatialplacement(tx",{"_index":2354,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["applythemeclass",{"_index":3405,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":3412,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":541,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1387,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":331,"title":{"interfaces/AppOptions.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["appropriate",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":479,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":1211,"title":{},"body":{"components/ContentComponent.html":{}}}],["arg",{"_index":1707,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":1708,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter(value",{"_index":1723,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":1720,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/StageNavComponent.html":{}}}],["arising",{"_index":4361,"title":{},"body":{"license.html":{}}}],["around",{"_index":3064,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["array",{"_index":1508,"title":{},"body":{"components/DetailsLabelComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["array.isarray(entity.placement",{"_index":906,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["array.isarray(reg.placement",{"_index":2821,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["arraytostring",{"_index":1515,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(details",{"_index":1530,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(inputarray",{"_index":1519,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arrow_drop_down",{"_index":3298,"title":{},"body":{"components/StageNavComponent.html":{}}}],["arrow_left",{"_index":3472,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":3471,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["as.id",{"_index":191,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name",{"_index":192,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name.tolowercase().indexof(text.tolowercase",{"_index":186,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["asct+b",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["aslookup",{"_index":2263,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["aslookup[iri",{"_index":2266,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assertions",{"_index":2170,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assets/icons/ico",{"_index":1501,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1495,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organ",{"_index":1416,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1498,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/reference",{"_index":2386,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["assigned",{"_index":157,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["assignment/selection",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":2072,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"license.html":{}}}],["astags",{"_index":3071,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["async",{"_index":1741,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["async)?.x",{"_index":1237,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.y",{"_index":1238,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.z",{"_index":1239,"title":{},"body":{"components/ContentComponent.html":{}}}],["asynchronously",{"_index":3499,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["atlas",{"_index":3635,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attach",{"_index":3462,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["attempts",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":2714,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["authors",{"_index":4353,"title":{},"body":{"license.html":{}}}],["auto",{"_index":741,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["autofocus",{"_index":2759,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["automatic",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":3966,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":1747,"title":{},"body":{"classes/InitializationState.html":{}}}],["awaited",{"_index":1737,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":4309,"title":{},"body":{"index.html":{}}}],["axis",{"_index":838,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["b",{"_index":1234,"title":{},"body":{"components/ContentComponent.html":{}}}],["back",{"_index":1636,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["backbutton",{"_index":1645,"title":{},"body":{"components/HeaderComponent.html":{}}}],["backend",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":1698,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["base",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1290,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["basehref",{"_index":612,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["basewebcomponent",{"_index":608,"title":{},"body":{"components/AppWebComponent.html":{}}}],["basic",{"_index":3841,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bbox",{"_index":1036,"title":{},"body":{"interfaces/Collision.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.left",{"_index":1828,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.overlaps(getnodebbox(model",{"_index":1039,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.right",{"_index":1827,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1405,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["beforeunloadevent",{"_index":2547,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["beforeunloadlistener",{"_index":2546,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["begin",{"_index":2991,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["behavior",{"_index":1249,"title":{},"body":{"components/ContentComponent.html":{}}}],["being",{"_index":3044,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["belong",{"_index":1560,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["belonging",{"_index":1561,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["beta",{"_index":3766,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["bind",{"_index":72,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"dependencies.html":{}}}],["binds",{"_index":3424,"title":{},"body":{"injectables/ThemingService.html":{}}}],["biomarker",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["black",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["bladder",{"_index":1415,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1418,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blank",{"_index":2464,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["blob([json",{"_index":2884,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["block",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["block.x",{"_index":2225,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["block_size_input",{"_index":709,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocks",{"_index":2149,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["blocksize",{"_index":667,"title":{"interfaces/BlockSize.html":{}},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blocksize.x",{"_index":943,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.y",{"_index":945,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.z",{"_index":947,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.z].map(n",{"_index":985,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksizechange",{"_index":694,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocksizeinputcomponent",{"_index":481,"title":{"components/BlockSizeInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blocksizeinputmodule",{"_index":754,"title":{"modules/BlockSizeInputModule.html":{}},"body":{"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["blood",{"_index":1419,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1420,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":643,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyuimodule",{"_index":1364,"title":{},"body":{"modules/ContentModule.html":{}}}],["bold",{"_index":2037,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["bone",{"_index":1421,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["booleaninput",{"_index":1755,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":545,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["border",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["both",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["bottom",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["bounds",{"_index":1158,"title":{},"body":{"components/ContentComponent.html":{}}}],["box",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["bp",{"_index":655,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.boolean",{"_index":662,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.function",{"_index":665,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.json",{"_index":663,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.stringarray",{"_index":666,"title":{},"body":{"components/AppWebComponent.html":{}}}],["brain",{"_index":1424,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1425,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["breaking",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["breaks",{"_index":165,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["breast.svg",{"_index":1428,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bringing",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["bronchus",{"_index":1429,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bronchus.svg",{"_index":1431,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":4364,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browseranimationsmodule",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browserify",{"_index":4242,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":574,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":4266,"title":{},"body":{"index.html":{}}}],["buildjsonld",{"_index":2916,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["buildmetadata",{"_index":2904,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["builds",{"_index":2903,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["builtin_parsers",{"_index":645,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.json(value",{"_index":653,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["button.component",{"_index":1555,"title":{},"body":{"modules/DrawerModule.html":{},"modules/ReviewButtonModule.html":{}}}],["button.component.html",{"_index":2970,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":2969,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":2965,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:104",{"_index":3003,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:119",{"_index":2996,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:19",{"_index":3460,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:21",{"_index":2995,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:22",{"_index":3461,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:26",{"_index":2984,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:27",{"_index":3470,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:31",{"_index":2983,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:37",{"_index":2980,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:38",{"_index":3467,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3466,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:42",{"_index":2985,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts:47",{"_index":2993,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:54",{"_index":2988,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:59",{"_index":2978,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:65",{"_index":3464,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:73",{"_index":3001,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:75",{"_index":3465,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:85",{"_index":3463,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:88",{"_index":3005,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:97",{"_index":3000,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.module",{"_index":3112,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["button.module.ts",{"_index":3037,"title":{},"body":{"modules/ReviewButtonModule.html":{}}}],["button/review",{"_index":2964,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["button/toggle",{"_index":1554,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["buttons",{"_index":1223,"title":{},"body":{"components/ContentComponent.html":{}}}],["c",{"_index":4314,"title":{},"body":{"license.html":{}}}],["cache",{"_index":3672,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cacheable",{"_index":4246,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":1829,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":3484,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["calc(50",{"_index":1789,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":1822,"title":{},"body":{"classes/InitializationState.html":{}}}],["call",{"_index":1721,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["callback",{"_index":1241,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{}}}],["called",{"_index":1753,"title":{},"body":{"classes/InitializationState.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["calling",{"_index":3266,"title":{},"body":{"components/StageNavComponent.html":{}}}],["calls",{"_index":2692,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["cancel",{"_index":2741,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/TagListComponent.html":{}}}],["cancelregistration",{"_index":613,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"changelog.html":{}}}],["cancelregistrationcallback",{"_index":625,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"miscellaneous/typealiases.html":{}}}],["candidate",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":779,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["card",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{},"index.html":{}}}],["cases",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":654,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["catcherror",{"_index":790,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ccf",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":2926,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ccfdrawer",{"_index":1777,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":1052,"title":{},"body":{"components/ContainerComponent.html":{}}}],["cdk",{"_index":1602,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["cdr",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cdr.markforcheck",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cell",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["centimeter",{"_index":2357,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["certain",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["cff",{"_index":1330,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["change",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":1136,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectorref",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["changelog",{"_index":3633,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changerotation",{"_index":3133,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["changerotation(newrotation",{"_index":3131,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changes",{"_index":181,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["changing",{"_index":3246,"title":{},"body":{"components/StageNavComponent.html":{}}}],["channel",{"_index":1056,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["channels",{"_index":2107,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["charge",{"_index":4320,"title":{},"body":{"license.html":{}}}],["check",{"_index":2298,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["checknamevalid",{"_index":2590,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["checknamevalid(event",{"_index":2599,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["checks",{"_index":1289,"title":{},"body":{"components/ContentComponent-1.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{}}}],["chevron_left",{"_index":1635,"title":{},"body":{"components/HeaderComponent.html":{}}}],["child",{"_index":744,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["chip",{"_index":3377,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["chip__action",{"_index":3622,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["chip__text",{"_index":3379,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["choose",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":4356,"title":{},"body":{"license.html":{}}}],["class",{"_index":132,"title":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":3457,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":1270,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["classend",{"_index":1795,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1735,"title":{},"body":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"overview.html":{}}}],["classname",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["clean",{"_index":2115,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["cleans",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cleanup",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":3059,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["clearhaschanges",{"_index":2443,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["clears",{"_index":3564,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["click",{"_index":1920,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{}}}],["clicking",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":3261,"title":{},"body":{"components/StageNavComponent.html":{}}}],["client",{"_index":3671,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["close",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["closed",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["closedialog",{"_index":2591,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["closeexpanded",{"_index":1856,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeopendone",{"_index":1863,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1844,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{}}}],["cls",{"_index":3415,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":690,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["cluster_appmodule",{"_index":548,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":549,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":550,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule",{"_index":755,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_declarations",{"_index":756,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_exports",{"_index":757,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_contentmodule",{"_index":1357,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_declarations",{"_index":1358,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_exports",{"_index":1360,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_imports",{"_index":1359,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1372,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1373,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule",{"_index":1533,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_declarations",{"_index":1534,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_exports",{"_index":1535,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":1547,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":1549,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":1548,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule",{"_index":1606,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule_declarations",{"_index":1607,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule_exports",{"_index":1608,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":1654,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1656,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1655,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule",{"_index":1943,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule_declarations",{"_index":1945,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule_exports",{"_index":1944,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule",{"_index":1988,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_declarations",{"_index":1990,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_exports",{"_index":1989,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule",{"_index":2044,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_declarations",{"_index":2046,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_exports",{"_index":2047,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_imports",{"_index":2045,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule",{"_index":2344,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_declarations",{"_index":2345,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_exports",{"_index":2346,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule",{"_index":2665,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_declarations",{"_index":2667,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_exports",{"_index":2666,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_imports",{"_index":2668,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationmetadatamodule",{"_index":2722,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"overview.html":{}}}],["cluster_registrationmetadatamodule_declarations",{"_index":2724,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"overview.html":{}}}],["cluster_registrationmetadatamodule_exports",{"_index":2725,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"overview.html":{}}}],["cluster_registrationmetadatamodule_imports",{"_index":2723,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["cluster_registrationmodalmodule",{"_index":2760,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_declarations",{"_index":2763,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_exports",{"_index":2761,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_imports",{"_index":2762,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["cluster_reviewbuttonmodule",{"_index":3032,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_declarations",{"_index":3035,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_exports",{"_index":3034,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_imports",{"_index":3033,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule",{"_index":3067,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule_declarations",{"_index":3069,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule_exports",{"_index":3068,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule",{"_index":3091,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_declarations",{"_index":3092,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_exports",{"_index":3093,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_imports",{"_index":3094,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule",{"_index":3146,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_declarations",{"_index":3147,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_exports",{"_index":3148,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule",{"_index":3219,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_declarations",{"_index":3221,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_exports",{"_index":3220,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule",{"_index":3306,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_declarations",{"_index":3307,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_exports",{"_index":3309,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_imports",{"_index":3308,"title":{},"body":{"modules/StageNavModule.html":{}}}],["cluster_taglistmodule",{"_index":3381,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_taglistmodule_declarations",{"_index":3382,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_taglistmodule_exports",{"_index":3383,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule",{"_index":3388,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule_declarations",{"_index":3389,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule_exports",{"_index":3390,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":3395,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":3396,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule",{"_index":3530,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule_declarations",{"_index":3532,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule_exports",{"_index":3531,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule",{"_index":3536,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule_declarations",{"_index":3538,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule_exports",{"_index":3537,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule",{"_index":3603,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule_declarations",{"_index":3604,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule_exports",{"_index":3605,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule",{"_index":3629,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule_declarations",{"_index":3630,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule_exports",{"_index":3631,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["coalescing",{"_index":2415,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["code",{"_index":3498,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["code.touppercase().endswith(lookup",{"_index":2418,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["codebase",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":1756,"title":{},"body":{"classes/InitializationState.html":{}}}],["collaboration",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["collapse",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":1765,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":1855,"title":{},"body":{"classes/InitializationState.html":{}}}],["collection",{"_index":13,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["collidedids",{"_index":1030,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["collidedids.has(node['@id",{"_index":1034,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["collision",{"_index":769,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["collisions",{"_index":137,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["collisionsendpoint",{"_index":614,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["color",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["combination",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["combined",{"_index":1352,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":111,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["combinelatest([regs",{"_index":2799,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.entities",{"_index":134,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["combinelatest([this.model.anatomicalstructures",{"_index":851,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.organiri",{"_index":898,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.organiri$.pipe(filter(organiri",{"_index":937,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.viewtype",{"_index":967,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.page.state",{"_index":2746,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.referenceorgansimplenodes",{"_index":885,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.reg.state",{"_index":2516,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["combinelatest([this.rotation",{"_index":842,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["come",{"_index":3336,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["coming",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":4192,"title":{},"body":{"dependencies.html":{}}}],["comma",{"_index":1527,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["commas",{"_index":1512,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["common",{"_index":3797,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":759,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["compatibility",{"_index":3333,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1871,"title":{},"body":{"classes/InitializationState.html":{}}}],["completion",{"_index":1861,"title":{},"body":{"classes/InitializationState.html":{}}}],["complexity",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":195,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":1169,"title":{},"body":{"components/ContentComponent.html":{}}}],["component.component",{"_index":581,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":607,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["component.component.ts:34",{"_index":624,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":641,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":642,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":635,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:38",{"_index":629,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":638,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":626,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:41",{"_index":631,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":639,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:43",{"_index":640,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:44",{"_index":632,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:45",{"_index":633,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:46",{"_index":634,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:47",{"_index":636,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:48",{"_index":627,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:50",{"_index":622,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["componentref",{"_index":3418,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["computed",{"_index":105,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["comunica/query",{"_index":4163,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":4194,"title":{},"body":{"dependencies.html":{}}}],["concat(sortby(set.extractionsites.map((entity",{"_index":2272,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["concatmap",{"_index":791,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["concatmap((jsonld",{"_index":1006,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["conditions",{"_index":4339,"title":{},"body":{"license.html":{}}}],["config",{"_index":1045,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.cancelregistration",{"_index":2522,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.isolated",{"_index":2109,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.register",{"_index":2521,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.user",{"_index":2524,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["configmodule",{"_index":1040,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["configstore",{"_index":623,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":1624,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["confirm('changes",{"_index":2529,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["confirmation",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2130,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["connect(source",{"_index":2118,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":1088,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connection",{"_index":4362,"title":{},"body":{"license.html":{}}}],["connects",{"_index":2117,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["consider",{"_index":3332,"title":{},"body":{"modules/StoreModule.html":{}}}],["consortium",{"_index":4315,"title":{},"body":{"license.html":{}}}],["const",{"_index":138,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor(@inject(message_service_config",{"_index":2108,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1388,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":2131,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":621,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(defaulttheme",{"_index":3410,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(dialog",{"_index":2736,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["constructor(dialogref",{"_index":3040,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["constructor(drawer",{"_index":3458,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(ga",{"_index":718,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(globalconfig",{"_index":2455,"title":{},"body":{"injectables/PageState.html":{}}}],["constructor(globals",{"_index":2570,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["constructor(injector",{"_index":36,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/SceneState.html":{}}}],["constructor(messageservice",{"_index":1064,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["constructor(model",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{}}}],["constructor(page",{"_index":1630,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["constructor(private",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(readonly",{"_index":1634,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(registry",{"_index":1725,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(renderer2",{"_index":3490,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["constructor(source",{"_index":2123,"title":{},"body":{"classes/MessageChannel.html":{}}}],["contain",{"_index":1340,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["contained",{"_index":2141,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["container",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["container.component.html",{"_index":1055,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":1054,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1553,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":483,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerpayload",{"_index":1343,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":1135,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["containing",{"_index":672,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"index.html":{}}}],["contains",{"_index":698,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ExtractionSet.html":{},"classes/InitializationState.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["content",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content'},{'name",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content.component",{"_index":2674,"title":{},"body":{"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{}}}],["content.component.html",{"_index":1157,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.scss",{"_index":1156,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.ts",{"_index":2580,"title":{},"body":{"components/RegistrationContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:102",{"_index":2600,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:111",{"_index":2608,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:122",{"_index":2611,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:135",{"_index":2606,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:144",{"_index":2603,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:21",{"_index":2598,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:24",{"_index":2627,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:29",{"_index":2620,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:32",{"_index":2628,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:35",{"_index":2623,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:38",{"_index":2616,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:41",{"_index":2615,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:44",{"_index":2618,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:47",{"_index":2619,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:50",{"_index":2597,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:63",{"_index":2617,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:92",{"_index":2614,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.module",{"_index":2767,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["content.module.ts",{"_index":2670,"title":{},"body":{"modules/RegistrationContentModule.html":{}}}],["content/content.component",{"_index":1110,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{}}}],["content/registration",{"_index":2579,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["content1",{"_index":1057,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":1058,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":1108,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":1090,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":1100,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":485,"title":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":1332,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["contentmodule",{"_index":551,"title":{"modules/ContentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"modules.html":{},"overview.html":{}}}],["context",{"_index":2917,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["context.jsonld",{"_index":2919,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["continue",{"_index":2654,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["contract",{"_index":4359,"title":{},"body":{"license.html":{}}}],["control",{"_index":2701,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["controls",{"_index":3076,"title":{},"body":{"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["convention",{"_index":1356,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["converted",{"_index":2698,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["converting",{"_index":1522,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["converts",{"_index":2468,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["coordinate",{"_index":4296,"title":{},"body":{"index.html":{}}}],["copies",{"_index":4334,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4322,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4313,"title":{},"body":{"license.html":{}}}],["cord",{"_index":1477,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cord.svg",{"_index":1478,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":1389,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":583,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/anatomical",{"_index":3368,"title":{},"body":{"components/TagListComponent.html":{}}}],["core/models/extraction",{"_index":1587,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["core/models/meta",{"_index":3006,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["core/models/visibility",{"_index":2019,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["core/services/config/config",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{}}}],["core/services/theming/theming.service",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["core/store/anatomical",{"_index":3075,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["core/store/model/model.state",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/page/page.state",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/reference",{"_index":2744,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["core/store/registration/registration.state",{"_index":1227,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{}}}],["core/store/scene/scene.state",{"_index":1228,"title":{},"body":{"components/ContentComponent.html":{}}}],["coremodule",{"_index":552,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":1649,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["cors",{"_index":4196,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":2087,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["coverage",{"_index":4026,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createcustomelement",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["createentitycollections",{"_index":100,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["creates",{"_index":40,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["createscenenodes",{"_index":3153,"title":{},"body":{"injectables/SceneState.html":{}}}],["createscenenodes(organiri",{"_index":1013,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["creating",{"_index":1112,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["creation",{"_index":2979,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["creation_date",{"_index":2925,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator",{"_index":2922,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_first_name",{"_index":2894,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_last_name",{"_index":2896,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_middle_name",{"_index":2898,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_orcid",{"_index":2900,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["credits",{"_index":4300,"title":{},"body":{"index.html":{}}}],["crosshairs",{"_index":1181,"title":{},"body":{"components/ContentComponent.html":{}}}],["css",{"_index":1224,"title":{},"body":{"components/ContentComponent.html":{},"dependencies.html":{}}}],["cube.svg",{"_index":1502,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["cuboid",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":1578,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["currentdate",{"_index":2806,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["currentidentifier",{"_index":2803,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["currently",{"_index":1586,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["currentorgan",{"_index":2581,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["currentsex",{"_index":2582,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["cursor",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["customelements.define('ccf",{"_index":604,"title":{},"body":{"modules/AppModule.html":{}}}],["customizable",{"_index":3609,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["customized",{"_index":1911,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["cyberinfrastructure",{"_index":4302,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["damages",{"_index":4357,"title":{},"body":{"license.html":{}}}],["dark",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["dark/light",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["data.json",{"_index":2387,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.label",{"_index":3016,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{}}}],["data.metadata",{"_index":3052,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.push",{"_index":2906,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.registrationcallbackset",{"_index":3053,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.sex",{"_index":2832,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.side",{"_index":2834,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.state",{"_index":807,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["data.state.ts",{"_index":2350,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["data.state.ts:100",{"_index":2575,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:110",{"_index":2577,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:135",{"_index":2574,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:155",{"_index":2573,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:176",{"_index":2572,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:75",{"_index":2571,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:87",{"_index":2576,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.ts",{"_index":2138,"title":{},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.value",{"_index":3060,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["data/reference",{"_index":806,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataaction",{"_index":53,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["database",{"_index":786,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["datasets",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["datatype",{"_index":1967,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["date().toisostring().split('t')[0",{"_index":2807,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["db",{"_index":866,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.anatomicalstructures[organiri",{"_index":875,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.extractionsets[organiri",{"_index":2269,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.organirilookup[key",{"_index":2420,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.organspatialentities[organiri",{"_index":1018,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.placementpatches[place?.target",{"_index":2394,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.scenenodelookup[item.id",{"_index":871,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.scenenodelookup[node['@id",{"_index":1016,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[item.id",{"_index":872,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[node['@id",{"_index":880,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["deal",{"_index":4323,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4363,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1204,"title":{},"body":{"components/ContentComponent.html":{}}}],["debugmode",{"_index":1159,"title":{},"body":{"components/ContentComponent.html":{}}}],["december",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":2981,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["deck.gl/core",{"_index":4166,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":4168,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":4170,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":4171,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["declare",{"_index":1622,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["decoration",{"_index":1643,"title":{},"body":{"components/HeaderComponent.html":{}}}],["decorator",{"_index":110,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"dependencies.html":{}}}],["decorators",{"_index":52,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deep",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deeply",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":1681,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.html",{"_index":1679,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.url",{"_index":1693,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def?.url",{"_index":1690,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default",{"_index":85,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_block_size",{"_index":684,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_collisions_endpoint",{"_index":811,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1413,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons.find",{"_index":1687,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default_rotation",{"_index":3116,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_search_limit",{"_index":4143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_search_throttle",{"_index":4144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_slices_config",{"_index":3190,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_theme",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1393,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultposition",{"_index":2221,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["defaults",{"_index":131,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["defaulttheme",{"_index":3404,"title":{},"body":{"injectables/ThemingService.html":{}}}],["defer",{"_index":789,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["deferred",{"_index":1738,"title":{},"body":{"classes/InitializationState.html":{}}}],["define",{"_index":1540,"title":{},"body":{"interfaces/DocumentationContent.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["definition",{"_index":1397,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":1703,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":1702,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["degree",{"_index":2946,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["delay",{"_index":2157,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delay(0",{"_index":2281,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delta",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["demo",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":1677,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["dependencies",{"_index":543,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":1047,"title":{},"body":{"modules/ConfigModule.html":{}}}],["depth",{"_index":675,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["descendants",{"_index":1091,"title":{},"body":{"components/ContainerComponent.html":{}}}],["descrepancies",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":11,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["detaches",{"_index":1176,"title":{},"body":{"components/ContentComponent.html":{}}}],["details",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["detailslabelcomponent",{"_index":487,"title":{"components/DetailsLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detailslabelmodule",{"_index":1532,"title":{"modules/DetailsLabelModule.html":{}},"body":{"modules/DetailsLabelModule.html":{},"modules.html":{},"overview.html":{}}}],["detection",{"_index":1075,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":1068,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determines",{"_index":1583,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{}}}],["dev",{"_index":1256,"title":{},"body":{"components/ContentComponent.html":{}}}],["developed",{"_index":4301,"title":{},"body":{"index.html":{}}}],["development",{"_index":2378,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["developmentmode",{"_index":3331,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":4047,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":1545,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{}}}],["dialog's",{"_index":3043,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["dialogopen",{"_index":2734,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["dialogref",{"_index":2584,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":3028,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["dialogref.disableclose",{"_index":2639,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["dialogue",{"_index":2997,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["didn't",{"_index":2604,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["different",{"_index":1892,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{}}}],["digits",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["dimension",{"_index":700,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["dimension_units",{"_index":2935,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["dimensions",{"_index":674,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["dims",{"_index":912,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.x",{"_index":2224,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.y",{"_index":2226,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.z",{"_index":2227,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims[0",{"_index":1233,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[1",{"_index":1235,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[2",{"_index":1236,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[i",{"_index":922,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["direct",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["directive",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directives",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directly",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":122,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["disabled",{"_index":1958,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"components/VisibilityToggleComponent.html":{}}}],["disablepositionchange",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["disables",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["disablewhenclicked",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["display",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displayed",{"_index":1517,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":2770,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["displaying",{"_index":1255,"title":{},"body":{"components/ContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["distinct",{"_index":2158,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged",{"_index":792,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged((v1",{"_index":2197,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged(isequal",{"_index":883,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["distinctuntilkeychanged",{"_index":1226,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('x",{"_index":1198,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('y",{"_index":1199,"title":{},"body":{"components/ContentComponent.html":{}}}],["distribute",{"_index":4330,"title":{},"body":{"license.html":{}}}],["div",{"_index":3624,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["divider",{"_index":2030,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["dobootstrap",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":3259,"title":{},"body":{"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"dependencies.html":{}}}],["document.getelementsbyclassname('modal",{"_index":3054,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["document:click",{"_index":3241,"title":{},"body":{"components/StageNavComponent.html":{}}}],["document:click(target",{"_index":3256,"title":{},"body":{"components/StageNavComponent.html":{}}}],["document:keydown",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["document:keydown(target",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["document:mousedown",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["document:mousedown(target",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1542,"title":{},"body":{"interfaces/DocumentationContent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentationcontent",{"_index":1538,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{},"coverage.html":{}}}],["dom",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["domsanitizer",{"_index":1666,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["don't",{"_index":1676,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["done",{"_index":3621,"title":{},"body":{"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["donor",{"_index":2715,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["donors",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":3089,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["dotenv",{"_index":4200,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":3249,"title":{},"body":{"components/StageNavComponent.html":{}}}],["download",{"_index":1242,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"changelog.html":{}}}],["downloads",{"_index":2870,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["draft",{"_index":986,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draftplacement",{"_index":979,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draggable",{"_index":3121,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["drawer",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["drawer.close",{"_index":3478,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":3477,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":1778,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":1779,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":3479,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":1144,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":1111,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":1317,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["drawercontainerschanged",{"_index":1339,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawerinitialized",{"_index":1346,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":553,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":1351,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":1059,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":1143,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":1347,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drop",{"_index":3248,"title":{},"body":{"components/StageNavComponent.html":{}}}],["dropdown",{"_index":1565,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["dropdown'},{'name",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["dropdown.component",{"_index":1612,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown.component.html",{"_index":1568,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1567,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":1564,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:18",{"_index":1579,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":1576,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":1574,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":1573,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:47",{"_index":1581,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":1582,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.module",{"_index":2058,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["dropdown.module.ts",{"_index":1609,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown/extraction",{"_index":1563,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["dropdowncontainer",{"_index":3301,"title":{},"body":{"components/StageNavComponent.html":{}}}],["duration",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent-1.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{}}}],["during",{"_index":3421,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["dynamic",{"_index":4160,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["each",{"_index":1541,"title":{},"body":{"interfaces/DocumentationContent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["ease",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["easier",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["easily",{"_index":3141,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["east",{"_index":813,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["ececec",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["editregistration",{"_index":615,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"components/RegistrationMetadataComponent.html":{}}}],["editregistration(reg",{"_index":2819,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["effect",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["element",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["element's",{"_index":1919,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["element.getboundingclientrect",{"_index":1826,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":3449,"title":{},"body":{"injectables/ThemingService.html":{}}}],["elementref",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["ellipsis",{"_index":3599,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["embedded",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":3143,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["emits",{"_index":1577,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitted",{"_index":692,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["emitter",{"_index":693,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitting",{"_index":1808,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["empty",{"_index":127,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["empty_result",{"_index":4145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":1280,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enables",{"_index":3117,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["end",{"_index":1121,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["end?.expanded",{"_index":1328,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["end?.opened",{"_index":1327,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enddrawers",{"_index":1145,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":1148,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":1151,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":1326,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["endings",{"_index":2885,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["endpoint",{"_index":1023,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entered",{"_index":2602,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entererrormode",{"_index":2976,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["entering",{"_index":686,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entire",{"_index":3323,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":2264,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.comment",{"_index":2267,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.label",{"_index":933,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.placement",{"_index":908,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.placement[0",{"_index":907,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.representation_of",{"_index":2265,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.sex?.tolowercase",{"_index":2432,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side",{"_index":2429,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side.tolowercase",{"_index":2430,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side?.tolowercase",{"_index":2433,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.y_dimension",{"_index":927,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.z_dimension].map(n",{"_index":928,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity['@id",{"_index":917,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entitycollections",{"_index":101,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["entry",{"_index":2318,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{}}}],["environment",{"_index":647,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.customization",{"_index":660,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":658,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.googleanalyticstoken",{"_index":1386,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":828,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.skipunsavedchangesconfirmation",{"_index":2514,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["environments/environment",{"_index":648,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":1115,"title":{},"body":{"components/ContainerComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["error('the",{"_index":1390,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":1124,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":1113,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":780,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["eslint",{"_index":121,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/consistent",{"_index":2169,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/member",{"_index":2162,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/naming",{"_index":1355,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["eslint/no",{"_index":126,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["eslint/prefer",{"_index":2413,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{}}}],["etc",{"_index":1350,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["eui",{"_index":3648,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"license.html":{}}}],["event.firstname.length",{"_index":2645,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["event.lastname.length",{"_index":2646,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["event.preventdefault",{"_index":2548,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["event.returnvalue",{"_index":2549,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["event.target",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["eventemitter",{"_index":676,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["eventemitter(true",{"_index":1810,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":2663,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["evolution",{"_index":3376,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["except",{"_index":2094,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/StoreModule.html":{}}}],["executionstrategy",{"_index":3334,"title":{},"body":{"modules/StoreModule.html":{}}}],["expand",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":1865,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":1770,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":1867,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":1805,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":1761,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":1811,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":1762,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":1764,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":1817,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":1852,"title":{},"body":{"classes/InitializationState.html":{}}}],["expansion",{"_index":2034,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["expected",{"_index":3051,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["experimentation",{"_index":3084,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["explicit",{"_index":2872,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["exploration",{"_index":4268,"title":{},"body":{"index.html":{}}}],["export",{"_index":129,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["exportas",{"_index":1051,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":547,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["express",{"_index":4202,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":2155,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extended",{"_index":1767,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":16,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["external",{"_index":83,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["extra",{"_index":4206,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["extraction_set_dropdown",{"_index":1590,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionset",{"_index":1556,"title":{"interfaces/ExtractionSet.html":{}},"body":{"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["extractionsetchanged",{"_index":1570,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetchanged(value",{"_index":1580,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetdropdowncomponent",{"_index":492,"title":{"components/ExtractionSetDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["extractionsetdropdownmodule",{"_index":1605,"title":{"modules/ExtractionSetDropdownModule.html":{}},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["extractionsets",{"_index":2142,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsites",{"_index":855,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsitetooltip",{"_index":1999,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["extrapulmonary",{"_index":1430,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye",{"_index":1432,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1433,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1467,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factor",{"_index":2355,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["factory",{"_index":2085,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":3056,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["faded",{"_index":1264,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fadeinout",{"_index":1269,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fail",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["fallopian",{"_index":1434,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["false=right",{"_index":1973,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["favor",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":1621,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["fetch",{"_index":1410,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["fetched",{"_index":2796,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["fetched]).pipe",{"_index":2800,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["fetchpreviousregistrations",{"_index":616,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["fetchpreviousregistrationscallback",{"_index":630,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{},"changelog.html":{}}}],["field)?.value",{"_index":3017,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["fields",{"_index":3065,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["file(s",{"_index":2708,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["fileinput",{"_index":1903,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement",{"_index":1928,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement.click",{"_index":1930,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader",{"_index":1933,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.onload",{"_index":1934,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.readastext(file",{"_index":1940,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["files",{"_index":1912,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"license.html":{}}}],["fill",{"_index":1647,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filler",{"_index":752,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["filter",{"_index":793,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["filter((node",{"_index":876,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(as",{"_index":185,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["filter(def",{"_index":1678,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["filter(e",{"_index":935,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(item",{"_index":867,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(key",{"_index":2193,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filter(started",{"_index":2287,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filtered",{"_index":2098,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["filternodebbox",{"_index":3154,"title":{},"body":{"injectables/SceneState.html":{}}}],["filternodebbox(nodes",{"_index":1035,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filternodecollisions",{"_index":3155,"title":{},"body":{"injectables/SceneState.html":{}}}],["filternodecollisions(nodes",{"_index":1029,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filternulls",{"_index":2153,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filters",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["finalized",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["finished",{"_index":1344,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["finishing",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["fired",{"_index":3262,"title":{},"body":{"components/StageNavComponent.html":{}}}],["first",{"_index":2324,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"changelog.html":{}}}],["firstname",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["firstnamevalidator",{"_index":2308,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["fit",{"_index":3511,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["fitness",{"_index":4349,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["flexible",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":3062,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["floatlabel",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["fly",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":3217,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["following",{"_index":4338,"title":{},"body":{"license.html":{}}}],["font",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["footer",{"_index":3066,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["foreach(def",{"_index":1683,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["form",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["format",{"_index":2463,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{}}}],["formatted",{"_index":1524,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["formcontrol",{"_index":2699,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["formsmodule",{"_index":2347,"title":{},"body":{"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/TagSearchModule.html":{}}}],["found",{"_index":3083,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["frame",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":4297,"title":{},"body":{"index.html":{}}}],["free",{"_index":4319,"title":{},"body":{"license.html":{}}}],["from(fetch(url)).pipe",{"_index":2389,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["fs",{"_index":4205,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":1768,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":4254,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":4307,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":4337,"title":{},"body":{"license.html":{}}}],["further",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["g",{"_index":2563,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["ga",{"_index":695,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["gap",{"_index":2656,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{}}}],["gatoken",{"_index":1385,"title":{},"body":{"modules/CoreModule.html":{}}}],["general",{"_index":2439,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["generate",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":1953,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["genericmessage",{"_index":1335,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":1336,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":1337,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getarguments",{"_index":1722,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":1727,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getclassend",{"_index":3468,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcollisions",{"_index":3156,"title":{},"body":{"injectables/SceneState.html":{}}}],["getcollisions(jsonld",{"_index":1019,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getcontent",{"_index":1102,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getdisabled",{"_index":3004,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["geterrormessage",{"_index":2681,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["getglobalskipconfirmation",{"_index":2499,"title":{},"body":{"injectables/PageState.html":{}}}],["gethaschanges",{"_index":2501,"title":{},"body":{"injectables/PageState.html":{}}}],["gethasthicknessvalue",{"_index":3212,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["gethaswrappedcontent",{"_index":1105,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":3469,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getid",{"_index":3548,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getid(_index",{"_index":3561,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getislighttheme",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["getlabelel",{"_index":3276,"title":{},"body":{"components/StageNavComponent.html":{}}}],["getlatestiri",{"_index":2566,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getlatestiri(organ",{"_index":2434,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getlatesttags",{"_index":97,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getleft",{"_index":1974,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["getmessages",{"_index":2096,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":2120,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":2099,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":2121,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":2103,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":1713,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":1729,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getname",{"_index":2329,"title":{},"body":{"components/NameInputComponent.html":{}}}],["getnodebbox",{"_index":4116,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(model",{"_index":815,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(placement",{"_index":1037,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getnodecollisions",{"_index":3177,"title":{},"body":{"injectables/SceneState.html":{}}}],["getnodes",{"_index":3169,"title":{},"body":{"injectables/SceneState.html":{}}}],["getoptionsel",{"_index":3280,"title":{},"body":{"components/StageNavComponent.html":{}}}],["getorgandata",{"_index":2567,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getorgandata(iri",{"_index":2423,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getorganspatialentity",{"_index":3157,"title":{},"body":{"injectables/SceneState.html":{}}}],["getorganspatialentity(organiri",{"_index":1017,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getoriginscene",{"_index":784,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getoriginscene(organ",{"_index":859,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getplacementcube",{"_index":3183,"title":{},"body":{"injectables/SceneState.html":{}}}],["getpreviousregistrationnodes",{"_index":3179,"title":{},"body":{"injectables/SceneState.html":{}}}],["getreferenceorganiri",{"_index":2568,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getreferenceorganiri(organ",{"_index":2409,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getreferenceorgannodes",{"_index":3173,"title":{},"body":{"injectables/SceneState.html":{}}}],["getreferenceorgansimplenodes",{"_index":3175,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotatednodes",{"_index":3171,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotation",{"_index":3186,"title":{},"body":{"injectables/SceneState.html":{}}}],["gets",{"_index":1752,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ReviewButtonComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["getskipconfirmation",{"_index":2497,"title":{},"body":{"injectables/PageState.html":{}}}],["getsourcedb",{"_index":2383,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getspatialkeyboardaxis",{"_index":3181,"title":{},"body":{"injectables/SceneState.html":{}}}],["gettags",{"_index":94,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getter/setter",{"_index":1799,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":3406,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3632,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockscene",{"_index":785,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["github",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2088,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":1523,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["gizmo",{"_index":993,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["gland",{"_index":1427,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":14,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["global.editregistration",{"_index":2752,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["global_config",{"_index":1043,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":244,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalconfig.getoption('fetchpreviousregistrations').pipe",{"_index":2797,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["globalconfigfactory",{"_index":1044,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["globalconfigfactory(globals",{"_index":1625,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/functions.html":{}}}],["globalconfigstate",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["globally",{"_index":2380,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["globals",{"_index":2375,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globals.get('ruiconfig",{"_index":1626,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["globalskipconfirmation",{"_index":2453,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["globalsservice",{"_index":1042,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":1834,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['ruiconfig",{"_index":659,"title":{},"body":{"components/AppWebComponent.html":{}}}],["good",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":681,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":679,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["granted",{"_index":4318,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4365,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":4208,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":2719,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{}}}],["grow",{"_index":753,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["gtex",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["half",{"_index":1766,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1406,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["handleclick",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["handleclick(target",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["handlefile",{"_index":1904,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlefile(event",{"_index":1915,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlekey",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["handlekey(target",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["handlemessage",{"_index":1060,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":1070,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":1283,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handlenodedrag",{"_index":1164,"title":{},"body":{"components/ContentComponent.html":{}}}],["handlenodedrag(event",{"_index":1172,"title":{},"body":{"components/ContentComponent.html":{}}}],["handler",{"_index":1921,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handleregistrationselect",{"_index":2592,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["handleregistrationupload",{"_index":2682,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["handleregistrationupload(reg",{"_index":2690,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["handles",{"_index":1521,"title":{},"body":{"components/DetailsLabelComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["handling",{"_index":1668,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["happen",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":3327,"title":{},"body":{"modules/StoreModule.html":{}}}],["haschanges",{"_index":2454,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["hash",{"_index":4231,"title":{},"body":{"dependencies.html":{}}}],["hasthicknessvalue",{"_index":3192,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["haswrappedcontent",{"_index":1063,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganConfig.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{}}}],["header'},{'name",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["header.component",{"_index":1658,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1629,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1628,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":495,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":554,"title":{"modules/HeaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["headers",{"_index":1025,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["heart",{"_index":1438,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1439,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["helmet",{"_index":4212,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":61,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":167,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["hereby",{"_index":4317,"title":{},"body":{"license.html":{}}}],["hex",{"_index":4214,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["hides",{"_index":1203,"title":{},"body":{"components/ContentComponent.html":{}}}],["highlight",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":3543,"title":{},"body":{"interfaces/VisibilityItem.html":{},"changelog.html":{}}}],["highlights",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["hint",{"_index":81,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["holders",{"_index":4354,"title":{},"body":{"license.html":{}}}],["home",{"_index":1644,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/User.html":{}}}],["hooked",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["hostbinding",{"_index":677,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":1816,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":1297,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('@openclose",{"_index":1815,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":689,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('class.ccf",{"_index":1794,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":1294,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('style.margin",{"_index":1298,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbindings",{"_index":717,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostlistener",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":1866,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":1862,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":3263,"title":{},"body":{"components/StageNavComponent.html":{}}}],["hostlistener('document:keydown",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["hostlistener('document:mousedown",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["hostlisteners",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["hover",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovered",{"_index":2015,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovering",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":3636,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["html",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["htmlelement",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["htmlinputelement",{"_index":705,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["htmlscriptelement",{"_index":3506,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["http",{"_index":1008,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier",{"_index":2920,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier}_placement",{"_index":2936,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmaleorgans_vhm_spleen_colic_surface",{"_index":994,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclient",{"_index":772,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":1377,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":4282,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":4271,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":4275,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":996,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"index.html":{}}}],["https://humanatlas.io",{"_index":4298,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":4293,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":4277,"title":{},"body":{"index.html":{}}}],["https://orcid.org",{"_index":2565,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["https://pfn8zf2gtu.us",{"_index":812,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":4273,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":3335,"title":{},"body":{"modules/StoreModule.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":3508,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["hubmap",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":3634,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icon.add",{"_index":3081,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["icon.name",{"_index":1688,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icon.namespace",{"_index":1689,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icondefinition",{"_index":1659,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["iconregistry",{"_index":1669,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1670,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1411,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1396,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons/organ",{"_index":1417,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":154,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["id.replace",{"_index":2562,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["idb",{"_index":4216,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":2070,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["identifiers",{"_index":4377,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idmatches(ontologyid",{"_index":2203,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ids",{"_index":2858,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["idwithhyphens",{"_index":2561,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["iec",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":3495,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["ignoredkeys",{"_index":2191,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ignoredkeys.includes(key",{"_index":2194,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iif",{"_index":2503,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["iif(!!config.user",{"_index":2523,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["image",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":2351,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/functions.html":{}}}],["implementation",{"_index":60,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["implemented",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["implied",{"_index":4346,"title":{},"body":{"license.html":{}}}],["implies",{"_index":1349,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":99,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["imported",{"_index":1391,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["improve",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["in's",{"_index":2010,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["include",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":4341,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3668,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":4305,"title":{},"body":{"index.html":{}}}],["indicator",{"_index":2038,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["individual",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["infinity",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["infix",{"_index":747,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["info.side",{"_index":2431,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["infobuttonmodule",{"_index":3099,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["inform",{"_index":2688,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["information",{"_index":1183,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ExtractionSet.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":749,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{}}}],["init",{"_index":3500,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["initial",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["initialconfig",{"_index":657,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":1838,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":1734,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{},"coverage.html":{}}}],["initialize",{"_index":3407,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":3417,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":3422,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":610,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":3420,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":65,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["initializing",{"_index":1345,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["initialregistration",{"_index":2771,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["initialwithchanges",{"_index":2892,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["initskipconfirmationlisteners",{"_index":2444,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["inject",{"_index":2074,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["inject(default_theme",{"_index":3439,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inject(document",{"_index":3502,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":3047,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"overview.html":{}}}],["injected",{"_index":3045,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["injecting",{"_index":163,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":1617,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('default",{"_index":3435,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":37,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["injector.get(overlaycontainer",{"_index":3450,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":3448,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":3437,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inline",{"_index":3090,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["input",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input'},{'name",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input.component",{"_index":768,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.component.html",{"_index":687,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.scss",{"_index":688,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.ts",{"_index":670,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input.component.ts:31",{"_index":3210,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:35",{"_index":721,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:36",{"_index":3208,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:40",{"_index":720,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:41",{"_index":3209,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:45",{"_index":719,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:46",{"_index":3213,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:48",{"_index":3207,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:50",{"_index":2325,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:55",{"_index":2327,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:60",{"_index":723,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:62",{"_index":2315,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:63",{"_index":3211,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:66",{"_index":2331,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:70",{"_index":722,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:73",{"_index":2320,"title":{},"body":{"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["input.component.ts:82",{"_index":2313,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:97",{"_index":2317,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.module",{"_index":2061,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{}}}],["input.module.ts",{"_index":758,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.target",{"_index":704,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input/block",{"_index":669,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input/name",{"_index":2060,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["input/slices",{"_index":3105,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input[type=number",{"_index":726,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["inputarray",{"_index":1525,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputarray.filter(item",{"_index":1528,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputevent",{"_index":697,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputs",{"_index":611,"title":{},"body":{"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["inputtarget",{"_index":703,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputtarget.files",{"_index":1931,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.files[0",{"_index":1932,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.value",{"_index":707,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputted",{"_index":2987,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["inputting",{"_index":2305,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["insertitem",{"_index":2774,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["insertitem(registration",{"_index":2857,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["inside",{"_index":1546,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["instance",{"_index":41,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instant",{"_index":1760,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":3250,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["instructions",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":128,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":194,"title":{},"body":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1446,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1447,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":2689,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["invisible",{"_index":1277,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["iri",{"_index":148,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iris",{"_index":2848,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["iris.has(item.id",{"_index":2851,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["is3dview",{"_index":1160,"title":{},"body":{"components/ContentComponent.html":{}}}],["isdatavalid(page",{"_index":2862,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["isdropdownactive",{"_index":3231,"title":{},"body":{"components/StageNavComponent.html":{}}}],["isdropdownhidden",{"_index":3232,"title":{},"body":{"components/StageNavComponent.html":{}}}],["isequal",{"_index":787,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["islighttheme",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["ismultiple",{"_index":1571,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["isnan(this.slicesconfig.thickness",{"_index":3193,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["isnarrowview",{"_index":1161,"title":{},"body":{"components/ContentComponent.html":{}}}],["isolated",{"_index":2081,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["isorcidvalid",{"_index":2445,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["issue",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["isvalid",{"_index":2868,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["it's",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":804,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["item).join",{"_index":1529,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["item.id",{"_index":878,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.name",{"_index":2852,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.opacity",{"_index":869,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["item.tooltip",{"_index":2023,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["item.ts",{"_index":3542,"title":{},"body":{"interfaces/VisibilityItem.html":{},"coverage.html":{}}}],["item.visible",{"_index":868,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item?.tooltip",{"_index":2021,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["items",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["itemschange",{"_index":3555,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["iu",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":4294,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":3686,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["join",{"_index":1526,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["json",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["json.parse(filereader.result",{"_index":1935,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["json.stringify(jsonld",{"_index":1024,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["json.stringify(jsonobj",{"_index":2881,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["json_file_reader",{"_index":1937,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["jsonfilereadercomponent",{"_index":497,"title":{"components/JsonFileReaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["jsonfilereadermodule",{"_index":1942,"title":{"modules/JsonFileReaderModule.html":{}},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules.html":{},"overview.html":{}}}],["jsonld",{"_index":2787,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"dependencies.html":{}}}],["jsonld_throttle_duration",{"_index":2782,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsonobj",{"_index":2877,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["july",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["keeps",{"_index":2013,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["key",{"_index":699,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{}}}],["keyboard",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["keyboardevent",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["keys",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["keyval",{"_index":4217,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1440,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kidneys",{"_index":1441,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kidneys.svg",{"_index":1442,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":4345,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1443,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1444,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":155,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["label'},{'name",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["label.component",{"_index":1537,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label.component.html",{"_index":1514,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.scss",{"_index":1513,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts",{"_index":1505,"title":{},"body":{"components/DetailsLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:15",{"_index":1518,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:20",{"_index":1516,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:29",{"_index":1520,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.module.ts",{"_index":1536,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label/details",{"_index":1504,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"coverage.html":{}}}],["labeled",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["labeledslidetogglecomponent",{"_index":500,"title":{"components/LabeledSlideToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labeledslidetogglemodule",{"_index":1987,"title":{"modules/LabeledSlideToggleModule.html":{}},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["labelel",{"_index":3242,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelel.contains(target",{"_index":3287,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelref",{"_index":3233,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labels",{"_index":1959,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0",{"_index":1983,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0]}}{{labels[1",{"_index":1986,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[1",{"_index":1976,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labs/dispatch",{"_index":4181,"title":{},"body":{"dependencies.html":{}}}],["landmark",{"_index":1594,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["landmarks",{"_index":2026,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["large",{"_index":1445,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["larynx",{"_index":1448,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["larynx.svg",{"_index":1449,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":2326,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{}}}],["lastname",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["lastnamevalidator",{"_index":2309,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["latest",{"_index":3641,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["latesttags",{"_index":34,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["launch",{"_index":2966,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launcher",{"_index":3515,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["launcher.component",{"_index":3534,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher.component.html",{"_index":3517,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":3516,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":3513,"title":{},"body":{"components/VideoModalLauncherComponent.html":{},"coverage.html":{}}}],["launcher.component.ts:17",{"_index":3520,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:22",{"_index":3519,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:32",{"_index":3521,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.module",{"_index":1370,"title":{},"body":{"modules/ContentModule.html":{}}}],["launcher.module.ts",{"_index":3533,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher/video",{"_index":1369,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"coverage.html":{}}}],["launches",{"_index":3522,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launching",{"_index":3514,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launchreviewmodal",{"_index":2972,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launchvideomodal",{"_index":3518,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["layers",{"_index":4169,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":49,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ld",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["leading",{"_index":890,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["leak",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["left.px",{"_index":1272,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["left.svg",{"_index":1436,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["leftmargin",{"_index":1265,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["leftsidebarcomponent",{"_index":504,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leftsidebarmodule",{"_index":555,"title":{"modules/LeftSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["length",{"_index":3195,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["level",{"_index":3444,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["levels",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":4358,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4355,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3749,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["library/assets/body4mesh_1338.glb",{"_index":998,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["license",{"_index":4311,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["light",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["lighter",{"_index":1641,"title":{},"body":{"components/HeaderComponent.html":{}}}],["limit",{"_index":70,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":4325,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4002,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3194,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["line",{"_index":124,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["link",{"_index":1642,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["linkage",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":3771,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":2621,"title":{},"body":{"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"changelog.html":{}}}],["list'},{'name",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["list.component",{"_index":3387,"title":{},"body":{"modules/TagListModule.html":{}}}],["list.component.html",{"_index":3351,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.scss",{"_index":3350,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts",{"_index":3348,"title":{},"body":{"components/TagListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":3358,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:23",{"_index":3356,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:28",{"_index":3357,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:33",{"_index":3355,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:49",{"_index":3365,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:53",{"_index":3363,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:62",{"_index":3359,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.module",{"_index":3108,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["list.module.ts",{"_index":3384,"title":{},"body":{"modules/TagListModule.html":{}}}],["list/tag",{"_index":3107,"title":{},"body":{"modules/RightSidebarModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"coverage.html":{}}}],["listen",{"_index":2079,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1860,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listeners",{"_index":1080,"title":{},"body":{"components/ContainerComponent.html":{}}}],["listens",{"_index":3258,"title":{},"body":{"components/StageNavComponent.html":{}}}],["literal",{"_index":1616,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ReferenceDataStateModel.html":{},"dependencies.html":{}}}],["little",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1450,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1451,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":50,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["loaded",{"_index":1398,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loaders.gl/core",{"_index":4172,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":4174,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":4175,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":3494,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["loadyoutubeplayerapi",{"_index":3489,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["local",{"_index":2802,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["located",{"_index":1793,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":3436,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["locations",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":788,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["log",{"_index":4299,"title":{},"body":{"index.html":{}}}],["logger",{"_index":3341,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":1775,"title":{},"body":{"classes/InitializationState.html":{}}}],["logo",{"_index":1651,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/User.html":{}}}],["longer",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1544,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["looks",{"_index":2407,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lookup",{"_index":2370,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lot",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["lowerbound",{"_index":817,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lowerbound[i",{"_index":826,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lru",{"_index":4221,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":4176,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1452,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lungs.svg",{"_index":1453,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1454,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":3215,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["made",{"_index":2530,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"changelog.html":{}}}],["main",{"_index":1049,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":2379,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["makes",{"_index":3573,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["making",{"_index":3614,"title":{},"body":{"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["male",{"_index":1620,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["mammary",{"_index":1426,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["managers",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["manages",{"_index":3403,"title":{},"body":{"injectables/ThemingService.html":{}}}],["manually",{"_index":1926,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["map",{"_index":113,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map(([_viewtype",{"_index":972,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([anatomicalstructures",{"_index":854,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([entities",{"_index":136,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["map(([haschanges",{"_index":2545,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["map(([local",{"_index":2801,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["map(([nodes",{"_index":892,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([organiri",{"_index":901,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([page",{"_index":2785,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["map(([placement",{"_index":836,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([rotation",{"_index":844,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((item",{"_index":870,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((node",{"_index":879,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((set",{"_index":2270,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map((side",{"_index":988,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(basehref",{"_index":2385,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["map(def",{"_index":1680,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["map(dims",{"_index":1190,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(node",{"_index":1015,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(organ",{"_index":2017,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(p",{"_index":1215,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(sex",{"_index":2626,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["map(type",{"_index":1208,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(value",{"_index":2513,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["march",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":740,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":1772,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":4226,"title":{},"body":{"dependencies.html":{}}}],["marrow",{"_index":1422,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1423,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["mat.transformaspoint",{"_index":818,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat.transformaspoint([1",{"_index":820,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat_dialog_data",{"_index":3050,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["mat_form_field_default_options",{"_index":568,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":1948,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["match",{"_index":2299,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["matcheckboxmodule",{"_index":3392,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["matches",{"_index":183,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["matches.length",{"_index":189,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matches.map((as",{"_index":190,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matching",{"_index":75,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":3385,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["matdialog",{"_index":2737,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matdialogmodule",{"_index":2766,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["matdialogref",{"_index":2596,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["matdividermodule",{"_index":2052,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["material",{"_index":1646,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matexpansionmodule",{"_index":2054,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["matformfieldmodule",{"_index":767,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["math.floor(p.x",{"_index":1216,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.y",{"_index":1217,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.z",{"_index":1218,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.gl/core",{"_index":776,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":4179,"title":{},"body":{"dependencies.html":{}}}],["math.max(dims.x",{"_index":1191,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.y",{"_index":1194,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.z",{"_index":1196,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(n",{"_index":825,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.min(20",{"_index":2252,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["math.min(n",{"_index":822,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.round(xyz.x",{"_index":2954,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.y",{"_index":2955,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.z",{"_index":2956,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["maticonmodule",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["maticonregistry",{"_index":1665,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":761,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["matradiomodule",{"_index":2728,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["matripplemodule",{"_index":763,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["matrix",{"_index":2395,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix.transformaspoint",{"_index":2400,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix4",{"_index":774,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["matrix4(matrix4.identity",{"_index":918,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).rotatey(toradians(rotation)).multiplyright(n.transformmatrix",{"_index":848,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).scale([2",{"_index":999,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(model.transformmatrix",{"_index":816,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matselectmodule",{"_index":1610,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["matslidermodule",{"_index":3151,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["matslidetogglemodule",{"_index":1992,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["matsnackbar",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["matsnackbarmodule",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":765,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["max",{"_index":1258,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["maximum",{"_index":78,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["mc",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["mdc",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{}}}],["measured",{"_index":1830,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":1832,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":1823,"title":{},"body":{"classes/InitializationState.html":{}}}],["memory",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":2035,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["menu'},{'name",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["menu.component",{"_index":3607,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu.component.html",{"_index":3547,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.scss",{"_index":3546,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts",{"_index":3545,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:115",{"_index":3570,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:134",{"_index":3572,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:147",{"_index":3562,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":3560,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:33",{"_index":3557,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":3558,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":3559,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:48",{"_index":3556,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:62",{"_index":3575,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:77",{"_index":3568,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:87",{"_index":3563,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:97",{"_index":3578,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.module",{"_index":2064,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["menu.module.ts",{"_index":3606,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu/visibility",{"_index":2063,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"coverage.html":{}}}],["merchantability",{"_index":4348,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4328,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":2076,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":1071,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationMetadataComponent.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1551,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1552,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":1086,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":2119,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":2106,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":1067,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":1053,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":1129,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":1308,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["messageserviceconfig",{"_index":2078,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":3002,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["metadata",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["metadata'},{'name",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["metadata.component",{"_index":2727,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["metadata.component.html",{"_index":2678,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.scss",{"_index":2677,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts",{"_index":2676,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"coverage.html":{}}}],["metadata.component.ts:21",{"_index":2685,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:24",{"_index":2696,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:27",{"_index":2697,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:30",{"_index":2703,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:33",{"_index":2684,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:59",{"_index":2687,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:67",{"_index":2695,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:75",{"_index":2691,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:84",{"_index":2686,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:92",{"_index":2693,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.module",{"_index":2673,"title":{},"body":{"modules/RegistrationContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["metadata.module.ts",{"_index":2726,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["metadata/registration",{"_index":2672,"title":{},"body":{"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["metadatafield",{"_index":2136,"title":{"interfaces/MetaDataField.html":{}},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["metadatalookup",{"_index":2973,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["metadatalookup(field",{"_index":2999,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["meter",{"_index":2359,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["method",{"_index":1180,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":1710,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":1704,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":25,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["middle",{"_index":2328,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["middlename",{"_index":2319,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{}}}],["middlenamevalidator",{"_index":2310,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["milestone",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["millimeter",{"_index":2358,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["min",{"_index":748,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{}}}],["minimap",{"_index":1245,"title":{},"body":{"components/ContentComponent.html":{}}}],["minor",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":4253,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":4312,"title":{},"body":{"license.html":{}}}],["mm",{"_index":724,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["mock",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["modal's",{"_index":2994,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["modal'},{'name",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["modal.component",{"_index":2765,"title":{},"body":{"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["modal.component.html",{"_index":2733,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.scss",{"_index":3039,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts",{"_index":2731,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:16",{"_index":3491,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:23",{"_index":3501,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:24",{"_index":2739,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:27",{"_index":2738,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{}}}],["modal.component.ts:31",{"_index":3049,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:35",{"_index":2743,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:36",{"_index":3042,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:38",{"_index":3493,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:45",{"_index":2740,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{}}}],["modal.component.ts:46",{"_index":3048,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:47",{"_index":3492,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:55",{"_index":3046,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:69",{"_index":2742,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.module",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"modules/ReviewButtonModule.html":{}}}],["modal.module.ts",{"_index":2764,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["modal.wrapper",{"_index":3512,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal/registration",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["modal/review",{"_index":3007,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"coverage.html":{}}}],["modal/video",{"_index":1368,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"coverage.html":{}}}],["modalclosed",{"_index":2002,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["mode",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["model",{"_index":22,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["model.blocksize.x.tofixed(3",{"_index":2932,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.y.tofixed(3",{"_index":2933,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.z.tofixed(3",{"_index":2934,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.label",{"_index":2921,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ$.subscribe(organ",{"_index":2635,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["model.organ.name",{"_index":2865,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ.organ",{"_index":2866,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ.src",{"_index":2756,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organiri",{"_index":2937,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.x.tofixed(3",{"_index":2947,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.y.tofixed(3",{"_index":2948,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.z.tofixed(3",{"_index":2949,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.representation_of",{"_index":149,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model.rotation.x.tofixed(3",{"_index":2941,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.y.tofixed(3",{"_index":2942,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.z.tofixed(3",{"_index":2943,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.numslices",{"_index":2931,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.thickness",{"_index":2929,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.snapshot",{"_index":2879,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.tooltip",{"_index":156,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model/model.state",{"_index":118,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["modelchanged",{"_index":2190,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/anatomical",{"_index":117,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["models/extraction",{"_index":2161,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/meta",{"_index":2780,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["models/visibility",{"_index":803,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["modelstate",{"_index":88,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modelstatemodel",{"_index":2139,"title":{"interfaces/ModelStateModel.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["modification",{"_index":2805,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["modify",{"_index":4327,"title":{},"body":{"license.html":{}}}],["module",{"_index":540,"title":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["modules",{"_index":542,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/content/content.module",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/header/header.module",{"_index":586,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/left",{"_index":587,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/registration",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/right",{"_index":593,"title":{},"body":{"modules/AppModule.html":{}}}],["monorepo",{"_index":4262,"title":{},"body":{"index.html":{}}}],["more",{"_index":1584,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":3566,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseevent",{"_index":2610,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["mouseout",{"_index":3549,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover",{"_index":3550,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover(item",{"_index":3567,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1379,"title":{},"body":{"modules/CoreModule.html":{}}}],["moved",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["moz",{"_index":727,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ms",{"_index":4389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":1286,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":1318,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.drawers",{"_index":1312,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.opened",{"_index":3475,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":1310,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":1316,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["much",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":3401,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":4263,"title":{},"body":{"index.html":{}}}],["n",{"_index":846,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["n3",{"_index":4223,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name(value",{"_index":2336,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["name.endswith(info.organ",{"_index":2428,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["name.firstname",{"_index":2533,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name.lastname",{"_index":2534,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name.middlename",{"_index":2535,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name_input",{"_index":2342,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["namechange",{"_index":2312,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["nameinputcomponent",{"_index":506,"title":{"components/NameInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameinputmodule",{"_index":2048,"title":{"modules/NameInputModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules.html":{},"overview.html":{}}}],["namematches(organname",{"_index":2208,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["names",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["namespace",{"_index":1407,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["namevalid",{"_index":2585,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["nan",{"_index":2172,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["narrow",{"_index":1213,"title":{},"body":{"components/ContentComponent.html":{}}}],["native",{"_index":2886,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{}}}],["nav",{"_index":3228,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav'},{'name",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["nav.component",{"_index":3312,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav.component.html",{"_index":3230,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.scss",{"_index":3229,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts",{"_index":3224,"title":{},"body":{"components/StageNavComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["nav.component.ts:109",{"_index":3268,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:19",{"_index":3255,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:23",{"_index":3247,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:29",{"_index":3245,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:32",{"_index":3251,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:35",{"_index":3253,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:38",{"_index":3254,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:41",{"_index":3272,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:44",{"_index":3274,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:47",{"_index":3269,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:50",{"_index":3270,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:53",{"_index":3277,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:58",{"_index":3281,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:60",{"_index":3244,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:76",{"_index":3257,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:91",{"_index":3265,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.module",{"_index":1367,"title":{},"body":{"modules/ContentModule.html":{}}}],["nav.module.ts",{"_index":3310,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav/stage",{"_index":1366,"title":{},"body":{"modules/ContentModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["navigation",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":2986,"title":{},"body":{"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1402,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["needed",{"_index":3196,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["needs",{"_index":1076,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["network",{"_index":4303,"title":{},"body":{"index.html":{}}}],["neurons",{"_index":1456,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neurons.svg",{"_index":1457,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1122,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":140,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newplacement",{"_index":2401,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.x_translation",{"_index":2404,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.y_translation",{"_index":2405,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.z_translation",{"_index":2406,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newposition",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["newrotation",{"_index":3129,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["newstructures",{"_index":2250,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["next",{"_index":123,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":2105,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ng",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ngacceptinputtype_expanded",{"_index":1896,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":1895,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":1894,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":1061,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["ngonchanges",{"_index":2974,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ngondestroy",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["ngoninit",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["ngx",{"_index":680,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs",{"_index":3338,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":3317,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":3320,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":109,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs/store/operators",{"_index":2505,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":17,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":3314,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":3329,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1667,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsimmutabledatarepository",{"_index":771,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsloggerpluginmodule",{"_index":3316,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":3342,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":3321,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":3330,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":29,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsstoragepluginmodule",{"_index":3319,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":3339,"title":{},"body":{"modules/StoreModule.html":{}}}],["nih",{"_index":4308,"title":{},"body":{"index.html":{}}}],["node",{"_index":4229,"title":{},"body":{"dependencies.html":{}}}],["node.id",{"_index":1032,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.representation_of",{"_index":877,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node_collision_throttle_duration",{"_index":810,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodecollisions",{"_index":884,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodedragevent",{"_index":1173,"title":{},"body":{"components/ContentComponent.html":{}}}],["nodes",{"_index":829,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["nodes.filter((model",{"_index":1038,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.filter(node",{"_index":1033,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.map(n",{"_index":845,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.svg",{"_index":1455,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["noninfringement",{"_index":4352,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":649,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normalizeplacement",{"_index":2569,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["normalizeplacement(place",{"_index":2391,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["not(:last",{"_index":743,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["note",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":4289,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":2612,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["notice",{"_index":3935,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":3300,"title":{},"body":{"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["null",{"_index":1675,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["null)?.getcontainerelement",{"_index":3451,"title":{},"body":{"injectables/ThemingService.html":{}}}],["nullish",{"_index":2414,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["number",{"_index":71,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(value.slice(0",{"_index":1836,"title":{},"body":{"classes/InitializationState.html":{}}}],["numbersonlymodule",{"_index":3222,"title":{},"body":{"modules/SlicesInputModule.html":{}}}],["numeric",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["numslices",{"_index":2167,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["o.id",{"_index":2206,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.organ.tolowercase",{"_index":2209,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.side",{"_index":2207,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["obj",{"_index":3370,"title":{},"body":{"components/TagListComponent.html":{}}}],["object",{"_index":997,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["object.entries(entities).foreach(([id",{"_index":143,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["object.keys(data.organirilookup).length",{"_index":2753,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["object.keys(db.organirilookup).find((code",{"_index":2417,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["object.keys(this.initialstate",{"_index":2192,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["object.values(aslookup",{"_index":2268,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["objects",{"_index":671,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["observable",{"_index":96,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["observableinput",{"_index":82,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["obtaining",{"_index":4321,"title":{},"body":{"license.html":{}}}],["of(undefined",{"_index":1027,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["off/on",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1320,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["offsets",{"_index":3082,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["old",{"_index":4276,"title":{},"body":{"index.html":{}}}],["oldposition",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.x",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.y",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.z",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["once",{"_index":1392,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2968,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ondestroy",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["one",{"_index":1585,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["online",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["onorganchange(organ",{"_index":2289,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["onorganirichange",{"_index":2256,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["onreferencedatachange",{"_index":2279,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ontological",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["ontology/ccf",{"_index":2918,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ontologyid",{"_index":1618,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["opacities",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":873,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":2056,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["open",{"_index":1348,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ReviewButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":1814,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["openapi",{"_index":3780,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":4285,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":4287,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":4286,"title":{},"body":{"index.html":{}}}],["opendialog",{"_index":2735,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["opened",{"_index":1292,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":1801,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":1758,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":1809,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":1759,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":1853,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening/closing/expanding",{"_index":1776,"title":{},"body":{"classes/InitializationState.html":{}}}],["opens",{"_index":1842,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["opposite",{"_index":1763,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["optimization",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1968,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1575,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["optionsel",{"_index":3243,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsel.contains(target",{"_index":3288,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsref",{"_index":3234,"title":{},"body":{"components/StageNavComponent.html":{}}}],["orcid",{"_index":2462,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["orcid.match('^[a",{"_index":2554,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["orcidcontrol",{"_index":2679,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["orcidid",{"_index":2509,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["orcidtouri",{"_index":2446,"title":{},"body":{"injectables/PageState.html":{}}}],["orcidtouri(id",{"_index":2466,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["orcidvalid",{"_index":2440,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{}}}],["ordering",{"_index":2163,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["organ.id",{"_index":2961,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organ.name",{"_index":2230,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.name.tolowercase",{"_index":2295,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.ontologyid",{"_index":2296,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.sex?.tolowercase",{"_index":2297,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.side",{"_index":2231,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.src",{"_index":976,"title":{},"body":{"interfaces/Collision.html":{},"components/RegistrationContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organ.touppercase",{"_index":2410,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organconfig",{"_index":1615,"title":{"interfaces/OrganConfig.html":{}},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["organdata",{"_index":2291,"title":{"interfaces/OrganData.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["organdata?.organ",{"_index":2294,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdata?.sex?.tolowercase",{"_index":2293,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions",{"_index":910,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.x",{"_index":913,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.y",{"_index":914,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z",{"_index":2277,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z].map(n",{"_index":915,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity",{"_index":939,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity.x_dimension",{"_index":950,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity.y_dimension",{"_index":953,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity.z_dimension",{"_index":956,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentry",{"_index":2435,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo",{"_index":2146,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo.sex",{"_index":2412,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.sex",{"_index":2411,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.side?.tolowercase",{"_index":2302,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo?.side].join('|').touppercase",{"_index":2416,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organiri",{"_index":856,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organirilookup",{"_index":2369,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organlist",{"_index":2586,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organlistoptions(organoptions",{"_index":2958,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organname",{"_index":2210,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organoptions",{"_index":617,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["organoptions.includes(organ.id",{"_index":2962,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organoptions.length",{"_index":2959,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organs",{"_index":1414,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["organscene",{"_index":860,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organselect",{"_index":2593,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselect(organ",{"_index":2607,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselected",{"_index":2000,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["organsex",{"_index":2290,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organside",{"_index":2204,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organspatialentities",{"_index":2371,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["originscene",{"_index":858,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["orthographic",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["ot",{"_index":1403,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["ot2od026671",{"_index":4310,"title":{},"body":{"index.html":{}}}],["other.expanded",{"_index":1882,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":1883,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":1888,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":1886,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":1885,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":1884,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":1887,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherwise",{"_index":1188,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"license.html":{}}}],["out",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":678,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outputs",{"_index":716,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outside",{"_index":3125,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ovaries",{"_index":1458,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1459,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1460,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":3569,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["overall",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["overlay",{"_index":1603,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"injectables/ThemingService.html":{}}}],["overlaycontainer",{"_index":3432,"title":{},"body":{"injectables/ThemingService.html":{}}}],["overlays",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":2873,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["overview",{"_index":4366,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owning",{"_index":3459,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":905,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["p.target",{"_index":909,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.translation_units",{"_index":2356,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_rotation",{"_index":2363,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_scaling",{"_index":2364,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_translation",{"_index":2360,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_rotation",{"_index":924,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.y_scaling",{"_index":2365,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_translation",{"_index":920,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_rotation].map(toradians",{"_index":925,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_scaling",{"_index":2366,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.z_translation].map((n",{"_index":921,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_translation].map(t",{"_index":2361,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["package",{"_index":3752,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["page",{"_index":23,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["page.isorcidvalid",{"_index":2634,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["page.orcidvalid",{"_index":2864,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.registrationcallbackset",{"_index":2905,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.registrationstarted$.subscribe((registrationstarted",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["page.snapshot.user.firstname",{"_index":2895,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.snapshot.user.lastname",{"_index":2897,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.snapshot.user.middlename",{"_index":2899,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.snapshot.user.orcidid",{"_index":2901,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.uritoorcid(user.orcidid",{"_index":2705,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["page.user$.subscribe(user",{"_index":2631,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["page.user.firstname",{"_index":2754,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.lastname",{"_index":2755,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.middlename",{"_index":2923,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.user.orcidid",{"_index":2924,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page/page.state",{"_index":119,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["pages",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["pagestate",{"_index":91,"title":{"injectables/PageState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagestatemodel",{"_index":2510,"title":{"interfaces/PageStateModel.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["pair",{"_index":1890,"title":{},"body":{"classes/InitializationState.html":{}}}],["paired",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["palatine",{"_index":1461,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas",{"_index":1464,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1465,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1604,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"changelog.html":{}}}],["panel",{"_index":1543,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":3023,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["param",{"_index":159,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":1771,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":2080,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["parent.messages.pipe(takewhile",{"_index":2112,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":661,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsed",{"_index":1917,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parsedjson",{"_index":1906,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parseorgan",{"_index":664,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseorgan(value",{"_index":651,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":4189,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["partial",{"_index":3346,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{}}}],["particular",{"_index":4350,"title":{},"body":{"license.html":{}}}],["partly",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":1714,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":1719,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":1718,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":1717,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":1716,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["pass",{"_index":2242,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["passed",{"_index":2009,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["patch",{"_index":2504,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["patchplacement",{"_index":2393,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["patchplacement.target",{"_index":2403,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["path",{"_index":4210,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":1341,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":1002,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pelvis",{"_index":1466,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pelvis.svg",{"_index":1468,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":2166,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["performance",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":4316,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4335,"title":{},"body":{"license.html":{}}}],["person",{"_index":2508,"title":{"interfaces/Person.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"coverage.html":{},"license.html":{}}}],["persons",{"_index":4336,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2479,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["pipe",{"_index":835,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pipe(filter(s",{"_index":2541,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["pipe(mergeall",{"_index":2114,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["place",{"_index":2402,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.x_rotation",{"_index":2841,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.x_translation",{"_index":2397,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.y_rotation",{"_index":2842,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.y_translation",{"_index":2398,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.z_rotation",{"_index":2843,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.z_translation",{"_index":2399,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["placed",{"_index":3328,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":1922,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["placement",{"_index":839,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["placement.length",{"_index":894,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placement[0",{"_index":896,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placement_date",{"_index":2938,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["placementcube",{"_index":966,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placementpatches",{"_index":2374,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["placenta",{"_index":1469,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["placenta.svg",{"_index":1470,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["play",{"_index":3529,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["play_circle_outline",{"_index":3526,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["player",{"_index":3496,"title":{},"body":{"components/VideoModalComponent.html":{},"modules/VideoModalModule.html":{},"dependencies.html":{}}}],["pluckunique",{"_index":2506,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["plugin",{"_index":3318,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":3337,"title":{},"body":{"modules/StoreModule.html":{}}}],["plus",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["populated",{"_index":2421,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["popup",{"_index":3260,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["portal",{"_index":1650,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":4343,"title":{},"body":{"license.html":{}}}],["pos",{"_index":3010,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["position",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":1798,"title":{},"body":{"classes/InitializationState.html":{}}}],["position.x",{"_index":949,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.x.tofixed(1)}_${position.y.tofixed(1)}_${position.z.tofixed(1",{"_index":2217,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["position.y",{"_index":952,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.z",{"_index":955,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.z].map((n",{"_index":981,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["positions",{"_index":1085,"title":{},"body":{"components/ContainerComponent.html":{}}}],["possible",{"_index":2145,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["posterior",{"_index":991,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["potential",{"_index":2408,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["pre",{"_index":3610,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["preclose",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["preexisting",{"_index":2624,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["preferences",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["prevent",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2148,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["previousitems",{"_index":2245,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previousitems.map(structure",{"_index":2251,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previously",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["previousregistrationnodes",{"_index":897,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations",{"_index":903,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations.map((entity",{"_index":904,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["prevnodes",{"_index":837,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["primary",{"_index":3623,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["private",{"_index":20,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":1285,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processed",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":1073,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["processing",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":3761,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2998,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["projected",{"_index":1081,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects",{"_index":4264,"title":{},"body":{"index.html":{}}}],["projects/.../anatomical",{"_index":4375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../app",{"_index":4258,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../block",{"_index":4379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../config.ts",{"_index":4257,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../container.component.ts",{"_index":4259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../default",{"_index":4380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../drawer.component.ts",{"_index":4372,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":4386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../messages.ts",{"_index":4371,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../meta",{"_index":4373,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../model.state.ts",{"_index":4376,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../reference",{"_index":4255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../registration.state.ts",{"_index":4385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../rotation",{"_index":4381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../scene.state.ts",{"_index":4256,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../slices",{"_index":4383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../stage",{"_index":4374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":4387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tag",{"_index":4382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../theming.service.ts",{"_index":4384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":1746,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["promise(resolve",{"_index":1743,"title":{},"body":{"classes/InitializationState.html":{}}}],["properties",{"_index":19,"title":{"properties.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"properties.html":{}}}],["property",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["prostate",{"_index":1471,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1472,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":1093,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":2084,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"changelog.html":{},"overview.html":{}}}],["provides",{"_index":2957,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["providing",{"_index":1261,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["public",{"_index":2583,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"changelog.html":{}}}],["publish",{"_index":4329,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":4351,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1206,"title":{},"body":{"components/ContentComponent.html":{},"components/JsonFileReaderComponent.html":{}}}],["push",{"_index":2745,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["pushed",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1790,"title":{},"body":{"classes/InitializationState.html":{}}}],["python",{"_index":3685,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["q",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["qs",{"_index":4232,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1225,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":1089,"title":{},"body":{"components/ContainerComponent.html":{}}}],["quickly",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":2362,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["radio",{"_index":2718,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{}}}],["radius",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ratio",{"_index":2940,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rc.1",{"_index":4009,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":4234,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":4164,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":4184,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":4236,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2348,"title":{},"body":{"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/TagSearchModule.html":{}}}],["readable",{"_index":4238,"title":{},"body":{"dependencies.html":{}}}],["reader",{"_index":1900,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["reader'},{'name",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reader.component",{"_index":1947,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader.component.html",{"_index":1902,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.scss",{"_index":1901,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts",{"_index":1899,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"coverage.html":{}}}],["reader.component.ts:13",{"_index":1914,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:16",{"_index":1925,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:19",{"_index":1909,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:22",{"_index":1907,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:35",{"_index":1918,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:45",{"_index":1916,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.module",{"_index":2730,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["reader.module.ts",{"_index":1946,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader/json",{"_index":1898,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"modules/RegistrationMetadataModule.html":{},"coverage.html":{}}}],["readonly",{"_index":160,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["real",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":3326,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":1275,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":2086,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":1614,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rectify",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["reduce((acc",{"_index":881,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reduction",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["refdata",{"_index":2808,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reference",{"_index":90,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["referencedata",{"_index":1004,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["referencedatastate",{"_index":805,"title":{"injectables/ReferenceDataState.html":{}},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["referencedatastatemodel",{"_index":2368,"title":{"interfaces/ReferenceDataStateModel.html":{}},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{}}}],["referenceorgannodes",{"_index":850,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["referenceorgansimplenodes",{"_index":863,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":1296,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["refernced",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":725,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["refreshblocksize",{"_index":713,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["refreshes",{"_index":712,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["refreshslices",{"_index":3204,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["reg",{"_index":2456,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_first_name",{"_index":2826,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_last_name",{"_index":2828,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_middle_name",{"_index":2827,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.initialregistration",{"_index":2525,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["reg.placement",{"_index":2823,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.placement[0",{"_index":2822,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_count",{"_index":2846,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_thickness",{"_index":2845,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.useregistrationcallback",{"_index":2520,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["reg.x_dimension",{"_index":2837,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.y_dimension",{"_index":2838,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.z_dimension",{"_index":2839,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["regions",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":618,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["register(usecallback",{"_index":2876,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["register/download",{"_index":2874,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["registerbuttonclick",{"_index":2594,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerbuttonclick(event",{"_index":2609,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerdata",{"_index":2977,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registered",{"_index":1412,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1699,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":1696,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":1724,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":1700,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1662,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registers",{"_index":1694,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registration",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["registration.registrations",{"_index":3340,"title":{},"body":{"modules/StoreModule.html":{}}}],["registration.state$.subscribe(reg",{"_index":2706,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["registration/registration.state",{"_index":801,"title":{},"body":{"interfaces/Collision.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["registrationcallback",{"_index":637,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["registrationcallback?.(json",{"_index":2883,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["registrationcallbackset",{"_index":2441,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["registrationcontentcomponent",{"_index":507,"title":{"components/RegistrationContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationcontentmodule",{"_index":2664,"title":{"modules/RegistrationContentModule.html":{}},"body":{"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules.html":{},"overview.html":{}}}],["registrationexpanded",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["registrationisvalid",{"_index":2971,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registrationmetadatacomponent",{"_index":508,"title":{"components/RegistrationMetadataComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationmetadatamodule",{"_index":2669,"title":{"modules/RegistrationMetadataModule.html":{}},"body":{"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["registrationmodalcomponent",{"_index":510,"title":{"components/RegistrationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationmodalmodule",{"_index":556,"title":{"modules/RegistrationModalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RegistrationModalModule.html":{},"modules.html":{},"overview.html":{}}}],["registrations",{"_index":2772,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["registrations#1",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["registrationselected",{"_index":2587,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["registrationstarted",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{}}}],["registrationstate",{"_index":800,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registrationstatemodel",{"_index":2768,"title":{"interfaces/RegistrationStateModel.html":{}},"body":{"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["registrationtoggle",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["registrationtoggle(event",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["registry",{"_index":1671,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":3322,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1661,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["registry.state.ts:127",{"_index":1730,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:147",{"_index":1728,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:45",{"_index":1726,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:58",{"_index":1731,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:87",{"_index":1732,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:97",{"_index":1733,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1395,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1660,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["registry[methodname",{"_index":1706,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regs",{"_index":2793,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["regular",{"_index":2484,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["related",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["removable",{"_index":3349,"title":{},"body":{"components/TagListComponent.html":{}}}],["remove",{"_index":3361,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{}}}],["removeclass",{"_index":3453,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":142,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{}}}],["removed.add(id",{"_index":145,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removed.has(iri",{"_index":150,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removeeventlistener('beforeunload",{"_index":2551,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["removes",{"_index":3360,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["removetag",{"_index":30,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/TagListComponent.html":{}}}],["removetag(tag",{"_index":66,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["renderer",{"_index":3447,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":3434,"title":{},"body":{"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["renderer[methodname](overlay",{"_index":3455,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":3454,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":3227,"title":{},"body":{"components/StageNavComponent.html":{}}}],["renders",{"_index":1510,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["repeat",{"_index":1653,"title":{},"body":{"components/HeaderComponent.html":{}}}],["replace(/(.{1,4})/g",{"_index":2564,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["replaysubject",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["replaysubject(1",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["repository",{"_index":4261,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2952,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["required",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["requiredvalues",{"_index":2863,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["requiredvalues.every(value",{"_index":2867,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["researcher's",{"_index":2306,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["reset",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["resetitem",{"_index":3551,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["resetrotation",{"_index":3134,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["resetrotation(dimension",{"_index":3139,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["resets",{"_index":1184,"title":{},"body":{"components/ContentComponent.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["resetstage",{"_index":1165,"title":{},"body":{"components/ContentComponent.html":{}}}],["resettheme",{"_index":3408,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resize",{"_index":1177,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor",{"_index":1220,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor(this.rootref.nativeelement",{"_index":1230,"title":{},"body":{"components/ContentComponent.html":{}}}],["resolve",{"_index":1739,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolved",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["resolver",{"_index":1685,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["resolves",{"_index":1104,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["respond",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":3565,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["restriction",{"_index":4324,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":80,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retracted",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":133,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["returned",{"_index":79,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":1506,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reverted",{"_index":3576,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["review",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["review/review",{"_index":3111,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["review_button",{"_index":3020,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewbuttoncomponent",{"_index":512,"title":{"components/ReviewButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewbuttonmodule",{"_index":3031,"title":{"modules/ReviewButtonModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewing",{"_index":3038,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["reviewmodal",{"_index":2967,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewmodalcomponent",{"_index":515,"title":{"components/ReviewModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewmodaldata",{"_index":3041,"title":{"interfaces/ReviewModalData.html":{}},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"coverage.html":{}}}],["reviewmodalmodule",{"_index":3036,"title":{"modules/ReviewModalModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules.html":{},"overview.html":{}}}],["rgb",{"_index":4215,"title":{},"body":{"dependencies.html":{}}}],["rgba(0",{"_index":2661,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["right",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["right.px",{"_index":1273,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["right.svg",{"_index":1437,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":1266,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rights",{"_index":4326,"title":{},"body":{"license.html":{}}}],["rightsidebarcomponent",{"_index":516,"title":{"components/RightSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rightsidebarmodule",{"_index":557,"title":{"modules/RightSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["ripple::after",{"_index":2721,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["ripple::before",{"_index":2720,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["root",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["root_states",{"_index":3324,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootref",{"_index":1167,"title":{},"body":{"components/ContentComponent.html":{}}}],["rotatednodes",{"_index":841,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotates",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["rotatexyz([p.x_rotation",{"_index":923,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotatexyz([rotation.x",{"_index":982,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation",{"_index":518,"title":{"interfaces/Rotation.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotation.x",{"_index":958,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.y",{"_index":960,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.z",{"_index":962,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.z].map(toradians",{"_index":983,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation_order",{"_index":2944,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rotation_units",{"_index":2945,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rotationchange",{"_index":3127,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotations",{"_index":3142,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotationslidercomponent",{"_index":517,"title":{"components/RotationSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rotationslidermodule",{"_index":3095,"title":{"modules/RotationSliderModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["round",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["ru/cdk",{"_index":4148,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":4150,"title":{},"body":{"dependencies.html":{}}}],["ru/common/entity",{"_index":103,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ru/common/typings",{"_index":2352,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ru/ngxs",{"_index":3315,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ru/ngxs/decorators",{"_index":107,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ru/ngxs/repositories",{"_index":108,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["rui",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{},"index.html":{}}}],["rui/src/app/app",{"_index":606,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/app.component.ts",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["rui/src/app/app.component.ts:100",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:118",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:122",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:135",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:174",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:188",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:44",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:47",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:49",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:51",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:55",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:56",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:58",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:59",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:60",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:62",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:64",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:66",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:69",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.module.ts",{"_index":560,"title":{},"body":{"modules/AppModule.html":{}}}],["rui/src/app/app.module.ts:54",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["rui/src/app/core/core.module.ts",{"_index":1376,"title":{},"body":{"modules/CoreModule.html":{}}}],["rui/src/app/core/models/anatomical",{"_index":3343,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/core/models/documentation.ts",{"_index":1539,"title":{},"body":{"interfaces/DocumentationContent.html":{},"coverage.html":{}}}],["rui/src/app/core/models/extraction",{"_index":1557,"title":{},"body":{"interfaces/ExtractionSet.html":{},"coverage.html":{}}}],["rui/src/app/core/models/meta",{"_index":2137,"title":{},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/core/models/visibility",{"_index":3541,"title":{},"body":{"interfaces/VisibilityItem.html":{},"coverage.html":{}}}],["rui/src/app/core/services/config/config.module.ts",{"_index":1041,"title":{},"body":{"modules/ConfigModule.html":{}}}],["rui/src/app/core/services/config/config.ts",{"_index":1613,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/services/theming/theming.module.ts",{"_index":3397,"title":{},"body":{"modules/ThemingModule.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts",{"_index":3402,"title":{},"body":{"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:13",{"_index":3429,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:14",{"_index":3430,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:16",{"_index":3428,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:18",{"_index":3431,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:21",{"_index":3419,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:25",{"_index":3411,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:39",{"_index":3416,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:48",{"_index":3427,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:60",{"_index":3425,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:71",{"_index":3423,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:83",{"_index":3414,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/store/anatomical",{"_index":7,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["rui/src/app/core/store/icon",{"_index":1394,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/model/model.state.ts",{"_index":2140,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/page/page.state.ts",{"_index":2438,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"coverage.html":{}}}],["rui/src/app/core/store/page/page.state.ts:103",{"_index":2465,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:120",{"_index":2458,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:135",{"_index":2477,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:145",{"_index":2480,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:161",{"_index":2473,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:176",{"_index":2470,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:183",{"_index":2471,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:193",{"_index":2459,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:199",{"_index":2460,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:231",{"_index":2461,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:241",{"_index":2483,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:250",{"_index":2467,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:62",{"_index":2496,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:64",{"_index":2492,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:65",{"_index":2494,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:66",{"_index":2490,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:67",{"_index":2488,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:68",{"_index":2486,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:71",{"_index":2498,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:76",{"_index":2500,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:84",{"_index":2502,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:86",{"_index":2457,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/reference",{"_index":2349,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts",{"_index":2769,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts",{"_index":770,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:104",{"_index":3176,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:133",{"_index":3178,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:149",{"_index":3180,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:177",{"_index":3182,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:201",{"_index":3184,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:209",{"_index":3185,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:227",{"_index":3187,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:249",{"_index":3165,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:265",{"_index":3166,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:266",{"_index":3168,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:267",{"_index":3167,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:270",{"_index":3188,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:275",{"_index":3158,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:293",{"_index":3164,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:303",{"_index":3159,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:327",{"_index":3163,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:332",{"_index":3162,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:343",{"_index":3161,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:348",{"_index":3160,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:64",{"_index":3170,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:75",{"_index":3172,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:92",{"_index":3174,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/store.module.ts",{"_index":3313,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/modules/content/content.component.ts",{"_index":1155,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["rui/src/app/modules/content/content.component.ts:108",{"_index":1186,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:116",{"_index":1179,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:126",{"_index":1174,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:26",{"_index":1171,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:28",{"_index":1170,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:30",{"_index":1219,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:35",{"_index":1209,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:39",{"_index":1200,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:50",{"_index":1210,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:55",{"_index":1201,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:60",{"_index":1221,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:63",{"_index":1168,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:86",{"_index":1178,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:99",{"_index":1175,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.module.ts",{"_index":1363,"title":{},"body":{"modules/ContentModule.html":{}}}],["rui/src/app/modules/content/stage",{"_index":3223,"title":{},"body":{"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/modules/content/video",{"_index":3487,"title":{},"body":{"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/header/header.component.ts",{"_index":1627,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["rui/src/app/modules/header/header.component.ts:17",{"_index":1633,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.component.ts:19",{"_index":1632,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.component.ts:21",{"_index":1631,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.module.ts",{"_index":1657,"title":{},"body":{"modules/HeaderModule.html":{}}}],["rui/src/app/modules/left",{"_index":1995,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/registration",{"_index":2578,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/review/review",{"_index":2963,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/right",{"_index":3070,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/block",{"_index":668,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/details",{"_index":1503,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts",{"_index":1048,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:105",{"_index":1082,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:115",{"_index":1072,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:124",{"_index":1083,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":1069,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":1101,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":1092,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":1097,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":1103,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":1106,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":1087,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:62",{"_index":1065,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:83",{"_index":1078,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts",{"_index":1260,"title":{},"body":{"components/ContentComponent-1.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:103",{"_index":1293,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:116",{"_index":1288,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":1278,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":1279,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":1281,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":1282,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":1276,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":1295,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":1274,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:60",{"_index":1287,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:70",{"_index":1284,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer.module.ts",{"_index":1550,"title":{},"body":{"modules/DrawerModule.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":1736,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":1748,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":1745,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:41",{"_index":1749,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:46",{"_index":1750,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:56",{"_index":1754,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:65",{"_index":1751,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/messages.ts",{"_index":1333,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/drawer/toggle",{"_index":3456,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/extraction",{"_index":1562,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/json",{"_index":1897,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/labeled",{"_index":1950,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/name",{"_index":2304,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/registration",{"_index":2675,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/rotation",{"_index":3113,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/slices",{"_index":3189,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/tag",{"_index":3347,"title":{},"body":{"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/visibility",{"_index":3544,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/services/message/message.service.ts",{"_index":2068,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:103",{"_index":2127,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:112",{"_index":2128,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:128",{"_index":2135,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:130",{"_index":2132,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:153",{"_index":2134,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:163",{"_index":2133,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:50",{"_index":2124,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:70",{"_index":2129,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:83",{"_index":2125,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:93",{"_index":2126,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui_locations.jsonld",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["rui_organs",{"_index":2020,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui_organs.filter(organ",{"_index":2960,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ruiconfig",{"_index":1623,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1077,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["runtime",{"_index":1401,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":112,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":114,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["s",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/User.html":{}}}],["safehtml",{"_index":1663,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1664,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["same",{"_index":2164,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sample",{"_index":4075,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1673,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1404,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["sanitizer",{"_index":1672,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saveas",{"_index":2775,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["saveas(data",{"_index":2887,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["saved",{"_index":2531,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["saver",{"_index":2776,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["saves",{"_index":2474,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["scaffolding",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1648,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale([blocksize.x",{"_index":984,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scale([entity.x_dimension",{"_index":926,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scalex",{"_index":735,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scaling_units",{"_index":2939,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["scene",{"_index":24,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["scene/scene.state",{"_index":120,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"modules/StoreModule.html":{}}}],["scenegraph",{"_index":995,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodelookup",{"_index":2372,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["scenestate",{"_index":92,"title":{"injectables/SceneState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenestatemodel",{"_index":808,"title":{"interfaces/SceneStateModel.html":{}},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["scheduled",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["schemes",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":4304,"title":{},"body":{"index.html":{}}}],["script",{"_index":3504,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["script.src",{"_index":3507,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["scroll",{"_index":2027,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["scrollbar",{"_index":2029,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scrolling",{"_index":1153,"title":{},"body":{"components/ContainerComponent.html":{}}}],["search",{"_index":77,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["search.component",{"_index":3394,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search.component.ts",{"_index":4141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.module",{"_index":3110,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["search.module.ts",{"_index":3391,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search/tag",{"_index":3109,"title":{},"body":{"modules/RightSidebarModule.html":{},"modules/TagSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searches",{"_index":74,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"changelog.html":{}}}],["searchexternal",{"_index":31,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["searchexternal(text",{"_index":68,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["section",{"_index":2716,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["sections",{"_index":3214,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["see",{"_index":2601,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":2036,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["selectable",{"_index":2622,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["selected",{"_index":1569,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["selecting",{"_index":1566,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["selection",{"_index":1965,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["selector",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["selects",{"_index":1712,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["sell",{"_index":4333,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":1066,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["sender",{"_index":2073,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":1872,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":1839,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":2122,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":2090,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1869,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sendtoggle",{"_index":1873,"title":{},"body":{"classes/InitializationState.html":{}}}],["sennet",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":1162,"title":{},"body":{"components/ContentComponent.html":{}}}],["sent",{"_index":1334,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["separated",{"_index":1511,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["server",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":47,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":3438,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/config/config",{"_index":799,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["services/config/config.module",{"_index":1381,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":1338,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1382,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":141,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{}}}],["set's",{"_index":2854,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["set(collisions.map(node",{"_index":1031,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(reg.ccf_annotations",{"_index":2849,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["set.label",{"_index":2271,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["set.name",{"_index":1595,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.sites.length",{"_index":1596,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.ts",{"_index":1558,"title":{},"body":{"interfaces/ExtractionSet.html":{},"coverage.html":{}}}],["set__chips",{"_index":3378,"title":{},"body":{"components/TagListComponent.html":{}}}],["setallopacity",{"_index":3552,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setallopacity(value",{"_index":3571,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setanatomicalstructures(anatomicalstructures",{"_index":2239,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setblocksize(blocksize",{"_index":2211,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setchange",{"_index":1572,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["setdisplayerrors(displayerrors",{"_index":2855,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setextractionsets(extractionsets",{"_index":2240,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setextractionsites(extractionsites",{"_index":2238,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sethaschanges",{"_index":2447,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setname(value",{"_index":2330,"title":{},"body":{"components/NameInputComponent.html":{}}}],["setorcidid",{"_index":2448,"title":{},"body":{"injectables/PageState.html":{}}}],["setorcidid(id",{"_index":2472,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setorgan(organ",{"_index":2228,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setorgandefaults",{"_index":2233,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setorganselection(ids",{"_index":2859,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setposition(position",{"_index":2214,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setrotation(rotation",{"_index":2213,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets",{"_index":1079,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sets.length",{"_index":2273,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets[0].sites",{"_index":2274,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsex(sex",{"_index":2235,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsexfromlabel",{"_index":2595,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["setsexfromlabel(label",{"_index":2613,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["setshowprevious",{"_index":2244,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setshowprevious(showprevious",{"_index":2237,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setside(side",{"_index":2236,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setslicesconfig(slicesconfig",{"_index":2218,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["settheme",{"_index":3409,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":3426,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":1841,"title":{},"body":{"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/ToggleButtonComponent.html":{}}}],["setting",{"_index":3118,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/StoreModule.html":{}}}],["settoinitialregistration",{"_index":2891,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setup",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["setusecancelregistrationcallback",{"_index":2449,"title":{},"body":{"injectables/PageState.html":{}}}],["setusecancelregistrationcallback(use",{"_index":2476,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setusedropdownmenu(value",{"_index":3275,"title":{},"body":{"components/StageNavComponent.html":{}}}],["setuseregistrationcallback(use",{"_index":2853,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setusername",{"_index":2450,"title":{},"body":{"injectables/PageState.html":{}}}],["setusername(name",{"_index":2478,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setviewside(viewside",{"_index":2220,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setviewtype",{"_index":1166,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(is3dview",{"_index":1185,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(viewtype",{"_index":2219,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sex",{"_index":1619,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["sexbylabel",{"_index":2588,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["sexes",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["sexselected",{"_index":2589,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["shadow",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{}}}],["shall",{"_index":4340,"title":{},"body":{"license.html":{}}}],["share",{"_index":794,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["shared",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"modules/RightSidebarModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/SlicesInputModule.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"modules/VisibilityMenuModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/User.html":{}}}],["shared/components/block",{"_index":3100,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/extraction",{"_index":2057,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/labeled",{"_index":3311,"title":{},"body":{"modules/StageNavModule.html":{}}}],["shared/components/name",{"_index":2059,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/registration",{"_index":2671,"title":{},"body":{"modules/RegistrationContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["shared/components/rotation",{"_index":3101,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/slices",{"_index":3104,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/tag",{"_index":3106,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/visibility",{"_index":2062,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/rxjs",{"_index":2154,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shared/web",{"_index":646,"title":{},"body":{"components/AppWebComponent.html":{}}}],["shifts",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["shortest",{"_index":4209,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":1222,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["showcollisions",{"_index":809,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["showdebugbuttons",{"_index":1163,"title":{},"body":{"components/ContentComponent.html":{}}}],["showing",{"_index":2992,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["shown",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["showprevious",{"_index":902,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shows",{"_index":1202,"title":{},"body":{"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["shrink",{"_index":3598,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["side",{"_index":989,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["sidebar",{"_index":1244,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["sidebar.component",{"_index":2067,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar.component.html",{"_index":1998,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1997,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":1996,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:20",{"_index":3074,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":3073,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":2005,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:25",{"_index":3072,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:27",{"_index":2004,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":2018,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:37",{"_index":2003,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":2007,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.module",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.module.ts",{"_index":2051,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar/left",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["sidebar/right",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["sidechange",{"_index":3239,"title":{},"body":{"components/StageNavComponent.html":{}}}],["sides",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":2605,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["significant",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":3278,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["simplescenenodelookup",{"_index":2373,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["simplifies",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["single",{"_index":2089,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["site",{"_index":2008,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sites",{"_index":1559,"title":{},"body":{"interfaces/ExtractionSet.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["sizable",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sizes",{"_index":683,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/RightSidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["skin",{"_index":1473,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1474,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipconfirmation",{"_index":2452,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["skipself",{"_index":1378,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["skipunsavedchangesconfirmation",{"_index":619,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["skipuntil",{"_index":2159,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["skipuntil(this.page.registrationstarted$.pipe",{"_index":2286,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["slice",{"_index":2151,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["slice(0",{"_index":193,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["slice_count",{"_index":2930,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["slice_input",{"_index":3201,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slice_thickness",{"_index":2928,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["slices",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["slicesconfig",{"_index":2143,"title":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slicesconfigchange",{"_index":3191,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slicesinputcomponent",{"_index":520,"title":{"components/SlicesInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slicesinputmodule",{"_index":3096,"title":{"modules/SlicesInputModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/SlicesInputModule.html":{},"modules.html":{},"overview.html":{}}}],["slide",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{}}}],["slide_toggle",{"_index":1981,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["slider",{"_index":1954,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["slider.component",{"_index":3150,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider.component.html",{"_index":3123,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.scss",{"_index":3124,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts",{"_index":3114,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slider.component.ts:34",{"_index":3137,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:37",{"_index":3136,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:40",{"_index":3135,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:55",{"_index":3138,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:66",{"_index":3140,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.module",{"_index":3103,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["slider.module.ts",{"_index":3149,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider/ngx",{"_index":4153,"title":{},"body":{"dependencies.html":{}}}],["slider/rotation",{"_index":3102,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sliders",{"_index":2032,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slightly",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1475,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar.dismiss",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar__surface",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["snapshot",{"_index":2527,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["snapshot.useregistrationcallback",{"_index":2882,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["software",{"_index":4265,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":1639,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["solved",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["sortby",{"_index":2156,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"interfaces/Collision.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["sources",{"_index":2102,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["sources.includes(msg.source",{"_index":2104,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":738,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["sparc",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":3696,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":849,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["spatialentity",{"_index":782,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.x_dimension",{"_index":2275,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.y_dimension",{"_index":2276,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.z_dimension",{"_index":2278,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentityjsonld",{"_index":628,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialkeyboardaxis",{"_index":936,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialplacement",{"_index":783,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialplacementjsonld",{"_index":2353,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["spatialscenenode",{"_index":781,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["spatialsearchkeyboarduibehaviormodule",{"_index":1371,"title":{},"body":{"modules/ContentModule.html":{}}}],["spec",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":4284,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1354,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":4283,"title":{},"body":{"index.html":{}}}],["specified",{"_index":2101,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/RegistrationStateModel.html":{}}}],["specifying",{"_index":2083,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":1476,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["spinning",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1479,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1480,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["sprint",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":2171,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["stage",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["stage_nav",{"_index":3290,"title":{},"body":{"components/StageNavComponent.html":{}}}],["stagenavcomponent",{"_index":522,"title":{"components/StageNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stagenavmodule",{"_index":1361,"title":{"modules/StageNavModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["staging",{"_index":3762,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["stamp",{"_index":2912,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["standalone",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":4269,"title":{},"body":{"index.html":{}}}],["start",{"_index":1120,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":1325,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["start?.opened",{"_index":1324,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["startdrawers",{"_index":1142,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":1146,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":1150,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":2288,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["startexpanded",{"_index":1323,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["starts",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":1399,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/RegistrationModalComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":795,"title":{},"body":{"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["state",{"_index":15,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["state$.pipe(map(x",{"_index":2794,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["state('closed",{"_index":1782,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":1787,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":1791,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":1304,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state('full",{"_index":1792,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":1788,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('open",{"_index":1781,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":1305,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state.organspatialentities[updatediri",{"_index":2426,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["statechange",{"_index":1813,"title":{},"body":{"classes/InitializationState.html":{}}}],["statements",{"_index":4083,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":106,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["states",{"_index":164,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContentComponent-1.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":1893,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{}}}],["stay",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["stomach",{"_index":1481,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1482,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1257,"title":{},"body":{"components/ContentComponent.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1383,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored",{"_index":3115,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["storedebugmodule",{"_index":1365,"title":{},"body":{"modules/ContentModule.html":{}}}],["storemodule",{"_index":1374,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":3325,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":4239,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":4237,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":69,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":1509,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["structure",{"_index":8,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["structure.opacity",{"_index":2253,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["structures",{"_index":2025,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["strvalue",{"_index":3198,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["style",{"_index":1300,"title":{},"body":{"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/VisibilityToggleComponent.html":{}}}],["style.margin",{"_index":1271,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["styled",{"_index":2982,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["styles",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":1835,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["styling",{"_index":1923,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"changelog.html":{}}}],["sub",{"_index":1353,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":2075,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"license.html":{}}}],["sublicense",{"_index":4331,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2284,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["subscribe(updateskipconfirmation",{"_index":2542,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["subscription",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["subscriptions",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["substantial",{"_index":4342,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1695,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["suffix",{"_index":746,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["suffix.show",{"_index":3218,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["super",{"_index":161,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["super(configstore",{"_index":656,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super.ngxsoninit",{"_index":162,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["support",{"_index":3647,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1408,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swiper",{"_index":4243,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["switched",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":796,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap((endpoint",{"_index":1021,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["switchmap(data",{"_index":2390,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["switchmap(fetch",{"_index":2798,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["switchmap(organ",{"_index":2282,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap(url",{"_index":2388,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["sync",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["syncexpanded(other",{"_index":1881,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":1878,"title":{},"body":{"classes/InitializationState.html":{}}}],["t",{"_index":2071,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["t.label).join",{"_index":2911,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["table",{"_index":4147,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4146,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":12,"title":{"interfaces/Tag.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tag.id",{"_index":180,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{}}}],["tag.label",{"_index":3373,"title":{},"body":{"components/TagListComponent.html":{}}}],["tag.ts",{"_index":3344,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tag.type",{"_index":144,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["tag_list",{"_index":3372,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagclasses",{"_index":3352,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagclasses(tag",{"_index":3362,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagging",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["tagid",{"_index":115,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["tagid(_index",{"_index":3364,"title":{},"body":{"components/TagListComponent.html":{}}}],["taglistcomponent",{"_index":524,"title":{"components/TagListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taglistmodule",{"_index":3097,"title":{"modules/TagListModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagListModule.html":{},"modules.html":{},"overview.html":{}}}],["tagremoved",{"_index":3353,"title":{},"body":{"components/TagListComponent.html":{}}}],["tags",{"_index":33,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{}}}],["tags.map(t",{"_index":2910,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["tags.map(tag",{"_index":2927,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["tags.push",{"_index":153,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.push(tag",{"_index":147,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.state",{"_index":2781,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{}}}],["tags.state.ts",{"_index":10,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["tags.state.ts:112",{"_index":63,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:119",{"_index":54,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:124",{"_index":67,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:140",{"_index":73,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:158",{"_index":58,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:38",{"_index":95,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:68",{"_index":87,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:70",{"_index":98,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:75",{"_index":89,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:77",{"_index":93,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:79",{"_index":39,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:95",{"_index":64,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags/anatomical",{"_index":9,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["tags].every(value",{"_index":3014,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["tagschange",{"_index":3354,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagsearchcomponent",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"modules/TagSearchModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tagsearchmodule",{"_index":3098,"title":{"modules/TagSearchModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsearchresult",{"_index":116,"title":{"interfaces/TagSearchResult.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["take",{"_index":797,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["take(1",{"_index":1028,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["takes",{"_index":1507,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{}}}],["takewhile",{"_index":2077,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tap",{"_index":2160,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["tap(([page",{"_index":2750,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["tap(([reg",{"_index":2518,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["tap(reg",{"_index":2817,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["target",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["target.classname",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.classname.includes(classname",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.key",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.preventdefault",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.repeat",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["technologies",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["templateurl",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["temporary",{"_index":1254,"title":{},"body":{"components/ContentComponent.html":{}}}],["terms",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":1205,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{}}}],["text",{"_index":76,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{}}}],["textfield",{"_index":729,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["theme",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["themes",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["theming.initialize(el",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["theming.service",{"_index":3399,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1375,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":241,"title":{"injectables/ThemingService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":3400,"title":{},"body":{"modules/ThemingModule.html":{}}}],["thick",{"_index":1491,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1492,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thickness",{"_index":2165,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1493,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1494,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":166,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._expanded",{"_index":1804,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._latesttags",{"_index":158,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this._measuredmargin",{"_index":1833,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":1824,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._name",{"_index":2335,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this._opened",{"_index":1800,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":1797,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.addentityone",{"_index":182,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.addregistration(jsonobj",{"_index":2890,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.addtagraw(tag",{"_index":177,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.animationsenabled",{"_index":1314,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.applythemeclass(theme",{"_index":3442,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":3446,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":3441,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.blocksize",{"_index":706,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksize[key",{"_index":710,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksizechange.emit(this.blocksize",{"_index":711,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.buildjsonld(page",{"_index":2788,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.buildjsonld(page.snapshot",{"_index":2878,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.buildmetadata(page",{"_index":2786,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.cdr.markforcheck",{"_index":1137,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.channel",{"_index":1128,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":2111,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":2113,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":2116,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":2091,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":1134,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checknamevalid(user",{"_index":2632,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["this.closedialog",{"_index":2648,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.collisions",{"_index":886,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.consentservice.consent",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.content",{"_index":1139,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":1138,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":1125,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":1127,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":1126,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.createscenenodes(organiri",{"_index":861,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.ctx.patchstate",{"_index":2212,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ctx.setstate(patch",{"_index":2532,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentdate",{"_index":2913,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.currentidentifier",{"_index":2915,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.currentorgan",{"_index":2647,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.currentsex",{"_index":2642,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.defaultposition",{"_index":2234,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.defaulttheme",{"_index":3440,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":1774,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.dialog.open(registrationcontentcomponent",{"_index":2758,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialog.open(reviewmodalcomponent",{"_index":3022,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.dialog.open(videomodalcomponent",{"_index":3523,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["this.dialogopen",{"_index":2751,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialogref.close",{"_index":3057,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["this.dialogref.close(true",{"_index":2652,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.disablepositionchange",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.drawer",{"_index":3476,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":3474,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":1311,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":1132,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":1141,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.editregistration(initialwithchanges",{"_index":2902,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.editregistration(reg",{"_index":2818,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.element",{"_index":3445,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":1825,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.entererrormode.emit",{"_index":3018,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.entities$.subscribe",{"_index":175,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.expanded",{"_index":1859,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":1868,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":1849,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":1818,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.extractionsitetooltip",{"_index":2022,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.faded",{"_index":1329,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.fileinput.nativeelement",{"_index":1929,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.filternodebbox(nodes",{"_index":895,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.filternodecollisions(nodes",{"_index":893,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.firstnamevalidator.setvalue(value?.firstname",{"_index":2337,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('all_items_opacity_update",{"_index":3596,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('block_size_change",{"_index":708,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('block_size_reset",{"_index":714,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('item_reset",{"_index":3594,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('json_file_load_end",{"_index":1936,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('json_file_load_start",{"_index":1939,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('name_updated",{"_index":2341,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('opacity_update",{"_index":3591,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('organ_select",{"_index":2229,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('placement",{"_index":2215,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('register",{"_index":3029,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('review_start",{"_index":3019,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('selected_extraction_set_change",{"_index":1589,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.ga.event('side_update",{"_index":3289,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('slice_config_reset",{"_index":3205,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slice_config_update",{"_index":3200,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slide_toggle_toggled",{"_index":1980,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.ga.event('tag_removed",{"_index":3371,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.ga.event('view_update",{"_index":3296,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('visibility_toggled",{"_index":3581,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["this.getarguments(definition",{"_index":1709,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getcollisions(jsonld",{"_index":1007,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.getlatestiri(iri",{"_index":2425,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getlatestiri(key",{"_index":2419,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getlatestiri(organentry.target",{"_index":2437,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":2100,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":1705,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getorganspatialentity(organiri",{"_index":857,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.getsourcedb().subscribe(db",{"_index":2376,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalconfig.config$.pipe",{"_index":2813,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.config$]).pipe",{"_index":2517,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.globalconfig.getoption('basehref').pipe",{"_index":2384,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalconfig.getoption('collisionsendpoint').pipe",{"_index":1020,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.globalconfig.getoption('editregistration').pipe",{"_index":2816,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.getoption('header",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl').subscribe((url",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip').subscribe((tooltip",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('organ').pipe",{"_index":2280,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.globalconfig.getoption('skipunsavedchangesconfirmation').pipe",{"_index":2512,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.globalconfig.getoption('theme",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.snapshot.basehref",{"_index":1691,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.globalconfig.state$]).pipe",{"_index":2749,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.globals.set('db",{"_index":2382,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalskipconfirmation",{"_index":2540,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.handlemessage(msg",{"_index":1131,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.haschanges$.pipe",{"_index":2543,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.homeurl",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.hover.emit(item",{"_index":3584,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.hover.emit(undefined",{"_index":3585,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.http.post",{"_index":1022,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.idmatches(ontologyid",{"_index":2300,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.initialized",{"_index":1773,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":1840,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":1850,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":1874,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initskipconfirmationlisteners",{"_index":2526,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.injector",{"_index":603,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(anatomicalstructuretagstate",{"_index":2810,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.injector.get(modelstate",{"_index":169,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(pagestate",{"_index":173,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(referencedatastate",{"_index":1012,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(registrationstate",{"_index":1010,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(scenestate",{"_index":171,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.isdatavalid(this.page.snapshot",{"_index":2869,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.isdropdownactive",{"_index":3283,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isdropdownhidden",{"_index":3284,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isorcidvalid",{"_index":2537,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.isvalid",{"_index":2792,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.items",{"_index":3589,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map(i",{"_index":3595,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map(item",{"_index":3590,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.itemschange.emit(this.items",{"_index":3593,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.labelref.nativeelement",{"_index":3285,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.labels[0",{"_index":1978,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.labels[1",{"_index":1979,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.lastnamevalidator.setvalue(value?.lastname",{"_index":2338,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.launchreviewmodal",{"_index":3021,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.leftmargin",{"_index":1321,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.loadyoutubeplayerapi",{"_index":3503,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.logotooltip",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.margin2",{"_index":1821,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":1820,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":1875,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":2110,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":2097,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.metadata",{"_index":3027,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.metadata.find(data",{"_index":3015,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadatalookup('anatomical",{"_index":3011,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadatalookup('reference",{"_index":3008,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadatalookup('tissue",{"_index":3009,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.middlenamevalidator.setvalue(value?.middlename",{"_index":2339,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.model",{"_index":168,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.blocksize",{"_index":968,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.defaultposition.x",{"_index":1192,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.y",{"_index":1195,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.z",{"_index":1197,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.extractionsites",{"_index":852,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organ$.pipe",{"_index":2016,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.organ$]).pipe",{"_index":971,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organdimensions$.pipe",{"_index":1189,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.organiri",{"_index":864,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organiri$]).pipe",{"_index":853,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position",{"_index":970,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position$.pipe",{"_index":1214,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.position$]).pipe(map(([organiri",{"_index":938,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.rotation",{"_index":969,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.setblocksize",{"_index":2836,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(data.organ",{"_index":2831,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(this.currentorgan",{"_index":2650,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setorgandefaults",{"_index":2651,"title":{},"body":{"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setposition",{"_index":2847,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setposition(newposition",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["this.model.setrotation",{"_index":2840,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(data.sex",{"_index":2833,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(label.tolowercase",{"_index":2713,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.model.setsex(this.currentsex",{"_index":2649,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setside(data.side",{"_index":2835,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setslicesconfig",{"_index":2844,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.sex$.pipe",{"_index":2625,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.showprevious",{"_index":899,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot",{"_index":978,"title":{},"body":{"interfaces/Collision.html":{},"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.anatomicalstructures",{"_index":184,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.snapshot.blocksize",{"_index":940,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.organdimensions",{"_index":911,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.position",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.model.snapshot.rotation",{"_index":941,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.state",{"_index":2747,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.state$]).pipe",{"_index":2791,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.viewside$.pipe",{"_index":987,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.viewtype$.pipe",{"_index":1207,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.modelchanged$.pipe",{"_index":2285,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.name",{"_index":2340,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namechange.emit(this.name",{"_index":2343,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namematches(organname",{"_index":2301,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.namevalid",{"_index":2644,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["this.nextmessageid",{"_index":2092,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodecollisions",{"_index":833,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.nodes$]).pipe",{"_index":843,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.onorganchange(organ",{"_index":2283,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.onorganirichange",{"_index":2232,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.onreferencedatachange",{"_index":2202,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.opendialog",{"_index":2757,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.opened",{"_index":1847,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":1864,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":1848,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.optionsref.nativeelement",{"_index":3286,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.orcid",{"_index":2704,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.orcidcontrol.haserror('pattern",{"_index":2709,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.orcidtouri(id",{"_index":2536,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.orcidvalid",{"_index":2633,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.organlist",{"_index":2641,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.organlistoptions(ids",{"_index":2861,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.organselected",{"_index":2636,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.page",{"_index":172,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.clearhaschanges",{"_index":2889,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.page.organoptions$.subscribe((options",{"_index":2640,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.page.patchstate",{"_index":2860,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["this.page.registrationstarted",{"_index":2653,"title":{},"body":{"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["this.page.sethaschanges",{"_index":176,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.setorcidid",{"_index":2814,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.page.setorcidid(orcid",{"_index":2830,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.page.setorcidid(value",{"_index":2710,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.page.setusername",{"_index":2825,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.page.uritoorcid(reg.creator_orcid",{"_index":2829,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.parsedjson.emit(json",{"_index":1938,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.patchstate",{"_index":2539,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.placementcube",{"_index":830,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.placementcube$]).pipe",{"_index":887,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.position",{"_index":1796,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.previousregistrationnodes",{"_index":832,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.refdata",{"_index":2811,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.getorgandata(place.target",{"_index":2824,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.normalizeplacement",{"_index":2820,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.state$.subscribe",{"_index":2812,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.referencedata",{"_index":1011,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getorgandata(organ",{"_index":2292,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getreferenceorganiri",{"_index":2257,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.snapshot",{"_index":1014,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state",{"_index":2748,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.referencedata.state$.pipe",{"_index":2303,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$.subscribe",{"_index":2201,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$]).pipe",{"_index":865,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.referenceorgannodes",{"_index":831,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registerdata.emit",{"_index":3030,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registericonimpl(def",{"_index":1684,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(definition",{"_index":1697,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registration",{"_index":1009,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registration.editregistration(reg",{"_index":2712,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.registration.previousregistrations$]).pipe",{"_index":900,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registration.throttledjsonld$).pipe",{"_index":1005,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registrationcallbackset",{"_index":3026,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.registrationexpanded",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.registrationisvalid",{"_index":3012,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registrationselected",{"_index":2630,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.registrationselected.emit",{"_index":2711,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.registrationstarted",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.registry",{"_index":1701,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry?.addsvgiconresolver((name",{"_index":1686,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.renderer2.appendchild(this.document.body",{"_index":3509,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.renderer2.createelement('script",{"_index":3505,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.resolve",{"_index":1744,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.rightmargin",{"_index":1322,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(def.html",{"_index":1682,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(basehref",{"_index":1692,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.scene",{"_index":170,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.scene.nodecollisions$]).pipe",{"_index":135,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.selected",{"_index":1588,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.selection",{"_index":3579,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.selection.id",{"_index":3580,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.sendtoggle",{"_index":1851,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.sensor",{"_index":1229,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.setallopacity(updatedselection.opacity",{"_index":3588,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.setanatomicalstructures(newstructures",{"_index":2255,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setanatomicalstructures(previousitems",{"_index":2249,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setchange.emit(value",{"_index":1592,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setdisplayerrors(false",{"_index":2888,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.setorganselection(organoptions",{"_index":2815,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.sets.length",{"_index":1593,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setsexfromlabel(sex",{"_index":2638,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.setshowprevious(visible",{"_index":2248,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setstate(db",{"_index":2377,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.setstate(patch",{"_index":2519,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.settheme(this.defaulttheme",{"_index":3443,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sexbylabel$.subscribe(sex",{"_index":2637,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.sexselected",{"_index":2643,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.side",{"_index":3293,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.sidechange.emit(this.side",{"_index":3294,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.skipconfirmation$.subscribe(skipconfirmation",{"_index":2550,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.slicesconfig",{"_index":3199,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfig[key",{"_index":3202,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfigchange.emit(this.slicesconfig",{"_index":3203,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.snapshot",{"_index":2392,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.blocksize",{"_index":2223,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.entities[tag.id",{"_index":178,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.snapshot.initialregistration",{"_index":2893,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.snapshot.organ",{"_index":2261,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.name}_placement",{"_index":2216,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.organ",{"_index":2258,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.sex",{"_index":2262,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organdimensions",{"_index":2222,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.placementpatches[organ",{"_index":2436,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.sex",{"_index":2259,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.showcollisions",{"_index":840,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.snapshot.side",{"_index":2260,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.source",{"_index":2093,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.spatialkeyboardaxis",{"_index":834,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe",{"_index":2195,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(map(x",{"_index":2173,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluckunique('haschanges",{"_index":2515,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('registrationstarted",{"_index":2491,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('skipconfirmation",{"_index":2511,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.statechange.emit",{"_index":1876,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.subscriptions.add",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":3473,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":1309,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":1130,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["this.syncexpanded(other",{"_index":1877,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tagremoved.emit(tag",{"_index":3374,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags",{"_index":2809,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{}}}],["this.tags$.subscribe((tags",{"_index":174,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.tags.addtags",{"_index":2850,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tags.filter(obj",{"_index":3369,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags.latesttags",{"_index":2880,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tags.tags$]).pipe",{"_index":2784,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tagschange.emit(this.tags",{"_index":3375,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.theme",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["this.theme$.subscribe((theme",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next('light",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$]).subscribe",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${theme",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${this.theme",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":1802,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":1845,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":1843,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":1806,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":1857,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":1854,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.updateentitiesmany",{"_index":179,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.updatefaded",{"_index":1313,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updatemargin(position",{"_index":1319,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updateopacity(item.opacity",{"_index":3583,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.updateview(false",{"_index":3292,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.updateview(true",{"_index":3291,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.uploadtext",{"_index":2707,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.uritoorcid(this.snapshot.user.orcidid",{"_index":2553,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.uservalid",{"_index":3013,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.validatedrawers",{"_index":1133,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.value",{"_index":1977,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.valuechange.emit(this.value",{"_index":1982,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.view3d",{"_index":3295,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.view3dchange.emit(this.view3d",{"_index":3297,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.visibilitychanged.emit(this.visible",{"_index":3620,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.visible",{"_index":3618,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.width",{"_index":1819,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.xyztriplettostring(model.blocksize",{"_index":2907,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.position",{"_index":2908,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.rotation",{"_index":2909,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["those",{"_index":2095,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["throttle",{"_index":4388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throttledjsonld",{"_index":2789,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["throttletime",{"_index":798,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["throttletime(0",{"_index":2196,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["throttletime(jsonld_throttle_duration",{"_index":2790,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["throttletime(node_collision_throttle_duration",{"_index":888,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["through",{"_index":3122,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["throw",{"_index":1123,"title":{},"body":{"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":4132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":1149,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":1147,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":1119,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":1118,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":1114,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumb",{"_index":3145,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["thumbnails",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1483,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1484,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tied",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":2804,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["timeouts",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["timing",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/VisibilityMenuComponent.html":{}}}],["tissue",{"_index":673,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["tissues",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":731,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/DocumentationContent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["tmc",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle(opened",{"_index":1846,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggle.component",{"_index":1994,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle.component.html",{"_index":1956,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.scss",{"_index":1955,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts",{"_index":1952,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{}}}],["toggle.component.ts:18",{"_index":3616,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:19",{"_index":1969,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:23",{"_index":3615,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:24",{"_index":1963,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:29",{"_index":1966,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:34",{"_index":1962,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:39",{"_index":1961,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:40",{"_index":3613,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:51",{"_index":1975,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:52",{"_index":3617,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:61",{"_index":1971,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.module",{"_index":2066,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["toggle.module.ts",{"_index":1991,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle/labeled",{"_index":1951,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/StageNavModule.html":{},"coverage.html":{}}}],["toggle/visibility",{"_index":2065,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{}}}],["togglebuttoncomponent",{"_index":528,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":1315,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["toggleexpanded(expanded",{"_index":1858,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglelabel",{"_index":3611,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggleregistrationblocksvisibility(visible",{"_index":2247,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["toggles",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["togglescheme",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["togglevisibility",{"_index":3553,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["togglevisibility(item",{"_index":3574,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["toggling",{"_index":3252,"title":{},"body":{"components/StageNavComponent.html":{}}}],["token",{"_index":2082,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["tonsil",{"_index":1462,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tonsil.svg",{"_index":1463,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}}}],["top",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toradians",{"_index":775,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tort",{"_index":4360,"title":{},"body":{"license.html":{}}}],["total",{"_index":3345,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{}}}],["totalcount",{"_index":188,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":1154,"title":{},"body":{"components/ContainerComponent.html":{}}}],["trachea",{"_index":1485,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["trachea.svg",{"_index":1486,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":2014,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["tracking/telemetry",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["trackingpopupcomponent",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["trackingpopupmodule",{"_index":579,"title":{},"body":{"modules/AppModule.html":{}}}],["trailing",{"_index":891,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["transform",{"_index":734,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["transformmatrix",{"_index":847,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["transition",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["transition('closed",{"_index":1783,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":1306,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["translate",{"_index":3527,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["translate([p.x_translation",{"_index":919,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translate([position.x",{"_index":980,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translation_units",{"_index":2950,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["transparency",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["trigger",{"_index":1301,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{}}}],["trigger('expandcollapse",{"_index":1786,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":1303,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["trigger('openclose",{"_index":1780,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggerfileinput",{"_index":1905,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["triplet",{"_index":2951,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["true",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["true=left",{"_index":1972,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["try",{"_index":652,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["ts",{"_index":4245,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":4248,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1435,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":1140,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turn",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["turns",{"_index":2989,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["tutorial",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1964,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["tx",{"_index":4260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":2367,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4369,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["types",{"_index":1342,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":125,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":3063,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["ufl",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":644,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":4272,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":4281,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":4278,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":4280,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":4279,"title":{},"body":{"index.html":{}}}],["uis",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":889,"title":{},"body":{"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["under",{"_index":1409,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["unique",{"_index":2069,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["university",{"_index":4306,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":650,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Collision.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{}}}],["unlike",{"_index":1400,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unnecessary",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":934,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unselect",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":3483,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["untypedformcontrol",{"_index":2321,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["unused",{"_index":3367,"title":{},"body":{"components/TagListComponent.html":{}}}],["up",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["update",{"_index":3130,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["updateblocksizes",{"_index":715,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["updateblocksizes(input",{"_index":702,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["updated",{"_index":701,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["updatediri",{"_index":2424,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["updatednewrotation",{"_index":3132,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["updatedselection",{"_index":3586,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.id",{"_index":3587,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.opacity",{"_index":3592,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateextractionsitetooltip",{"_index":2001,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updateextractionsitetooltip(item",{"_index":2006,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updatefaded",{"_index":1267,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin",{"_index":1268,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin(position",{"_index":1291,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatename",{"_index":2311,"title":{},"body":{"components/NameInputComponent.html":{}}}],["updatename(input",{"_index":2316,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["updateopacity",{"_index":3554,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateopacity(value",{"_index":3577,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateorcid",{"_index":2683,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["updateorcid(value",{"_index":2694,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["updates",{"_index":696,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["updateside",{"_index":3235,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateside(selection",{"_index":3264,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateskipconfirmation",{"_index":2538,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["updateslicesdata",{"_index":3206,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["updateslicesdata(input",{"_index":3197,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["updatetoggle",{"_index":1957,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updatetoggle(selection",{"_index":1970,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updateview",{"_index":3236,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateview(selection",{"_index":3267,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updating",{"_index":3128,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["upgraded",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1908,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["uploaded",{"_index":1913,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["uploadtext",{"_index":2680,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["upperbound",{"_index":819,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["upperbound[i",{"_index":823,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ureter",{"_index":1487,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uri",{"_index":2469,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["uri.split('/').slice",{"_index":2559,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["uritoorcid",{"_index":2451,"title":{},"body":{"injectables/PageState.html":{}}}],["uritoorcid(uri",{"_index":2482,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["url",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1674,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["usage",{"_index":3683,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":4290,"title":{},"body":{"index.html":{}}}],["use",{"_index":1240,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usecallback",{"_index":2871,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["usecancelregistrationcallback",{"_index":2442,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["usecase",{"_index":4295,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":4292,"title":{},"body":{"index.html":{}}}],["used",{"_index":48,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["usedownload",{"_index":620,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{}}}],["usedropdownmenu",{"_index":3237,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usedropdownmenu(value",{"_index":3282,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usefactory",{"_index":1046,"title":{},"body":{"modules/ConfigModule.html":{}}}],["useful",{"_index":1116,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":328,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["user's",{"_index":2334,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{}}}],["user/os",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["useregistrationcallback",{"_index":2773,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["username",{"_index":2314,"title":{"interfaces/UserName.html":{}},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["users",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["uservalid",{"_index":2975,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["uses",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["usevalue",{"_index":597,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["uterus",{"_index":1488,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1489,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":2779,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2778,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["v1.1",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["v1[key",{"_index":2199,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v2",{"_index":2198,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["v2.0",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["v2.1.0",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["v2[key",{"_index":2200,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v3",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":2777,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["valid",{"_index":2422,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validate",{"_index":2323,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["validatedrawers",{"_index":1062,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":1084,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validating",{"_index":2702,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["validators",{"_index":2332,"title":{},"body":{"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/UserName.html":{}}}],["validators.pattern('^[a",{"_index":2700,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["validators.required",{"_index":2322,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["value",{"_index":86,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":1591,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["valuechange",{"_index":1960,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["valueof",{"_index":1740,"title":{},"body":{"classes/InitializationState.html":{}}}],["values",{"_index":691,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["variable",{"_index":2012,"title":{},"body":{"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["variables",{"_index":4378,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1490,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["vec3",{"_index":778,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...lowerbound.map((n",{"_index":821,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...upperbound.map((n",{"_index":824,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["version",{"_index":3782,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":1212,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{}}}],["via",{"_index":3119,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["video",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["videomodalcomponent",{"_index":530,"title":{"components/VideoModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videomodallaunchercomponent",{"_index":532,"title":{"components/VideoModalLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videomodallaunchermodule",{"_index":1362,"title":{"modules/VideoModalLauncherModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules.html":{},"overview.html":{}}}],["videomodalmodule",{"_index":3535,"title":{"modules/VideoModalModule.html":{}},"body":{"modules/VideoModalModule.html":{},"modules.html":{},"overview.html":{}}}],["view",{"_index":1187,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["view3d",{"_index":3238,"title":{},"body":{"components/StageNavComponent.html":{}}}],["view3dchange",{"_index":3240,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild",{"_index":1927,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{}}}],["viewchild('fileinput",{"_index":1924,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["viewchild('label",{"_index":3271,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild('options",{"_index":3273,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchildren",{"_index":1109,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":1096,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewed",{"_index":2168,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewer",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":3225,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["views",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["viewside",{"_index":1231,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewtype",{"_index":977,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["visibility",{"_index":535,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["visibility_menu",{"_index":3582,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["visibility_off",{"_index":1499,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_off_cube",{"_index":1500,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1497,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_toggle",{"_index":3619,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilitychanged",{"_index":3612,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilityitem",{"_index":802,"title":{"interfaces/VisibilityItem.html":{}},"body":{"interfaces/Collision.html":{},"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["visibilityitems",{"_index":2246,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["visibilitymenucomponent",{"_index":534,"title":{"components/VisibilityMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visibilitymenumodule",{"_index":2049,"title":{"modules/VisibilityMenuModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{},"modules.html":{},"overview.html":{}}}],["visibilitytogglecomponent",{"_index":537,"title":{"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{},"overview.html":{}}}],["visibilitytogglemodule",{"_index":2050,"title":{"modules/VisibilityToggleModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["visible",{"_index":2150,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["visual",{"_index":3144,"title":{},"body":{"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["visualization",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":56,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Collision.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["wait",{"_index":1742,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":1870,"title":{},"body":{"classes/InitializationState.html":{}}}],["walkthrough",{"_index":4291,"title":{},"body":{"index.html":{}}}],["want",{"_index":2011,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["warming",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":4011,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4347,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4344,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3525,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["wc",{"_index":609,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["web",{"_index":580,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["webcomponent",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":4186,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":1152,"title":{},"body":{"components/ContainerComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["webpages",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":4267,"title":{},"body":{"index.html":{}}}],["week",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":732,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whenever",{"_index":1812,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whether",{"_index":1107,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"license.html":{}}}],["white",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["whole",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":1879,"title":{},"body":{"classes/InitializationState.html":{}}}],["within",{"_index":3126,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["withlatestfrom",{"_index":2507,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["withlatestfrom(this.globalskipconfirmation",{"_index":2544,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["without",{"_index":1098,"title":{},"body":{"components/ContainerComponent.html":{},"changelog.html":{},"license.html":{}}}],["workaround",{"_index":1889,"title":{},"body":{"classes/InitializationState.html":{}}}],["workflows",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":3299,"title":{},"body":{"components/StageNavComponent.html":{}}}],["wrapped",{"_index":1095,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["wrapping",{"_index":1099,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{}}}],["x",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["x,y,z",{"_index":1182,"title":{},"body":{"components/ContentComponent.html":{}}}],["x?.anatomicalstructures",{"_index":2188,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.blocksize",{"_index":2175,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.displayerrors",{"_index":2783,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x?.extractionsets",{"_index":2189,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.extractionsites",{"_index":2187,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.id",{"_index":2174,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.orcidvalid",{"_index":2485,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.organ",{"_index":2181,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organdimensions",{"_index":2183,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organiri",{"_index":2182,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organoptions",{"_index":2487,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.position",{"_index":2177,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.registrationcallbackset",{"_index":2489,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.registrations",{"_index":2795,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x?.rotation",{"_index":2176,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.sex",{"_index":2184,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.showprevious",{"_index":2186,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.side",{"_index":2185,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.slicesconfig",{"_index":2178,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.usecancelregistrationcallback",{"_index":2493,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.user",{"_index":2495,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.viewside",{"_index":2180,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.viewtype",{"_index":2179,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x_dimension",{"_index":942,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["x_rotation",{"_index":957,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["x_scaling",{"_index":963,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["x_translation",{"_index":948,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["xyz",{"_index":1250,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["xyztriplet",{"_index":2144,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["xyztriplettostring(xyz",{"_index":2953,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["y_dimension",{"_index":944,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["y_rotation",{"_index":959,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["y_scaling",{"_index":964,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["y_translation",{"_index":951,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["yes",{"_index":2475,"title":{},"body":{"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["youtube",{"_index":3488,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":3539,"title":{},"body":{"modules/VideoModalModule.html":{}}}],["z",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":2556,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["z_dimension",{"_index":946,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["z_rotation",{"_index":961,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["z_scaling",{"_index":965,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["z_translation",{"_index":954,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["za",{"_index":2555,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{}}}],["zone.js",{"_index":4251,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":1003,"title":{},"body":{"interfaces/Collision.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AnatomicalStructureTagState.html":{"url":"injectables/AnatomicalStructureTagState.html","title":"injectable - AnatomicalStructureTagState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnatomicalStructureTagState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag collection global state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _latestTags\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addTag\n                            \n                            \n                                    Private\n                                addTagRaw\n                            \n                            \n                                    \n                                addTags\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                removeTag\n                            \n                            \n                                    \n                                searchExternal\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tags$\n                                \n                                \n                                    latestTags\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:79\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addTagRaw\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTagRaw(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:158\n                        \n                    \n\n\n            \n                \n                        Adds a tag. Implementation helper for addTags and addTag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTags(tags: Tag[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Tag[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:95\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchExternal\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchExternal(text: string, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:140\n                        \n                    \n\n\n            \n                \n                        Searches for matching tags (not in the state)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Search text\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Maximum returned results hint\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ObservableInput\n\n                        \n                            \n                                external Search result\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _latestTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:75\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SceneState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:77\n                        \n                    \n\n            \n                \n                    Reference to the scene state\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tags$\n                    \n                \n\n                \n                    \n                        gettags$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:38\n                                \n                            \n                    \n                        \n                                Observable of tags\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        latestTags\n                    \n                \n\n                \n                    \n                        getlatestTags()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:70\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n\n/** Tag state model */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AnatomicalStructureTagStateModel {\n}\n\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections()\n  }\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned'\n            });\n          }\n        }\n        return tags;\n      })\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model: ModelState;\n  /** Reference to the scene state */\n  private scene: SceneState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures\n      .filter(as => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return [{\n      totalCount: matches.length,\n      results: matches.map((as): Tag => ({\n        id: as.id,\n        label: as.name,\n        type: 'added'\n      })).slice(0, limit)\n    }];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnatomicalStructureTagStateModel.html":{"url":"interfaces/AnatomicalStructureTagStateModel.html","title":"interface - AnatomicalStructureTagStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnatomicalStructureTagStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag state model\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n\n/** Tag state model */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AnatomicalStructureTagStateModel {\n}\n\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections()\n  }\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned'\n            });\n          }\n        }\n        return tags;\n      })\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model: ModelState;\n  /** Reference to the scene state */\n  private scene: SceneState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures\n      .filter(as => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return [{\n      totalCount: matches.length,\n      results: matches.map((as): Tag => ({\n        id: as.id,\n        label: as.name,\n        type: 'added'\n      })).slice(0, limit)\n    }];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disablePositionChange\n                            \n                            \n                                    Readonly\n                                header$\n                            \n                            \n                                homeUrl\n                            \n                            \n                                    Readonly\n                                homeUrl$\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                    Readonly\n                                logoTooltip$\n                            \n                            \n                                registrationExpanded\n                            \n                            \n                                registrationStarted\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                theme\n                            \n                            \n                                    Readonly\n                                theme$\n                            \n                            \n                                    Readonly\n                                themeMode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleClick\n                            \n                            \n                                    \n                                handleKey\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registrationToggle\n                            \n                            \n                                toggleScheme\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                            \n                                document:mousedown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLightTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, consentService: ConsentService, snackbar: MatSnackBar, theming: ThemingService, el: ElementRef<>, injector: Injector, globalConfig: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/app.component.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                    ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theming\n                                                  \n                                                        \n                                                                        ThemingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(target: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Shifts block position when certain keys are pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:mousedown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:mousedown(target: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Disables block position change if an input element is clicked\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:mousedown', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:174\n                        \n                    \n\n\n            \n                \n                        Disables block position change if an input element is clicked\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKey(target: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Shifts block position when certain keys are pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationToggle\n                        \n                    \n                \n            \n            \n                \nregistrationToggle(event: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleScheme\n                        \n                    \n                \n            \n            \n                \ntoggleScheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Toggles scheme between light and dark mode\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disablePositionChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:47\n                        \n                    \n\n            \n                \n                    Disables changes in block position\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        header$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('header')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        homeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        homeUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('homeUrl')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        logoTooltip$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('logoTooltip')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:44\n                        \n                    \n\n            \n                \n                    False until the initial registration modal is closed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:69\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('theme')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        themeMode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLightTheme\n                    \n                \n\n                \n                    \n                        getisLightTheme()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/app.component.ts:51\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  registrationExpanded = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  registrationToggle(event: boolean): void {\n    this.registrationExpanded = event;\n    if (!this.registrationExpanded) {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:mousedown', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const disableWhenClicked = ['mat-mdc-input-element', 'form-input-label'];\n    for (const className of disableWhenClicked) {\n      if (typeof target.className === 'string' && target.className.includes(className)) {\n        this.disablePositionChange = true;\n        return;\n      }\n    }\n    this.disablePositionChange = false;\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n    \n    \n  \n  \n    \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  font-size: 1rem;\n  color: black;\n\n  .header-hidden {\n    display: none;\n  }\n\n  ccf-drawer-container {\n    height: 100%;\n\n    ccf-drawer {\n      width: 25.5rem;\n    }\n\n    ccf-drawer-content {\n      position: relative;\n      z-index: 1;\n\n      .selector-drawer {\n        top: 0rem;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        height: 5.688rem;\n        transition: all 0.5s ease-in-out;\n\n        &.expanded {\n          height: 15rem;\n        }\n\n        ccf-organ-selector {\n          height: 100%;\n          padding-top: 0.5rem;\n          transition: all 0.5s;\n\n          &.closed {\n            padding-top: 0;\n          }\n        }\n\n        .close-button-wrapper {\n          display: flex;\n          justify-content: center;\n          height: 0;\n          z-index: 2;\n\n          .close-button {\n            cursor: pointer;\n            transition: 0.6s;\n\n            .expand-collapse-icon {\n              width: 3rem;\n              height: 1.2rem;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              cursor: pointer;\n              background-color: white;\n              border-bottom-left-radius: 0.2rem;\n              border-bottom-right-radius: 0.2rem;\n              transition: 0.6s;\n\n              &:hover {\n                background-color: #ececec;\n              }\n            }\n          }\n        }\n\n\n        &.closed {\n          height: 3rem;\n          top: -2.9rem;\n        }\n      }\n\n      .stage-content {\n        border-radius: 0.5rem;\n        height: calc(100% - 2.5rem);\n      }\n\n      .expanded-stage {\n        height: calc(100% - 1.5rem);\n        padding-bottom: 1rem;\n      }\n\n      .retracted-stage {\n        height: calc(100% - 2.688rem - 14rem);\n      }\n\n    }\n\n\n\n    ccf-content {\n      // top: 0rem;\n      position: absolute;\n      transition-duration: 0.5s;\n      transition-timing-function: ease-in-out;\n      transition-property: all;\n      bottom: 1.5rem;\n      z-index: 1;\n\n    }\n\n  }\n\n}\n\n::ng-deep .mdc-snackbar__surface {\n  box-shadow: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContentModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            LeftSidebarModule\n                        \n                        \n                            RegistrationModalModule\n                        \n                        \n                            RightSidebarModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.module.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TrackingPopupModule } from 'ccf-shared';\n\nimport { AppWebComponent } from './app-web-component.component';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { DEFAULT_THEME } from './core/services/theming/theming.service';\nimport { ContentModule } from './modules/content/content.module';\nimport { HeaderModule } from './modules/header/header.module';\nimport { LeftSidebarModule } from './modules/left-sidebar/left-sidebar.module';\nimport { RegistrationModalModule } from './modules/registration-modal/registration-modal/registration-modal.module';\nimport { RightSidebarModule } from './modules/right-sidebar/right-sidebar.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    MatIconModule,\n    DrawerModule,\n    HeaderModule,\n    ContentModule,\n    LeftSidebarModule,\n    RightSidebarModule,\n    RegistrationModalModule,\n    TrackingPopupModule,\n    MatSnackBarModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    {\n      provide: DEFAULT_THEME,\n      useValue: 'hubmap-theme-light'\n    },\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        floatLabel: true\n      }\n    }\n  ]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-rui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GlobalConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  registrationExpanded = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  registrationToggle(event: boolean): void {\n    this.registrationExpanded = event;\n    if (!this.registrationExpanded) {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:mousedown', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const disableWhenClicked = ['mat-mdc-input-element', 'form-input-label'];\n    for (const className of disableWhenClicked) {\n      if (typeof target.className === 'string' && target.className.includes(className)) {\n        this.disablePositionChange = true;\n        return;\n      }\n    }\n    this.disablePositionChange = false;\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                baseHref\n                            \n                            \n                                cancelRegistration\n                            \n                            \n                                collisionsEndpoint\n                            \n                            \n                                editRegistration\n                            \n                            \n                                fetchPreviousRegistrations\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                organ\n                            \n                            \n                                organOptions\n                            \n                            \n                                register\n                            \n                            \n                                skipUnsavedChangesConfirmation\n                            \n                            \n                                theme\n                            \n                            \n                                useDownload\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/app-web-component.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        baseHref\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cancelRegistration\n                    \n                \n                \n                    \n                        Type :     string | CancelRegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        collisionsEndpoint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editRegistration\n                    \n                \n                \n                    \n                        Type :     string | SpatialEntityJsonLd\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fetchPreviousRegistrations\n                    \n                \n                \n                    \n                        Type :         string | FetchPreviousRegistrationsCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organ\n                    \n                \n                \n                    \n                        Type :         string | Organ\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organOptions\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        register\n                    \n                \n                \n                    \n                        Type :         string | RegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skipUnsavedChangesConfirmation\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDownload\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app-web-component.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS } from 'ccf-shared/web-components';\nimport { ObservableInput } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\n\nimport { environment } from '../environments/environment';\n\n\nexport type User = NonNullable;\nexport type Organ = NonNullable;\nexport type RegistrationCallback = (data: unknown) => void;\nexport type CancelRegistrationCallback = () => void;\nexport type FetchPreviousRegistrationsCallback = () => ObservableInput[]>;\n\n\nfunction parseOrgan(value: unknown): string | Organ {\n  try {\n    return BUILTIN_PARSERS.json(value) as Organ;\n  } catch {\n    return '' + value;\n  }\n}\n\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() baseHref: string;\n  @Input() useDownload: string | boolean;\n  @Input() user: string | User;\n  @Input() organ: string | Organ;\n  @Input() editRegistration: string | SpatialEntityJsonLd;\n  @Input() register: string | RegistrationCallback;\n  @Input() cancelRegistration: string | CancelRegistrationCallback;\n  @Input() fetchPreviousRegistrations: string | FetchPreviousRegistrationsCallback;\n  @Input() skipUnsavedChangesConfirmation: string | boolean;\n  @Input() theme: string;\n  @Input() header: string | boolean;\n  @Input() homeUrl: string;\n  @Input() logoTooltip: string;\n  @Input() organOptions: string | string[];\n  @Input() collisionsEndpoint: string;\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    const BP = BUILTIN_PARSERS;\n\n    super(configStore, cdr, {\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['ruiConfig' as string],\n        ...environment.customization\n      },\n      parse: {\n        useDownload: BP.boolean,\n        user: BP.json,\n        organ: parseOrgan,\n        editRegistration: BP.json,\n        register: BP.function,\n        cancelRegistration: BP.function,\n        fetchPreviousRegistrations: BP.function,\n        skipUnsavedChangesConfirmation: BP.boolean,\n        header: BP.boolean,\n        organOptions: BP.stringArray\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockSize.html":{"url":"interfaces/BlockSize.html","title":"interface - BlockSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for objects containing tissue block dimensions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Depth of block\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockSizeInputComponent.html":{"url":"components/BlockSizeInputComponent.html","title":"component - BlockSizeInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockSizeInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering dimensions of the tissue block\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-block-size-input\n            \n\n\n\n            \n                styleUrls\n                ./block-size-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./block-size-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshBlockSize\n                            \n                            \n                                updateBlockSizes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSizeChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of block size input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blockSize\n                    \n                \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_BLOCK_SIZE\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:40\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blockSizeChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:45\n                            \n                        \n                \n                    \n                        Emitter for values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-block-size-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshBlockSize\n                        \n                    \n                \n            \n            \n                \nrefreshBlockSize()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Refreshes all block size values to 10\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBlockSizes\n                        \n                    \n                \n            \n            \n                \nupdateBlockSizes(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Updates values when an input changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the dimension to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Dimensions (mm)\n  \n  refresh\n\n\n\n  \n    Width (X)\n    \n  \n\n  \n    Height (Y)\n    \n  \n\n  \n    Depth (Z)\n    \n  \n\n\n    \n\n    \n                \n                    ./block-size-input.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n    padding: .5rem 0;\n\n    .title {\n      font-weight: 400;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .size-inputs {\n    display: flex;\n    justify-content: space-between;\n    width: 20rem;\n    margin: 0 auto;\n\n    .field {\n      width: 4.5rem;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n\n        .mat-mdc-form-field-infix {\n          padding-bottom: 0;\n          min-height: inherit;\n        }\n\n        .mat-mdc-form-field-icon-suffix {\n          padding: 1rem 0 0px .25rem;\n        }\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Dimensions (mm)    refresh      Width (X)            Height (Y)            Depth (Z)      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockSizeInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockSizeInputModule.html":{"url":"modules/BlockSizeInputModule.html","title":"module - BlockSizeInputModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockSizeInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    MatFormFieldModule\n  ],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent]\n})\nexport class BlockSizeInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { SpatialEntity, SpatialPlacement, getOriginScene, getTissueBlockScene } from 'ccf-database';\nimport { GlobalConfigState, Position } from 'ccf-shared';\nimport { isEqual } from 'lodash';\nimport { Observable, combineLatest, defer, of } from 'rxjs';\nimport { catchError, concatMap, distinctUntilChanged, filter, map, share, startWith, switchMap, take, throttleTime } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\ninterface Collision {\n  id: string;\n}\n\nconst NODE_COLLISION_THROTTLE_DURATION = 10;\n\nconst DEFAULT_COLLISIONS_ENDPOINT = 'https://pfn8zf2gtu.us-east-2.awsapprunner.com/get-collisions';\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$, this.spatialKeyBoardAxis$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement, ...prevNodes, ...nodes, ...axis, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) => {\n        const organ = this.getOrganSpatialEntity(organIri as string);\n        const originScene = organIri ? getOriginScene(organ, false, true) : [];\n        const organScene = this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[]);\n        return [...originScene, ...organScene];\n      })\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      ),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.collisions$, this.placementCube$]).pipe(\n      throttleTime(NODE_COLLISION_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      map(([nodes, collisions, placement]) => {\n        if (collisions !== undefined) {\n          return this.filterNodeCollisions(nodes, collisions);\n        } else if (placement.length > 0) {\n          return this.filterNodeBBox(nodes, placement[0]);\n        }\n        return [];\n      }),\n      share()\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable {\n    return combineLatest([this.model.organIri$.pipe(filter(organIri => organIri !== '')), this.model.position$]).pipe(map(([organIri, position]: [string, Position]) => {\n      const organEntity = this.getOrganSpatialEntity(organIri);\n      const blockSize = this.model.snapshot.blockSize;\n      const rotation = this.model.snapshot.rotation;\n      return organEntity ? getTissueBlockScene({\n        x_dimension: blockSize.x,\n        y_dimension: blockSize.y,\n        z_dimension: blockSize.z\n      } as SpatialEntity, {\n        x_translation: position.x - organEntity.x_dimension / 2,\n        y_translation: position.y - organEntity.y_dimension / 2,\n        z_translation: position.z - organEntity.z_dimension / 2,\n\n        x_rotation: rotation.x,\n        y_rotation: rotation.y,\n        z_rotation: rotation.z,\n\n        x_scaling: 1, y_scaling: 1, z_scaling: 1,\n      } as SpatialPlacement) : [];\n    }));\n  }\n\n  @Computed()\n  get placementCube$(): Observable {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube]),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  @Computed()\n  private get collisions$(): Observable {\n    return defer(() => this.registration.throttledJsonld$).pipe(\n      concatMap((jsonld) => this.getCollisions(jsonld)),\n      startWith([])\n    );\n  }\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly http: HttpClient,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n  private getCollisions(jsonld: unknown): Observable {\n    return this.globalConfig.getOption('collisionsEndpoint').pipe(\n      switchMap((endpoint = DEFAULT_COLLISIONS_ENDPOINT) => this.http.post(\n        endpoint, JSON.stringify(jsonld),\n        { headers: { 'Content-Type': 'application/json' } }\n      )),\n      catchError(() => of(undefined)),\n      take(1)\n    );\n  }\n\n  private filterNodeCollisions(nodes: SpatialSceneNode[], collisions: Collision[]): SpatialSceneNode[] {\n    const collidedIds = new Set(collisions.map(node => node.id));\n    return nodes.filter(node => collidedIds.has(node['@id']));\n  }\n\n  private filterNodeBBox(nodes: SpatialSceneNode[], placement: SpatialSceneNode): SpatialSceneNode[] {\n    const bbox = getNodeBbox(placement);\n    return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\n\nimport { GLOBAL_CONFIG, globalConfigFactory } from './config';\n\n\n@NgModule({\n  providers: [\n    {\n      provide: GLOBAL_CONFIG,\n      useFactory: globalConfigFactory,\n      deps: [GlobalsService]\n    }\n  ]\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n\n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    \n                                    Private\n                                content1\n                            \n                            \n                                    \n                                    Private\n                                content2\n                            \n                            \n                                    \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleMessage(_msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Processes event messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to be run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Sets up all listeners after all content has been projected.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateDrawers\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateDrawers()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Validates the number of drawers and their positions.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageChannel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                        \n                    \n\n            \n                \n                    The connected message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ContentComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:45\n                        \n                    \n\n            \n                \n                    Content component if provided already wrapped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(ContentComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:48\n                        \n                    \n\n            \n                \n                    Content component if provided without wrapping.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(DrawerComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:41\n                        \n                    \n\n            \n                \n                    Drawer components in this container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:62\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component.\n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main content component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-content\n            \n\n\n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bounds$\n                            \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                debugMode\n                            \n                            \n                                    Readonly\n                                is3DView$\n                            \n                            \n                                isNarrowView\n                            \n                            \n                                    Readonly\n                                position$\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                showDebugButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleNodeDrag\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetStage\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disablePositionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, registration: RegistrationState, scene: SceneState, rootRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:63\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The model state\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The registration state\n\n                                                        \n                                                \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                        SceneState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        rootRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Component's root element\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disablePositionChange\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:28\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleNodeDrag\n                        \n                    \n                \n            \n            \n                \nhandleNodeDrag(event: NodeDragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        NodeDragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Detaches the resize sensor\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Sets up the resize sensor\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetStage\n                        \n                    \n                \n            \n            \n                \nresetStage()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Method to reset registration block, crosshairs, and x,y,z information.\nResets to initial registration state if provided\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(is3DView: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Sets view type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                is3DView\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Set view type to '3d' if this is true otherwise set it to 'register'\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bounds$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organDimensions$.pipe(\n    map(dims => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:55\n                        \n                    \n\n            \n                \n                    Shows / hides the state debug component for testing purposes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        is3DView$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.viewType$.pipe(\n    map(type => type === '3d')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether the view type is 3d or register\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNarrowView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:50\n                        \n                    \n\n            \n                \n                    Whether the content area is very narrow\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        position$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.position$.pipe(\n    map(p => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) }))\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sensor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResizeSensor\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:63\n                        \n                    \n\n            \n                \n                    Resize detection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDebugButtons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : !environment.production\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:60\n                        \n                    \n\n            \n                \n                    Show debug buttons of content component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Input, OnDestroy, OnInit\n} from '@angular/core';\nimport { NodeDragEvent } from 'ccf-body-ui';\nimport { ResizeSensor } from 'css-element-queries';\nimport { distinctUntilKeyChanged, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { SceneState } from '../../core/store/scene/scene.state';\n\n\n/**\n * Main content component\n */\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-content';\n\n  @Input() disablePositionChange = false;\n\n  readonly position$ = this.model.position$.pipe(\n    map(p => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) }))\n  );\n\n  /** Whether the view type is 3d or register */\n  readonly is3DView$ = this.model.viewType$.pipe(\n    map(type => type === '3d')\n  );\n\n  readonly bounds$ = this.model.organDimensions$.pipe(\n    map(dims => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y')\n  );\n\n  /** Whether the content area is very narrow */\n  isNarrowView = false;\n\n  /**\n   * Shows / hides the state debug component for testing purposes.\n   */\n  debugMode = false;\n\n  /**\n   * Show debug buttons of content component\n   */\n  showDebugButtons = !environment.production;\n\n  /** Resize detection */\n  private sensor: ResizeSensor;\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param model The model state\n   * @param page The page state\n   * @param registration The registration state\n   * @param rootRef Component's root element\n   * @param cdr Change detector\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly registration: RegistrationState,\n    readonly scene: SceneState,\n    private readonly rootRef: ElementRef,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Sets up the resize sensor\n   */\n  ngOnInit(): void {\n    this.sensor = new ResizeSensor(this.rootRef.nativeElement, ({ width }) => {\n      const isNarrowView = width  n * 1000) as [number, number];\n        const { position, viewSide, organDimensions } = this.model.snapshot;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => n / 2);\n        let newPosition = position;\n        switch (viewSide) {\n          case 'anterior':\n            newPosition = { x: a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'posterior':\n            newPosition = { x: -a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'left':\n            newPosition = { x: position.x, y: b + dims[1], z: -a + dims[2] };\n            break;\n          case 'right':\n            newPosition = { x: position.x, y: b + dims[1], z: a + dims[2] };\n            break;\n        }\n        this.model.setPosition(newPosition);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  refresh\n\n\n\n  \n\n  \n  \n    \n    \n    \n      \n        X: {{ (position$ | async)?.x }}\n        Y: {{ (position$ | async)?.y }}\n        Z: {{ (position$ | async)?.z }}\n      \n    \n  \n\n\n\n\n\n  State\n  Use callback\n  Use download\n\n\n    \n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n  height: 100%;\n  padding: .5rem;\n  overflow: hidden;\n\n  .top-bar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: 0.6s;\n      font-size: 2rem;\n      height: 2rem;\n      width: 2rem;\n    }\n  }\n\n  .sidebar {\n    .minimap-scene {\n      margin: 1.5rem;\n      width: 12.75rem;\n      height: 11rem;\n      ::ng-deep .body-ui {\n        background-color: #232f3a;\n      }\n    }\n\n    ccf-spatial-search-keyboard-ui-behavior {\n      margin: 1.5rem;\n      display: flex;\n      justify-content: center;\n    }\n\n    ccf-xyz-position {\n      margin: 1.5rem;\n      padding-left: 5rem;\n    }\n  }\n\n  .main-content {\n    display: flex;\n    height: calc(100% - 1rem);\n\n    .body-ui {\n      flex: auto;\n      transition: opacity 1s;\n    }\n\n    .gizmo-area {\n      width: 7rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n      z-index: 10;\n      right: 1.5rem;\n\n      .position-display {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 1.5rem;\n      }\n\n      .gizmo {\n        height: 5.5rem;\n        .hidden {\n          opacity: 0;\n          z-index: 0;\n        }\n      }\n    }\n  }\n\n  // Temporary for displaying dev information\n  .ccf-store-debug {\n    color: white;\n    position: absolute;\n    top: 0.5rem;\n    max-width: 55rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      refresh                                X: {{ (position$ | async)?.x }}        Y: {{ (position$ | async)?.y }}        Z: {{ (position$ | async)?.z }}              State  Use callback  Use download'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-1.html":{"url":"components/ContentComponent-1.html","title":"component - ContentComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n\n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                animationsEnabled\n                            \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    \n                                faded\n                            \n                            \n                                    \n                                leftMargin\n                            \n                            \n                                    \n                                rightMargin\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleMessage(msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Process an event message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateFaded\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFaded()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Checks and updates the faded state based on the drawer states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateMargin\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Updates a margin.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                        \"start\" | \"end\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start (left) or end (right) margin.\n\n                                            \n                                        \n                                        \n                                                opened\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Whether the drawer is opened.\n\n                                            \n                                        \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The width of the drawer if opened.\n\n                                            \n                                        \n                                        \n                                                margin\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The margin size.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DrawerComponent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:39\n                        \n                    \n\n            \n                \n                    References to the side drawers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\n\nContentComponent\n\nContentComponent\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StageNavModule\n                        \n                        \n                            VideoModalLauncherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BodyUiModule, StoreDebugModule } from 'ccf-shared';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\nimport { VideoModalLauncherModule } from './video-modal/video-modal-launcher/video-modal-launcher.module';\nimport { SpatialSearchKeyboardUIBehaviorModule } from 'ccf-shared';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StageNavModule,\n    MatIconModule,\n    StoreDebugModule,\n    VideoModalLauncherModule,\n    MatRippleModule,\n    SpatialSearchKeyboardUIBehaviorModule,\n    BodyUiModule\n  ],\n  declarations: [ContentComponent],\n  exports: [ContentComponent]\n})\nexport class ContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigModule } from './services/config/config.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'rui'\n    }),\n    MousePositionTrackerModule,\n\n    ConfigModule,\n    StoreModule,\n    ThemingModule\n  ],\n  exports: []\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-brain.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-breast.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-extrapulmonary-bronchus.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-right.svg' },\n  { name: 'kidneys', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidneys.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lungs.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lymph-nodes.svg' },\n  { name: 'neurons', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-neurons.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-palatine-tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pelvis.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-small-intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' }\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsLabelComponent.html":{"url":"components/DetailsLabelComponent.html","title":"component - DetailsLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Reusable component that takes an array of strings and renders\nthat array as a string, separated by commas, in the icon color.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-details-label\n            \n\n\n\n            \n                styleUrls\n                ./details-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        details\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:20\n                            \n                        \n                \n                    \n                        The array of details to be displayed.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-details-label\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        arrayToString\n                        \n                    \n                \n            \n            \n                \narrayToString(inputArray: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Function that handles converting the array given\ninto a formatted string for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                inputArray\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    an array of strings to join.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the formatted string of items separated by a comma.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n/**\n * Reusable component that takes an array of strings and renders\n * that array as a string, separated by commas, in the icon color.\n */\n@Component({\n  selector: 'ccf-details-label',\n  templateUrl: './details-label.component.html',\n  styleUrls: ['./details-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsLabelComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-details-label';\n\n  /**\n   * The array of details to be displayed.\n   */\n  @Input() details: string[] = [];\n\n  /**\n   * Function that handles converting the array given\n   * into a formatted string for display.\n   *\n   * @param inputArray an array of strings to join.\n   * @returns the formatted string of items separated by a comma.\n   */\n  arrayToString(inputArray: string[]): string {\n    return inputArray.filter(item => !!item).join(', ');\n  }\n}\n\n    \n\n    \n        {{ arrayToString(details) }}\n    \n\n    \n                \n                    ./details-label.component.scss\n                \n                :host {\n    display: block;\n    height: 2.25rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ arrayToString(details) }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DetailsLabelModule.html":{"url":"modules/DetailsLabelModule.html","title":"module - DetailsLabelModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailsLabelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/details-label/details-label.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailsLabelComponent } from './details-label.component';\n\n@NgModule({\n  declarations: [DetailsLabelComponent],\n  imports: [CommonModule],\n  exports: [DetailsLabelComponent]\n})\nexport class DetailsLabelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/documentation.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DrawerModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractionSet.html":{"url":"interfaces/ExtractionSet.html","title":"interface - ExtractionSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractionSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/extraction-set.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains information for an extraction set\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            sites\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the set\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Organ that the extraction sites belong to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sites belonging to the organ in the extraction set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { VisibilityItem } from './visibility-item';\n\n/**\n * Contains information for an extraction set\n */\nexport interface ExtractionSet {\n  /** Name of the set */\n  name: string;\n\n  /** Organ that the extraction sites belong to */\n  organ?: string;\n\n  /** Extraction sites belonging to the organ in the extraction set */\n  sites: VisibilityItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtractionSetDropdownComponent.html":{"url":"components/ExtractionSetDropdownComponent.html","title":"component - ExtractionSetDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtractionSetDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown for selecting the extraction set\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-extraction-set-dropdown\n            \n\n\n\n            \n                styleUrls\n                ./extraction-set-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./extraction-set-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractionSetChanged\n                            \n                            \n                                isMultiple\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                setChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of extraction set dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sets\n                    \n                \n                \n                    \n                        Type :         ExtractionSet[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Extraction sets to be displayed as options\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        setChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current extraction set when selected\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-extraction-set-dropdown\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSetChanged\n                        \n                    \n                \n            \n            \n                \nextractionSetChanged(value: ExtractionSet)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Sets the selected extraction set and emits the extraction set\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            ExtractionSet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The extraction set selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMultiple\n                        \n                    \n                \n            \n            \n                \nisMultiple()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Determines whether there is more than one extraction set\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if there is more than one extraction set\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtractionSet\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:33\n                        \n                    \n\n            \n                \n                    The currently selected extraction set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ExtractionSet } from '../../../core/models/extraction-set';\n\n/**\n * Dropdown for selecting the extraction set\n */\n@Component({\n  selector: 'ccf-extraction-set-dropdown',\n  templateUrl: './extraction-set-dropdown.component.html',\n  styleUrls: ['./extraction-set-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExtractionSetDropdownComponent {\n\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-extraction-set-dropdown';\n\n  /**\n   * Emits the current extraction set when selected\n   */\n  @Output() readonly setChange = new EventEmitter();\n\n  /**\n   * Extraction sets to be displayed as options\n   */\n  @Input() sets: ExtractionSet[];\n\n  /**\n   * The currently selected extraction set\n   */\n  selected: ExtractionSet;\n\n  /**\n   * Creates an instance of extraction set dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Sets the selected extraction set and emits the extraction set\n   *\n   * @param value The extraction set selected\n   */\n  extractionSetChanged(value: ExtractionSet): void {\n    this.selected = value;\n    this.ga.event('selected_extraction_set_change', 'extraction_set_dropdown', value.name);\n    this.setChange.emit(value);\n  }\n\n  /**\n   * Determines whether there is more than one extraction set\n   *\n   * @returns true if there is more than one extraction set\n   */\n  isMultiple(): boolean {\n    return this.sets.length > 1;\n  }\n}\n\n    \n\n    \n        \n  Landmark Set\n  \n    \n      {{set.name}} ({{set.sites.length}})\n    \n  \n\n\n    \n\n    \n                \n                    ./extraction-set-dropdown.component.scss\n                \n                ::ng-deep .extraction-set-panel {\n  position: absolute !important;\n  box-shadow: 0rem 0rem 0.3rem 0.1rem #9e9e9e !important;\n  top: -3.5rem;\n\n  .extraction-set-options {\n    height: 2.5rem;\n    min-height: inherit;\n  }\n}\n\n:host {\n  ::ng-deep .mat-mdc-form-field {\n    width: 10.5rem;\n\n    .mat-mdc-text-field-wrapper {\n      padding: 0;\n    }\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Landmark Set            {{set.name}} ({{set.sites.length}})      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExtractionSetDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExtractionSetDropdownModule.html":{"url":"modules/ExtractionSetDropdownModule.html","title":"module - ExtractionSetDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    ExtractionSetDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ExtractionSetDropdownComponent } from './extraction-set-dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSelectModule],\n  declarations: [ExtractionSetDropdownComponent],\n  exports: [ExtractionSetDropdownComponent]\n})\nexport class ExtractionSetDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            baseHref\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cancelRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            collisionsEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetchPreviousRegistrations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            register\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipUnsavedChangesConfirmation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useDownload\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHref\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseHref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cancelRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelRegistration:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collisionsEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collisionsEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editRegistration:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPreviousRegistrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetchPreviousRegistrations:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganConfig | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganConfig | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        register\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        register:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipUnsavedChangesConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipUnsavedChangesConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n\n  collisionsEndpoint?: string;\n}\n\nexport interface OrganConfig {\n  name: 'large intestine' | 'heart' | 'kidney' | 'spleen';\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken(\n  'Global configuration object'\n);\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page header\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of header component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-header\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  @Input() homeUrl: string;\n\n  @Input() logoTooltip: string;\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) { }\n}\n\n    \n\n    \n        \n\n\n\n  \n    chevron_left\n    BACK\n  \n\n\n\n  \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n\n  .text {\n    padding: 0.25rem 0;\n    height: 2rem;\n    display: flex;\n    align-items: center;\n    font-weight: lighter;\n    font-size: 1.5rem;\n  }\n\n\n  .link {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    text-decoration: none;\n    padding: 0.25rem 0;\n  }\n\n  .home {\n    * {\n      transition: color .6s;\n    }\n\n    .backbutton {\n      // Material icons do not always fill the space given\n      // Scale up size for icon to look correct\n      font-size: 2.25rem;\n      width: 2.25rem;\n      height: 2.25rem;\n    }\n  }\n\n  .portal {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left    BACK              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:     SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              private readonly sanitizer: DomSanitizer,\n              private readonly globalConfig: GlobalConfigState) {\n    super();\n  }\n\n  ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS\n      .filter(def => def.html !== undefined)\n      .map(def => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html!) }))\n      .forEach(def => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find(\n        icon => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace\n      );\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:147\n                        \n                    \n\n\n            \n                \n                        Selects the argument used to call the registration method.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of arguments.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getMethodName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:127\n                        \n                    \n\n\n            \n                \n                        Selects the MatIconRegistry method used to register the icon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the registry method.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:87\n                        \n                    \n\n\n            \n                \n                        Registers a svg icon for use in mat-icon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                definition\n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Icon to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if registration was successful, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerIconImpl\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:97\n                        \n                    \n\n\n            \n                \n                        Backing implementation of registerIcon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                definition\n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Icon to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if registration was successful, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              private readonly sanitizer: DomSanitizer,\n              private readonly globalConfig: GlobalConfigState) {\n    super();\n  }\n\n  ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS\n      .filter(def => def.html !== undefined)\n      .map(def => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html!) }))\n      .forEach(def => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find(\n        icon => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace\n      );\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deferred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Promise(resolve => {\n    this.resolve = resolve;\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                        \n                    \n\n            \n                \n                    Promise used to await on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether this state is true or false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:41\n                        \n                    \n\n            \n                \n                    Resolve function for the promise.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Sets the state to true and\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueOf\n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Gets the boolean state of this object.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if set has been called.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                        \n                    wait()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets a promise that resolves when this state is set to true.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state('open, open-instant', style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input()\n  @HostBinding('class.ccf-drawer-opened')\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input()\n  @HostBinding('class.ccf-drawer-expanded')\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    } };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done')\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done')\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled': {\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonFileReaderComponent.html":{"url":"components/JsonFileReaderComponent.html","title":"component - JsonFileReaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  JsonFileReaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-json-file-reader\n            \n\n\n\n            \n                styleUrls\n                ./json-file-reader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./json-file-reader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                fileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleFile\n                            \n                            \n                                triggerFileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parsedJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of json file reader component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Upload'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:19\n                            \n                        \n                \n                    \n                        Allows the label on the upload button to be customized.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parsedJson\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:22\n                            \n                        \n                \n                    \n                        Emits the json object of any files uploaded.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-json-file-reader\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:13\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleFile\n                        \n                    \n                \n            \n            \n                \nhandleFile(event: InputEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Takes in a json file and emits the parsed json object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerFileInput\n                        \n                    \n                \n            \n            \n                \ntriggerFileInput()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Method used to trigger the file input element's click handler\nfrom the placeholder button used for styling purposes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:13\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:16\n                        \n                    \n\n            \n                \n                    File Input element, used to manually trigger the click event.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n@Component({\n  selector: 'ccf-json-file-reader',\n  templateUrl: './json-file-reader.component.html',\n  styleUrls: ['./json-file-reader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class JsonFileReaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-json-file-reader';\n\n  /** File Input element, used to manually trigger the click event. */\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  /** Allows the label on the upload button to be customized. */\n  @Input() label = 'Upload';\n\n  /** Emits the json object of any files uploaded. */\n  @Output() readonly parsedJson = new EventEmitter();\n\n  /**\n   * Creates an instance of json file reader component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Method used to trigger the file input element's click handler\n   * from the placeholder button used for styling purposes.\n   */\n  triggerFileInput(): void {\n    const fileInputElement: HTMLElement = this.fileInput.nativeElement;\n    fileInputElement.click();\n  }\n\n  /**\n   * Takes in a json file and emits the parsed json object.\n   *\n   * @param event file input event\n   */\n  handleFile(event: InputEvent): void {\n    const inputTarget = event.target as HTMLInputElement;\n    if (!inputTarget.files) {\n      return;\n    }\n\n    const file = inputTarget.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const json = JSON.parse(fileReader.result as string) as unknown;\n      this.ga.event('json_file_load_end', 'json_file_reader');\n      this.parsedJson.emit(json);\n    };\n\n    this.ga.event('json_file_load_start', 'json_file_reader');\n    fileReader.readAsText(file);\n  }\n}\n\n    \n\n    \n        {{ label }}\n\n\n    \n\n    \n                \n                    ./json-file-reader.component.scss\n                \n                :host {\n  .upload-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: .6s;\n    cursor: pointer;\n    font-weight: 500;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonFileReaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonFileReaderModule.html":{"url":"modules/JsonFileReaderModule.html","title":"module - JsonFileReaderModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonFileReaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonFileReaderComponent } from './json-file-reader.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [JsonFileReaderComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  exports: [JsonFileReaderComponent]\n})\nexport class JsonFileReaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabeledSlideToggleComponent.html":{"url":"components/LabeledSlideToggleComponent.html","title":"component - LabeledSlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabeledSlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Generic toggle slider component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-labeled-slide-toggle\n            \n\n\n\n            \n                styleUrls\n                ./labeled-slide-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./labeled-slide-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                labels\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    left\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of labeled slide toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                \n                \n                    \n                        Type :     [string, string]\n\n                    \n                \n                \n                    \n                        Default value : ['Left', 'Right']\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:24\n                            \n                        \n                \n                    \n                        The two selection options to be toggled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Left'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input value for toggle slider\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:39\n                            \n                        \n                \n                    \n                        Emits the datatype with the currently selected option\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-labeled-slide-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateToggle\n                        \n                    \n                \n            \n            \n                \nupdateToggle(selection: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Updates and emits the currently selected option\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The current toggle state (true=left, false=right)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n\n                \n                    \n                        getleft()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:51\n                                \n                            \n                    \n                        \n                                Determines if left toggle option is selected\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Generic toggle slider component\n */\n@Component({\n  selector: 'ccf-labeled-slide-toggle',\n  templateUrl: './labeled-slide-toggle.component.html',\n  styleUrls: ['./labeled-slide-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class LabeledSlideToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-labeled-slide-toggle';\n\n  /**\n   * The two selection options to be toggled\n   */\n  @Input() labels: [string, string] = ['Left', 'Right'];\n\n  /**\n   * Input value for toggle slider\n   */\n  @Input() value = 'Left';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Emits the datatype with the currently selected option\n   */\n  @Output() readonly valueChange = new EventEmitter();\n\n  /**\n   * Creates an instance of labeled slide toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Determines if left toggle option is selected\n   */\n  get left(): boolean {\n    const { value, labels } = this;\n    return value !== labels[1];\n  }\n\n  /**\n   * Updates and emits the currently selected option\n   *\n   * @param selection The current toggle state (true=left, false=right)\n   */\n  updateToggle(selection: boolean): void {\n    this.value = selection ? this.labels[0] : this.labels[1];\n    this.ga.event('slide_toggle_toggled', 'slide_toggle', this.value);\n    this.valueChange.emit(this.value);\n  }\n}\n\n    \n\n    \n        {{labels[0]}}\n\n{{labels[1]}}\n\n    \n\n    \n                \n                    ./labeled-slide-toggle.component.scss\n                \n                :host{\n  .slide-label {\n    margin: 0 1rem;\n    transition: color .6s;\n    cursor: pointer;\n  }\n  \n  .disabled {\n    opacity: 30%;\n    cursor: not-allowed;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{labels[0]}}{{labels[1]}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabeledSlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabeledSlideToggleModule.html":{"url":"modules/LabeledSlideToggleModule.html","title":"module - LabeledSlideToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    LabeledSlideToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { LabeledSlideToggleComponent } from './labeled-slide-toggle.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [LabeledSlideToggleComponent],\n  exports: [LabeledSlideToggleComponent]\n})\nexport class LabeledSlideToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The left sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-left-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./left-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                extractionSiteTooltip\n                            \n                            \n                                    Readonly\n                                organSelected$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateExtractionSiteTooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, registration: RegistrationState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:27\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-left-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateExtractionSiteTooltip\n                        \n                    \n                \n            \n            \n                \nupdateExtractionSiteTooltip(item: VisibilityItem | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Updates extraction site tooltip to either the VisibilityItem passed in's\ntooltip property, or an empty string if undefined.\nundefined.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The VisibilityItem which we want to show the tooltip of, or\nundefined.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSiteTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:37\n                        \n                    \n\n            \n                \n                    Variable that keeps track of the extraction site tooltip to display on\nthe stage when hovered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organSelected$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organ$.pipe(\n    map(organ => organ === undefined ? false : true)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { VisibilityItem } from '../../core/models/visibility-item';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { RUI_ORGANS } from './../../core/store/model/model.state';\n\n\n/**\n * The left sidebar\n */\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-left-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  readonly organSelected$ = this.model.organ$.pipe(\n    map(organ => organ === undefined ? false : true)\n  );\n\n  /**\n   * Variable that keeps track of the extraction site tooltip to display on\n   * the stage when hovered.\n   */\n  extractionSiteTooltip = '';\n\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    readonly registration: RegistrationState\n  ) { }\n\n  /**\n   * Updates extraction site tooltip to either the VisibilityItem passed in's\n   * tooltip property, or an empty string if undefined.\n   *\n   * @param item The VisibilityItem which we want to show the tooltip of, or\n   * undefined.\n   */\n  updateExtractionSiteTooltip(item: VisibilityItem | undefined): void {\n    if (item?.tooltip) {\n      this.extractionSiteTooltip = item.tooltip;\n    } else {\n      this.extractionSiteTooltip = '';\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n          \n              Anatomical Structures\n          \n\n          \n              \n              \n          \n        \n\n        \n\n        \n            \n                Landmarks\n            \n            \n                \n                \n                \n                \n            \n        \n         0\">\n            {{ extractionSiteTooltip }}\n        \n    \n\n\n    \n\n    \n                \n                    ./left-sidebar.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 2.5rem);\n  margin-top: 1rem;\n  margin-bottom: 1.5rem;\n\n  .scroll-wrapper {\n    overflow-y: scroll;\n    height: 100%;\n    margin-right: 0.375rem;\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      margin-left: 1.5rem;\n      margin-right: 0.375rem;\n      min-height: 100%;\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      .ccf-organ-selector {\n        margin-top: 1.5rem;\n      }\n\n      .organ-sliders {\n        .slider-label {\n          font-weight: 600;\n        }\n\n        display: flex;\n        height: 3rem;\n        align-items: center;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n        mat-expansion-panel-header {\n          .expansion-title {\n            font-size: 1rem;\n            font-weight: 600;\n          }\n        }\n      }\n\n      ::ng-deep .mat-expansion-panel-body {\n        padding: 0;\n      }\n\n      .extraction-menu,\n      .anatomical-structures-menu {\n        ::ng-deep .expansion-header {\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          padding: 0;\n          font-weight: bold;\n          height: 3rem;\n\n          .mat-expansion-indicator {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 24px;\n            width: 24px;\n          }\n        }\n\n        .expansion-content {\n          margin-bottom: 0.75rem;\n          text-align: center;\n          margin-top: 1.75rem;\n\n          .expansion-placeholder {\n            width: 100%;\n            font-size: 0.9rem;\n            font-weight: 400;\n          }\n        }\n      }\n\n      .extraction-site-tooltip {\n        position: absolute;\n        top: 4rem;\n        left: 27rem;\n        width: 21rem;\n        padding: 1rem;\n        border-radius: 0.5rem;\n        border: 1px solid;\n        z-index: 2;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Anatomical Structures                                                                                                              Landmarks                                                                                                                     0\">            {{ extractionSiteTooltip }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeftSidebarModule.html":{"url":"modules/LeftSidebarModule.html","title":"module - LeftSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    LeftSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ExtractionSetDropdownModule\n                        \n                        \n                            NameInputModule\n                        \n                        \n                            VisibilityMenuModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { OpacitySliderModule } from 'ccf-shared';\n\nimport { ExtractionSetDropdownModule } from '../../shared/components/extraction-set-dropdown/extraction-set-dropdown.module';\nimport { NameInputModule } from '../../shared/components/name-input/name-input.module';\nimport { VisibilityMenuModule } from '../../shared/components/visibility-menu/visibility-menu.module';\nimport { VisibilityToggleModule } from '../../shared/components/visibility-toggle/visibility-toggle.module';\nimport { LeftSidebarComponent } from './left-sidebar.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatTooltipModule,\n\n    MatDividerModule,\n    NameInputModule,\n    VisibilityToggleModule,\n    ExtractionSetDropdownModule,\n    OpacitySliderModule,\n    VisibilityMenuModule,\n    VisibilityToggleModule\n  ],\n  declarations: [LeftSidebarComponent],\n  exports: [LeftSidebarComponent]\n})\nexport class LeftSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:50\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:50\n                        \n                    \n\n            \n                \n                    Counter used to give each message a unique id.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting all messages except for those sent by this source.\n\n\n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting messages sent from a specific source.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source messages are filtered on.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting messages sent from any of the specified sources.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sources\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The sources messages are filtered on.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextMessageId\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextMessageId()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Creates a unique message identifier.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The identifier number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Sends a single message with a payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message payload.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Connects to a message channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source of messages sent.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MessageChannel\n\n                        \n                            \n                                A new connected message channel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Clean up.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                        \n                    \n\n            \n                \n                    The message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:130\n                        \n                    \n\n            \n                \n                    The message listener.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MetaDataField.html":{"url":"interfaces/MetaDataField.html","title":"interface - MetaDataField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MetaDataField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/meta-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MetaDataField {\n  label: string;\n  value: string;\n}\n\nexport type MetaData = MetaDataField[];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelStateModel.html":{"url":"interfaces/ModelStateModel.html","title":"interface - ModelStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModelStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data contained in the stage state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            blockSize\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            extractionSites\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            organDimensions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organIri\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            showPrevious\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slicesConfig\n                                        \n                                \n                                \n                                        \n                                            viewSide\n                                        \n                                \n                                \n                                        \n                                            viewType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Anatomical structures for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockSize:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Block size\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:         ExtractionSet[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtractionSet[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sets\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Possible extraction sites\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organDimensions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organDimensions:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference Organ Dimensions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reference Organ IRI\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model position\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model rotation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sex if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPrevious\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPrevious:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether previous registration blocks are visible\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Side if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slicesConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slicesConfig:         SlicesConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SlicesConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Slice configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewSide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewSide:         ViewSide\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewSide\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View side\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewType:         ViewType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinct, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id), distinct());\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize), distinct());\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation), distinct());\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position), distinct());\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig), distinct());\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType), distinct());\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide), distinct());\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ), distinct());\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri), distinct());\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions), distinct());\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex), distinct());\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side), distinct());\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious), distinct());\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites), distinct());\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures), distinct());\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets), distinct());\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Sets position and rotation to default\n   */\n  @DataAction()\n  setOrganDefaults(): void {\n    this.ctx.patchState({\n      position: this.defaultPosition,\n      rotation: { x: 0, y: 0, z: 0 }\n    });\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: [{ id: 'all', name: 'all anatomical structures', opacity: 20, visible: true }, ...Object.values(asLookup)] });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: true,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name'))\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameInputComponent.html":{"url":"components/NameInputComponent.html","title":"component - NameInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NameInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for inputting the researcher's name\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-name-input\n            \n\n\n\n            \n                styleUrls\n                ./name-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                firstNameValidator\n                            \n                            \n                                lastNameValidator\n                            \n                            \n                                middleNameValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:82\n                            \n                        \n\n                \n                    \n                            Creates an instance of name input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:62\n                            \n                        \n                \n                    \n                        Current user name\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nameChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:82\n                            \n                        \n                \n                    \n                        Emits a UserName object\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-name-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:40\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateName\n                        \n                    \n                \n            \n            \n                \nupdateName(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Updates username with a new entry and emits the UserName object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    firstName or lastName\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                \n                    \n                        Default value : {\n    firstName: '',\n    middleName: '',\n    lastName: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:40\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:45\n                        \n                    \n\n            \n                \n                    Used to validate the first name input field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:50\n                        \n                    \n\n            \n                \n                    Used to validate the last name input field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        middleNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:55\n                        \n                    \n\n            \n                \n                    Used to validate the middle name input field.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:62\n                                \n                            \n                    \n                        \n                                Current user name\n\n\n                                \n                                    Returns :         UserName\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: UserName)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            UserName\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's middle name\n   */\n  middleName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the middle name input field.\n   */\n  middleNameValidator = new UntypedFormControl('', [Validators.required]);\n\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n    this.middleNameValidator.setValue(value?.middleName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    middleName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n    \n        \n  First Name \n  \n\n\n\n  Middle Name \n  \n\n\n\n  Last Name \n  \n\n\n    \n\n    \n                \n                    ./name-input.component.scss\n                \n                :host {\n  display: flex;\n\n  .field {\n    &:not(:last-child) {\n      padding-right: 0.75rem;\n    }\n\n    .input {\n      text-align: left;\n      width: 100%;\n      font-size: 1rem;\n    }\n\n    ::ng-deep .mdc-text-field {\n      padding: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  First Name     Middle Name     Last Name   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NameInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NameInputModule.html":{"url":"modules/NameInputModule.html","title":"module - NameInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NameInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\n\n\nNameInputModule\n\nNameInputModule\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NameInputComponent } from './name-input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule\n  ],\n  declarations: [NameInputComponent],\n  exports: [NameInputComponent]\n})\nexport class NameInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganConfig.html":{"url":"interfaces/OrganConfig.html","title":"interface - OrganConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \"large intestine\" | \"heart\" | \"kidney\" | \"spleen\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"large intestine\" | \"heart\" | \"kidney\" | \"spleen\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n\n  collisionsEndpoint?: string;\n}\n\nexport interface OrganConfig {\n  name: 'large intestine' | 'heart' | 'kidney' | 'spleen';\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken(\n  'Global configuration object'\n);\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganData.html":{"url":"interfaces/OrganData.html","title":"interface - OrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageState.html":{"url":"injectables/PageState.html","title":"injectable - PageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                General page global state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                orcidValid$\n                            \n                            \n                                    Readonly\n                                organOptions$\n                            \n                            \n                                    Readonly\n                                registrationCallbackSet$\n                            \n                            \n                                    Readonly\n                                registrationStarted$\n                            \n                            \n                                    Readonly\n                                useCancelRegistrationCallback$\n                            \n                            \n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelRegistration\n                            \n                            \n                                    \n                                clearHasChanges\n                            \n                            \n                                    Private\n                                initSkipConfirmationListeners\n                            \n                            \n                                isOrcidValid\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    Private\n                                orcidToUri\n                            \n                            \n                                    \n                                registrationStarted\n                            \n                            \n                                    \n                                setHasChanges\n                            \n                            \n                                    \n                                setOrcidId\n                            \n                            \n                                    \n                                setUseCancelRegistrationCallback\n                            \n                            \n                                    \n                                setUserName\n                            \n                            \n                                uriToOrcid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skipConfirmation$\n                                \n                                \n                                    globalSkipConfirmation$\n                                \n                                \n                                    hasChanges$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, reg: RegistrationState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:86\n                            \n                        \n\n                \n                    \n                            Creates an instance of page state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global configuration\n\n                                                        \n                                                \n                                                \n                                                        reg\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelRegistration\n                        \n                    \n                \n            \n            \n                \ncancelRegistration()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clearHasChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:193\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSkipConfirmationListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSkipConfirmationListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:199\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOrcidValid\n                        \n                    \n                \n            \n            \n                \nisOrcidValid()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:231\n                        \n                    \n\n\n            \n                \n                        Checks if current orcid value is in the valid format\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if orcid valid or blank\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:103\n                        \n                    \n\n\n            \n                \n                        Initializes this service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orcidToUri\n                        \n                    \n                \n            \n            \n                \n                        \n                    orcidToUri(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:250\n                        \n                    \n\n\n            \n                \n                        Converts orcid to URI\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    orcid id\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                orcid URI\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registrationStarted\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrationStarted()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:176\n                        \n                    \n\n\n            \n                \n                        Sets registrationStarted to true (when initial registration modal is closed)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setHasChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    setHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setOrcidId\n                        \n                    \n                \n            \n            \n                \n                        \n                    setOrcidId(id?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:161\n                        \n                    \n\n\n            \n                \n                        Saves ORCID id as URI\nSets orcidValid to true if blank, otherwise set to true if valid\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    ORCID id\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUseCancelRegistrationCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUseCancelRegistrationCallback(use: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                use\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUserName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserName(name: Pick)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:145\n                        \n                    \n\n\n            \n                \n                        Sets the name of the active user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The first and last name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uriToOrcid\n                        \n                    \n                \n            \n            \n                \nuriToOrcid(uri?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:241\n                        \n                    \n\n\n            \n                \n                        Converts orcid URI to a regular orcid value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                uri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    orcid uri\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                orcid id\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        orcidValid$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.orcidValid))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.organOptions))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationCallbackSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.registrationCallbackSet))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationStarted$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluckUnique('registrationStarted'))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:64\n                        \n                    \n\n            \n                \n                    registrationStarted observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useCancelRegistrationCallback$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.useCancelRegistrationCallback))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.user))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:62\n                        \n                    \n\n            \n                \n                    Active user observable\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skipConfirmation$\n                    \n                \n\n                \n                    \n                        getskipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        globalSkipConfirmation$\n                    \n                \n\n                \n                    \n                        getglobalSkipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasChanges$\n                    \n                \n\n                \n                    \n                        gethasChanges$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:84\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { RegistrationState } from '../registration/registration.state';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n  orcidValid: boolean;\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: [],\n    orcidValid: false\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** registrationStarted observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n  readonly orcidValid$ = this.state$.pipe(map(x => x?.orcidValid));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState,\n    private readonly reg: RegistrationState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    combineLatest([this.reg.state$, this.globalConfig.config$]).pipe(\n      tap(([reg, config]) => {\n        this.setState(patch({\n          registrationCallbackSet: reg.useRegistrationCallback ? !!config.register : false,\n          useCancelRegistrationCallback: !!config.cancelRegistration,\n          user: iif(!!config.user, config.user!),\n          registrationStarted: config.user ?? reg.initialRegistration ? true : undefined\n        }));\n      })\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch({\n        firstName: name.firstName,\n        lastName: name.lastName,\n        middleName: name.middleName !== '' ? name.middleName : undefined\n      })\n    }));\n  }\n\n  /**\n   * Saves ORCID id as URI\n   * Sets orcidValid to true if blank, otherwise set to true if valid\n   * @param id ORCID id\n   */\n  @DataAction()\n  setOrcidId(id?: string): void {\n    this.ctx.setState(patch({\n      user: patch({\n        orcidId: id ? this.orcidToUri(id) : undefined\n      })\n    }));\n    this.ctx.patchState({\n      orcidValid: id ? this.isOrcidValid() : true\n    });\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n\n  /**\n   * Checks if current orcid value is in the valid format\n   * @returns true if orcid valid or blank\n   */\n  isOrcidValid(): boolean {\n    const orcId = this.uriToOrcid(this.snapshot.user.orcidId);\n    return !!(!orcId || orcId.match('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$'));\n  }\n\n  /**\n   * Converts orcid URI to a regular orcid value\n   * @param uri orcid uri\n   * @returns orcid id\n   */\n  uriToOrcid(uri?: string): string {\n    return uri ? uri.split('/').slice(-1)[0] : '';\n  }\n\n  /**\n   * Converts orcid to URI\n   * @param id orcid id\n   * @returns orcid URI\n   */\n  private orcidToUri(id: string): string {\n    const idWithHyphens = id.replace(/-/g, '').replace(/(.{1,4})/g, '$1-').slice(0, -1);\n    return 'https://orcid.org/' + idWithHyphens;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageStateModel.html":{"url":"interfaces/PageStateModel.html","title":"interface - PageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Page state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hasChanges\n                                        \n                                \n                                \n                                        \n                                            orcidValid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organOptions\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                                \n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                        \n                                            skipConfirmation\n                                        \n                                \n                                \n                                        \n                                            useCancelRegistrationCallback\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasChanges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasChanges:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orcidValid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orcidValid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organOptions:         OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the initial registration modal has been closed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useCancelRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useCancelRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Active user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { RegistrationState } from '../registration/registration.state';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n  orcidValid: boolean;\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: [],\n    orcidValid: false\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** registrationStarted observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n  readonly orcidValid$ = this.state$.pipe(map(x => x?.orcidValid));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState,\n    private readonly reg: RegistrationState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    combineLatest([this.reg.state$, this.globalConfig.config$]).pipe(\n      tap(([reg, config]) => {\n        this.setState(patch({\n          registrationCallbackSet: reg.useRegistrationCallback ? !!config.register : false,\n          useCancelRegistrationCallback: !!config.cancelRegistration,\n          user: iif(!!config.user, config.user!),\n          registrationStarted: config.user ?? reg.initialRegistration ? true : undefined\n        }));\n      })\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch({\n        firstName: name.firstName,\n        lastName: name.lastName,\n        middleName: name.middleName !== '' ? name.middleName : undefined\n      })\n    }));\n  }\n\n  /**\n   * Saves ORCID id as URI\n   * Sets orcidValid to true if blank, otherwise set to true if valid\n   * @param id ORCID id\n   */\n  @DataAction()\n  setOrcidId(id?: string): void {\n    this.ctx.setState(patch({\n      user: patch({\n        orcidId: id ? this.orcidToUri(id) : undefined\n      })\n    }));\n    this.ctx.patchState({\n      orcidValid: id ? this.isOrcidValid() : true\n    });\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n\n  /**\n   * Checks if current orcid value is in the valid format\n   * @returns true if orcid valid or blank\n   */\n  isOrcidValid(): boolean {\n    const orcId = this.uriToOrcid(this.snapshot.user.orcidId);\n    return !!(!orcId || orcId.match('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$'));\n  }\n\n  /**\n   * Converts orcid URI to a regular orcid value\n   * @param uri orcid uri\n   * @returns orcid id\n   */\n  uriToOrcid(uri?: string): string {\n    return uri ? uri.split('/').slice(-1)[0] : '';\n  }\n\n  /**\n   * Converts orcid to URI\n   * @param id orcid id\n   * @returns orcid URI\n   */\n  private orcidToUri(id: string): string {\n    const idWithHyphens = id.replace(/-/g, '').replace(/(.{1,4})/g, '$1-').slice(0, -1);\n    return 'https://orcid.org/' + idWithHyphens;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A record with information about a single person\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            middleName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orcidId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orcidId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orcidId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { combineLatest, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { RegistrationState } from '../registration/registration.state';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n  orcidValid: boolean;\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: [],\n    orcidValid: false\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** registrationStarted observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n  readonly orcidValid$ = this.state$.pipe(map(x => x?.orcidValid));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState,\n    private readonly reg: RegistrationState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    combineLatest([this.reg.state$, this.globalConfig.config$]).pipe(\n      tap(([reg, config]) => {\n        this.setState(patch({\n          registrationCallbackSet: reg.useRegistrationCallback ? !!config.register : false,\n          useCancelRegistrationCallback: !!config.cancelRegistration,\n          user: iif(!!config.user, config.user!),\n          registrationStarted: config.user ?? reg.initialRegistration ? true : undefined\n        }));\n      })\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch({\n        firstName: name.firstName,\n        lastName: name.lastName,\n        middleName: name.middleName !== '' ? name.middleName : undefined\n      })\n    }));\n  }\n\n  /**\n   * Saves ORCID id as URI\n   * Sets orcidValid to true if blank, otherwise set to true if valid\n   * @param id ORCID id\n   */\n  @DataAction()\n  setOrcidId(id?: string): void {\n    this.ctx.setState(patch({\n      user: patch({\n        orcidId: id ? this.orcidToUri(id) : undefined\n      })\n    }));\n    this.ctx.patchState({\n      orcidValid: id ? this.isOrcidValid() : true\n    });\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n\n  /**\n   * Checks if current orcid value is in the valid format\n   * @returns true if orcid valid or blank\n   */\n  isOrcidValid(): boolean {\n    const orcId = this.uriToOrcid(this.snapshot.user.orcidId);\n    return !!(!orcId || orcId.match('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$'));\n  }\n\n  /**\n   * Converts orcid URI to a regular orcid value\n   * @param uri orcid uri\n   * @returns orcid id\n   */\n  uriToOrcid(uri?: string): string {\n    return uri ? uri.split('/').slice(-1)[0] : '';\n  }\n\n  /**\n   * Converts orcid to URI\n   * @param id orcid id\n   * @returns orcid URI\n   */\n  private orcidToUri(id: string): string {\n    const idWithHyphens = id.replace(/-/g, '').replace(/(.{1,4})/g, '$1-').slice(0, -1);\n    return 'https://orcid.org/' + idWithHyphens;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferenceDataState.html":{"url":"injectables/ReferenceDataState.html","title":"injectable - ReferenceDataState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReferenceDataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data for the main 3d model display\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLatestIri\n                            \n                            \n                                getOrganData\n                            \n                            \n                                getReferenceOrganIri\n                            \n                            \n                                    Private\n                                getSourceDB\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                normalizePlacement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globals: GlobalsService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globals\n                                                  \n                                                        \n                                                                    GlobalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLatestIri\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatestIri(organ?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganData\n                        \n                    \n                \n            \n            \n                \ngetOrganData(iri: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:155\n                        \n                    \n\n\n            \n                \n                        Looks up organ information from an IRI\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                iri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The IRI\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OrganData | undefined\n\n                        \n                            \n                                A populated organ data if the IRI is valid, otherwise undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganIri\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganIri(organ: string, sex?: \"Male\" | \"Female\" | string, side?: \"Left\" | \"Right\" | string, organInfo?: OrganInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:135\n                        \n                    \n\n\n            \n                \n                        Looks up an IRI for a potential reference organ.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the organ\n\n                                            \n                                        \n                                        \n                                                sex\n                                            \n                                                        \"Male\" | \"Female\" | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    the sex: male, female, or undefined\n\n                                            \n                                        \n                                        \n                                                side\n                                            \n                                                        \"Left\" | \"Right\" | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    the side: left, right, or undefined\n\n                                            \n                                        \n                                        \n                                                organInfo\n                                            \n                                                            OrganInfo\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                An IRI if there is a reference organ for this state, otherwise undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSourceDB\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceDB()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:87\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizePlacement\n                        \n                    \n                \n            \n            \n                \nnormalizePlacement(place: SpatialPlacementJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                place\n                                            \n                                                        SpatialPlacementJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialPlacementJsonLd\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReferenceDataStateModel.html":{"url":"interfaces/ReferenceDataStateModel.html","title":"interface - ReferenceDataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReferenceDataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            organIRILookup\n                                        \n                                \n                                \n                                        \n                                            organSpatialEntities\n                                        \n                                \n                                \n                                        \n                                            placementPatches\n                                        \n                                \n                                \n                                        \n                                            sceneNodeLookup\n                                        \n                                \n                                \n                                        \n                                            simpleSceneNodeLookup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIRILookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIRILookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organSpatialEntities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organSpatialEntities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placementPatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placementPatches:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        simpleSceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        simpleSceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationContentComponent.html":{"url":"components/RegistrationContentComponent.html","title":"component - RegistrationContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing content of the initial registration modal\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-content\n            \n\n\n\n            \n                styleUrls\n                ./registration-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                currentOrgan\n                            \n                            \n                                currentSex\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                nameValid\n                            \n                            \n                                orcidValid\n                            \n                            \n                                organList\n                            \n                            \n                                organSelected\n                            \n                            \n                                registrationSelected\n                            \n                            \n                                    Readonly\n                                sexByLabel$\n                            \n                            \n                                sexSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameValid\n                            \n                            \n                                closeDialog\n                            \n                            \n                                handleRegistrationSelect\n                            \n                            \n                                organSelect\n                            \n                            \n                                registerButtonClick\n                            \n                            \n                                setSexFromLabel\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, dialogRef: MatDialogRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:50\n                            \n                        \n\n                \n                    \n                            Creates an instance of the registration dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page state\n\n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration dialog\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameValid\n                        \n                    \n                \n            \n            \n                \ncheckNameValid(event: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Checks to see if a first and last name has been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Closes the dialog and sets the correct sex and organ in the model state\nSets block to default position and rotation if user didn't select a registration\nUpdates page state to signal registration has started\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRegistrationSelect\n                        \n                    \n                \n            \n            \n                \nhandleRegistrationSelect()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Sets registrationSelected to true when a registration is uploaded\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelect\n                        \n                    \n                \n            \n            \n                \norganSelect(organ: OrganInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Updates current organ selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            OrganInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Organ selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Handles button click\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                Returns nothing is no organ is selected\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Updates current sex selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Sex selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentOrgan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganInfo\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:41\n                        \n                    \n\n            \n                \n                    Current organ selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:38\n                        \n                    \n\n            \n                \n                    Current sex selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:63\n                        \n                    \n\n            \n                \n                    Registration dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:44\n                        \n                    \n\n            \n                \n                    Checks if the user has entered a first and last name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orcidValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:47\n                        \n                    \n\n            \n                \n                    Checks if the entered orcid is valid\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:29\n                        \n                    \n\n            \n                \n                    List of selectable organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether an organ has been selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:50\n                        \n                    \n\n            \n                \n                    Checks if a preexisting registration was uploaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:24\n                        \n                    \n\n            \n                \n                    Current sex in the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sexSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:32\n                        \n                    \n\n            \n                \n                    Whether sex has been selected\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OrganInfo } from 'ccf-shared';\nimport { map } from 'rxjs/operators';\n\nimport { ModelState, RUI_ORGANS } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\n\n\n/**\n * Component containing content of the initial registration modal\n */\n@Component({\n  selector: 'ccf-registration-content',\n  templateUrl: './registration-content.component.html',\n  styleUrls: ['./registration-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegistrationContentComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-content';\n\n  /** Current sex in the model state */\n  readonly sexByLabel$ = this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  );\n\n  /** List of selectable organs */\n  organList = RUI_ORGANS;\n\n  /** Whether sex has been selected */\n  sexSelected: boolean;\n\n  /** Whether an organ has been selected */\n  organSelected: boolean;\n\n  /** Current sex selected */\n  currentSex: string;\n\n  /** Current organ selected */\n  currentOrgan: OrganInfo;\n\n  /** Checks if the user has entered a first and last name */\n  nameValid: boolean;\n\n  /** Checks if the entered orcid is valid */\n  orcidValid: boolean;\n\n  /** Checks if a preexisting registration was uploaded */\n  registrationSelected: boolean;\n\n  /**\n   * Creates an instance of the registration dialog\n   *\n   * @param page Page state\n   * @param model Model state\n   * @param dialogRef Registration dialog\n   * @param cdr Change detection\n   */\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    public dialogRef: MatDialogRef,\n    cdr: ChangeDetectorRef\n  ) {\n    this.registrationSelected = false;\n    page.user$.subscribe(user => {\n      this.checkNameValid(user);\n      this.orcidValid = page.isOrcidValid();\n      cdr.markForCheck();\n    });\n    model.organ$.subscribe(organ => {\n      this.organSelected = organ.src !== '';\n      cdr.markForCheck();\n    });\n    this.sexByLabel$.subscribe(sex => {\n      this.setSexFromLabel(sex);\n      cdr.markForCheck();\n    });\n    dialogRef.disableClose = true;\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n      cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Updates current sex selected\n   *\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.currentSex = label;\n    this.sexSelected = true;\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   *\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current organ selected\n   *\n   * @param organ Organ selected\n   */\n  organSelect(organ: OrganInfo): void {\n    this.currentOrgan = organ;\n    this.organSelected = true;\n  }\n\n  /**\n   * Handles button click\n   *\n   * @param [event] The click event\n   * @returns  Returns nothing is no organ is selected\n   */\n  registerButtonClick(event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.organSelected || !this.nameValid) {\n      return;\n    }\n    this.closeDialog();\n  }\n\n  /**\n   * Sets registrationSelected to true when a registration is uploaded\n   */\n  handleRegistrationSelect() {\n    this.registrationSelected = true;\n  }\n\n  /**\n   * Closes the dialog and sets the correct sex and organ in the model state\n   * Sets block to default position and rotation if user didn't select a registration\n   * Updates page state to signal registration has started\n   */\n  closeDialog(): void {\n    this.model.setSex(this.currentSex === 'Female' ? 'female' : 'male');\n    this.model.setOrgan(this.currentOrgan);\n    if (!this.registrationSelected) {\n      this.model.setOrganDefaults();\n    }\n    this.dialogRef.close(true);\n    this.page.registrationStarted();\n  }\n}\n\n    \n\n    \n        \n  Start Registration\n  \n  Continue\n\n\n    \n\n    \n                \n                    ./registration-content.component.scss\n                \n                .modal {\n  padding: 2rem;\n  border-radius: 0.5rem;\n  max-width: 47rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n\n  .title {\n    font-size: 1.25rem;\n    font-weight: 600;\n  }\n\n  .organ-sliders {\n    .slider-label {\n      font-weight: 600;\n    }\n\n    display: flex;\n    height: 3rem;\n    align-items: center;\n  }\n\n  .selector-label {\n    font-weight: 600;\n    height: 3rem;\n    line-height: 3rem;\n  }\n\n  .selector-container {\n    margin: 0 auto;\n  }\n\n  .registration-button {\n    transition: 0.6s;\n    display: flex;\n    width: 10rem;\n    height: 2rem;\n    padding: 0.25rem 1rem;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.125rem;\n    box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.16);\n    cursor: pointer;\n\n    &.disabled {\n      pointer-events: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Start Registration    Continue'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationContentModule.html":{"url":"modules/RegistrationContentModule.html","title":"module - RegistrationContentModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_imports\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationContentModule -->\n\nRegistrationMetadataModule->RegistrationContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegistrationMetadataModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { RegistrationMetadataModule } from '../../../shared/components/registration-metadata/registration-metadata.module';\nimport { RegistrationContentComponent } from './registration-content.component';\n\n\n@NgModule({\n  declarations: [RegistrationContentComponent],\n  imports: [CommonModule, MatTooltipModule, RegistrationMetadataModule, MatButtonModule],\n  exports: [RegistrationContentComponent]\n})\nexport class RegistrationContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationMetadataComponent.html":{"url":"components/RegistrationMetadataComponent.html","title":"component - RegistrationMetadataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationMetadataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts\n\n\n\n    \n        Description\n    \n    \n        Right side registration menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-metadata\n            \n\n\n\n            \n                styleUrls\n                ./registration-metadata.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-metadata.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nameValid\n                            \n                            \n                                    Optional\n                                orcId\n                            \n                            \n                                orcidControl\n                            \n                            \n                                uploadText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameValid\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                handleRegistrationUpload\n                            \n                            \n                                setSexFromLabel\n                            \n                            \n                                updateOrcid\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                registrationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, registration: RegistrationState, page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration metadata component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration state\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        registrationSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:21\n                            \n                        \n                \n                    \n                        Emits when user has uploaded registration\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameValid\n                        \n                    \n                \n            \n            \n                \ncheckNameValid(event: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Checks to see if a first and last name has been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Error message to inform user if orcid is invalid\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Error message\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRegistrationUpload\n                        \n                    \n                \n            \n            \n                \nhandleRegistrationUpload(reg: SpatialEntityJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Emits registrationSelected and calls editRegistration in state\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reg\n                                            \n                                                        SpatialEntityJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Updates current sex selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Sex selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrcid\n                        \n                    \n                \n            \n            \n                \nupdateOrcid(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Updates orcid value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Orcid value entered\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:24\n                        \n                    \n\n            \n                \n                    Checks if first and last name has been entered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        orcId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:27\n                        \n                    \n\n            \n                \n                    Orcid URI converted to regular id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        orcidControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.pattern('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$')])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:33\n                        \n                    \n\n            \n                \n                    Form control for validating orcid id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:30\n                        \n                    \n\n            \n                \n                    Text to inform user if a registration file has been uploaded\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';\n\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\nimport { RegistrationState } from '../../../core/store/registration/registration.state';\nimport { FormControl, Validators } from '@angular/forms';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\n\n/**\n * Right side registration menu\n */\n@Component({\n  selector: 'ccf-registration-metadata',\n  templateUrl: './registration-metadata.component.html',\n  styleUrls: ['./registration-metadata.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class RegistrationMetadataComponent {\n  /** Emits when user has uploaded registration */\n  @Output() readonly registrationSelected = new EventEmitter();\n\n  /** Checks if first and last name has been entered */\n  nameValid: boolean;\n\n  /** Orcid URI converted to regular id */\n  orcId?: string;\n\n  /** Text to inform user if a registration file has been uploaded */\n  uploadText: string;\n\n  /** Form control for validating orcid id */\n  orcidControl = new FormControl('', [Validators.pattern('^[a-zA-Z0-9]{4}(-[a-zA-Z0-9]{4}){3}$')]);\n\n  /**\n   * Creates an instance of registration metadata component.\n   * @param model Model state\n   * @param registration Registration state\n   * @param page Page state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n  ) {\n    page.user$.subscribe(user => {\n      this.checkNameValid(user);\n      this.orcId = page.uriToOrcid(user.orcidId);\n    });\n    registration.state$.subscribe(reg => {\n      this.uploadText = reg.initialRegistration ? 'File(s) uploaded' : 'No file(s) uploaded';\n    });\n  }\n\n  /**\n   * Error message to inform user if orcid is invalid\n   * @returns Error message\n   */\n  getErrorMessage(): string {\n    return this.orcidControl.hasError('pattern') ? 'Not a valid ORCID' : '';\n  }\n\n  /**\n   * Updates orcid value\n   * @param value Orcid value entered\n   */\n  updateOrcid(value: string): void {\n    this.page.setOrcidId(value);\n  }\n\n  /**\n   * Emits registrationSelected and calls editRegistration in state\n   * @param event Registration uploaded\n   */\n  handleRegistrationUpload(reg: SpatialEntityJsonLd): void {\n    this.registrationSelected.emit();\n    this.registration.editRegistration(reg);\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current sex selected\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.model.setSex(label.toLowerCase() as 'male' | 'female');\n  }\n}\n\n    \n\n    \n        \n  Author Data\n\n  \n  \n\n  \n    ORCID identifier (optional)\n    \n    {{getErrorMessage()}}\n  \n\n\n\n  Donor Data\n\n  \n    Donor Sex: \n    \n      Male\n      Female\n    \n  \n\n  \n    Select an organ: \n    \n      Organs\n      \n        \n          {{organ.name}}\n        \n      \n    \n  \n\n  \n    Upload previous registration data (optional):\n\n    \n\n    {{uploadText}}\n\n  \n\n\n    \n\n    \n                \n                    ./registration-metadata.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n\n  .section-title {\n    font-weight: 400;\n    line-height: 1.5rem;\n    margin: 0;\n    padding-bottom: 1.5rem;\n  }\n\n  .label {\n    font-size: 1rem;\n    font-weight: 700;\n    line-height: 1.5rem;\n  }\n\n  ::ng-deep .mat-mdc-form-field-infix {\n    padding-bottom: 0 !important;\n    min-height: inherit;\n  }\n\n  ::ng-deep .mdc-text-field {\n    padding: 0;\n    padding-bottom: .3rem !important;\n  }\n\n  .author-section {\n    display: flex;\n    flex-direction: column;\n\n    .orcid-input {\n      width: 100%;\n      font-size: 1rem;\n    }\n  }\n\n  .donor-section {\n    display: flex;\n    flex-direction: column;\n\n    .sex-toggle {\n      display: flex;\n      align-items: center;\n      padding-bottom: 1.5rem;\n\n      .label {\n        padding-right: 1rem;\n      }\n\n      mat-radio-group {\n        display: flex;\n        gap: 3rem;\n      }\n    }\n\n    .organ-selector {\n      padding-bottom: 1.5rem;\n\n      ::ng-deep .mat-mdc-select-value {\n        font-size: 1rem;\n      }\n    }\n\n    .upload-registration {\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n\n      ccf-json-file-reader {\n        ::ng-deep button {\n          width: 10rem;\n          height: 2rem;\n          padding: 0.25rem 1rem;\n          border-radius: 0.125rem;\n        }\n      }\n    }\n  }\n\n  ::ng-deep .mdc-line-ripple::before,\n  .mdc-line-ripple::after {\n    border-bottom-width: 0.125rem !important;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Author Data          ORCID identifier (optional)        {{getErrorMessage()}}    Donor Data      Donor Sex:           Male      Female            Select an organ:           Organs                        {{organ.name}}                          Upload previous registration data (optional):        {{uploadText}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationMetadataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationMetadataModule.html":{"url":"modules/RegistrationMetadataModule.html","title":"module - RegistrationMetadataModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationMetadataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationMetadataModule\n\n\n\ncluster_RegistrationMetadataModule_imports\n\n\n\ncluster_RegistrationMetadataModule_declarations\n\n\n\ncluster_RegistrationMetadataModule_exports\n\n\n\n\nRegistrationMetadataComponent\n\nRegistrationMetadataComponent\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule -->\n\nRegistrationMetadataComponent->RegistrationMetadataModule\n\n\n\n\n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent  -->\n\nRegistrationMetadataModule->RegistrationMetadataComponent \n\n\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nRegistrationMetadataModule -->\n\nJsonFileReaderModule->RegistrationMetadataModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nRegistrationMetadataModule -->\n\nNameInputModule->RegistrationMetadataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationMetadataComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JsonFileReaderModule\n                        \n                        \n                            NameInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationMetadataComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { RegistrationMetadataComponent } from './registration-metadata.component';\nimport { NameInputModule } from '../name-input/name-input.module';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { JsonFileReaderModule } from '../json-file-reader/json-file-reader.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    NameInputModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    JsonFileReaderModule\n  ],\n  declarations: [RegistrationMetadataComponent],\n  exports: [RegistrationMetadataComponent]\n})\nexport class RegistrationMetadataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationModalComponent.html":{"url":"components/RegistrationModalComponent.html","title":"component - RegistrationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Registration modal that appears on startup\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-modal\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./registration-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, page: PageState, model: ModelState, referenceData: ReferenceDataState, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:27\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog for the modal\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        referenceData\n                                                  \n                                                        \n                                                                        ReferenceDataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Opens the dialog on startup (but not if cancel registration callback is set)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Opens dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:35\n                        \n                    \n\n            \n                \n                    Dialog for the modal\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    Checks if registration dialog has been opened\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { GlobalConfig } from '../../../core/services/config/config';\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState } from '../../../core/store/page/page.state';\nimport { ReferenceDataState } from '../../../core/store/reference-data/reference-data.state';\nimport { RegistrationContentComponent } from '../registration-content/registration-content.component';\n\n\n/**\n * Registration modal that appears on startup\n */\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  selector: 'ccf-registration-modal',\n  templateUrl: './registration-modal.component.html'\n})\nexport class RegistrationModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-modal';\n\n  /** Checks if registration dialog has been opened */\n  dialogOpen = false;\n\n  /**\n   * Creates an instance of registration modal component.\n   *\n   * @param dialog Dialog for the modal\n   */\n  constructor(\n    public dialog: MatDialog,\n    private readonly page: PageState,\n    private readonly model: ModelState,\n    private readonly referenceData: ReferenceDataState,\n    private readonly globalConfig: GlobalConfigState\n  ) {}\n\n  /**\n   * Opens the dialog on startup (but not if cancel registration callback is set)\n   */\n  ngOnInit(): void {\n    combineLatest([this.page.state$, this.model.state$, this.referenceData.state$, this.globalConfig.state$]).pipe(\n      tap(([page, model, data, global]) => {\n        if (this.dialogOpen) {\n          return;\n        }\n        if (global.editRegistration) {\n          return;\n        }\n        if (Object.keys(data.organIRILookup).length === 0) {\n          return;\n        }\n        if (page.user.firstName !== '' && page.user.lastName !== '' && model.organ.src !== '') {\n          return;\n        }\n        this.dialogOpen = true;\n        this.openDialog();\n      })\n    ).subscribe();\n  }\n\n  /**\n   * Opens dialog\n   */\n  openDialog(): void {\n    this.dialog.open(RegistrationContentComponent, {\n      autoFocus: false,\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationModalModule.html":{"url":"modules/RegistrationModalModule.html","title":"module - RegistrationModalModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_RegistrationModalModule_imports\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegistrationContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationModalComponent } from './registration-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RegistrationContentModule } from '../registration-content/registration-content.module';\n\n@NgModule({\n  declarations: [RegistrationModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, RegistrationContentModule],\n  exports: [RegistrationModalComponent]\n})\nexport class RegistrationModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationStateModel.html":{"url":"interfaces/RegistrationStateModel.html","title":"interface - RegistrationStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Registration state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayErrors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            initialRegistration\n                                        \n                                \n                                \n                                        \n                                            registrations\n                                        \n                                \n                                \n                                        \n                                            useRegistrationCallback\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayErrors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not to display user registration errors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialRegistration:     SpatialEntityJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntityJsonLd\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Registration provided by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrations:     Record[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Previous registrations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to use the registration callback function\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { insertItem, patch } from '@ngxs/store/operators';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { saveAs } from 'file-saver';\nimport { Observable, combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take, tap, throttleTime } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { Tag } from '../../models/anatomical-structure-tag';\nimport { MetaData } from '../../models/meta-data';\nimport { GlobalConfig } from '../../services/config/config';\nimport { AnatomicalStructureTagState } from '../anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState, ModelStateModel, RUI_ORGANS, XYZTriplet } from '../model/model.state';\nimport { PageState, PageStateModel } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\nimport { isEqual } from 'lodash';\n\n\n/**\n * Registration state model\n */\nexport interface RegistrationStateModel {\n  /** Whether to use the registration callback function */\n  useRegistrationCallback: boolean;\n  /** Whether or not to display user registration errors */\n  displayErrors: boolean;\n  /** Previous registrations */\n  registrations: Record[];\n  /** Registration provided by user */\n  initialRegistration?: SpatialEntityJsonLd;\n}\n\nconst JSONLD_THROTTLE_DURATION = 100;\n\n\n/**\n * Data for model registrations\n */\n@StateRepository()\n@State({\n  name: 'registration',\n  defaults: {\n    useRegistrationCallback: false,\n    displayErrors: false,\n    registrations: []\n  }\n})\n@Injectable()\nexport class RegistrationState extends NgxsImmutableDataRepository {\n  readonly displayErrors$ = this.state$.pipe(map(x => x?.displayErrors));\n\n  /** Observable of registration metadata */\n  @Computed()\n  get metadata$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildMetadata(page, model, tags))\n    );\n  }\n\n  /** Observable of registration data in jsonld format */\n  @Computed()\n  get jsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags))\n    );\n  }\n\n  @Computed()\n  get throttledJsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      throttleTime(JSONLD_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      distinctUntilChanged(isEqual),\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags))\n    );\n  }\n\n  @Computed()\n  get valid$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$]).pipe(\n      map(() => this.isValid)\n    );\n  }\n\n  /**\n   * Observable of previous registrations\n   */\n  @Computed()\n  get previousRegistrations$(): Observable[]> {\n    const { globalConfig, state$ } = this;\n    const regs = state$.pipe(map(x => x?.registrations));\n    const fetched = globalConfig.getOption('fetchPreviousRegistrations').pipe(\n      switchMap(fetch => fetch?.() ?? [[]]),\n      startWith([])\n    );\n\n    return combineLatest([regs, fetched]).pipe(\n      map(([local, external]) => [...local, ...external])\n    );\n  }\n\n  /** Current uuid identifier used when registering */\n  @Computed()\n  private get currentIdentifier(): string {\n    return uuidV4();\n  }\n\n  /** Time of last modification to registration data */\n  @Computed()\n  private get currentDate(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /** Reference to the page state */\n  private page: PageState;\n\n  /** Reference to the model state */\n  private model: ModelState;\n\n  /** Reference to the AS Tag state */\n  private tags: AnatomicalStructureTagState;\n\n  /** Reference to the reference data state */\n  private refData: ReferenceDataState;\n\n  /**\n   * Creates an instance of registration state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.page = this.injector.get(PageState);\n    this.model = this.injector.get(ModelState);\n    this.tags = this.injector.get(AnatomicalStructureTagState);\n    this.refData = this.injector.get(ReferenceDataState);\n\n    this.refData.state$.subscribe(() => {\n      this.globalConfig.config$.pipe(\n        take(1),\n        tap(({ useDownload, register, organOptions }) => {\n          this.ctx.patchState({\n            useRegistrationCallback: !!(!useDownload && register),\n          });\n          this.page.setOrcidId();\n          this.model.setOrganDefaults();\n          this.setOrganSelection(organOptions as string[]);\n        })\n      ).subscribe();\n\n      this.globalConfig.getOption('editRegistration').pipe(\n        filterNulls(),\n        tap(reg => {\n          this.editRegistration(reg as SpatialEntityJsonLd);\n        })\n      ).subscribe();\n    });\n  }\n\n  async editRegistration(reg: SpatialEntityJsonLd): Promise {\n    this.ctx.patchState({ initialRegistration: reg });\n    const place = this.refData.normalizePlacement(\n      Array.isArray(reg.placement) ? reg.placement[0] : reg.placement\n    );\n    const data = this.refData.getOrganData(place.target);\n\n    this.page.setUserName({\n      firstName: reg.creator_first_name,\n      middleName: reg.creator_middle_name,\n      lastName: reg.creator_last_name\n    });\n\n    const orcid = this.page.uriToOrcid(reg.creator_orcid);\n    this.page.setOrcidId(orcid);\n\n    if (data) {\n      this.model.setOrgan(data.organ);\n      if (data.sex) {\n        this.model.setSex(data.sex);\n      }\n      if (data.side) {\n        this.model.setSide(data.side);\n      }\n    }\n\n    this.model.setBlockSize({ x: reg.x_dimension, y: reg.y_dimension, z: reg.z_dimension });\n    this.model.setRotation({ x: place.x_rotation, y: place.y_rotation, z: place.z_rotation });\n    this.model.setSlicesConfig({ thickness: reg.slice_thickness || NaN, numSlices: reg.slice_count || NaN });\n\n    this.model.setPosition({ x: place.x_translation, y: place.y_translation, z: place.z_translation });\n    const iris = new Set(reg.ccf_annotations);\n    this.tags.addTags(\n      this.model.snapshot.anatomicalStructures\n        .filter(item => iris.has(item.id as string))\n        .map((item) => ({ id: item.id, label: item.name, type: 'added' }))\n    );\n\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets whether to use the registration callback function or download.\n   *\n   * @param use True to use the callback, false to download\n   */\n  @DataAction()\n  setUseRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useRegistrationCallback: use });\n  }\n\n  /**\n   * Set's whether or not we should display the user's registration errors\n   *\n   * @param displayErrors the value to set it to\n   */\n  @DataAction()\n  setDisplayErrors(displayErrors: boolean): void {\n    this.ctx.patchState({ displayErrors });\n  }\n\n  /**\n   * Adds an entry to the previous registrations\n   *\n   * @param registration The new entry\n   */\n  @DataAction()\n  addRegistration(registration: Record): void {\n    this.ctx.setState(patch({\n      registrations: insertItem(registration as Immutable>)\n    }));\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets organ options in the RUI\n   * @param ids list of organ ids\n   */\n  @DataAction()\n  setOrganSelection(ids: string[] = []): void {\n    this.page.patchState({ organOptions: this.organListOptions(ids) });\n  }\n\n  isDataValid(page: Immutable, model: Immutable): boolean {\n    const requiredValues = [\n      page.user.firstName,\n      page.user.lastName,\n      page.orcidValid,\n      model.organ.src,\n      model.organ.name,\n      model.organ.organ\n    ];\n\n    return requiredValues.every(value => !!value);\n  }\n\n  @Computed()\n  get isValid(): boolean {\n    return this.isDataValid(this.page.snapshot, this.model.snapshot);\n  }\n\n  /**\n   * Registers or downloads json data.\n   *\n   * @param [useCallback] Explicit override selecting the register/download action\n   */\n  register(useCallback?: boolean): void {\n    this.page.registrationStarted();\n    if (!this.isValid) {\n      return;\n    }\n\n    const {\n      globalConfig: { snapshot: { register: registrationCallback } },\n      page, model, snapshot\n    } = this;\n    const jsonObj = this.buildJsonLd(page.snapshot, model.snapshot, this.tags.latestTags);\n    const json = JSON.stringify(jsonObj, undefined, 2);\n\n    if (useCallback ?? (useCallback === undefined && snapshot.useRegistrationCallback)) {\n      registrationCallback?.(json);\n\n    } else {\n      const data = new Blob([json], {\n        type: 'application/json',\n        endings: 'native'\n      });\n\n      saveAs(data, 'registration-data.json');\n    }\n\n    this.setDisplayErrors(false);\n    this.page.clearHasChanges();\n    this.addRegistration(jsonObj);\n  }\n\n  /**\n   * Sets the state back to the initial registration\n   */\n  setToInitialRegistration() {\n    const { page } = this;\n\n    const initialWithChanges: SpatialEntityJsonLd | undefined = {\n      ...this.snapshot.initialRegistration as SpatialEntityJsonLd,\n      creator_first_name: page.snapshot.user.firstName,\n      creator_last_name: page.snapshot.user.lastName,\n      creator_middle_name: page.snapshot.user.middleName,\n      creator_orcid: page.snapshot.user.orcidId\n    };\n\n    this.editRegistration(initialWithChanges);\n  }\n\n  /**\n   * Builds a metadata array from the specified data.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns metadata An array of label-value objects\n   */\n  private buildMetadata(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): MetaData {\n    const data: MetaData = [];\n\n    if (!page.registrationCallbackSet) {\n      data.push(\n        { label: 'First Name', value: page.user.firstName },\n        { label: 'Last Name', value: page.user.lastName }\n      );\n    }\n\n    data.push(\n      { label: 'Reference Organ Name', value: model.organ.name },\n      { label: 'Tissue Block Dimensions (mm)', value: this.xyzTripletToString(model.blockSize) },\n      { label: 'Tissue Block Position (mm)', value: this.xyzTripletToString(model.position) },\n      { label: 'Tissue Block Rotation', value: this.xyzTripletToString(model.rotation) },\n      { label: 'Anatomical Structure Tags', value: tags.map(t => t.label).join(', ') },\n      { label: 'Time Stamp', value: this.currentDate },\n      { label: 'Alignment ID', value: this.currentIdentifier }\n    );\n\n    return data;\n  }\n\n  /**\n   * Converts the registration data into jsonld format.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns A jsonld object\n   */\n  private buildJsonLd(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): Record {\n    return {\n      '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n      '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}`,\n      '@type': 'SpatialEntity',\n      label: model.label || undefined,\n      creator: `${page.user.firstName} ${page.user.middleName ? page.user.middleName + ' ' : ''}${page.user.lastName}`,\n      creator_first_name: page.user.firstName,\n      creator_last_name: page.user.lastName,\n      creator_middle_name: page.user.middleName,\n      creator_orcid: page.user.orcidId,\n      creation_date: this.currentDate,\n      ccf_annotations: tags.map(tag => tag.id),\n      slice_thickness: model.slicesConfig?.thickness || undefined,\n      slice_count: model.slicesConfig?.numSlices || undefined,\n\n      x_dimension: +model.blockSize.x.toFixed(3),\n      y_dimension: +model.blockSize.y.toFixed(3),\n      z_dimension: +model.blockSize.z.toFixed(3),\n      dimension_units: 'millimeter',\n\n      placement: {\n        '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}_placement`,\n        '@type': 'SpatialPlacement',\n        target: model.organIri as string,\n        placement_date: this.currentDate,\n\n        x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n\n        x_rotation: +model.rotation.x.toFixed(3),\n        y_rotation: +model.rotation.y.toFixed(3),\n        z_rotation: +model.rotation.z.toFixed(3),\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n\n        x_translation: +model.position.x.toFixed(3),\n        y_translation: +model.position.y.toFixed(3),\n        z_translation: +model.position.z.toFixed(3),\n        translation_units: 'millimeter'\n      }\n    };\n  }\n\n  /**\n   * Format a XYZTriplet as a string.\n   *\n   * @param xyz The triplet values\n   * @returns The string representation\n   */\n  private xyzTripletToString(xyz: XYZTriplet): string {\n    return `${Math.round(xyz.x)}, ${Math.round(xyz.y)}, ${Math.round(xyz.z)}`;\n  }\n\n  /**\n   * Provides list of organ objects given an array of organ ids\n   * @param organOptions array of organ ids\n   * @returns list of organ info\n   */\n  private organListOptions(organOptions?: string[]): OrganInfo[] {\n    if (organOptions && organOptions.length > 0) {\n      return RUI_ORGANS.filter(organ => {\n        if (!organ.id) {\n          return false;\n        } else {\n          return organOptions.includes(organ.id);\n        }\n      });\n    } else {\n      return RUI_ORGANS;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewButtonComponent.html":{"url":"components/ReviewButtonComponent.html","title":"component - ReviewButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to launch the ReviewModal component.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-button\n            \n\n\n\n            \n                styleUrls\n                ./review-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                registrationIsValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchReviewModal\n                            \n                            \n                                    Private\n                                metaDataLookup\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrors\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                            \n                                userValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                enterErrorMode\n                            \n                            \n                                registerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ga: GoogleAnalyticsService, page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:59\n                            \n                        \n\n                \n                    \n                            Creates an instance of review button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayErrors\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:37\n                            \n                        \n                \n                    \n                        Whether or not the app is currently displaying errors\nDecides how the button should be styled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metaData\n                    \n                \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:31\n                            \n                        \n                \n                    \n                        Input object of information to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registrationCallbackSet\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:26\n                            \n                        \n                \n                    \n                        Input to set whether the component should be in register (true) or download (false) mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        userValid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:42\n                            \n                        \n                \n                    \n                        Whether or not all the necessary data has been inputted from the user.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        enterErrorMode\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:54\n                            \n                        \n                \n                    \n                        Turns on the 'error mode' for the application.\nUsed to begin showing the user what they need to\ndo to be able to register / download.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registerData\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:47\n                            \n                        \n                \n                    \n                        Output that emits when the modal's register button was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchReviewModal\n                        \n                    \n                \n            \n            \n                \nlaunchReviewModal()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Opens the info dialogue with the project details\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        metaDataLookup\n                        \n                    \n                \n            \n            \n                \n                        \n                    metaDataLookup(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Gets value from metadata field\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of field\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                Metadata value\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Updates the value of registrationIsValid based on the\nmeta data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles the click action for the register button.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationIsValid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:59\n                        \n                    \n\n            \n                \n                    Decides whether or not to let the user open the registration / download modal\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:88\n                                \n                            \n                    \n                        \n                                Decides whether or not the download / register button should\nbe disabled.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { MetaData } from '../../../core/models/meta-data';\nimport { ReviewModalComponent } from '../review-modal/review-modal.component';\nimport { PageState } from '../../../core/store/page/page.state';\n\n\n/**\n * Component to launch the ReviewModal component.\n */\n@Component({\n  selector: 'ccf-review-button',\n  templateUrl: './review-button.component.html',\n  styleUrls: ['./review-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewButtonComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-button';\n\n  /**\n   * Input to set whether the component should be in register (true) or download (false) mode\n   */\n  @Input() registrationCallbackSet = true;\n\n  /**\n   * Input object of information to display in the modal\n   */\n  @Input() metaData: MetaData = [];\n\n  /**\n   * Whether or not the app is currently displaying errors\n   * Decides how the button should be styled\n   */\n  @Input() displayErrors = true;\n\n  /**\n   * Whether or not all the necessary data has been inputted from the user.\n   */\n  @Input() userValid = false;\n\n  /**\n   * Output that emits when the modal's register button was clicked\n   */\n  @Output() readonly registerData = new EventEmitter();\n\n  /**\n   * Turns on the 'error mode' for the application.\n   * Used to begin showing the user what they need to\n   * do to be able to register / download.\n   */\n  @Output() readonly enterErrorMode = new EventEmitter();\n\n  /**\n   * Decides whether or not to let the user open the registration / download modal\n   */\n  registrationIsValid = false;\n\n  /**\n   * Creates an instance of review button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param ga Analytics service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly ga: GoogleAnalyticsService, readonly page: PageState) { }\n\n  /**\n   * Updates the value of registrationIsValid based on the\n   * meta data.\n   */\n  ngOnChanges(): void {\n    const organ = this.metaDataLookup('Reference Organ Name');\n    const dimensions = this.metaDataLookup('Tissue Block Dimensions (mm)');\n    const pos = this.metaDataLookup('Tissue Block Position (mm)');\n    const tags = this.metaDataLookup('Anatomical Structure Tags');\n    this.registrationIsValid = (\n      this.userValid &&\n      [organ, dimensions, pos, tags].every(value => value !== '')\n    );\n  }\n\n  /**\n   * Decides whether or not the download / register button should\n   * be disabled.\n   */\n  get disabled(): boolean {\n    return !this.registrationIsValid;\n  }\n\n  /**\n   * Gets value from metadata field\n   * @param field Name of field\n   * @returns Metadata value\n   */\n  private metaDataLookup(field: string): string | undefined {\n    return this.metaData.find(data => data.label === field)?.value;\n  }\n\n  /**\n   * Handles the click action for the register button.\n   */\n  registerButtonClick(event?: MouseEvent): false {\n    if (event) {\n      event.preventDefault();\n    }\n    this.enterErrorMode.emit();\n    if (this.registrationIsValid) {\n      this.ga.event('review_start', 'review_button');\n      this.launchReviewModal();\n    }\n    return false;\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchReviewModal(): void {\n    this.page.patchState({ registrationStarted: false });\n    const dialogRef = this.dialog.open(ReviewModalComponent, {\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        registrationCallbackSet: this.registrationCallbackSet,\n        metaData: this.metaData\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      data => {\n        this.page.registrationStarted();\n        if (data) {\n          this.ga.event('register', 'review_button');\n          this.registerData.emit();\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    {{ registrationCallbackSet ? 'Review and Register' : 'Review and Download' }}\n\n\n    \n\n    \n                \n                    ./review-button.component.scss\n                \n                .review-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: .6s;\n    font-weight: 500;\n\n    &.disabled {\n        cursor: not-allowed;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ registrationCallbackSet ? \\'Review and Register\\' : \\'Review and Download\\' }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewButtonModule.html":{"url":"modules/ReviewButtonModule.html","title":"module - ReviewButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-button/review-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReviewModalModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewButtonComponent } from './review-button.component';\nimport { ReviewModalModule } from '../review-modal/review-modal.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [ReviewButtonComponent],\n  imports: [\n    CommonModule,\n    ReviewModalModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  exports: [ReviewButtonComponent]\n})\nexport class ReviewButtonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewModalComponent.html":{"url":"components/ReviewModalComponent.html","title":"component - ReviewModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal for reviewing the registration\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-modal\n            \n\n\n\n            \n                styleUrls\n                ./review-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ReviewModalData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of the review modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ReviewModalData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Closes info dialog component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewModalData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:46\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:36\n                        \n                    \n\n            \n                \n                    The object containing all of the review information for displaying inside the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationCallbackSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:31\n                        \n                    \n\n            \n                \n                    Whether or not the cancel registration callback is set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, HostBinding, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(()=>{\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      Registration Review\n\n      \n        \n          \n            {{ data.label }}\n            {{ data.value }}\n          \n        \n      \n\n      \n        {{ registrationCallbackSet ? 'REGISTER' : 'DOWNLOAD REGISTRATION DATA' }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./review-modal.component.scss\n                \n                :host {\n  .ccf-about.wrapper {\n    .container {\n      .close {\n        .close-icon {\n          float: right;\n          margin-top: 1rem;\n          margin-right: 1rem;\n          cursor: pointer;\n        }\n      }\n\n      .content {\n        padding: 2rem;\n        background-color: white;\n\n        .title {\n          text-align: center;\n          font-size: 1.5rem;\n          margin-bottom: 0;\n          font-weight: 500;\n        }\n\n        .mat-typography {\n          justify-content: space-around;\n          display: flex;\n          font-weight: 500;\n          font-size: 1rem;\n\n          .display-fields {\n            margin-top: 2rem;\n            margin-bottom: 2rem;\n            width: 100%;\n\n            .field {\n              display: flex;\n\n              .label {\n                width: 50%;\n                text-align: right;\n                padding-right: 1rem;\n              }\n\n              .data {\n                width: 50%;\n                text-align: left;\n                padding-left: 1rem;\n              }\n            }\n          }\n        }\n      }\n\n      .footer {\n        padding-top: 1.5rem;\n        display: flex;\n        justify-content: space-around;\n\n        .download-button {\n          padding: 0 1rem;\n          transition: 0.6s;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              Registration Review                                    {{ data.label }}            {{ data.value }}                                      {{ registrationCallbackSet ? \\'REGISTER\\' : \\'DOWNLOAD REGISTRATION DATA\\' }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewModalData.html":{"url":"interfaces/ReviewModalData.html","title":"interface - ReviewModalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewModalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n        \n\n\n            \n                Description\n            \n            \n                The expected format of the review modal's data input.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metaData\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metaData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metaData:         MetaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MetaData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The object containing all of the review information for displaying inside the modal\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the cancel registration callback is set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, HostBinding, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(()=>{\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewModalModule.html":{"url":"modules/ReviewModalModule.html","title":"module - ReviewModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-modal/review-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewModalComponent } from './review-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [ReviewModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatButtonModule],\n  exports: [ReviewModalComponent]\n})\nexport class ReviewModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RightSidebarComponent.html":{"url":"components/RightSidebarComponent.html","title":"component - RightSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RightSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The right sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-right-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./right-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./right-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                registrationExpanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, registration: RegistrationState, page: PageState, astags: AnatomicalStructureTagState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of right sidebar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state service\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration state service\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        astags\n                                                  \n                                                        \n                                                                        AnatomicalStructureTagState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The anatomical structure tags state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        registrationExpanded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:25\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-right-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\nimport { AnatomicalStructureTagState } from '../../core/store/anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\n\n\n/**\n * The right sidebar\n */\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RightSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-right-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  @Output() registrationExpanded = new EventEmitter();\n\n  /**\n   * Creates an instance of right sidebar component.\n   *\n   * @param model Model state service\n   * @param registration Registration state service\n   * @param page The page state\n   * @param astags The anatomical structure tags state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n    readonly astags: AnatomicalStructureTagState\n  ) {\n  }\n}\n\n    \n\n    \n        \n  \n\n\n  \n    \n      \n        Registration Metadata\n      \n\n      \n\n    \n\n    \n\n    \n      \n        Tissue Block Controls\n      \n\n      \n      \n\n      \n      \n\n      \n      \n\n    \n\n    \n    \n      \n        Anatomical Structure Tags\n      \n\n      \n      \n\n      \n      \n      \n      \n\n      \n        \n        Assigned\n        \n        Added\n      \n    \n    \n\n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./right-sidebar.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 2.5rem);\n  margin-top: 1rem;\n  margin-bottom: 1.5rem;\n\n  .info-button-container {\n    height: 3.75rem;\n    display: flex;\n    justify-content: flex-end;\n  }\n\n  .scroll-wrapper {\n    overflow-y: scroll;\n    height: calc(100% - 6rem);\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      min-height: 100%;\n      margin: 0 1.5rem;\n\n      .review-button {\n        position: absolute;\n        bottom: 1.5rem;\n        z-index: 999;\n        width: calc(100% - 3.5rem);\n      }\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n\n        mat-expansion-panel-header {\n          padding: 0 0.5rem 0 0;\n          font-weight: bold;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          font-size: 1rem;\n          height: 3rem;\n        }\n\n        ::ng-deep .mat-expansion-panel-body {\n          padding-left: 0;\n          padding-right: 0;\n        }\n      }\n\n      .tags-container {\n        // Allow tag search to overflow when displaying results\n        overflow: visible;\n\n        ::ng-deep .mat-expansion-panel-body {\n          padding-left: 0;\n          padding-right: 0;\n        }\n\n        .header {\n          height: 3rem;\n        }\n\n        .search {\n          margin-top: 1rem;\n\n          .icon.add {\n            position: absolute;\n            // Sizes and offsets found by experimentation\n            width: 3.625rem;\n            height: 3.625rem;\n            font-size: 3.625rem;\n            top: -1.9375rem;\n            right: -1.1875rem;\n          }\n        }\n\n        .tag-list {\n          max-height: 32rem;\n          margin-left: -1rem;\n        }\n\n        .tag-list-placeholder {\n          display: flex;\n          height: 4rem;\n          align-items: center;\n          justify-content: center;\n          font-weight: 400;\n        }\n\n        .legend {\n          display: flex;\n          width: 100%;\n          margin-top: 1.5rem;\n          align-items: center;\n          font-size: 0.9rem;\n\n          .dot {\n            display: inline-block;\n            width: 1rem;\n            height: 1rem;\n            border-radius: 50%;\n\n            &.assigned {\n              margin-left: 0.5rem;\n            }\n\n            &.added {\n\n              margin-left: 1rem;\n            }\n          }\n\n          .text {\n            margin-left: 0.5rem;\n          }\n        }\n      }\n\n      .filler {\n        flex-grow: 1;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Registration Metadata                                      Tissue Block Controls                                                                    Anatomical Structure Tags                                                                Assigned                Added                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RightSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RightSidebarModule.html":{"url":"modules/RightSidebarModule.html","title":"module - RightSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    RightSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRightSidebarModule -->\n\nRegistrationMetadataModule->RightSidebarModule\n\n\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockSizeInputModule\n                        \n                        \n                            RegistrationMetadataModule\n                        \n                        \n                            ReviewButtonModule\n                        \n                        \n                            RotationSliderModule\n                        \n                        \n                            SlicesInputModule\n                        \n                        \n                            TagListModule\n                        \n                        \n                            TagSearchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InfoButtonModule } from 'ccf-shared';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { TagListModule } from '../../shared/components/tag-list/tag-list.module';\nimport { TagSearchModule } from '../../shared/components/tag-search/tag-search.module';\nimport { ReviewButtonModule } from '../review/review-button/review-button.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\nimport { RegistrationMetadataModule } from '../../shared/components/registration-metadata/registration-metadata.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatExpansionModule,\n    MatDividerModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n\n    BlockSizeInputModule,\n    ReviewButtonModule,\n    RotationSliderModule,\n    SlicesInputModule,\n    TagListModule,\n    TagSearchModule,\n    InfoButtonModule,\n    RegistrationMetadataModule\n  ],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent]\n})\nexport class RightSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rotation.html":{"url":"interfaces/Rotation.html","title":"interface - Rotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Type in which the values of the sliders are stored.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z slider value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /** Input that allows the rotation to be changed from outside of the component */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /** Output that emits the new rotation whenever it is changed from within the component */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor( private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * If rotation value is  180, set to -180 or 180\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    const updatedNewRotation = +newRotation > 180 ? 180 :\n      (+newRotation \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationSliderComponent.html":{"url":"components/RotationSliderComponent.html","title":"component - RotationSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RotationSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that enables the setting of a Rotation object via either 3 draggable sliders\nor through an Input method.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-rotation-slider\n            \n\n\n\n            \n                styleUrls\n                ./rotation-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRotation\n                            \n                            \n                                resetRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotationChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of rotation slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotation\n                    \n                \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ROTATION\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:37\n                            \n                        \n                \n                    \n                        Input that allows the rotation to be changed from outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rotationChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:40\n                            \n                        \n                \n                    \n                        Output that emits the new rotation whenever it is changed from within the component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-rotation-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRotation\n                        \n                    \n                \n            \n            \n                \nchangeRotation(newRotation: number | string, axis: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Function that handles updating the rotation and emitting the new value\nIf rotation value is  180, set to -180 or 180\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newRotation\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new value for one of the axis to be set to\n\n                                            \n                                        \n                                        \n                                                axis\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    which axis to update\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetRotation\n                        \n                    \n                \n            \n            \n                \nresetRotation(dimension: \"x\" | \"y\" | \"z\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Function to easily reset the rotations to 0 and emit this change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dimension\n                                            \n                                                        \"x\" | \"y\" | \"z\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /** Input that allows the rotation to be changed from outside of the component */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /** Output that emits the new rotation whenever it is changed from within the component */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor( private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   * If rotation value is  180, set to -180 or 180\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    const updatedNewRotation = +newRotation > 180 ? 180 :\n      (+newRotation \n    \n\n    \n        \n  Tissue Block Rotation\n  \n  \n    refresh\n  \n\n\n\n  X\n  \n    \n      \n    \n  \n  \n    \n  \n\n\n\n  Y\n  \n    \n      \n    \n  \n  \n    \n  \n\n\n\n  Z\n  \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./rotation-slider.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 1.5rem;\n    padding: .5rem 0;\n\n    .title {\n      font-weight: 400;\n      padding: .5rem 0;\n    }\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: .6s;\n\n    &:hover {\n      border-radius: 2px;\n    }\n\n  }\n\n  .refresh-button-container {\n    display: flex;\n    height: 1rem;\n    justify-content: flex-end;\n  }\n\n  .slider-box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 4rem;\n\n    mat-form-field {\n      height: 100%;\n      width: 5rem;\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n      }\n\n      .input {\n        text-align: center;\n      }\n    }\n\n    .slider-container {\n      width: 100%;\n      padding-left: 0.5rem;\n      padding-right: 2rem;\n\n      .slider {\n        width: 100%;\n      }\n\n      ::ng-deep mat-slider-visual-thumb {\n        transition: none;\n      }\n    }\n\n    .filler {\n      flex-grow: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Rotation        refresh    X                            Y                            Z                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RotationSliderModule.html":{"url":"modules/RotationSliderModule.html","title":"module - RotationSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    RotationSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule,\n    MatTooltipModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  exports: [RotationSliderComponent]\n})\nexport class RotationSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                gizmo$\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                referenceData\n                            \n                            \n                                    Private\n                                registration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSceneNodes\n                            \n                            \n                                    Private\n                                filterNodeBBox\n                            \n                            \n                                    Private\n                                filterNodeCollisions\n                            \n                            \n                                    Private\n                                getCollisions\n                            \n                            \n                                    Private\n                                getOrganSpatialEntity\n                            \n                            \n                                ngxsOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodes$\n                                \n                                \n                                    rotatedNodes$\n                                \n                                \n                                    referenceOrganNodes$\n                                \n                                \n                                    referenceOrganSimpleNodes$\n                                \n                                \n                                    nodeCollisions$\n                                \n                                \n                                    previousRegistrationNodes$\n                                \n                                \n                                    spatialKeyBoardAxis$\n                                \n                                \n                                    placementCube$\n                                \n                                \n                                    placementCube\n                                \n                                \n                                    rotation$\n                                \n                                \n                                    collisions$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, http: HttpClient, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:275\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createSceneNodes\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSceneNodes(organIri: string, items: VisibilityItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:303\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organIri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                items\n                                            \n                                                            VisibilityItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialSceneNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterNodeBBox\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterNodeBBox(nodes: SpatialSceneNode[], placement: SpatialSceneNode)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:348\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nodes\n                                            \n                                                        SpatialSceneNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                placement\n                                            \n                                                        SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialSceneNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterNodeCollisions\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterNodeCollisions(nodes: SpatialSceneNode[], collisions: Collision[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:343\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nodes\n                                            \n                                                        SpatialSceneNode[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                collisions\n                                            \n                                                            Collision[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialSceneNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCollisions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCollisions(jsonld)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:332\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jsonld\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOrganSpatialEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrganSpatialEntity(organIri: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:327\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organIri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:293\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gizmo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:249\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:265\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        referenceData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferenceDataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:267\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegistrationState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:266\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodes$\n                    \n                \n\n                \n                    \n                        getnodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotatedNodes$\n                    \n                \n\n                \n                    \n                        getrotatedNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:75\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:92\n                                \n                            \n                    \n                        \n                                Observable of spatial nodes\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganSimpleNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganSimpleNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nodeCollisions$\n                    \n                \n\n                \n                    \n                        getnodeCollisions$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:133\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        previousRegistrationNodes$\n                    \n                \n\n                \n                    \n                        getpreviousRegistrationNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:149\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        spatialKeyBoardAxis$\n                    \n                \n\n                \n                    \n                        getspatialKeyBoardAxis$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:177\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube$\n                    \n                \n\n                \n                    \n                        getplacementCube$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:201\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube\n                    \n                \n\n                \n                    \n                        getplacementCube()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:209\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotation$\n                    \n                \n\n                \n                    \n                        getrotation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:227\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        collisions$\n                    \n                \n\n                \n                    \n                        getcollisions$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:270\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { SpatialEntity, SpatialPlacement, getOriginScene, getTissueBlockScene } from 'ccf-database';\nimport { GlobalConfigState, Position } from 'ccf-shared';\nimport { isEqual } from 'lodash';\nimport { Observable, combineLatest, defer, of } from 'rxjs';\nimport { catchError, concatMap, distinctUntilChanged, filter, map, share, startWith, switchMap, take, throttleTime } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\ninterface Collision {\n  id: string;\n}\n\nconst NODE_COLLISION_THROTTLE_DURATION = 10;\n\nconst DEFAULT_COLLISIONS_ENDPOINT = 'https://pfn8zf2gtu.us-east-2.awsapprunner.com/get-collisions';\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$, this.spatialKeyBoardAxis$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement, ...prevNodes, ...nodes, ...axis, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) => {\n        const organ = this.getOrganSpatialEntity(organIri as string);\n        const originScene = organIri ? getOriginScene(organ, false, true) : [];\n        const organScene = this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[]);\n        return [...originScene, ...organScene];\n      })\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      ),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.collisions$, this.placementCube$]).pipe(\n      throttleTime(NODE_COLLISION_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      map(([nodes, collisions, placement]) => {\n        if (collisions !== undefined) {\n          return this.filterNodeCollisions(nodes, collisions);\n        } else if (placement.length > 0) {\n          return this.filterNodeBBox(nodes, placement[0]);\n        }\n        return [];\n      }),\n      share()\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable {\n    return combineLatest([this.model.organIri$.pipe(filter(organIri => organIri !== '')), this.model.position$]).pipe(map(([organIri, position]: [string, Position]) => {\n      const organEntity = this.getOrganSpatialEntity(organIri);\n      const blockSize = this.model.snapshot.blockSize;\n      const rotation = this.model.snapshot.rotation;\n      return organEntity ? getTissueBlockScene({\n        x_dimension: blockSize.x,\n        y_dimension: blockSize.y,\n        z_dimension: blockSize.z\n      } as SpatialEntity, {\n        x_translation: position.x - organEntity.x_dimension / 2,\n        y_translation: position.y - organEntity.y_dimension / 2,\n        z_translation: position.z - organEntity.z_dimension / 2,\n\n        x_rotation: rotation.x,\n        y_rotation: rotation.y,\n        z_rotation: rotation.z,\n\n        x_scaling: 1, y_scaling: 1, z_scaling: 1,\n      } as SpatialPlacement) : [];\n    }));\n  }\n\n  @Computed()\n  get placementCube$(): Observable {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube]),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  @Computed()\n  private get collisions$(): Observable {\n    return defer(() => this.registration.throttledJsonld$).pipe(\n      concatMap((jsonld) => this.getCollisions(jsonld)),\n      startWith([])\n    );\n  }\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly http: HttpClient,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n  private getCollisions(jsonld: unknown): Observable {\n    return this.globalConfig.getOption('collisionsEndpoint').pipe(\n      switchMap((endpoint = DEFAULT_COLLISIONS_ENDPOINT) => this.http.post(\n        endpoint, JSON.stringify(jsonld),\n        { headers: { 'Content-Type': 'application/json' } }\n      )),\n      catchError(() => of(undefined)),\n      take(1)\n    );\n  }\n\n  private filterNodeCollisions(nodes: SpatialSceneNode[], collisions: Collision[]): SpatialSceneNode[] {\n    const collidedIds = new Set(collisions.map(node => node.id));\n    return nodes.filter(node => collidedIds.has(node['@id']));\n  }\n\n  private filterNodeBBox(nodes: SpatialSceneNode[], placement: SpatialSceneNode): SpatialSceneNode[] {\n    const bbox = getNodeBbox(placement);\n    return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Scene state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            showCollisions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        showCollisions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCollisions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { SpatialEntity, SpatialPlacement, getOriginScene, getTissueBlockScene } from 'ccf-database';\nimport { GlobalConfigState, Position } from 'ccf-shared';\nimport { isEqual } from 'lodash';\nimport { Observable, combineLatest, defer, of } from 'rxjs';\nimport { catchError, concatMap, distinctUntilChanged, filter, map, share, startWith, switchMap, take, throttleTime } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\ninterface Collision {\n  id: string;\n}\n\nconst NODE_COLLISION_THROTTLE_DURATION = 10;\n\nconst DEFAULT_COLLISIONS_ENDPOINT = 'https://pfn8zf2gtu.us-east-2.awsapprunner.com/get-collisions';\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$, this.spatialKeyBoardAxis$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement, ...prevNodes, ...nodes, ...axis, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) => {\n        const organ = this.getOrganSpatialEntity(organIri as string);\n        const originScene = organIri ? getOriginScene(organ, false, true) : [];\n        const organScene = this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[]);\n        return [...originScene, ...organScene];\n      })\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      ),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.collisions$, this.placementCube$]).pipe(\n      throttleTime(NODE_COLLISION_THROTTLE_DURATION, undefined, { leading: true, trailing: true }),\n      map(([nodes, collisions, placement]) => {\n        if (collisions !== undefined) {\n          return this.filterNodeCollisions(nodes, collisions);\n        } else if (placement.length > 0) {\n          return this.filterNodeBBox(nodes, placement[0]);\n        }\n        return [];\n      }),\n      share()\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable {\n    return combineLatest([this.model.organIri$.pipe(filter(organIri => organIri !== '')), this.model.position$]).pipe(map(([organIri, position]: [string, Position]) => {\n      const organEntity = this.getOrganSpatialEntity(organIri);\n      const blockSize = this.model.snapshot.blockSize;\n      const rotation = this.model.snapshot.rotation;\n      return organEntity ? getTissueBlockScene({\n        x_dimension: blockSize.x,\n        y_dimension: blockSize.y,\n        z_dimension: blockSize.z\n      } as SpatialEntity, {\n        x_translation: position.x - organEntity.x_dimension / 2,\n        y_translation: position.y - organEntity.y_dimension / 2,\n        z_translation: position.z - organEntity.z_dimension / 2,\n\n        x_rotation: rotation.x,\n        y_rotation: rotation.y,\n        z_rotation: rotation.z,\n\n        x_scaling: 1, y_scaling: 1, z_scaling: 1,\n      } as SpatialPlacement) : [];\n    }));\n  }\n\n  @Computed()\n  get placementCube$(): Observable {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube]),\n      distinctUntilChanged(isEqual)\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  @Computed()\n  private get collisions$(): Observable {\n    return defer(() => this.registration.throttledJsonld$).pipe(\n      concatMap((jsonld) => this.getCollisions(jsonld)),\n      startWith([])\n    );\n  }\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly http: HttpClient,\n    private readonly globalConfig: GlobalConfigState,\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n  private getCollisions(jsonld: unknown): Observable {\n    return this.globalConfig.getOption('collisionsEndpoint').pipe(\n      switchMap((endpoint = DEFAULT_COLLISIONS_ENDPOINT) => this.http.post(\n        endpoint, JSON.stringify(jsonld),\n        { headers: { 'Content-Type': 'application/json' } }\n      )),\n      catchError(() => of(undefined)),\n      take(1)\n    );\n  }\n\n  private filterNodeCollisions(nodes: SpatialSceneNode[], collisions: Collision[]): SpatialSceneNode[] {\n    const collidedIds = new Set(collisions.map(node => node.id));\n    return nodes.filter(node => collidedIds.has(node['@id']));\n  }\n\n  private filterNodeBBox(nodes: SpatialSceneNode[], placement: SpatialSceneNode): SpatialSceneNode[] {\n    const bbox = getNodeBbox(placement);\n    return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig.html":{"url":"interfaces/SlicesConfig.html","title":"interface - SlicesConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Slices configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices per block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinct, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id), distinct());\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize), distinct());\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation), distinct());\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position), distinct());\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig), distinct());\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType), distinct());\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide), distinct());\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ), distinct());\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri), distinct());\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions), distinct());\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex), distinct());\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side), distinct());\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious), distinct());\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites), distinct());\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures), distinct());\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets), distinct());\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Sets position and rotation to default\n   */\n  @DataAction()\n  setOrganDefaults(): void {\n    this.ctx.patchState({\n      position: this.defaultPosition,\n      rotation: { x: 0, y: 0, z: 0 }\n    });\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: [{ id: 'all', name: 'all anatomical structures', opacity: 20, visible: true }, ...Object.values(asLookup)] });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: true,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name'))\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig-1.html":{"url":"interfaces/SlicesConfig-1.html","title":"interface - SlicesConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface containing slices data of the tissue block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices in the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of each tissue slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlicesInputComponent.html":{"url":"components/SlicesInputComponent.html","title":"component - SlicesInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlicesInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering data on block slices\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-slices-input\n            \n\n\n\n            \n                styleUrls\n                ./slices-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slices-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshSlices\n                            \n                            \n                                updateSlicesData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfigChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasThicknessValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of slices input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        slicesConfig\n                    \n                \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_SLICES_CONFIG\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:36\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        slicesConfigChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:41\n                            \n                        \n                \n                    \n                        Emitter for slice data values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-slices-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshSlices\n                        \n                    \n                \n            \n            \n                \nrefreshSlices()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Refreshes all slice data values to empty values\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSlicesData\n                        \n                    \n                \n            \n            \n                \nupdateSlicesData(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Limits the length of the input if needed and updates values when an input changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the dimension to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasThicknessValue\n                    \n                \n\n                \n                    \n                        gethasThicknessValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:46\n                                \n                            \n                    \n                        \n                                Returns whether a valid thickness value has been entered.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n    \n        \n  Tissue Sections\n  \n  \n    refresh\n  \n\n\n\n  \n    Thickness\n    \n    μm\n  \n\n  \n    # Sections\n    \n  \n\n\n    \n\n    \n                \n                    ./slices-input.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n    padding: .5rem 0;\n\n    .title {\n      font-weight: 400;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .slices-inputs {\n    display: flex;\n    justify-content: space-between;\n    width: 20rem;\n    margin: 0 auto;\n\n    .field {\n      width: 9rem;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      &.mat-focused .suffix, .suffix.show {\n        display: initial;\n      }\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n\n        .mat-mdc-form-field-infix {\n          padding-bottom: 0;\n          min-height: inherit;\n        }\n\n        .mat-mdc-form-field-icon-suffix {\n          padding: 1.5rem 0 0 0;\n        }\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Sections        refresh        Thickness        μm        # Sections      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlicesInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlicesInputModule.html":{"url":"modules/SlicesInputModule.html","title":"module - SlicesInputModule","body":"\n                   \n\n\n\n\n    Modules\n    SlicesInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { NumbersOnlyModule } from 'ccf-shared';\nimport { SlicesInputComponent } from './slices-input.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    NumbersOnlyModule,\n    MatFormFieldModule\n  ],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent]\n})\nexport class SlicesInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StageNavComponent.html":{"url":"components/StageNavComponent.html","title":"component - StageNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StageNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that allows the user to change the viewing angle and rendering mode of the stage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-stage-nav\n            \n\n\n\n            \n                styleUrls\n                ./stage-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stage-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                isDropdownActive\n                            \n                            \n                                isDropdownHidden\n                            \n                            \n                                    \n                                labelRef\n                            \n                            \n                                    \n                                optionsRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleClick\n                            \n                            \n                                updateSide\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                useDropdownMenu\n                            \n                            \n                                view3D\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChange\n                            \n                            \n                                view3DChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    useDropdownMenu\n                                \n                                \n                                    labelEl\n                                \n                                \n                                    optionsEl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of stage nav component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         Side\n\n                    \n                \n                \n                    \n                        Default value : 'anterior'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows changing the current side from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:23\n                            \n                        \n                \n                    \n                        Whether to use a drop down menu instead of a options bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3D\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:32\n                            \n                        \n                \n                    \n                        Input that allows toggling of 3D view on / off from outside the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:35\n                            \n                        \n                \n                    \n                        Output that emits whenever the current side selection changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3DChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:38\n                            \n                        \n                \n                    \n                        Output that emits whenever the 3D view is toggled on / off\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-stage-nav\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element on which the event was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element on which the event was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSide\n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: Side)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Handles the updating of the side selection and calling the event emitter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            Side\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new selected side\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateView\n                        \n                    \n                \n            \n            \n                \nupdateView(selection: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Handles updating of the boolean that keeps track of current view\nand calling the event emitter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    3D (true) or Register (false)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:47\n                        \n                    \n\n            \n                \n                    Whether this component shows a dropdown menu or an options bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownHidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:50\n                        \n                    \n\n            \n                \n                    Whether the dropdown menu is hidden\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        labelRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:41\n                        \n                    \n\n            \n                \n                    Label for dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        optionsRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('options', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:44\n                        \n                    \n\n            \n                \n                    Options dropdown\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n\n\n                \n                    \n                        setuseDropdownMenu(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:23\n                                \n                            \n                    \n                        \n                                Whether to use a drop down menu instead of a options bar\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        labelEl\n                    \n                \n\n                \n                    \n                        getlabelEl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:53\n                                \n                            \n                    \n                        \n                                Simple helper for accessing the native label element\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        optionsEl\n                    \n                \n\n                \n                    \n                        getoptionsEl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:58\n                                \n                            \n                    \n                        \n                                Simple helper for accessing the native options element\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output, ViewChild,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior' | '3D';\n\n/** Component that allows the user to change the viewing angle and rendering mode of the stage. */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StageNavComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-stage-nav';\n\n  /** Whether to use a drop down menu instead of a options bar */\n  @Input()\n  set useDropdownMenu(value: boolean) {\n    this.isDropdownActive = value;\n    this.isDropdownHidden = true;\n  }\n\n  /** Input that allows changing the current side from outside the component */\n  @Input() side: Side = 'anterior';\n\n  /** Input that allows toggling of 3D view on / off from outside the component */\n  @Input() view3D = false;\n\n  /** Output that emits whenever the current side selection changes */\n  @Output() readonly sideChange = new EventEmitter();\n\n  /** Output that emits whenever the 3D view is toggled on / off */\n  @Output() readonly view3DChange = new EventEmitter();\n\n  /** Label for dropdown */\n  @ViewChild('label', { static: true }) labelRef: ElementRef;\n\n  /** Options dropdown */\n  @ViewChild('options', { static: true }) optionsRef: ElementRef;\n\n  /** Whether this component shows a dropdown menu or an options bar */\n  isDropdownActive = false;\n\n  /** Whether the dropdown menu is hidden */\n  isDropdownHidden = true;\n\n  /** Simple helper for accessing the native label element */\n  private get labelEl(): HTMLElement {\n    return this.labelRef.nativeElement;\n  }\n\n  /** Simple helper for accessing the native options element */\n  private get optionsEl(): HTMLElement {\n    return this.optionsRef.nativeElement;\n  }\n\n  /**\n   * Creates an instance of stage nav component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   *\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const { isDropdownHidden, labelEl, optionsEl } = this;\n\n    if (labelEl.contains(target)) {\n      this.isDropdownHidden = !isDropdownHidden;\n    } else if (!optionsEl.contains(target)) {\n      this.isDropdownHidden = true;\n    }\n  }\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   *\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.ga.event('side_update', 'stage_nav', selection);\n\n    if (selection === '3D') {\n      this.updateView(true);\n    } else {\n      this.updateView(false);\n      this.side = selection;\n      this.sideChange.emit(this.side);\n    }\n  }\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   *\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.ga.event('view_update', 'stage_nav', selection ? '3D' : 'Register');\n    this.view3DChange.emit(this.view3D);\n  }\n}\n\n    \n\n    \n        \n  Options\n  arrow_drop_down\n\n\n\n  \n    Left\n    Right\n    Anterior\n    Posterior\n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./stage-nav.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  .dropdown-label {\n    display: none;\n    align-items: center;\n\n    mat-label,\n    mat-icon {\n      line-height: 1.5rem;\n    }\n\n    &.dropdown {\n      display: flex;\n      cursor: pointer;\n      align-items: start;\n    }\n  }\n\n  .stage-options {\n    display: flex;\n    align-items: center;\n\n    .input-group {\n      .nav-input {\n        margin-right: 1rem;\n        margin-bottom: 1.5rem;\n      }\n\n      mat-radio-button {\n        ::ng-deep .mdc-label {\n          font-size: 1.25rem;\n        }\n      }\n    }\n\n    .view-slider {\n      white-space: nowrap;\n      display: flex;\n\n      ::ng-deep .slider {\n        display: flex;\n      }\n\n      ::ng-deep .slide-label {\n        font-size: 1.25rem;\n      }\n    }\n\n    &.dropdowncontainer {\n      display: flex;\n      flex-direction: column;\n      border-radius: 0.25rem;\n      position: absolute;\n      top: 3.5rem;\n      z-index: 11;\n      transition: opacity 0.25s;\n\n      :first-child {\n        margin-top: 0.5rem;\n      }\n\n      :last-child {\n        margin-bottom: 0.5rem;\n      }\n\n      .input-group {\n        margin-left: .875rem;\n        margin-right: 0;\n        display: flex;\n        flex-wrap: wrap;\n\n        .nav-input {\n          display: flex;\n          margin: 0;\n          margin-right: 0.875rem;\n          height: 2.5rem;\n\n          ::ng-deep .mdc-label {\n            padding-left: 0;\n          }\n        }\n      }\n\n      .view-slider {\n        display: flex;\n        align-items: center;\n        height: 3rem;\n        margin: 0 0.5rem;\n      }\n\n      mat-divider {\n        visibility: visible;\n        border-top: 2px solid;\n      }\n    }\n\n    &.hidden {\n      visibility: hidden;\n      opacity: 0;\n      transition: visibility 0.25s, opacity 0.25s;\n\n      mat-divider {\n        visibility: hidden;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Options  arrow_drop_down      Left    Right    Anterior    Posterior    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StageNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StageNavModule.html":{"url":"modules/StageNavModule.html","title":"module - StageNavModule","body":"\n                   \n\n\n\n\n    Modules\n    StageNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_imports\n\n\n\ncluster_StageNavModule_exports\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\n\n\nStageNavModule\n\nStageNavModule\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LabeledSlideToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDividerModule,\n    LabeledSlideToggleModule,\n    MatTooltipModule\n  ],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent]\n})\nexport class StageNavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\nimport { AnatomicalStructureTagState } from './anatomical-structure-tags/anatomical-structure-tags.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ModelState } from './model/model.state';\nimport { PageState } from './page/page.state';\nimport { ReferenceDataState } from './reference-data/reference-data.state';\nimport { RegistrationState } from './registration/registration.state';\nimport { SceneState } from './scene/scene.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Must come before all other plugins except the ngxs data plugin!\n    NgxsStoragePluginModule.forRoot({\n      key: ['registration.registrations']\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                A tag\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         TagId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TagId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"assigned\" | \"added\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"assigned\" | \"added\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How the tag was added\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagListComponent.html":{"url":"components/TagListComponent.html","title":"component - TagListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        A list of removable tags\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tag-list\n            \n\n\n\n            \n                styleUrls\n                ./tag-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tag-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeTag\n                            \n                            \n                                tagClasses\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tagRemoved\n                            \n                            \n                                tagsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of tag list component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tags\n                    \n                \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:23\n                            \n                        \n                \n                    \n                        The tags\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tagRemoved\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:28\n                            \n                        \n                \n                    \n                        Emits when a tag is removed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tagsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:33\n                            \n                        \n                \n                    \n                        Emits the new array of tags when a tag has been removed\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tag-list\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeTag\n                        \n                    \n                \n            \n            \n                \nremoveTag(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Removes a tag from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tag to remove\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagClasses\n                        \n                    \n                \n            \n            \n                \ntagClasses(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagId\n                        \n                    \n                \n            \n            \n                \ntagId(_index: number, tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Gets the unique identifier for a tag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Unused\n\n                                            \n                                        \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { Tag } from '../../../core/models/anatomical-structure-tag';\n\n\n/**\n * A list of removable tags\n */\n@Component({\n  selector: 'ccf-tag-list',\n  templateUrl: './tag-list.component.html',\n  styleUrls: ['./tag-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagListComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-list';\n\n  /**\n   * The tags\n   */\n  @Input() tags: Tag[];\n\n  /**\n   * Emits when a tag is removed\n   */\n  @Output() readonly tagRemoved = new EventEmitter();\n\n  /**\n   * Emits the new array of tags when a tag has been removed\n   */\n  @Output() readonly tagsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of tag list component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Gets the unique identifier for a tag\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns An identifier\n   */\n  tagId(_index: number, tag: Tag): unknown {\n    return tag.id;\n  }\n\n  tagClasses(tag: Tag): string[] {\n    return tag.type === 'added' ? ['added'] : ['assigned'];\n  }\n\n  /**\n   * Removes a tag from the list\n   *\n   * @param tag Tag to remove\n   */\n  removeTag(tag: Tag): void {\n    this.tags = this.tags.filter(obj => obj !== tag);\n    this.ga.event('tag_removed', 'tag_list', tag.label);\n    this.tagRemoved.emit(tag);\n    this.tagsChange.emit(this.tags);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ tag.label }}\n    cancel\n  \n\n\n    \n\n    \n                \n                    ./tag-list.component.scss\n                \n                :host {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  ::ng-deep .mdc-evolution-chip-set__chips {\n    margin: 0 !important;\n\n    .mdc-evolution-chip__text-label {\n      font-size: 14px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tag.label }}    cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagListModule.html":{"url":"modules/TagListModule.html","title":"module - TagListModule","body":"\n                   \n\n\n\n\n    Modules\n    TagListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_declarations\n\n\n\ncluster_TagListModule_exports\n\n\n\n\nTagListComponent\n\nTagListComponent\n\n\n\nTagListModule\n\nTagListModule\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/tag-list/tag-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TagListComponent } from './tag-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatChipsModule,\n    MatIconModule\n  ],\n  declarations: [TagListComponent],\n  exports: [TagListComponent],\n})\nexport class TagListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagSearchModule.html":{"url":"modules/TagSearchModule.html","title":"module - TagSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TagSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\ncluster_TagSearchModule_exports\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/tag-search/tag-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TagSearchComponent } from './tag-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n  ],\n  declarations: [TagSearchComponent],\n  exports: [TagSearchComponent]\n})\nexport class TagSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagSearchResult.html":{"url":"interfaces/TagSearchResult.html","title":"interface - TagSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Partial results up to a limit\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of possible results\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                element\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyThemeClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Adds or removes a theme class from the necessary components.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cls\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The theme class.\n\n                                            \n                                        \n                                        \n                                                method\n                                            \n                                                        \"add\" | \"remove\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'add'\n                                            \n\n                                            \n                                                    Whether to add or remove the theme.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Get the currently active theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Initializer called during bootstrap to set up theming.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                        ComponentRef<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Binds theming service to a component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        ElementRef<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                injector\n                                            \n                                                        Injector\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Resets the theme to the default.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Sets the currently active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new theme class.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:16\n                        \n                    \n\n            \n                \n                    Default theme class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:18\n                        \n                    \n\n            \n                \n                    Currently active theme class.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, ElementRef, Inject, Injector, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element: ElementRef;\n  private injector: Injector;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n\n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Process an event message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to be run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Initializes this component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Updates the drawer state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:40\n                        \n                    \n\n            \n                \n                    Whether the owning drawer is opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                        \n                    \n\n            \n                \n                    Position of the owning side drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:27\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      ([expand, collapse] = [collapse, expand]);\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  arrow_right\n\n\n  arrow_left\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  transition: .25s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: absolute;\n    right: 0rem;\n    transition: .6s;\n    padding-left: .15rem;\n\n    &.hidden {\n      opacity: 0;\n    }\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  right: 0.3rem;\n  top: .675rem;\n  padding-top: .05rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  arrow_right  arrow_left'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  registrationExpanded = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  registrationToggle(event: boolean): void {\n    this.registrationExpanded = event;\n    if (!this.registrationExpanded) {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:mousedown', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const disableWhenClicked = ['mat-mdc-input-element', 'form-input-label'];\n    for (const className of disableWhenClicked) {\n      if (typeof target.className === 'string' && target.className.includes(className)) {\n        this.disablePositionChange = true;\n        return;\n      }\n    }\n    this.disablePositionChange = false;\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserName.html":{"url":"interfaces/UserName.html","title":"interface - UserName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                User name data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            middleName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's middle name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's middle name\n   */\n  middleName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the middle name input field.\n   */\n  middleNameValidator = new UntypedFormControl('', [Validators.required]);\n\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n    this.middleNameValidator.setValue(value?.middleName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    middleName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalComponent.html":{"url":"components/VideoModalComponent.html","title":"component - VideoModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a youtube video inside of an angular material modal.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal\n            \n\n\n\n            \n                styleUrls\n                ./video-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                loadYoutubePlayerAPI\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer2: Renderer2, dialogRef: MatDialogRef, data, document: Document)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Closes the video modal component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYoutubePlayerAPI\n                        \n                    \n                \n            \n            \n                \nloadYoutubePlayerAPI()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:38\n                        \n                    \n\n\n            \n                \n                        loads the IFrame Player API code asynchronously from YouTube.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:31\n                        \n                    \n\n\n            \n                \n                        load the youtube player api in on init\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding, Inject, Renderer2, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Component for displaying a youtube video inside of an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal',\n  templateUrl: './video-modal.component.html',\n  styleUrls: ['./video-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal';\n\n  /**\n   * Creates an instance of video modal component.\n   */\n  constructor(\n    private renderer2: Renderer2,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown,\n    @Inject(DOCUMENT) private document: Document\n  ) { }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    this.loadYoutubePlayerAPI();\n  }\n\n  /**\n   * loads the IFrame Player API code asynchronously from YouTube.\n   */\n  loadYoutubePlayerAPI(): void {\n    const script = this.renderer2.createElement('script') as HTMLScriptElement;\n    script.src = 'https://www.youtube.com/iframe_api';\n    this.renderer2.appendChild(this.document.body, script);\n  }\n\n  /**\n   * Closes the video modal component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    \n        clear\n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./video-modal.component.scss\n                \n                ::ng-deep {\n  .mat-dialog-container {\n    padding: 0;\n  }\n\n  .mat-dialog-content {\n    display: block;\n    margin: auto;\n    padding: 0;\n    max-height: 65vh;\n    overflow: auto;\n    width: fit-content;\n  }\n}\n\n:host {\n  .video-modal.wrapper {\n    width: fit-content;\n\n    .container {\n      position: relative;\n\n      .content {\n        padding: 0.5rem;\n        padding-top: 3rem;\n        width: fit-content;\n        border-radius: .5rem;\n      }\n\n      .close-icon {\n        cursor: pointer;\n        position: absolute;\n        right: 0rem;\n        font-size: 2.5rem;\n        width: 2.5rem;\n        height: 2.5rem;\n        transition: .5s color;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalLauncherComponent.html":{"url":"components/VideoModalLauncherComponent.html","title":"component - VideoModalLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for launching an angular material modal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal-launcher\n            \n\n\n\n            \n                styleUrls\n                ./video-modal-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchVideoModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal launcher component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n                \n                    \n                        Input used to toggle the launcher on and off.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal-launcher\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchVideoModal\n                        \n                    \n                \n            \n            \n                \nlaunchVideoModal()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Launches the video modal component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { VideoModalComponent } from '../video-modal/video-modal.component';\n\n/**\n * Component for launching an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal-launcher',\n  templateUrl: './video-modal-launcher.component.html',\n  styleUrls: ['./video-modal-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoModalLauncherComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal-launcher';\n\n  /**\n   * Input used to toggle the launcher on and off.\n   */\n  @Input() visible = true;\n\n  /**\n   * Creates an instance of video modal launcher component.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Launches the video modal component.\n   */\n  launchVideoModal(): void {\n    this.dialog.open(VideoModalComponent, {\n      width: '46rem',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n    WATCH\n    \"How to use the HuBMAP Registration User Interface\"\n\n\n    play_circle_outline\n\n    \n\n    \n                \n                    ./video-modal-launcher.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n\n    .video-description {\n        margin-bottom: 1.5rem;\n        text-align: center;\n        width: 30rem;\n\n        .title {\n            margin-bottom: 1rem;\n        }\n    }\n\n    .play-icon-button {\n        cursor: pointer;\n        font-size: 5rem;\n        width: 5rem;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    WATCH    \"How to use the HuBMAP Registration User Interface\"    play_circle_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalLauncherModule.html":{"url":"modules/VideoModalLauncherModule.html","title":"module - VideoModalLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoModalLauncherComponent } from './video-modal-launcher.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ VideoModalLauncherComponent ],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ VideoModalLauncherComponent ]\n})\nexport class VideoModalLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalModule.html":{"url":"modules/VideoModalModule.html","title":"module - VideoModalModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_exports\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoModalComponent } from './video-modal.component';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ VideoModalComponent ],\n  imports: [\n    CommonModule,\n    YouTubePlayerModule,\n    MatIconModule,\n    MatDialogModule\n  ],\n  exports: [ VideoModalComponent ]\n})\nexport class VideoModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisibilityItem.html":{"url":"interfaces/VisibilityItem.html","title":"interface - VisibilityItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisibilityItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/visibility-item.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for visibility item data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            visible\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Opacity value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tooltip text to be displayed in the stage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the item is currently highlighted\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface VisibilityItem {\n  /**\n   * Id of the item\n   */\n  id: string | number;\n\n  /**\n   * Name of the item\n   */\n  name: string;\n\n  /**\n   * Whether the item is currently highlighted\n   */\n  visible: boolean;\n\n  /**\n   * Opacity value\n   */\n  opacity?: number;\n\n  /**\n   * Tooltip text to be displayed in the stage\n   */\n  tooltip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityMenuComponent.html":{"url":"components/VisibilityMenuComponent.html","title":"component - VisibilityMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Menu for displaying visibility options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-menu\n            \n\n\n\n            \n                styleUrls\n                ./visibility-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                resetItem\n                            \n                            \n                                setAllOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                            \n                                updateOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hover\n                            \n                            \n                                itemsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility menu component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         VisibilityItem[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:33\n                            \n                        \n                \n                    \n                        Items to be displayed in the visibility menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         VisibilityItem | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:38\n                            \n                        \n                \n                    \n                        The currently selected item\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hover\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:43\n                            \n                        \n                \n                    \n                        Emits the currently hovered item\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:48\n                            \n                        \n                \n                    \n                        Emits whenever there is a change to one or more items.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-menu\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId(_index: number, item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Returns the id of an item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The item to get an id for\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                id Id of the item\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOut\n                        \n                    \n                \n            \n            \n                \nmouseOut()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Clears current selection and emits undefined in response to mouse out\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOver\n                        \n                    \n                \n            \n            \n                \nmouseOver(item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Changes current selection to hovered over item and emits the item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetItem\n                        \n                    \n                \n            \n            \n                \nresetItem()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Resets item to opacity 20 and visible\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllOpacity\n                        \n                    \n                \n            \n            \n                \nsetAllOpacity(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Sets all items to the same opacity and makes them visible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated opacity value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility(item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \nupdateOpacity(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Updates opacity of the currently selected item (if one is selected) and emits the new items\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated opacity value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { VisibilityItem } from '../../../core/models/visibility-item';\n\n\n/**\n * Menu for displaying visibility options\n */\n@Component({\n  selector: 'ccf-visibility-menu',\n  templateUrl: './visibility-menu.component.html',\n  styleUrls: ['./visibility-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisibilityMenuComponent {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-menu';\n\n  /**\n   * Items to be displayed in the visibility menu\n   */\n  @Input() items: VisibilityItem[];\n\n  /**\n   * The currently selected item\n   */\n  @Input() selection: VisibilityItem | undefined;\n\n  /**\n   * Emits the currently hovered item\n   */\n  @Output() readonly hover = new EventEmitter();\n\n  /**\n   * Emits whenever there is a change to one or more items.\n   */\n  @Output() readonly itemsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility menu component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n   *\n   * @param item Menu item\n   */\n  toggleVisibility(item: VisibilityItem): void {\n    item = { ...item, visible: !item.visible };\n    if (this.selection && item.id === this.selection.id) {\n      this.selection = { ...this.selection, visible: item.visible };\n    }\n\n    this.ga.event('visibility_toggled', 'visibility_menu', '' + item.id, +item.visible);\n    this.updateOpacity(item.opacity);\n  }\n\n  /**\n   * Changes current selection to hovered over item and emits the item\n   *\n   * @param item Menu item\n   */\n  mouseOver(item: VisibilityItem): void {\n    this.selection = item === this.selection ? undefined : item;\n    this.hover.emit(item);\n  }\n\n  /**\n   * Clears current selection and emits undefined in response to mouse out\n   *\n   * @param item Menu item\n   */\n  mouseOut(): void {\n    this.selection = undefined;\n    this.hover.emit(undefined);\n  }\n\n  /**\n   * Updates opacity of the currently selected item (if one is selected) and emits the new items\n   *\n   * @param value Updated opacity value\n   */\n  updateOpacity(value: number | undefined): void {\n    if (!this.selection) {\n      return;\n    }\n    const updatedSelection = { ...this.selection, opacity: value };\n    this.selection = updatedSelection;\n    if (updatedSelection.id === 'all') {\n      this.setAllOpacity(updatedSelection.opacity as number);\n    } else {\n      this.items = this.items.map(item => item.id === updatedSelection.id ? updatedSelection : item);\n      this.ga.event('opacity_update', 'visibility_menu', '' + updatedSelection.id, updatedSelection.opacity);\n    }\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Resets item to opacity 20 and visible\n   */\n  resetItem(): void {\n    if (this.selection) {\n      const updatedSelection = { ...this.selection, opacity: 20, visible: true };\n      this.selection = updatedSelection;\n      if (this.selection.id === 'all') {\n        this.setAllOpacity(updatedSelection.opacity);\n      } else {\n        this.items = this.items.map(item => item.id === updatedSelection.id ? updatedSelection : item);\n        this.ga.event('item_reset', 'visibility_menu', '' + updatedSelection.id);\n      }\n      this.itemsChange.emit(this.items);\n    }\n  }\n\n  /**\n   * Sets all items to the same opacity and makes them visible\n   *\n   * @param value Updated opacity value\n   */\n  setAllOpacity(value: number): void {\n    this.items = this.items.map(i => ({ ...i, opacity: value, visible: true }));\n    this.ga.event('all_items_opacity_update', 'visibility_menu', undefined, value);\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Returns the id of an item\n   *\n   * @param index Index of item in items array\n   * @param item The item to get an id for\n   * @returns id Id of the item\n   */\n  getId(_index: number, item: VisibilityItem): string | number {\n    return item.id;\n  }\n}\n\n    \n\n    \n        refresh\n\n\n  \n  {{ item.name }}\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./visibility-menu.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  margin-right: 0;\n  margin-left: 0;\n  max-height: 40vh;\n  overflow-y: auto;\n  scrollbar-width: thin;\n\n  .icon {\n    border-radius: 0.25rem;\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: .6s;\n    position: absolute;\n    top: 3rem;\n\n    &:hover {\n      border-radius: 2px;\n    }\n  }\n\n  .item-entry {\n    display: flex;\n    height: 2.25rem;\n    align-items: center;\n    flex-shrink: 0;\n    position: relative;\n\n    .opacity {\n      cursor: pointer;\n    }\n\n    .opacity-icon {\n      z-index: 1;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n\n    .item-name {\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      margin-left: 0.5rem;\n      opacity: 1;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      max-width: calc(100% - 2.5rem);\n\n      &.hidden {\n        opacity: 0;\n      }\n    }\n\n    .slider {\n      width: calc(100% - 2rem);\n      transition-duration: 0.3s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      left: 2rem;\n      position: absolute;\n      opacity: 1;\n\n      &.hidden {\n        opacity: 0;\n        transition-duration: 0.1s;\n        transition-timing-function: ease-in-out;\n        transition-property: opacity;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'refresh    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityMenuModule.html":{"url":"modules/VisibilityMenuModule.html","title":"module - VisibilityMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { VisibilityMenuComponent } from './visibility-menu.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, OpacitySliderModule],\n  declarations: [VisibilityMenuComponent],\n  exports: [VisibilityMenuComponent]\n})\nexport class VisibilityMenuModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityToggleComponent.html":{"url":"components/VisibilityToggleComponent.html","title":"component - VisibilityToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for easily adding a visibility toggle with customizable label and\npre set up emitter.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-toggle\n            \n\n\n\n            \n                styleUrls\n                ./visibility-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                toggleLabel\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                visibilityChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows the label to be set from outside the component,\nmaking it more reusable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:23\n                            \n                        \n                \n                    \n                        Keeps track of the current visibility state of the toggle.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        visibilityChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n                \n                    \n                        Outputs the new visibility state whenever toggleVisibility()\nchanges it.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Toggles visibility and emits the new value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for easily adding a visibility toggle with customizable label and\n * pre set up emitter.\n */\n@Component({\n  selector: 'ccf-visibility-toggle',\n  templateUrl: './visibility-toggle.component.html',\n  styleUrls: ['./visibility-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisibilityToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-toggle';\n\n  /**\n   * Keeps track of the current visibility state of the toggle.\n   */\n  @Input() visible = false;\n\n  /**\n   * Input that allows the label to be set from outside the component,\n   * making it more reusable.\n   */\n  @Input() toggleLabel = '';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Outputs the new visibility state whenever toggleVisibility()\n   * changes it.\n   */\n  @Output() readonly visibilityChanged = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Toggles visibility and emits the new value.\n   */\n  toggleVisibility(): void {\n    this.visible = !this.visible;\n\n    this.ga.event('visibility_toggled', 'visibility_toggle', '' + this.visible);\n    this.visibilityChanged.emit(this.visible);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      done\n    \n\n    {{ toggleLabel }}\n  \n\n\n    \n\n    \n                \n                    ./visibility-toggle.component.scss\n                \n                :host {\n  height: 3rem;\n  display: flex;\n  align-items: center;\n\n  ::ng-deep .mat-mdc-chip {\n    padding: 0 !important;\n\n    &.disabled {\n      cursor: not-allowed !important;\n      pointer-events: none;\n    }\n\n    .mdc-evolution-chip__action--primary {\n      padding: 0;\n      cursor: pointer;\n    }\n\n    .mdc-evolution-chip__text-label {\n      display: flex;\n      align-items: center;\n      font-size: 14px;\n    }\n  }\n\n  .toggle-div {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    padding-top: 1.5rem;\n\n    .toggle-wrapper {\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      cursor: pointer;\n      border-width: 0.075rem;\n      border-style: solid;\n      height: 2.25rem;\n      border-radius: 1.5rem;\n      transition: background-color 0.2s ease-in-out;\n\n      .icon-background {\n        border-radius: 1.5rem;\n        height: 2.06rem;\n        width: 2.06rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .icon {\n          transition: .6s;\n          position: absolute;\n          &.block {\n              width: 1.125rem;\n          }\n          &.hidden {\n              opacity: 0;\n          }\n        }\n      }\n\n      .toggle-label {\n        font-weight: bold;\n        margin-left: 0.5rem;\n        padding-right: 1.25rem;\n        padding-left: 0.25rem;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  done        {{ toggleLabel }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityToggleModule.html":{"url":"modules/VisibilityToggleModule.html","title":"module - VisibilityToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisibilityToggleComponent } from './visibility-toggle.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\n\n@NgModule({\n  declarations: [VisibilityToggleComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatChipsModule\n  ],\n  exports: [ VisibilityToggleComponent ]\n})\nexport class VisibilityToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A object with x, y, and z channels of the same type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z channel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinct, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id), distinct());\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize), distinct());\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation), distinct());\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position), distinct());\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig), distinct());\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType), distinct());\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide), distinct());\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ), distinct());\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri), distinct());\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions), distinct());\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex), distinct());\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side), distinct());\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious), distinct());\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites), distinct());\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures), distinct());\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets), distinct());\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Sets position and rotation to default\n   */\n  @DataAction()\n  setOrganDefaults(): void {\n    this.ctx.patchState({\n      position: this.defaultPosition,\n      rotation: { x: 0, y: 0, z: 0 }\n    });\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: [{ id: 'all', name: 'all anatomical structures', opacity: 20, visible: true }, ...Object.values(asLookup)] });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: true,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name'))\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.9.0 - 2023-12-15\nAdded in 3.9.0\n\nUpdated to the latest CCF.OWL as part of HRA v2.0!\nFinalized Biomarker support in the EUI and API analagous to Cell Type support\nEUI Quality of Life Improvements. See milestone 6\nRUI Quality of Life Improvements. See milestone 5\n\n3.8.1 - 2023-11-17\nAdded in 3.8.1\n\nImproved keyboard controls in the RUI\n\n3.8.0 - 2023-11-16\nAdded in 3.8.0\n\nEUI Quality of Life Improvements. See milestone 6\nRUI Quality of Life Improvements. See milestone 5\nA lot of minor UI and bug fixes in preparation for HRA 2.0\nUpdated dependencies including, update to Angular 16\n\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-rui/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app-web-component.component.ts\n            \n            function\n            parseOrgan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                45 %\n                (10/22)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n            \n            interface\n            Tag\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n            \n            interface\n            TagSearchResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/documentation.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/extraction-set.ts\n            \n            interface\n            ExtractionSet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/meta-data.ts\n            \n            interface\n            MetaDataField\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/visibility-item.ts\n            \n            interface\n            VisibilityItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            interface\n            OrganConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            function\n            globalConfigFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            variable\n            GLOBAL_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            variable\n            ruiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n            \n            injectable\n            ThemingService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n            \n            injectable\n            AnatomicalStructureTagState\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n            \n            interface\n            AnatomicalStructureTagStateModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n            \n            interface\n            DefaultIconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n            \n            variable\n            DEFAULT_ICONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            injectable\n            IconRegistryState\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            injectable\n            ModelState\n            \n                85 %\n                (35/41)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            ModelStateModel\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            SlicesConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            XYZTriplet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            variable\n            RUI_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            injectable\n            PageState\n            \n                55 %\n                (11/20)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            interface\n            PageStateModel\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            interface\n            Person\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            injectable\n            ReferenceDataState\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            interface\n            OrganData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            interface\n            ReferenceDataStateModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            function\n            applySpatialPlacement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            injectable\n            RegistrationState\n            \n                85 %\n                (17/20)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            interface\n            RegistrationStateModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            variable\n            JSONLD_THROTTLE_DURATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            injectable\n            SceneState\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            SceneStateModel\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            function\n            getNodeBbox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            variable\n            DEFAULT_COLLISIONS_ENDPOINT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            variable\n            NODE_COLLISION_THROTTLE_DURATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n            \n            component\n            StageNavComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n            \n            component\n            VideoModalLauncherComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n            \n            component\n            VideoModalComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n            \n            component\n            LeftSidebarComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts\n            \n            component\n            RegistrationContentComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n            \n            component\n            RegistrationModalComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts\n            \n            component\n            ReviewButtonComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n            \n            component\n            ReviewModalComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n            \n            interface\n            ReviewModalData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n            \n            component\n            RightSidebarComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            component\n            BlockSizeInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            interface\n            BlockSize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            variable\n            DEFAULT_BLOCK_SIZE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n            \n            component\n            DetailsLabelComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n            \n            function\n            throwDuplicateDrawersError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            class\n            InitializationState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            variable\n            EXPAND_COLLAPSE_PARAMS_DEFAULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            ContentContainerChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerContainersChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerInitialized\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerToggled\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            variable\n            MessageService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n            \n            component\n            ToggleButtonComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n            \n            component\n            ExtractionSetDropdownComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts\n            \n            component\n            JsonFileReaderComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n            \n            component\n            LabeledSlideToggleComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n            \n            component\n            NameInputComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n            \n            interface\n            UserName\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts\n            \n            component\n            RegistrationMetadataComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            component\n            RotationSliderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            interface\n            Rotation\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            variable\n            DEFAULT_ROTATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            component\n            SlicesInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            interface\n            SlicesConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            variable\n            DEFAULT_SLICES_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts\n            \n            component\n            TagListComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            component\n            TagSearchComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            DEFAULT_SEARCH_LIMIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            DEFAULT_SEARCH_THROTTLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            EMPTY_RESULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts\n            \n            component\n            VisibilityMenuComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n            \n            component\n            VisibilityToggleComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            class\n            MessageChannel\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            MessageServiceConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : ^14.10.1\n        \n            @angular-ru/common : ^15.313.0\n        \n            @angular-ru/ngxs : ^14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^17.0.9\n        \n            @angular/cdk : ^17.0.5\n        \n            @angular/common : ^17.0.9\n        \n            @angular/compiler : ^17.0.9\n        \n            @angular/core : ^17.0.9\n        \n            @angular/elements : ^17.0.9\n        \n            @angular/forms : ^17.0.9\n        \n            @angular/material : ^17.0.5\n        \n            @angular/platform-browser : ^17.0.9\n        \n            @angular/platform-browser-dynamic : ^17.0.9\n        \n            @angular/router : ^17.0.9\n        \n            @angular/youtube-player : 17.0\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : ~8.8.20\n        \n            @deck.gl/geo-layers : ~8.8.20\n        \n            @deck.gl/layers : ~8.8.20\n        \n            @deck.gl/mesh-layers : ~8.8.20\n        \n            @loaders.gl/core : ~3.2.10\n        \n            @loaders.gl/draco : ~3.2.10\n        \n            @loaders.gl/gltf : ~3.2.10\n        \n            @luma.gl/core : ~8.5.16\n        \n            @math.gl/core : ~3.6.3\n        \n            @math.gl/culling : ~3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.2\n        \n            @ngxs/storage-plugin : ^3.8.2\n        \n            @ngxs/store : ^3.8.2\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^17.1.1\n        \n            ngx-slider-v2 : ^17.0.0\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.2\n        \n            uuid : ^9.0.0\n        \n            zone.js : ^0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applySpatialPlacement   (projects/.../reference-data.state.ts)\n                        \n                        \n                            getNodeBbox   (projects/.../scene.state.ts)\n                        \n                        \n                            globalConfigFactory   (projects/.../config.ts)\n                        \n                        \n                            parseOrgan   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (projects/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applySpatialPlacement\n                        \n                    \n                \n            \n            \n                \napplySpatialPlacement(tx: Matrix4, placement: Immutable)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tx\n                                            \n                                                        Matrix4\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                placement\n                                            \n                                                        Immutable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Matrix4\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getNodeBbox\n                        \n                    \n                \n            \n            \n                \ngetNodeBbox(model: SpatialSceneNode)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AABB\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        globalConfigFactory\n                        \n                    \n                \n            \n            \n                \nglobalConfigFactory(globals: GlobalsService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                globals\n                                            \n                                                        GlobalsService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GlobalConfig\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseOrgan\n                        \n                    \n                \n            \n            \n                \nparseOrgan(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string | Organ\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                        Helper function for creating drawer errors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                position\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The position of the drawer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     never\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the EUI, RUI, and Organ-Info.\nWebsite Links\n\nHRA Exploration User Interface (EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nHRA Registration User Interface (RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nHRA Organ Info Component (Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nHRA API\nProduction: https://apps.humanatlas.io/hra-api/\nStaging: https://apps.humanatlas.io/hra-api--staging/\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nHRA API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nHRA API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockSizeInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailsLabelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExtractionSetDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JsonFileReaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabeledSlideToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeftSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NameInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationMetadataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RightSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RotationSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlicesInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StageNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_imports\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationMetadataModule\n\n\n\ncluster_RegistrationMetadataModule_declarations\n\n\n\ncluster_RegistrationMetadataModule_exports\n\n\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_declarations\n\n\n\ncluster_TagListModule_exports\n\n\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\ncluster_TagSearchModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\ncluster_VideoModalModule_exports\n\n\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\nContentComponent\n\nContentComponent\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule -->\n\nJsonFileReaderModule->RegistrationMetadataModule\n\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\nRegistrationMetadataModule -->\n\nNameInputModule->RegistrationMetadataModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\nRightSidebarModule -->\n\nRegistrationMetadataModule->RightSidebarModule\n\n\n\nRegistrationContentModule -->\n\nRegistrationMetadataModule->RegistrationContentModule\n\n\n\n\n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent  -->\n\nRegistrationMetadataModule->RegistrationMetadataComponent \n\n\n\n\n\nRegistrationMetadataComponent\n\nRegistrationMetadataComponent\n\nRegistrationMetadataModule -->\n\nRegistrationMetadataComponent->RegistrationMetadataModule\n\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nTagListComponent\n\nTagListComponent\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        30 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.9.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CancelRegistrationCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            FetchPreviousRegistrationsCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            MetaData   (projects/.../meta-data.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            Organ   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            RegistrationCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Side   (projects/.../stage-nav.component.ts)\n                        \n                        \n                            TagId   (projects/.../anatomical-structure-tag.ts)\n                        \n                        \n                            User   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            ViewSide   (projects/.../model.state.ts)\n                        \n                        \n                            ViewType   (projects/.../model.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/app-web-component.component.ts\n    \n    \n        \n            \n                \n                    \n                    CancelRegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPreviousRegistrationsCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Organ\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/models/meta-data.ts\n    \n    \n        \n            \n                \n                    \n                    MetaData\n                \n            \n            \n                \n                            MetaDataField[]\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n    \n    \n        \n            \n                \n                    \n                    Side\n                \n            \n            \n                \n                    Valid values for side.\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\" | \"3D\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n    \n    \n        \n            \n                \n                    \n                    TagId\n                \n            \n            \n                \n                    Type for tag identifiers\n\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/store/model/model.state.ts\n    \n    \n        \n            \n                \n                    \n                    ViewSide\n                \n            \n            \n                \n                    Side which the model is viewed from\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ViewType\n                \n            \n            \n                \n                    Model view type\n\n                \n            \n            \n                \n                        \"register\" | \"3d\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BLOCK_SIZE   (projects/.../block-size-input.component.ts)\n                        \n                        \n                            DEFAULT_COLLISIONS_ENDPOINT   (projects/.../scene.state.ts)\n                        \n                        \n                            DEFAULT_ICONS   (projects/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_ROTATION   (projects/.../rotation-slider.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_LIMIT   (projects/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_THROTTLE   (projects/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SLICES_CONFIG   (projects/.../slices-input.component.ts)\n                        \n                        \n                            DEFAULT_THEME   (projects/.../theming.service.ts)\n                        \n                        \n                            EMPTY_RESULT   (projects/.../tag-search.component.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (projects/.../drawer.component.ts)\n                        \n                        \n                            GLOBAL_CONFIG   (projects/.../config.ts)\n                        \n                        \n                            JSONLD_THROTTLE_DURATION   (projects/.../registration.state.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            NODE_COLLISION_THROTTLE_DURATION   (projects/.../scene.state.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                        \n                            RUI_ORGANS   (projects/.../model.state.ts)\n                        \n                        \n                            ruiConfig   (projects/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_BLOCK_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 10,\n  y: 10,\n  z: 10\n}\n                    \n                \n\n            \n                \n                    Defaults for block sizes.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_COLLISIONS_ENDPOINT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://pfn8zf2gtu.us-east-2.awsapprunner.com/get-collisions'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NODE_COLLISION_THROTTLE_DURATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-brain.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-breast.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-extrapulmonary-bronchus.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidney-right.svg' },\n  { name: 'kidneys', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-kidneys.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lungs.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-lymph-nodes.svg' },\n  { name: 'neurons', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-neurons.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-palatine-tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-pelvis.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-small-intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organ-icons/organ-icon-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' }\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROTATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 0,\n  y: 0,\n  z: 0\n}\n                    \n                \n\n            \n                \n                    Default values for rotation.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n            \n                \n                    Default search results limit\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_THROTTLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n\n            \n                \n                    Default search throttle time in ms\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EMPTY_RESULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagSearchResult\n\n                    \n                \n                \n                    \n                        Default value : { totalCount: 0, results: [] }\n                    \n                \n\n            \n                \n                    Empty search result object\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SLICES_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  thickness: NaN,\n  numSlices: NaN\n}\n                    \n                \n\n            \n                \n                    Default values for slices config.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GLOBAL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Global configuration object'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ruiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConfig\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSONLD_THROTTLE_DURATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n\n\n        \n    \n\n    projects/ccf-rui/src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n)\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/model/model.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RUI_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_ORGANS\n                    \n                \n\n            \n                \n                    All organs to be displayed\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
